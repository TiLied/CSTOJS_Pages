{
  "README.html": {
    "href": "README.html",
    "title": "CSTOJS_Pages | CSharpToJavaScript",
    "keywords": "CSTOJS_Pages Website for CSharpToJavaScript library. https://tilied.github.io/CSTOJS_Pages/ Related Repository Blazor WebAssembly: https://github.com/TiLied/CSTOJS_BWA CSharpToJavaScript library: https://github.com/TiLied/CSharpToJavaScript Library for generating docs: https://github.com/TiLied/GenDocsLib Library for generating csharp: https://github.com/TiLied/GenCSharpLib CLI for library: https://github.com/TiLied/CSTOJS_CLI Thanks for packages and content <3 docfx for generating static website."
  },
  "api/CSharpToJavaScript.APIs.JS.AbortController.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AbortController.html",
    "title": "Class AbortController | CSharpToJavaScript",
    "keywords": "Class AbortController Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AbortController interface represents a controller object that allows you to abort one or more Web requests as and when desired. [To(\"FirstCharToLowerCase\")] public class AbortController Inheritance object AbortController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can create a new AbortController object using the AbortController() constructor. Communicating with a DOM request is done using an AbortSignal object. -Fetch API -Abortable Fetch by Jake Archibald See also on MDN Constructors AbortController() The AbortController() constructor creates a new AbortController object instance. public AbortController() Remarks -Fetch API See also on MDN Properties Signal The signal read-only property of the AbortController interface returns an AbortSignal object instance, which can be used to communicate with/abort a DOM request as desired. public AbortSignal Signal { get; } Property Value AbortSignal An AbortSignal object instance. Remarks -Fetch API See also on MDN Methods Abort(dynamic) The abort() method of the AbortController interface aborts a DOM request before it has completed. This is able to abort fetch requests, the consumption of any response bodies, or streams. public GlobalObject.Undefined Abort(dynamic reason) Parameters reason dynamic Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Fetch API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AbortSignal.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AbortSignal.html",
    "title": "Class AbortSignal | CSharpToJavaScript",
    "keywords": "Class AbortSignal Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AbortSignal interface represents a signal object that allows you to communicate with a DOM request (such as a fetch request) and abort it if required via an AbortController object. [To(\"FirstCharToLowerCase\")] public class AbortSignal : EventTarget Inheritance object EventTarget AbortSignal Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Fetch API -Abortable Fetch by Jake Archibald See also on MDN Properties Aborted The aborted read-only property returns a value that indicates whether the DOM requests the signal is communicating with are aborted (true) or not (false). public bool Aborted { get; } Property Value bool true (aborted) or false Remarks -Fetch API See also on MDN Onabort public EventHandlerNonNull Onabort { get; set; } Property Value EventHandlerNonNull Reason The reason read-only property returns a JavaScript value that indicates the abort reason. public dynamic Reason { get; } Property Value dynamic A JavaScript value that indicates the abort reason, or undefined, if not aborted. Remarks The property is undefined when the signal has not been aborted. It can be set to a specific value when the signal is aborted, using Abort(dynamic) or Abort(dynamic). If not explicitly set in those methods, it defaults to \"AbortError\" DOMException. -Fetch API See also on MDN Methods Abort(dynamic) public static AbortSignal Abort(dynamic reason) Parameters reason dynamic Returns AbortSignal Any(List<AbortSignal>) public static AbortSignal Any(List<AbortSignal> signals) Parameters signals List<AbortSignal> Returns AbortSignal ThrowIfAborted() The throwIfAborted() method throws the signal's abort Reason if the signal has been aborted; otherwise it does nothing. public GlobalObject.Undefined ThrowIfAborted() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks An API that needs to support aborting can accept an AbortSignal object and use throwIfAborted() to test and throw when the abort event is signalled. This method can also be used to abort operations at particular points in code, rather than passing to functions that take a signal. -Fetch API See also on MDN Timeout(ulong) public static AbortSignal Timeout(ulong milliseconds) Parameters milliseconds ulong Returns AbortSignal"
  },
  "api/CSharpToJavaScript.APIs.JS.AbsoluteOrientationReadingValues.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AbsoluteOrientationReadingValues.html",
    "title": "Class AbsoluteOrientationReadingValues | CSharpToJavaScript",
    "keywords": "Class AbsoluteOrientationReadingValues Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AbsoluteOrientationReadingValues Inheritance object AbsoluteOrientationReadingValues Derived RelativeOrientationReadingValues Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Quaternion public required Number[]? Quaternion Field Value Number[]"
  },
  "api/CSharpToJavaScript.APIs.JS.AbsoluteOrientationSensor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AbsoluteOrientationSensor.html",
    "title": "Class AbsoluteOrientationSensor | CSharpToJavaScript",
    "keywords": "Class AbsoluteOrientationSensor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AbsoluteOrientationSensor interface of the Sensor APIs describes the device&apos;s physical orientation in relation to the Earth&apos;s reference coordinate system. [To(\"FirstCharToLowerCase\")] public class AbsoluteOrientationSensor : OrientationSensor Inheritance object EventTarget Sensor OrientationSensor AbsoluteOrientationSensor Inherited Members OrientationSensor.Quaternion OrientationSensor.PopulateMatrix(Union85) Sensor.Activated Sensor.HasReading Sensor.Timestamp Sensor.Start() Sensor.Stop() Sensor.Onreading Sensor.Onactivate Sensor.Onerror EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To use this sensor, the user must grant permission to the &apos;accelerometer&apos;, &apos;gyroscope&apos;, and &apos;magnetometer&apos; device sensors through the Permissions API. This feature may be blocked by a Permissions Policy set on your server. See also on MDN Constructors AbsoluteOrientationSensor() public AbsoluteOrientationSensor() AbsoluteOrientationSensor(OrientationSensorOptions) The AbsoluteOrientationSensor() constructor creates a new AbsoluteOrientationSensor object which describes the device's physical orientation in relation to the Earth's reference coordinate system. public AbsoluteOrientationSensor(OrientationSensorOptions sensorOptions) Parameters sensorOptions OrientationSensorOptions Remarks -'sensor.Reading_event' event See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AbstractRange.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AbstractRange.html",
    "title": "Class AbstractRange | CSharpToJavaScript",
    "keywords": "Class AbstractRange Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AbstractRange abstract interface is the base class upon which all DOM range types are defined. A range is an object that indicates the start and end points of a section of content within the document. [To(\"FirstCharToLowerCase\")] public class AbstractRange Inheritance object AbstractRange Derived Range StaticRange Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: As an abstract interface, you will not directly instantiate an object of type AbstractRange. Instead, you will use the Range or StaticRange interfaces. To understand the difference between those two interfaces, and how to choose which is appropriate for your needs, consult each interface's documentation. See also on MDN Properties Collapsed The read-only collapsed property of the AbstractRange interface returns true if the range&apos;s start position and end position are the same. public bool Collapsed { get; } Property Value bool A boolean value which is true if the range is collapsed. A collapsed range is one in which the start and end positions are the same, resulting in a zero-character-long range. Remarks See also on MDN EndContainer The read-only endContainer property of the AbstractRange interface returns the Node in which the end of the range is located. public Node EndContainer { get; } Property Value Node The Node which contains the last character of the range. Remarks See also on MDN EndOffset The endOffset property of the AbstractRange interface returns the offset into the end node of the range's end position. public ulong EndOffset { get; } Property Value ulong An integer value indicating the number of characters into the Node indicated by EndContainer at which the final character of the range is located. Remarks See also on MDN StartContainer The read-only startContainer property of the AbstractRange interface returns the start Node for the range. public Node StartContainer { get; } Property Value Node The Node inside which the start position of the range is found. Remarks See also on MDN StartOffset The read-only startOffset property of the AbstractRange interface returns the offset into the start node of the range's start position. public ulong StartOffset { get; } Property Value ulong An integer value indicating the number of characters into the Node indicated by StartContainer at which the first character of the range is located. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AbstractWorker.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AbstractWorker.html",
    "title": "Interface AbstractWorker | CSharpToJavaScript",
    "keywords": "Interface AbstractWorker Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface AbstractWorker Properties Onerror EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull"
  },
  "api/CSharpToJavaScript.APIs.JS.Accelerometer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Accelerometer.html",
    "title": "Class Accelerometer | CSharpToJavaScript",
    "keywords": "Class Accelerometer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Accelerometer interface of the Sensor APIs provides on each reading the acceleration applied to the device along all three axes. [To(\"FirstCharToLowerCase\")] public class Accelerometer : Sensor Inheritance object EventTarget Sensor Accelerometer Derived GravitySensor LinearAccelerationSensor Inherited Members Sensor.Activated Sensor.HasReading Sensor.Timestamp Sensor.Start() Sensor.Stop() Sensor.Onreading Sensor.Onactivate Sensor.Onerror EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To use this sensor, the user must grant permission to the &apos;accelerometer&apos;, device sensor through the Permissions API. This feature may be blocked by a Permissions Policy set on your server. See also on MDN Constructors Accelerometer() public Accelerometer() Accelerometer(AccelerometerSensorOptions) The Accelerometer() constructor creates a new Accelerometer object which returns the acceleration of the device along all three axes at the time it is read. public Accelerometer(AccelerometerSensorOptions options) Parameters options AccelerometerSensorOptions Remarks -'sensor.Reading_event' event See also on MDN Properties X The x read-only property of the Accelerometer interface returns a number specifying the acceleration of the device along its x-axis. public Number? X { get; } Property Value Number A 'Number'. Remarks See also on MDN Y The y read-only property of the Accelerometer interface returns a number specifying the acceleration of the device along its y-axis. public Number? Y { get; } Property Value Number A 'Number'. Remarks See also on MDN Z The z read-only property of the Accelerometer interface returns a number specifying the acceleration of the device along its z-axis. public Number? Z { get; } Property Value Number A 'Number'. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AccelerometerLocalCoordinateSystem.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AccelerometerLocalCoordinateSystem.html",
    "title": "Enum AccelerometerLocalCoordinateSystem | CSharpToJavaScript",
    "keywords": "Enum AccelerometerLocalCoordinateSystem Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum AccelerometerLocalCoordinateSystem Fields Device = 0 Screen = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.AccelerometerReadingValues.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AccelerometerReadingValues.html",
    "title": "Class AccelerometerReadingValues | CSharpToJavaScript",
    "keywords": "Class AccelerometerReadingValues Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AccelerometerReadingValues Inheritance object AccelerometerReadingValues Derived GravityReadingValues LinearAccelerationReadingValues Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields X public required Number? X Field Value Number Y public required Number? Y Field Value Number Z public required Number? Z Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.AccelerometerSensorOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AccelerometerSensorOptions.html",
    "title": "Class AccelerometerSensorOptions | CSharpToJavaScript",
    "keywords": "Class AccelerometerSensorOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AccelerometerSensorOptions : SensorOptions Inheritance object SensorOptions AccelerometerSensorOptions Inherited Members SensorOptions.Frequency object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ReferenceFrame public AccelerometerLocalCoordinateSystem ReferenceFrame Field Value AccelerometerLocalCoordinateSystem"
  },
  "api/CSharpToJavaScript.APIs.JS.AddEventListenerOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AddEventListenerOptions.html",
    "title": "Class AddEventListenerOptions | CSharpToJavaScript",
    "keywords": "Class AddEventListenerOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AddEventListenerOptions : EventListenerOptions Inheritance object EventListenerOptions AddEventListenerOptions Inherited Members EventListenerOptions.Capture object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Once public bool Once Field Value bool Passive public bool Passive Field Value bool Signal public AbortSignal Signal Field Value AbortSignal"
  },
  "api/CSharpToJavaScript.APIs.JS.AlignSetting.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AlignSetting.html",
    "title": "Enum AlignSetting | CSharpToJavaScript",
    "keywords": "Enum AlignSetting Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum AlignSetting Fields Center = 1 End = 2 Left = 3 Right = 4 Start = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.AlphaOption.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AlphaOption.html",
    "title": "Enum AlphaOption | CSharpToJavaScript",
    "keywords": "Enum AlphaOption Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum AlphaOption Fields Discard = 1 Keep = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.AmbientLightSensor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AmbientLightSensor.html",
    "title": "Class AmbientLightSensor | CSharpToJavaScript",
    "keywords": "Class AmbientLightSensor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AmbientLightSensor interface of the Sensor APIs returns the current light level or illuminance of the ambient light around the hosting device. [To(\"FirstCharToLowerCase\")] public class AmbientLightSensor : Sensor Inheritance object EventTarget Sensor AmbientLightSensor Inherited Members Sensor.Activated Sensor.HasReading Sensor.Timestamp Sensor.Start() Sensor.Stop() Sensor.Onreading Sensor.Onactivate Sensor.Onerror EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To use this sensor, the user must grant permission to the &apos;ambient-light-sensor&apos; device sensor through the Permissions API. This feature may be blocked by a Permissions Policy set on your server. See also on MDN Constructors AmbientLightSensor() public AmbientLightSensor() AmbientLightSensor(SensorOptions) The AmbientLightSensor() constructor creates a new AmbientLightSensor object, which returns the current light level or illuminance of the ambient light around the hosting device. public AmbientLightSensor(SensorOptions sensorOptions) Parameters sensorOptions SensorOptions Remarks -'sensor.Reading_event' event See also on MDN Properties Illuminance The illuminance property of the AmbientLightSensor interface returns the current light level in lux of the ambient light level around the hosting device. public Number? Illuminance { get; } Property Value Number A 'Number' indicating the current light level in lux. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AnalyserNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AnalyserNode.html",
    "title": "Class AnalyserNode | CSharpToJavaScript",
    "keywords": "Class AnalyserNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AnalyserNode interface represents a node able to provide real-time frequency and time-domain analysis information. It is an AudioNode that passes the audio stream unchanged from the input to the output, but allows you to take the generated data, process it, and create audio visualizations. [To(\"FirstCharToLowerCase\")] public class AnalyserNode : AudioNode Inheritance object EventTarget AudioNode AnalyserNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An AnalyserNode has exactly one input and one output. The node works even if the output is not connected. Without modifying the audio stream, the node allows to get the frequency and time-domain data associated to it, using a FFT. -Using the Web Audio API See also on MDN Constructors AnalyserNode() public AnalyserNode() AnalyserNode(BaseAudioContext, AnalyserOptions) The AnalyserNode() constructor of the Web Audio API creates a new AnalyserNode object instance. public AnalyserNode(BaseAudioContext context, AnalyserOptions options) Parameters context BaseAudioContext options AnalyserOptions Remarks -CreateAnalyser(), the equivalent factory method See also on MDN Properties FftSize The fftSize property of the AnalyserNode interface is an unsigned long value and represents the window size in samples that is used when performing a Fast Fourier Transform (FFT) to get frequency domain data. public ulong FftSize { get; set; } Property Value ulong An unsigned integer, representing the window size of the FFT, given in number of samples. A higher value will result in more details in the frequency domain but fewer details in the amplitude domain.Must be a power of 2 between 25 and 215, so one of: 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, and 32768. Defaults to 2048. Remarks -Using the Web Audio API See also on MDN FrequencyBinCount The frequencyBinCount read-only property of the AnalyserNode interface contains the total number of data points available to AudioContext SampleRate. This is half of the value of the FftSize. The two methods' indices have a linear relationship with the frequencies they represent, between 0 and the Nyquist frequency. public ulong FrequencyBinCount { get; } Property Value ulong An unsigned integer, equal to the number of values that GetByteFrequencyData(byte) and GetFloatFrequencyData(float) copy into the provided TypedArray.For technical reasons related to how the Fast Fourier transform is defined, it is always half the value of FftSize. Therefore, it will be one of 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, and 16384. Remarks -Using the Web Audio API See also on MDN MaxDecibels The maxDecibels property of the AnalyserNode interface is a double value representing the maximum power value in the scaling range for the FFT analysis data, for conversion to unsigned byte values — basically, this specifies the maximum value for the range of results when using getByteFrequencyData(). public Number MaxDecibels { get; set; } Property Value Number A double, representing the maximum decibel value for scaling the FFT analysis data, where 0 dB is the loudest possible sound, -10 dB is a 10th of that, etc. The default value is -30 dB.When getting data from getByteFrequencyData(), any frequencies with an amplitude of maxDecibels or higher will be returned as 255. Remarks -Using the Web Audio API See also on MDN MinDecibels The minDecibels property of the AnalyserNode interface is a double value representing the minimum power value in the scaling range for the FFT analysis data, for conversion to unsigned byte values — basically, this specifies the minimum value for the range of results when using getByteFrequencyData(). public Number MinDecibels { get; set; } Property Value Number A double, representing the minimum decibel value for scaling the FFT analysis data, where 0 dB is the loudest possible sound, -10 dB is a 10th of that, etc. The default value is -100 dB.When getting data from getByteFrequencyData(), any frequencies with an amplitude of minDecibels or lower will be returned as 0. NOTE Note: If a value greater than AnalyserNode.maxDecibels is set, an INDEX_SIZE_ERR exception is thrown. Remarks -Using the Web Audio API See also on MDN SmoothingTimeConstant The smoothingTimeConstant property of the AnalyserNode interface is a double value representing the averaging constant with the last analysis frame. It's basically an average between the current buffer and the last buffer the AnalyserNode processed, and results in a much smoother set of value changes over time. public Number SmoothingTimeConstant { get; set; } Property Value Number A double within the range 0 to 1 (0 meaning no time averaging). The default value is 0.8.If 0 is set, there is no averaging done, whereas a value of 1 means \"overlap the previous and current buffer quite a lot while computing the value\", which essentially smooths the changes across GetFloatFrequencyData(float)/GetByteFrequencyData(byte) calls.In technical terms, we apply a Blackman window and smooth the values over time. The default value is good enough for most cases. NOTE Note: If a value outside the range 0–1 is set, an INDEX_SIZE_ERR exception is thrown. Remarks -Using the Web Audio API See also on MDN Methods GetByteFrequencyData(byte) The getByteFrequencyData() method of the AnalyserNode interface copies the current frequency data into a {{jsxref(\"Uint8Array\")}} (unsigned byte array) passed into it. public GlobalObject.Undefined GetByteFrequencyData(byte array) Parameters array byte Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The frequency data is composed of integers on a scale from 0 to 255. Each item in the array represents the decibel value for a specific frequency. The frequencies are spread linearly from 0 to 1/2 of the sample rate. For example, for 48000 sample rate, the last item of the array will represent the decibel value for 24000 Hz. If the array has fewer elements than the FrequencyBinCount, excess elements are dropped. If it has more elements than needed, excess elements are ignored. -Using the Web Audio API See also on MDN GetByteTimeDomainData(byte) The getByteTimeDomainData() method of the AnalyserNode Interface copies the current waveform, or time-domain, data into a {{jsxref(\"Uint8Array\")}} (unsigned byte array) passed into it. public GlobalObject.Undefined GetByteTimeDomainData(byte array) Parameters array byte Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If the array has fewer elements than the FftSize, excess elements are dropped. If it has more elements than needed, excess elements are ignored. -Using the Web Audio API See also on MDN GetFloatFrequencyData(float) The getFloatFrequencyData() method of the AnalyserNode Interface copies the current frequency data into a {{jsxref(\"Float32Array\")}} array passed into it. Each array value is a sample, the magnitude of the signal at a particular time. public GlobalObject.Undefined GetFloatFrequencyData(float array) Parameters array float Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Each item in the array represents the decibel value for a specific frequency. The frequencies are spread linearly from 0 to 1/2 of the sample rate. For example, for a 48000 Hz sample rate, the last item of the array will represent the decibel value for 24000 Hz. If you need higher performance and don't care about precision, you can use GetByteFrequencyData(byte) instead, which works on a {{jsxref(\"Uint8Array\")}}. -Using the Web Audio API See also on MDN GetFloatTimeDomainData(float) The getFloatTimeDomainData() method of the AnalyserNode Interface copies the current waveform, or time-domain, data into a {{jsxref(\"Float32Array\")}} array passed into it. Each array value is a sample, the magnitude of the signal at a particular time. public GlobalObject.Undefined GetFloatTimeDomainData(float array) Parameters array float Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AnalyserOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AnalyserOptions.html",
    "title": "Class AnalyserOptions | CSharpToJavaScript",
    "keywords": "Class AnalyserOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AnalyserOptions : AudioNodeOptions Inheritance object AudioNodeOptions AnalyserOptions Inherited Members AudioNodeOptions.ChannelCount AudioNodeOptions.ChannelCountMode AudioNodeOptions.ChannelInterpretation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FftSize public ulong FftSize Field Value ulong MaxDecibels public Number MaxDecibels Field Value Number MinDecibels public Number MinDecibels Field Value Number SmoothingTimeConstant public Number SmoothingTimeConstant Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.Animation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Animation.html",
    "title": "Class Animation | CSharpToJavaScript",
    "keywords": "Class Animation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Animation interface of the Web Animations API represents a single animation player and provides playback controls and a timeline for an animation node or source. [To(\"FirstCharToLowerCase\")] public class Animation Inheritance object Animation Derived CSSAnimation CSSTransition WorkletAnimation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Web Animations API See also on MDN Properties CurrentTime The Animation.currentTime property of the Web Animations API returns and sets the current time value of the animation in milliseconds, whether running or paused. public Unsupported? CurrentTime { get; set; } Property Value Unsupported A number representing the current time in milliseconds, or null to deactivate the animation. Remarks If the animation lacks a AnimationTimeline, is inactive, or hasn't been played yet, currentTime&apos;s return value is null. -Animation for other methods and properties you can use to control web page animation. -StartTime for the time an animation is scheduled to start. -Web Animations API See also on MDN StartTime The Animation.startTime property of the Animation interface is a double-precision floating-point value which indicates the scheduled time when an animation's playback should begin. public Unsupported? StartTime { get; set; } Property Value Unsupported A floating-point number representing the current time in milliseconds, or null if no time is set. You can read this value to determine what the start time is currently set at, and you can change this value to make the animation start at a different time. Remarks An animation&apos;s start time is the time value of its DocumentTimeline when its target KeyframeEffect is scheduled to begin playback. An animation's start time is initially unresolved (meaning that it&apos;s null because it has no value). -Web Animations API -Animation -CurrentTime for the current time of the animation. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AnimationEffect.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AnimationEffect.html",
    "title": "Class AnimationEffect | CSharpToJavaScript",
    "keywords": "Class AnimationEffect Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AnimationEffect interface of the Web Animations API is an interface representing animation effects. [To(\"FirstCharToLowerCase\")] public class AnimationEffect Inheritance object AnimationEffect Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AnimationEffect is an abstract interface and so isn't directly instantiable. However, concrete interfaces such as KeyframeEffect inherit from it, and instances of these interfaces can be passed to Animation objects for playing, and may also be used by CSS Animations and Transitions. -Web Animations API -Animation.Effect See also on MDN Properties LocalTime public Number LocalTime { get; set; } Property Value Number NextSibling public AnimationEffect? NextSibling { get; } Property Value AnimationEffect Parent public GroupEffect? Parent { get; } Property Value GroupEffect PreviousSibling public AnimationEffect? PreviousSibling { get; } Property Value AnimationEffect Methods After(params AnimationEffect[]) public GlobalObject.Undefined After(params AnimationEffect[] effects) Parameters effects AnimationEffect[] Returns GlobalObject.Undefined Before(params AnimationEffect[]) public GlobalObject.Undefined Before(params AnimationEffect[] effects) Parameters effects AnimationEffect[] Returns GlobalObject.Undefined Remove() public GlobalObject.Undefined Remove() Returns GlobalObject.Undefined Replace(params AnimationEffect[]) public GlobalObject.Undefined Replace(params AnimationEffect[] effects) Parameters effects AnimationEffect[] Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.AnimationFrameProvider.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AnimationFrameProvider.html",
    "title": "Interface AnimationFrameProvider | CSharpToJavaScript",
    "keywords": "Interface AnimationFrameProvider Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface AnimationFrameProvider Methods CancelAnimationFrame(ulong) GlobalObject.Undefined CancelAnimationFrame(ulong handle) Parameters handle ulong Returns GlobalObject.Undefined RequestAnimationFrame(FrameRequestCallback) ulong RequestAnimationFrame(FrameRequestCallback callback) Parameters callback FrameRequestCallback Returns ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.AnimationNodeList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AnimationNodeList.html",
    "title": "Class AnimationNodeList | CSharpToJavaScript",
    "keywords": "Class AnimationNodeList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AnimationNodeList Inheritance object AnimationNodeList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Length public ulong Length { get; } Property Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.AnimationPlaybackEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AnimationPlaybackEvent.html",
    "title": "Class AnimationPlaybackEvent | CSharpToJavaScript",
    "keywords": "Class AnimationPlaybackEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AnimationPlaybackEvent interface of the Web Animations API represents animation events. [To(\"FirstCharToLowerCase\")] public class AnimationPlaybackEvent : Event Inheritance object Event AnimationPlaybackEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks As animations play, they report changes to their Animation.PlayState through animation events. -Web Animations API -Animation.PlayState See also on MDN Constructors AnimationPlaybackEvent() public AnimationPlaybackEvent() AnimationPlaybackEvent(string, AnimationPlaybackEventInit) The AnimationPlaybackEvent() constructor of the Web Animations API returns a new AnimationPlaybackEvent object instance. public AnimationPlaybackEvent(string type, AnimationPlaybackEventInit eventInitDict) Parameters type string eventInitDict AnimationPlaybackEventInit Remarks -Web Animations API -AnimationPlayBackEvent -Animation.PlayState -CustomEvent(string, CustomEventInit) -Event(string, EventInit) See also on MDN Properties CurrentTime The currentTime read-only property of the AnimationPlaybackEvent interface represents the current time of the animation that generated the event at the moment the event is queued. This will be unresolved if the animation was idle at the time the event was generated. public Unsupported? CurrentTime { get; } Property Value Unsupported A number representing the current time in milliseconds, or null. Remarks -Web Animations API -AnimationPlayBackEvent See also on MDN TimelineTime The timelineTime read-only property of the AnimationPlaybackEvent interface represents the time value of the animation's AnimationTimeline at the moment the event is queued. This will be unresolved if the animation was not associated with a timeline at the time the event was generated or if the associated timeline was inactive. public Unsupported? TimelineTime { get; } Property Value Unsupported A number representing the current time in milliseconds, or null. Remarks -Web Animations API -AnimationPlayBackEvent -AnimationTimeline See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AnimationPlaybackEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AnimationPlaybackEventInit.html",
    "title": "Class AnimationPlaybackEventInit | CSharpToJavaScript",
    "keywords": "Class AnimationPlaybackEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AnimationPlaybackEventInit : EventInit Inheritance object EventInit AnimationPlaybackEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CurrentTime public Unsupported? CurrentTime Field Value Unsupported TimelineTime public Unsupported? TimelineTime Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.AnimationTimeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AnimationTimeOptions.html",
    "title": "Class AnimationTimeOptions | CSharpToJavaScript",
    "keywords": "Class AnimationTimeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AnimationTimeOptions Inheritance object AnimationTimeOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Range public string? Range Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.AnimationTimeline.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AnimationTimeline.html",
    "title": "Class AnimationTimeline | CSharpToJavaScript",
    "keywords": "Class AnimationTimeline Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AnimationTimeline interface of the Web Animations API represents the timeline of an animation. This interface exists to define timeline features, inherited by other timeline types: [To(\"FirstCharToLowerCase\")] public class AnimationTimeline Inheritance object AnimationTimeline Derived ScrollTimeline Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -DocumentTimeline, ScrollTimeline, ViewTimeline -Document.Timeline -Web Animations API -CSS scroll-driven animations See also on MDN Properties CurrentTime The currentTime read-only property of the Web Animations API's AnimationTimeline interface returns the timeline's current time in milliseconds, or null if the timeline is inactive. public Unsupported? CurrentTime { get; } Property Value Unsupported A number representing the timeline&apos;s current time in milliseconds, or null if the timeline is inactive. Remarks -Web Animations API -AnimationTimeline -DocumentTimeline inherits this property -Document.Timeline returns a timeline object which inherits this property See also on MDN Duration public Unsupported? Duration { get; } Property Value Unsupported Methods GetCurrentTime(AnimationTimeOptions) public Unsupported? GetCurrentTime(AnimationTimeOptions options) Parameters options AnimationTimeOptions Returns Unsupported Play(AnimationEffect?) public Animation Play(AnimationEffect? effect) Parameters effect AnimationEffect Returns Animation"
  },
  "api/CSharpToJavaScript.APIs.JS.AnimationWorkletGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AnimationWorkletGlobalScope.html",
    "title": "Class AnimationWorkletGlobalScope | CSharpToJavaScript",
    "keywords": "Class AnimationWorkletGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AnimationWorkletGlobalScope : WorkletGlobalScope Inheritance object WorkletGlobalScope AnimationWorkletGlobalScope Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterAnimator(string, AnimatorInstanceConstructor) public GlobalObject.Undefined RegisterAnimator(string name, AnimatorInstanceConstructor animatorCtor) Parameters name string animatorCtor AnimatorInstanceConstructor Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.AnimatorInstanceConstructor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AnimatorInstanceConstructor.html",
    "title": "Struct AnimatorInstanceConstructor | CSharpToJavaScript",
    "keywords": "Struct AnimatorInstanceConstructor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct AnimatorInstanceConstructor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.AssignedNodesOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AssignedNodesOptions.html",
    "title": "Class AssignedNodesOptions | CSharpToJavaScript",
    "keywords": "Class AssignedNodesOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AssignedNodesOptions Inheritance object AssignedNodesOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Flatten public bool Flatten Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.AttestationConveyancePreference.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AttestationConveyancePreference.html",
    "title": "Enum AttestationConveyancePreference | CSharpToJavaScript",
    "keywords": "Enum AttestationConveyancePreference Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum AttestationConveyancePreference Fields Direct = 2 Indirect = 1 None = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.Attr.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Attr.html",
    "title": "Class Attr | CSharpToJavaScript",
    "keywords": "Class Attr Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Attr interface represents one of an element's attributes as an object. In most situations, you will directly retrieve the attribute value as a string (e.g., GetAttribute(string)), but certain functions (e.g., GetAttributeNode(string)) or means of iterating return Attr instances. [To(\"FirstCharToLowerCase\")] public class Attr : Node Inheritance object EventTarget Node Attr Inherited Members Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The core idea of an object of type Attr is the association between a name and a value. An attribute may also be part of a namespace and, in this case, it also has a URI identifying the namespace, and a prefix that is an abbreviation for the namespace. The name is deemed local when it ignores the eventual namespace prefix and deemed qualified when it includes the prefix of the namespace, if any, separated from the local name by a colon (:). We have three cases: an attribute outside of a namespace, an attribute inside a namespace without a prefix defined, an attribute inside a namespace with a prefix: Attribute Namespace name Namespace prefix Attribute local name Attribute qualified name myAttr none none myAttr myAttr myAttr mynamespace none myAttr myAttr myAttr mynamespace myns myAttr myns:myAttr NOTE Note: This interface represents only attributes present in the tree representation of the Element, being a SVG, an HTML or a MathML element. It doesn't represent the property of an interface associated with such element, such as HTMLTableElement for a {{HTMLElement(\"table\")}} element. (See {{Glossary(\"Attribute\", \"this article\")}} for more information about attributes and how they are reflected into properties.) -Other nodes are CDATASection, CharacterData, Comment, Document, Element, ProcessingInstruction, and Text. See also on MDN Properties LocalName The read-only localName property of the Attr interface returns the local part of the qualified name of an attribute, that is the name of the attribute, stripped from any namespace in front of it. For example, if the qualified name is xml:lang, the returned local name is lang, if the element supports that namespace. public string LocalName { get; } Property Value string A string representing the local part of the attribute&apos;s qualified name. Remarks The local name is always in lower case, whatever case at the attribute creation. NOTE Note: HTML only supports a fixed set of namespaces on SVG and MathML elements. These are xml (for the xml:lang attribute), xlink (for the xlink:href, xlink:show, xlink:target and xlink:title attributes) and xpath. That means that the local name of an attribute of an HTML element is always be equal to its qualified name: Colons are treated as regular characters. In XML, like in SVG or MathML, the colon denotes the end of the prefix and what is before is the namespace; the local name may be different from the qualified name. -The properties Name, returning the qualified name of the attribute, and Prefix, the namespace prefix. -The LocalName property, returning the local name of an Element. See also on MDN Name The read-only name property of the Attr interface returns the qualified name of an attribute, that is the name of the attribute, with the namespace prefix, if any, in front of it. For example, if the local name is lang and the namespace prefix is xml, the returned qualified name is xml:lang. public string Name { get; } Property Value string A string representing the attribute&apos;s qualified name. Remarks The qualified name is always in lower case, whatever case at the attribute creation. -The properties LocalName, returning the local part of the qualified name of the attribute, and Prefix, the namespace prefix. -The TagName property, returning the qualified name of an Element. See also on MDN NamespaceURI The read-only namespaceURI property of the Attr interface returns the namespace URI of the attribute, or null if the element is not in a namespace. public string? NamespaceURI { get; } Property Value string A string containing the URI of the namespace, or null if the attribute is not in a namespace. Remarks The namespace URI is set at the Attr creation and cannot be changed. An attribute with a namespace can be created using SetAttributeNS(string?, string, string). NOTE Note: an attribute does not inherit its namespace from the element it is attached to. If an attribute is not explicitly given a namespace, it has no namespace. The browser does not handle or enforce namespace validation per se. It is up to the JavaScript application to do any necessary validation. Note, too, that the namespace prefix, once it is associated with a particular attribute node, cannot be changed. -The properties Name, returning the qualified name of the attribute, LocalName, the local part of the name, and Prefix, the namespace prefix. -The NamespaceURI property, equivalent to this one but for an Element. -The SetAttributeNS(string?, string, string) method, creating an attribute with a given namespace. See also on MDN OwnerElement The read-only ownerElement property of the Attr interface returns the Element the attribute belongs to. public Element? OwnerElement { get; } Property Value Element The Element the attribute belongs to, or null if the attribute is not linked to an element. Remarks See also on MDN Prefix The read-only prefix property of the Attr returns the namespace prefix of the attribute, or null if no prefix is specified. public string? Prefix { get; } Property Value string A string containing the prefix of the namespace the attribute belongs too. If none, it returns null. Remarks The prefix is always in lower case, whatever case is used at the attribute creation. NOTE Note: Only XML supports namespaces. HTML does not. That means that the prefix of an attribute of an HTML element will always be null. Also, only the xml (for the xml:lang attribute), xlink (for the xlink:href, xlink:show, xlink:target and xlink:title attributes) and xpath namespaces are supported, and only on SVG and MathML elements. -The properties Name, returning the qualified name of the attribute, and LocalName, its local name. -The Prefix property, returning the namespace prefix of an Element. See also on MDN Specified IMPORTANT Deprecated The read-only specified property of the Attr interface always returns true. public bool Specified { get; } Property Value bool Always returns true. Remarks See also on MDN Value The value property of the Attr interface contains the value of the attribute. public string Value { get; set; } Property Value string A string representing the attribute value. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioBuffer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioBuffer.html",
    "title": "Class AudioBuffer | CSharpToJavaScript",
    "keywords": "Class AudioBuffer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioBuffer interface represents a short audio asset residing in memory, created from an audio file using the BaseAudioContext/decodeAudioData method, or from raw data using BaseAudioContext/createBuffer. Once put into an AudioBuffer, the audio can then be played by being passed into an AudioBufferSourceNode. [To(\"FirstCharToLowerCase\")] public class AudioBuffer Inheritance object AudioBuffer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Objects of these types are designed to hold small audio snippets, typically less than 45 s. For longer sounds, objects implementing the MediaElementAudioSourceNode are more suitable. The buffer contains the audio signal waveform encoded as a series of amplitudes in the following format: non-interleaved IEEE754 32-bit linear PCM with a nominal range between -1 and +1, that is, a 32-bit floating point buffer, with each sample between -1.0 and 1.0. If the AudioBuffer has multiple channels, they are stored in separate buffers. -Using the Web Audio API See also on MDN Constructors AudioBuffer() public AudioBuffer() AudioBuffer(AudioBufferOptions) The AudioBuffer constructor of the Web Audio API creates a new AudioBuffer object. public AudioBuffer(AudioBufferOptions options) Parameters options AudioBufferOptions Remarks See also on MDN Properties Duration The duration property of the {{ domxref(&quot;AudioBuffer&quot;) }} interface returns a double representing the duration, in seconds, of the PCM data stored in the buffer. public Number Duration { get; } Property Value Number A double. Remarks -Using the Web Audio API See also on MDN Length The length property of the AudioBuffer interface returns an integer representing the length, in sample-frames, of the PCM data stored in the buffer. public ulong Length { get; } Property Value ulong An integer. Remarks -Using the Web Audio API See also on MDN NumberOfChannels The numberOfChannels property of the AudioBuffer interface returns an integer representing the number of discrete audio channels described by the PCM data stored in the buffer. public ulong NumberOfChannels { get; } Property Value ulong An integer. Remarks -Using the Web Audio API See also on MDN SampleRate The sampleRate property of the {{ domxref(&quot;AudioBuffer&quot;) }} interface returns a float representing the sample rate, in samples per second, of the PCM data stored in the buffer. public Number SampleRate { get; } Property Value Number A floating-point value indicating the current sample rate of the buffers data, in samples per second. Remarks -Using the Web Audio API See also on MDN Methods CopyFromChannel(float, ulong, ulong) The copyFromChannel() method of the AudioBuffer interface copies the audio sample data from the specified channel of the AudioBuffer to a specified Float32Array. public GlobalObject.Undefined CopyFromChannel(float destination, ulong channelNumber, ulong bufferOffset) Parameters destination float channelNumber ulong bufferOffset ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using the Web Audio API See also on MDN CopyToChannel(float, ulong, ulong) The copyToChannel() method of the AudioBuffer interface copies the samples to the specified channel of the AudioBuffer, from the source array. public GlobalObject.Undefined CopyToChannel(float source, ulong channelNumber, ulong bufferOffset) Parameters source float channelNumber ulong bufferOffset ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using the Web Audio API See also on MDN GetChannelData(ulong) The getChannelData() method of the AudioBuffer Interface returns a {{jsxref(\"Float32Array\")}} containing the PCM data associated with the channel, defined by the channel parameter (with 0 representing the first channel). public float GetChannelData(ulong channel) Parameters channel ulong Returns float A Float32Array. Remarks -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioBufferOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioBufferOptions.html",
    "title": "Class AudioBufferOptions | CSharpToJavaScript",
    "keywords": "Class AudioBufferOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioBufferOptions Inheritance object AudioBufferOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Length public required ulong Length Field Value ulong NumberOfChannels public ulong NumberOfChannels Field Value ulong SampleRate public required Number SampleRate Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioBufferSourceNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioBufferSourceNode.html",
    "title": "Class AudioBufferSourceNode | CSharpToJavaScript",
    "keywords": "Class AudioBufferSourceNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioBufferSourceNode interface is an AudioScheduledSourceNode which represents an audio source consisting of in-memory audio data, stored in an AudioBuffer. [To(\"FirstCharToLowerCase\")] public class AudioBufferSourceNode : AudioScheduledSourceNode Inheritance object EventTarget AudioNode AudioScheduledSourceNode AudioBufferSourceNode Inherited Members AudioScheduledSourceNode.Onended AudioScheduledSourceNode.Start(Number) AudioScheduledSourceNode.Stop(Number) AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface is especially useful for playing back audio which has particularly stringent timing accuracy requirements, such as for sounds that must match a specific rhythm and can be kept in memory rather than being played from disk or the network. To play sounds which require accurate timing but must be streamed from the network or played from disk, use a AudioWorkletNode to implement its playback. An AudioBufferSourceNode has no inputs and exactly one output, which has the same number of channels as the AudioBuffer indicated by its Buffer property. If there's no buffer set—that is, if buffer is null—the output contains a single channel of silence (every sample is 0). An AudioBufferSourceNode can only be played once; after each call to Start(Number), you have to create a new node if you want to play the same sound again. Fortunately, these nodes are very inexpensive to create, and the actual AudioBuffers can be reused for multiple plays of the sound. Indeed, you can use these nodes in a &quot;fire and forget&quot; manner: create the node, call start() to begin playing the sound, and don&apos;t even bother to hold a reference to it. It will automatically be garbage-collected at an appropriate time, which won&apos;t be until sometime after the sound has finished playing. Multiple calls to AudioScheduledSourceNode/stop are allowed. The most recent call replaces the previous one, if the AudioBufferSourceNode has not already reached the end of the buffer. The AudioBufferSourceNode takes the content of an AudioBuffer and m -Using the Web Audio API -Web Audio API See also on MDN Constructors AudioBufferSourceNode() public AudioBufferSourceNode() AudioBufferSourceNode(BaseAudioContext, AudioBufferSourceOptions) The AudioBufferSourceNode() constructor creates a new AudioBufferSourceNode object instance. public AudioBufferSourceNode(BaseAudioContext context, AudioBufferSourceOptions options) Parameters context BaseAudioContext options AudioBufferSourceOptions Remarks See also on MDN Properties Buffer The buffer property of the {{ domxref(&quot;AudioBufferSourceNode&quot;) }} interface provides the ability to play back audio using an AudioBuffer as the source of the sound data. public AudioBuffer? Buffer { get; set; } Property Value AudioBuffer An AudioBuffer which contains the data representing the sound which the node will play. Remarks If the buffer property is set to the value null, the node generates a single channel containing silence (that is, every sample is 0). -Using the Web Audio API -Web Audio API See also on MDN Detune The detune property of the AudioBufferSourceNode interface is a k-rate AudioParam representing detuning of oscillation in cents. public AudioParam Detune { get; } Property Value AudioParam A k-rate AudioParam whose value indicates the detuning of oscillation in cents. NOTE Note: Though the AudioParam returned is read-only, the value it represents is not. Remarks For example, values of +100 and -100 detune the source up or down by one semitone, while +1200 and -1200 detune it up or down by one octave. -Using the Web Audio API -Web Audio API See also on MDN Loop The loop property of the AudioBufferSourceNode interface is a Boolean indicating if the audio asset must be replayed when the end of the AudioBuffer is reached. public bool Loop { get; set; } Property Value bool A Boolean which is true if looping is enabled; otherwise, the value is false.When looping is enabled, the sound begins playing at the time specified as the start point when Start(Number, Number, Number) is called. When the time specified by the LoopEnd property is reached, playback continues at the time specified by LoopStart Remarks The loop property&apos;s default value is false. -Web Audio API -Using the Web Audio API -AudioBufferSourceNode See also on MDN LoopEnd The loopEnd property of the AudioBufferSourceNode interface specifies is a floating point number specifying, in seconds, at what offset into playing the AudioBuffer playback should loop back to the time indicated by the LoopStart property. This is only used if the Loop property is true. public Number LoopEnd { get; set; } Property Value Number A floating-point number indicating the offset, in seconds, into the audio buffer at which each loop will loop return to the beginning of the loop (that is, the current play time gets reset to LoopStart). This property is only used if the Loop property is true.The default value is 0. Remarks -Using the Web Audio API -Web Audio API See also on MDN LoopStart The loopStart property of the {{ domxref(&quot;AudioBufferSourceNode&quot;) }} interface is a floating-point value indicating, in seconds, where in the AudioBuffer the restart of the play must happen. public Number LoopStart { get; set; } Property Value Number A floating-point number indicating the offset, in seconds, into the audio buffer at which each loop should begin during playback. This value is only used when the Loop parameter is true. Remarks The loopStart property&apos;s default value is 0. -Web Audio API -Using the Web Audio API See also on MDN PlaybackRate The playbackRate property of the AudioBufferSourceNode interface Is a k-rate AudioParam that defines the speed at which the audio asset will be played. public AudioParam PlaybackRate { get; } Property Value AudioParam An AudioParam whose Value is a floating-point value indicating the playback rate of the audio as a decimal proportion of the original sampling rate.Consider a sound buffer containing audio sampled at 44.1 kHz (44,100 samples per second). Let&apos;s see what a few values of playbackRate do: Remarks A value of 1.0 indicates it should play at the same speed as its sampling rate, values less than 1.0 cause the sound to play more slowly, while values greater than 1.0 result in audio playing faster than normal. The default value is 1.0. When set to another value, the AudioBufferSourceNode resamples the audio before sending it to the output. -Using the Web Audio API -Web Audio API See also on MDN Methods Start(Number, Number, Number) The start() method of the AudioBufferSourceNode Interface is used to schedule playback of the audio data contained in the buffer, or to begin playback immediately. public GlobalObject.Undefined Start(Number when, Number offset, Number duration) Parameters when Number offset Number duration Number Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioBufferSourceOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioBufferSourceOptions.html",
    "title": "Class AudioBufferSourceOptions | CSharpToJavaScript",
    "keywords": "Class AudioBufferSourceOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioBufferSourceOptions Inheritance object AudioBufferSourceOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Buffer public AudioBuffer? Buffer Field Value AudioBuffer Detune public Number Detune Field Value Number Loop public bool Loop Field Value bool LoopEnd public Number LoopEnd Field Value Number LoopStart public Number LoopStart Field Value Number PlaybackRate public Number PlaybackRate Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioConfiguration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioConfiguration.html",
    "title": "Class AudioConfiguration | CSharpToJavaScript",
    "keywords": "Class AudioConfiguration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioConfiguration Inheritance object AudioConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Bitrate public ulong Bitrate Field Value ulong Channels public string Channels Field Value string ContentType public required string ContentType Field Value string Samplerate public ulong Samplerate Field Value ulong SpatialRendering public bool SpatialRendering Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioContext.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioContext.html",
    "title": "Class AudioContext | CSharpToJavaScript",
    "keywords": "Class AudioContext Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioContext interface represents an audio-processing graph built from audio modules linked together, each represented by an AudioNode. [To(\"FirstCharToLowerCase\")] public class AudioContext : BaseAudioContext Inheritance object EventTarget BaseAudioContext AudioContext Inherited Members BaseAudioContext.Destination BaseAudioContext.SampleRate BaseAudioContext.CurrentTime BaseAudioContext.Listener BaseAudioContext.State BaseAudioContext.AudioWorklet BaseAudioContext.Onstatechange BaseAudioContext.CreateAnalyser() BaseAudioContext.CreateBiquadFilter() BaseAudioContext.CreateBuffer(ulong, ulong, Number) BaseAudioContext.CreateBufferSource() BaseAudioContext.CreateChannelMerger(ulong) BaseAudioContext.CreateChannelSplitter(ulong) BaseAudioContext.CreateConstantSource() BaseAudioContext.CreateConvolver() BaseAudioContext.CreateDelay(Number) BaseAudioContext.CreateDynamicsCompressor() BaseAudioContext.CreateGain() BaseAudioContext.CreateIIRFilter(List<Number>, List<Number>) BaseAudioContext.CreateOscillator() BaseAudioContext.CreatePanner() BaseAudioContext.CreatePeriodicWave(List<Number>, List<Number>, PeriodicWaveConstraints) BaseAudioContext.CreateScriptProcessor(ulong, ulong, ulong) BaseAudioContext.CreateStereoPanner() BaseAudioContext.CreateWaveShaper() BaseAudioContext.DecodeAudioData(byte[], DecodeSuccessCallback?, DecodeErrorCallback?) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An audio context controls both the creation of the nodes it contains and the execution of the audio processing, or decoding. You need to create an AudioContext before you do anything else, as everything happens inside a context. It&apos;s recommended to create one AudioContext and reuse it instead of initializing a new one each time, and it&apos;s OK to use a single AudioContext for several different audio sources and pipeline concurrently. -Using the Web Audio API -OfflineAudioContext See also on MDN Constructors AudioContext() public AudioContext() AudioContext(AudioContextOptions) The AudioContext() constructor creates a new AudioContext object which represents an audio-processing graph, built from audio modules linked together, each represented by an AudioNode. public AudioContext(AudioContextOptions contextOptions) Parameters contextOptions AudioContextOptions Remarks -OfflineAudioContext(OfflineAudioContextOptions) constructor See also on MDN Properties BaseLatency The baseLatency read-only property of the AudioContext interface returns a double that represents the number of seconds of processing latency incurred by the AudioContext passing an audio buffer from the AudioDestinationNode — i.e. the end of the audio graph — into the host system&apos;s audio subsystem ready for playing. public Number BaseLatency { get; } Property Value Number A double representing the base latency in seconds. Remarks NOTE Note: You can request a certain latency during {{domxref(&quot;AudioContext.AudioContext()&quot;, &quot;construction time&quot;, &quot;&quot;, &quot;true&quot;)}} with the latencyHint option, but the browser may ignore the option. -Using the Web Audio API -Web Audio API See also on MDN OutputLatency The outputLatency read-only property of the AudioContext Interface provides an estimation of the output latency of the current audio context. public Number OutputLatency { get; } Property Value Number A double representing the output latency in seconds. Remarks This is the time, in seconds, between the browser passing an audio buffer out of an audio graph over to the host system&apos;s audio subsystem to play, and the time at which the first sample in the buffer is actually processed by the audio output device. It varies depending on the platform and the available hardware. -Using the Web Audio API -Web Audio API See also on MDN Methods Close() The close() method of the AudioContext Interface closes the audio context, releasing any system audio resources that it uses. public Task<GlobalObject.Undefined> Close() Returns Task<GlobalObject.Undefined> A Promise that resolves with 'undefined'. Remarks This function does not automatically release all AudioContext-created objects, unless other references have been released as well; however, it will forcibly release any system audio resources that might prevent additional AudioContexts from being created and used, suspend the progression of audio time in the audio context, and stop processing audio data. The returned Promise resolves when all AudioContext-creation-blocking resources have been released. This method throws an INVALID_STATE_ERR exception if called on an OfflineAudioContext. -Using the Web Audio API -Web Audio API See also on MDN CreateMediaElementSource(HTMLMediaElement) The createMediaElementSource() method of the AudioContext Interface is used to create a new MediaElementAudioSourceNode object, given an existing HTML {{htmlelement(\"audio\")}} or {{htmlelement(\"video\")}} element, the audio from which can then be played and manipulated. public MediaElementAudioSourceNode CreateMediaElementSource(HTMLMediaElement mediaElement) Parameters mediaElement HTMLMediaElement Returns MediaElementAudioSourceNode A MediaElementAudioSourceNode. Remarks For more details about media element audio source nodes, check out the MediaElementAudioSourceNode reference page. -Using the Web Audio API See also on MDN CreateMediaStreamDestination() The createMediaStreamDestination() method of the AudioContext Interface is used to create a new MediaStreamAudioDestinationNode object associated with a WebRTC MediaStream representing an audio stream, which may be stored in a local file or sent to another computer. public MediaStreamAudioDestinationNode CreateMediaStreamDestination() Returns MediaStreamAudioDestinationNode A MediaStreamAudioDestinationNode. Remarks The MediaStream is created when the node is created and is accessible via the MediaStreamAudioDestinationNode's stream attribute. This stream can be used in a similar way as a MediaStream obtained via Navigator.GetUserMedia — it can, for example, be sent to a remote peer using the addStream() method of RTCPeerConnection. For more details about media stream destination nodes, check out the MediaStreamAudioDestinationNode reference page. -Using the Web Audio API See also on MDN CreateMediaStreamSource(Unsupported) The createMediaStreamSource() method of the AudioContext Interface is used to create a new MediaStreamAudioSourceNode object, given a media stream (say, from a MediaDevices.GetUserMedia instance), the audio from which can then be played and manipulated. public MediaStreamAudioSourceNode CreateMediaStreamSource(Unsupported mediaStream) Parameters mediaStream Unsupported Returns MediaStreamAudioSourceNode A new MediaStreamAudioSourceNode object representing the audio node whose media is obtained from the specified source stream. Remarks For more details about media stream audio source nodes, check out the {{ domxref(&quot;MediaStreamAudioSourceNode&quot;) }} reference page. -Using the Web Audio API See also on MDN CreateMediaStreamTrackSource(Unsupported) The createMediaStreamTrackSource() method of the {{ domxref(&quot;AudioContext&quot;) }} interface creates and returns a MediaStreamTrackAudioSourceNode which represents an audio source whose data comes from the specified MediaStreamTrack. public MediaStreamTrackAudioSourceNode CreateMediaStreamTrackSource(Unsupported mediaStreamTrack) Parameters mediaStreamTrack Unsupported Returns MediaStreamTrackAudioSourceNode A MediaStreamTrackAudioSourceNode object which acts as a source for audio data found in the specified audio track. Remarks This differs from {{domxref(&quot;AudioContext.createMediaStreamSource&quot;, &quot;createMediaStreamSource()&quot;)}}, which creates a MediaStreamAudioSourceNode whose audio comes from the audio track in a specified MediaStream whose MediaStreamTrack.Id is first, lexicographically (alphabetically). -Web Audio API -Using the Web Audio API -MediaStreamTrackAudioSourceNode See also on MDN GetOutputTimestamp() The getOutputTimestamp() method of the AudioContext interface returns a new AudioTimestamp object containing two audio timestamp values relating to the current audio context. public AudioTimestamp GetOutputTimestamp() Returns AudioTimestamp An AudioTimestamp object, which has the following properties. Remarks The two values are as follows: See also on MDN Resume() The resume() method of the AudioContext interface resumes the progression of time in an audio context that has previously been suspended. public Task<GlobalObject.Undefined> Resume() Returns Task<GlobalObject.Undefined> A Promise that resolves when the context has resumed. The promise is rejected if the context has already been closed. Remarks This method will cause an INVALID_STATE_ERR exception to be thrown if called on an OfflineAudioContext. -Using the Web Audio API -Web Audio API See also on MDN Suspend() The suspend() method of the AudioContext Interface suspends the progression of time in the audio context, temporarily halting audio hardware access and reducing CPU/battery usage in the process — this is useful if you want an application to power down the audio hardware when it will not be using an audio context for a while. public Task<GlobalObject.Undefined> Suspend() Returns Task<GlobalObject.Undefined> A Promise that resolves with 'undefined'. The promise is rejected if the context has already been closed. Remarks This method will cause an INVALID_STATE_ERR exception to be thrown if called on an OfflineAudioContext. -Using the Web Audio API -Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioContextLatencyCategory.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioContextLatencyCategory.html",
    "title": "Enum AudioContextLatencyCategory | CSharpToJavaScript",
    "keywords": "Enum AudioContextLatencyCategory Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum AudioContextLatencyCategory Fields Balanced = 0 Interactive = 1 Playback = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioContextOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioContextOptions.html",
    "title": "Class AudioContextOptions | CSharpToJavaScript",
    "keywords": "Class AudioContextOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioContextOptions Inheritance object AudioContextOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LatencyHint public Union94 LatencyHint Field Value Union94 SampleRate public Number SampleRate Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioContextState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioContextState.html",
    "title": "Enum AudioContextState | CSharpToJavaScript",
    "keywords": "Enum AudioContextState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum AudioContextState Fields Closed = 2 Running = 1 Suspended = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioData.html",
    "title": "Class AudioData | CSharpToJavaScript",
    "keywords": "Class AudioData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioData interface of the WebCodecs API represents an audio sample. [To(\"FirstCharToLowerCase\")] public class AudioData Inheritance object AudioData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AudioData is a transferable object. See also on MDN Constructors AudioData() public AudioData() AudioData(AudioDataInit) The AudioData() constructor creates a new AudioData object which represents an individual audio sample. public AudioData(AudioDataInit init) Parameters init AudioDataInit Remarks See also on MDN Properties Duration The duration read-only property of the AudioData interface returns the duration in microseconds of this AudioData object. public ulong Duration { get; } Property Value ulong An integer. Remarks See also on MDN Format The format read-only property of the AudioData interface returns the sample format of the AudioData object. public AudioSampleFormat? Format { get; } Property Value AudioSampleFormat? A string. One of: Remarks See also on MDN NumberOfChannels The numberOfChannels read-only property of the AudioData interface returns the number of channels in the AudioData object. public ulong NumberOfChannels { get; } Property Value ulong An integer. Remarks See also on MDN NumberOfFrames The numberOfFrames read-only property of the AudioData interface returns the number of frames in the AudioData object. public ulong NumberOfFrames { get; } Property Value ulong An integer. Remarks See also on MDN SampleRate The sampleRate read-only property of the AudioData interface returns the sample rate in Hz. public Number SampleRate { get; } Property Value Number A decimal value. Remarks See also on MDN Timestamp The duration read-only property of the AudioData interface returns the timestamp of this AudioData object. public long Timestamp { get; } Property Value long An integer. Remarks See also on MDN Methods AllocationSize(AudioDataCopyToOptions) The allocationSize() method of the AudioData interface returns the size in bytes required to hold the current sample as filtered by options passed into the method. public ulong AllocationSize(AudioDataCopyToOptions options) Parameters options AudioDataCopyToOptions Returns ulong An integer containing the number of bytes needed to hold the samples described by options. Remarks See also on MDN Clone() The clone() method of the AudioData interface creates a new AudioData object with reference to the same media resource as the original. public AudioData Clone() Returns AudioData The cloned AudioData object. Remarks See also on MDN Close() The close() method of the AudioData interface clears all states and releases the reference to the media resource. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined Undefined. Remarks See also on MDN CopyTo(Union68, AudioDataCopyToOptions) The copyTo() method of the AudioData interface copies a plane of an AudioData object to a destination buffer. public GlobalObject.Undefined CopyTo(Union68 destination, AudioDataCopyToOptions options) Parameters destination Union68 options AudioDataCopyToOptions Returns GlobalObject.Undefined Undefined. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioDataCopyToOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioDataCopyToOptions.html",
    "title": "Class AudioDataCopyToOptions | CSharpToJavaScript",
    "keywords": "Class AudioDataCopyToOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioDataCopyToOptions Inheritance object AudioDataCopyToOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Format public AudioSampleFormat Format Field Value AudioSampleFormat FrameCount public ulong FrameCount Field Value ulong FrameOffset public ulong FrameOffset Field Value ulong PlaneIndex public required ulong PlaneIndex Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioDataInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioDataInit.html",
    "title": "Class AudioDataInit | CSharpToJavaScript",
    "keywords": "Class AudioDataInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioDataInit Inheritance object AudioDataInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Data public required Union67 Data Field Value Union67 Format public required AudioSampleFormat Format Field Value AudioSampleFormat NumberOfChannels public required ulong NumberOfChannels Field Value ulong NumberOfFrames public required ulong NumberOfFrames Field Value ulong SampleRate public required Number SampleRate Field Value Number Timestamp public required long Timestamp Field Value long Transfer public List<byte[]> Transfer Field Value List<byte[]>"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioDataOutputCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioDataOutputCallback.html",
    "title": "Struct AudioDataOutputCallback | CSharpToJavaScript",
    "keywords": "Struct AudioDataOutputCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct AudioDataOutputCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioDecoder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioDecoder.html",
    "title": "Class AudioDecoder | CSharpToJavaScript",
    "keywords": "Class AudioDecoder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioDecoder interface of the 'WebCodecs API' decodes chunks of audio. [To(\"FirstCharToLowerCase\")] public class AudioDecoder : EventTarget Inheritance object EventTarget AudioDecoder Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors AudioDecoder() public AudioDecoder() AudioDecoder(AudioDecoderInit) The AudioDecoder() constructor creates a new AudioDecoder object with the provided init.output callback assigned as the output callback, the provided init.error callback as the error callback, and the State set to &quot;unconfigured&quot;. public AudioDecoder(AudioDecoderInit init) Parameters init AudioDecoderInit Remarks See also on MDN Properties DecodeQueueSize The decodeQueueSize read-only property of the AudioDecoder interface returns the number of pending decode requests in the queue. public ulong DecodeQueueSize { get; } Property Value ulong An integer containing the number of requests. Remarks See also on MDN Ondequeue public EventHandlerNonNull Ondequeue { get; set; } Property Value EventHandlerNonNull State The state read-only property of the AudioDecoder interface returns the current state of the underlying codec. public CodecState State { get; } Property Value CodecState A string containing one of the following values: Remarks See also on MDN Methods Close() The close() method of the AudioDecoder interface ends all pending work and releases system resources. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Configure(AudioDecoderConfig) The configure() method of the AudioDecoder interface enqueues a control message to configure the audio decoder for decoding chunks. public GlobalObject.Undefined Configure(AudioDecoderConfig config) Parameters config AudioDecoderConfig Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Decode(EncodedAudioChunk) The decode() method of the AudioDecoder interface enqueues a control message to decode a given chunk of audio. public GlobalObject.Undefined Decode(EncodedAudioChunk chunk) Parameters chunk EncodedAudioChunk Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Flush() The flush() method of the AudioDecoder interface returns a Promise that resolves once all pending messages in the queue have been completed. public Task<GlobalObject.Undefined> Flush() Returns Task<GlobalObject.Undefined> A Promise that resolves with undefined. Remarks See also on MDN IsConfigSupported(AudioDecoderConfig) public static Task<AudioDecoderSupport> IsConfigSupported(AudioDecoderConfig config) Parameters config AudioDecoderConfig Returns Task<AudioDecoderSupport> Reset() The reset() method of the AudioDecoder interface resets all states including configuration, control messages in the control message queue, and all pending callbacks. public GlobalObject.Undefined Reset() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioDecoderConfig.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioDecoderConfig.html",
    "title": "Class AudioDecoderConfig | CSharpToJavaScript",
    "keywords": "Class AudioDecoderConfig Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioDecoderConfig Inheritance object AudioDecoderConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Codec public required string Codec Field Value string Description public Union67 Description Field Value Union67 NumberOfChannels public required ulong NumberOfChannels Field Value ulong SampleRate public required ulong SampleRate Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioDecoderInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioDecoderInit.html",
    "title": "Class AudioDecoderInit | CSharpToJavaScript",
    "keywords": "Class AudioDecoderInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioDecoderInit Inheritance object AudioDecoderInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Error public required WebCodecsErrorCallback Error Field Value WebCodecsErrorCallback Output public required AudioDataOutputCallback Output Field Value AudioDataOutputCallback"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioDecoderSupport.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioDecoderSupport.html",
    "title": "Class AudioDecoderSupport | CSharpToJavaScript",
    "keywords": "Class AudioDecoderSupport Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioDecoderSupport Inheritance object AudioDecoderSupport Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Config public AudioDecoderConfig Config Field Value AudioDecoderConfig Supported public bool Supported Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioDestinationNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioDestinationNode.html",
    "title": "Class AudioDestinationNode | CSharpToJavaScript",
    "keywords": "Class AudioDestinationNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioDestinationNode interface represents the end destination of an audio graph in a given context — usually the speakers of your device. It can also be the node that will &quot;record&quot; the audio data when used with an OfflineAudioContext. [To(\"FirstCharToLowerCase\")] public class AudioDestinationNode : AudioNode Inheritance object EventTarget AudioNode AudioDestinationNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AudioDestinationNode has no output (as it is the output, no more AudioNode can be linked after it in the audio graph) and one input. The number of channels in the input must be between 0 and the maxChannelCount value or an exception is raised. The AudioDestinationNode of a given AudioContext can be retrieved using the BaseAudioContext/destination property. -Using the Web Audio API See also on MDN Properties MaxChannelCount The maxchannelCount property of the AudioDestinationNode interface is an unsigned long defining the maximum amount of channels that the physical device can handle. public ulong MaxChannelCount { get; } Property Value ulong An unsigned long. Remarks The ChannelCount property can be set between 0 and this value (both included). If maxChannelCount is 0, like in OfflineAudioContext, the channel count cannot be changed. -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioEncoder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioEncoder.html",
    "title": "Class AudioEncoder | CSharpToJavaScript",
    "keywords": "Class AudioEncoder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioEncoder interface of the WebCodecs API encodes AudioData objects. [To(\"FirstCharToLowerCase\")] public class AudioEncoder : EventTarget Inheritance object EventTarget AudioEncoder Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors AudioEncoder() public AudioEncoder() AudioEncoder(AudioEncoderInit) The AudioEncoder() constructor creates a new AudioEncoder object with the provided init.output callback assigned as the output callback, the provided init.error callback as the error callback, and the State set to &quot;unconfigured&quot;. public AudioEncoder(AudioEncoderInit init) Parameters init AudioEncoderInit Remarks See also on MDN Properties EncodeQueueSize The encodeQueueSize read-only property of the AudioEncoder interface returns the number of pending encode requests in the queue. public ulong EncodeQueueSize { get; } Property Value ulong An integer containing the number of requests. Remarks See also on MDN Ondequeue public EventHandlerNonNull Ondequeue { get; set; } Property Value EventHandlerNonNull State The state read-only property of the AudioEncoder interface returns the current state of the underlying codec. public CodecState State { get; } Property Value CodecState A string containing one of the following values: Remarks See also on MDN Methods Close() The close() method of the AudioEncoder interface ends all pending work and releases system resources. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Configure(AudioEncoderConfig) The configure() method of the AudioEncoder interface enqueues a control message to configure the audio encoder for encoding chunks. public GlobalObject.Undefined Configure(AudioEncoderConfig config) Parameters config AudioEncoderConfig Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Encode(AudioData) The encode() method of the AudioEncoder interface enqueues a control message to encode a given AudioData object. public GlobalObject.Undefined Encode(AudioData data) Parameters data AudioData Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Flush() The flush() method of the AudioEncoder interface returns a Promise that resolves once all pending messages in the queue have been completed. public Task<GlobalObject.Undefined> Flush() Returns Task<GlobalObject.Undefined> A Promise that resolves with undefined. Remarks See also on MDN IsConfigSupported(AudioEncoderConfig) public static Task<AudioEncoderSupport> IsConfigSupported(AudioEncoderConfig config) Parameters config AudioEncoderConfig Returns Task<AudioEncoderSupport> Reset() The reset() method of the AudioEncoder interface resets all states including configuration, control messages in the control message queue, and all pending callbacks. public GlobalObject.Undefined Reset() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioEncoderConfig.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioEncoderConfig.html",
    "title": "Class AudioEncoderConfig | CSharpToJavaScript",
    "keywords": "Class AudioEncoderConfig Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioEncoderConfig Inheritance object AudioEncoderConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Bitrate public ulong Bitrate Field Value ulong BitrateMode public BitrateMode BitrateMode Field Value BitrateMode Codec public required string Codec Field Value string NumberOfChannels public ulong NumberOfChannels Field Value ulong SampleRate public ulong SampleRate Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioEncoderInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioEncoderInit.html",
    "title": "Class AudioEncoderInit | CSharpToJavaScript",
    "keywords": "Class AudioEncoderInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioEncoderInit Inheritance object AudioEncoderInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Error public required WebCodecsErrorCallback Error Field Value WebCodecsErrorCallback Output public required EncodedAudioChunkOutputCallback Output Field Value EncodedAudioChunkOutputCallback"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioEncoderSupport.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioEncoderSupport.html",
    "title": "Class AudioEncoderSupport | CSharpToJavaScript",
    "keywords": "Class AudioEncoderSupport Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioEncoderSupport Inheritance object AudioEncoderSupport Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Config public AudioEncoderConfig Config Field Value AudioEncoderConfig Supported public bool Supported Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioListener.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioListener.html",
    "title": "Class AudioListener | CSharpToJavaScript",
    "keywords": "Class AudioListener Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioListener interface represents the position and orientation of the unique person listening to the audio scene, and is used in audio spatialization. All PannerNodes spatialize in relation to the AudioListener stored in the Listener attribute. [To(\"FirstCharToLowerCase\")] public class AudioListener Inheritance object AudioListener Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It is important to note that there is only one listener per context and that it isn't an AudioNode. We see the position, up and front vectors of an AudioListener, with the up and front vectors at 90° from the other. -Using the Web Audio API See also on MDN Properties ForwardX The forwardX read-only property of the AudioListener interface is an AudioParam representing the x value of the direction vector defining the forward direction the listener is pointing in. public AudioParam ForwardX { get; } Property Value AudioParam An AudioParam. Its default value is 0, and it can range between positive and negative infinity. Remarks NOTE Note: The parameter is a-rate when used with a PannerNode whose PanningModel is set to equalpower, or k-rate otherwise. -Using the Web Audio API See also on MDN ForwardY The forwardY read-only property of the AudioListener interface is an AudioParam representing the y value of the direction vector defining the forward direction the listener is pointing in. public AudioParam ForwardY { get; } Property Value AudioParam An AudioParam. Its default value is 0, and it can range between positive and negative infinity. Remarks NOTE Note: The parameter is a-rate when used with a PannerNode whose PanningModel is set to equalpower, or k-rate otherwise. -Using the Web Audio API See also on MDN ForwardZ The forwardZ read-only property of the AudioListener interface is an AudioParam representing the z value of the direction vector defining the forward direction the listener is pointing in. public AudioParam ForwardZ { get; } Property Value AudioParam An AudioParam. Its default value is -1, and it can range between positive and negative infinity. Remarks NOTE Note: The parameter is a-rate when used with a PannerNode whose PanningModel is set to equalpower, or k-rate otherwise. -Using the Web Audio API See also on MDN PositionX The positionX read-only property of the AudioListener interface is an AudioParam representing the x position of the listener in 3D cartesian space. public AudioParam PositionX { get; } Property Value AudioParam An AudioParam. Its default value is 0, and it can range between positive and negative infinity. Remarks NOTE Note: The parameter is a-rate when used with a PannerNode whose PanningModel is set to equalpower, or k-rate otherwise. -Using the Web Audio API See also on MDN PositionY The positionY read-only property of the AudioListener interface is an AudioParam representing the y position of the listener in 3D cartesian space. public AudioParam PositionY { get; } Property Value AudioParam An AudioParam. Its default value is 0, and it can range between positive and negative infinity. Remarks NOTE Note: The parameter is a-rate when used with a PannerNode whose PanningModel is set to equalpower, or k-rate otherwise. -Using the Web Audio API See also on MDN PositionZ The positionZ read-only property of the AudioListener interface is an AudioParam representing the z position of the listener in 3D cartesian space. public AudioParam PositionZ { get; } Property Value AudioParam An AudioParam. Its default value is 0, and it can range between positive and negative infinity. Remarks NOTE Note: The parameter is a-rate when used with a PannerNode whose PanningModel is set to equalpower, or k-rate otherwise. -Using the Web Audio API See also on MDN UpX The upX read-only property of the AudioListener interface is an AudioParam representing the x value of the direction vector defining the up direction the listener is pointing in. public AudioParam UpX { get; } Property Value AudioParam An AudioParam. Its default value is 0, and it can range between positive and negative infinity. Remarks NOTE Note: The parameter is a-rate when used with a PannerNode whose PanningModel is set to equalpower, or k-rate otherwise. -Using the Web Audio API See also on MDN UpY The upY read-only property of the AudioListener interface is an AudioParam representing the y value of the direction vector defining the up direction the listener is pointing in. public AudioParam UpY { get; } Property Value AudioParam An AudioParam. Its default value is 1, and it can range between positive and negative infinity. Remarks NOTE Note: The parameter is a-rate when used with a PannerNode whose PanningModel is set to equalpower, or k-rate otherwise. -Using the Web Audio API See also on MDN UpZ The upZ read-only property of the AudioListener interface is an AudioParam representing the z value of the direction vector defining the up direction the listener is pointing in. public AudioParam UpZ { get; } Property Value AudioParam An AudioParam. Its default value is 0, and it can range between positive and negative infinity. Remarks NOTE Note: The parameter is a-rate when used with a PannerNode whose PanningModel is set to equalpower, or k-rate otherwise. -Using the Web Audio API See also on MDN Methods SetOrientation(Number, Number, Number, Number, Number, Number) IMPORTANT Deprecated The setOrientation() method of the AudioListener interface defines the orientation of the listener. public GlobalObject.Undefined SetOrientation(Number x, Number y, Number z, Number xUp, Number yUp, Number zUp) Parameters x Number y Number z Number xUp Number yUp Number zUp Number Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks It consists of two direction vectors: The two vectors must be separated by an angle of 90° — in linear analysis terms, they must be perpendicular to each other. -Using the Web Audio API See also on MDN SetPosition(Number, Number, Number) IMPORTANT Deprecated The setPosition() method of the AudioListener Interface defines the position of the listener. public GlobalObject.Undefined SetPosition(Number x, Number y, Number z) Parameters x Number y Number z Number Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The three parameters x, y and z are unitless and describe the listener's position in 3D space according to the right-hand Cartesian coordinate system. PannerNode objects use this position relative to individual audio sources for spatialization. The default value of the position vector is (0, 0, 0). **Note: ** As this method is deprecated, use the three PositionX, PositionY, and PositionZ properties instead. -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioNode.html",
    "title": "Class AudioNode | CSharpToJavaScript",
    "keywords": "Class AudioNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioNode interface is a generic interface for representing an audio processing module. [To(\"FirstCharToLowerCase\")] public class AudioNode : EventTarget Inheritance object EventTarget AudioNode Derived AnalyserNode AudioDestinationNode AudioScheduledSourceNode AudioWorkletNode BiquadFilterNode ChannelMergerNode ChannelSplitterNode ConvolverNode DelayNode DynamicsCompressorNode GainNode IIRFilterNode MediaElementAudioSourceNode MediaStreamAudioDestinationNode MediaStreamAudioSourceNode MediaStreamTrackAudioSourceNode PannerNode ScriptProcessorNode StereoPannerNode WaveShaperNode Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Examples include: NOTE Note: An AudioNode can be target of events, therefore it implements the EventTarget interface. -Using the Web Audio API See also on MDN Properties ChannelCount The channelCount property of the AudioNode interface represents an integer used to determine how many channels are used when up-mixing and down-mixing connections to any inputs to the node. public ulong ChannelCount { get; set; } Property Value ulong An integer. Remarks channelCount's usage and precise definition depend on the value of ChannelCountMode: -Using the Web Audio API See also on MDN ChannelCountMode The channelCountMode property of the AudioNode interface represents an enumerated value describing the way channels must be matched between the node's inputs and outputs. public ChannelCountMode ChannelCountMode { get; set; } Property Value ChannelCountMode The possible values of the channelCountMode enumerated value, and their meanings are: NOTE Note: In older versions of the spec, the default for a ChannelSplitterNode was max. Remarks -Using the Web Audio API See also on MDN ChannelInterpretation The channelInterpretation property of the AudioNode interface represents an enumerated value describing how input channels are mapped to output channels when the number of inputs/outputs is different. For example, this setting defines how a mono input will be up-mixed to a stereo or 5.1 channel output, or how a quad channel input will be down-mixed to a stereo or mono output. public ChannelInterpretation ChannelInterpretation { get; set; } Property Value ChannelInterpretation The values are documented in Basic concepts behind Web Audio API &gt; up-mixing and down-mixing.In summary: Remarks The property has two options: speakers and discrete. These are documented in Basic concepts behind Web Audio API &gt; up-mixing and down-mixing. -Using the Web Audio API See also on MDN Context The read-only context property of the AudioNode interface returns the associated BaseAudioContext, that is the object representing the processing graph the node is participating in. public BaseAudioContext Context { get; } Property Value BaseAudioContext The AudioContext or OfflineAudioContext object that was used to construct this AudioNode. Remarks -Using the Web Audio API See also on MDN NumberOfInputs The numberOfInputs property of the AudioNode interface returns the number of inputs feeding the node. Source nodes are defined as nodes having a numberOfInputs property with a value of 0. public ulong NumberOfInputs { get; } Property Value ulong An integer ≥ 0. Remarks -Using the Web Audio API See also on MDN NumberOfOutputs The numberOfOutputs property of the AudioNode interface returns the number of outputs coming out of the node. Destination nodes — like AudioDestinationNode — have a value of 0 for this attribute. public ulong NumberOfOutputs { get; } Property Value ulong An integer ≥ 0. Remarks -Using the Web Audio API See also on MDN Methods Connect(AudioNode, ulong, ulong) The connect() method of the AudioNode interface lets you connect one of the node&apos;s outputs to a target, which may be either another AudioNode (thereby directing the sound data to the specified node) or an AudioParam, so that the node's output data is automatically used to change the value of that parameter over time. public AudioNode Connect(AudioNode destinationNode, ulong output, ulong input) Parameters destinationNode AudioNode output ulong input ulong Returns AudioNode If the destination is a node, connect() returns a reference to the destination AudioNode object, allowing you to chain multiple connect() calls. In some browsers, older implementations of this interface return GlobalObject.Undefined.If the destination is an AudioParam, connect() returns undefined. Remarks -Using the Web Audio API See also on MDN Connect(AudioParam, ulong) The connect() method of the AudioNode interface lets you connect one of the node&apos;s outputs to a target, which may be either another AudioNode (thereby directing the sound data to the specified node) or an AudioParam, so that the node's output data is automatically used to change the value of that parameter over time. public GlobalObject.Undefined Connect(AudioParam destinationParam, ulong output) Parameters destinationParam AudioParam output ulong Returns GlobalObject.Undefined If the destination is a node, connect() returns a reference to the destination AudioNode object, allowing you to chain multiple connect() calls. In some browsers, older implementations of this interface return GlobalObject.Undefined.If the destination is an AudioParam, connect() returns undefined. Remarks -Using the Web Audio API See also on MDN Disconnect() The disconnect() method of the AudioNode interface lets you disconnect one or more nodes from the node on which the method is called. public GlobalObject.Undefined Disconnect() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using the Web Audio API See also on MDN Disconnect(AudioNode) The disconnect() method of the AudioNode interface lets you disconnect one or more nodes from the node on which the method is called. public GlobalObject.Undefined Disconnect(AudioNode destinationNode) Parameters destinationNode AudioNode Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using the Web Audio API See also on MDN Disconnect(AudioNode, ulong) The disconnect() method of the AudioNode interface lets you disconnect one or more nodes from the node on which the method is called. public GlobalObject.Undefined Disconnect(AudioNode destinationNode, ulong output) Parameters destinationNode AudioNode output ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using the Web Audio API See also on MDN Disconnect(AudioNode, ulong, ulong) The disconnect() method of the AudioNode interface lets you disconnect one or more nodes from the node on which the method is called. public GlobalObject.Undefined Disconnect(AudioNode destinationNode, ulong output, ulong input) Parameters destinationNode AudioNode output ulong input ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using the Web Audio API See also on MDN Disconnect(AudioParam) The disconnect() method of the AudioNode interface lets you disconnect one or more nodes from the node on which the method is called. public GlobalObject.Undefined Disconnect(AudioParam destinationParam) Parameters destinationParam AudioParam Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using the Web Audio API See also on MDN Disconnect(AudioParam, ulong) The disconnect() method of the AudioNode interface lets you disconnect one or more nodes from the node on which the method is called. public GlobalObject.Undefined Disconnect(AudioParam destinationParam, ulong output) Parameters destinationParam AudioParam output ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using the Web Audio API See also on MDN Disconnect(ulong) The disconnect() method of the AudioNode interface lets you disconnect one or more nodes from the node on which the method is called. public GlobalObject.Undefined Disconnect(ulong output) Parameters output ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioNodeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioNodeOptions.html",
    "title": "Class AudioNodeOptions | CSharpToJavaScript",
    "keywords": "Class AudioNodeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioNodeOptions Inheritance object AudioNodeOptions Derived AnalyserOptions AudioWorkletNodeOptions BiquadFilterOptions ChannelMergerOptions ChannelSplitterOptions ConvolverOptions DelayOptions DynamicsCompressorOptions GainOptions IIRFilterOptions OscillatorOptions PannerOptions StereoPannerOptions WaveShaperOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ChannelCount public ulong ChannelCount Field Value ulong ChannelCountMode public ChannelCountMode ChannelCountMode Field Value ChannelCountMode ChannelInterpretation public ChannelInterpretation ChannelInterpretation Field Value ChannelInterpretation"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioParam.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioParam.html",
    "title": "Class AudioParam | CSharpToJavaScript",
    "keywords": "Class AudioParam Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Web Audio API&apos;s AudioParam interface represents an audio-related parameter, usually a parameter of an AudioNode (such as Gain). [To(\"FirstCharToLowerCase\")] public class AudioParam Inheritance object AudioParam Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An AudioParam can be set to a specific value or a change in value, and can be scheduled to happen at a specific time and following a specific pattern. Each AudioParam has a list of events, initially empty, that define when and how values change. When this list is not empty, changes using the AudioParam.value attributes are ignored. This list of events allows us to schedule changes that have to happen at very precise times, using arbitrary timeline-based automation curves. The time used is the one defined in BaseAudioContext/currentTime. -Using the Web Audio API See also on MDN Properties AutomationRate public AutomationRate AutomationRate { get; set; } Property Value AutomationRate DefaultValue The defaultValue read-only property of the AudioParam interface represents the initial value of the attributes as defined by the specific AudioNode creating the AudioParam. public Number DefaultValue { get; } Property Value Number A floating-point Number. Remarks -Using the Web Audio API See also on MDN MaxValue The maxValue read-only property of the AudioParam interface represents the maximum possible value for the parameter&apos;s nominal (effective) range. public Number MaxValue { get; } Property Value Number A floating-point Number indicating the maximum value permitted for the parameter&apos;s nominal range.The default value of maxValue is the maximum positive single-precision floating-point value (+340,282,346,638,528,859,811,704,183,484,516,925,440). Remarks -MinValue See also on MDN MinValue The minValue read-only property of the AudioParam interface represents the minimum possible value for the parameter&apos;s nominal (effective) range. public Number MinValue { get; } Property Value Number A floating-point Number indicating the minimum value permitted for the parameter&apos;s nominal range.The default value of minValue is the minimum negative single-precision floating-point value (-340,282,346,638,528,859,811,704,183,484,516,925,440). Remarks -MaxValue See also on MDN Value The Web Audio API&apos;s AudioParam interface property value gets or sets the value of this AudioParam at the current time. Initially, the value is set to DefaultValue. public Number Value { get; set; } Property Value Number A floating-point Number indicating the parameter's value as of the current time. This value will be between the values specified by the MinValue and {{domxref(\"AudioParam.maxValue\", &quot;maxValue&quot;)}} properties.The data type used internally to store value is a single-precision (32-bit) floating point number, while JavaScript uses 64-bit double-precision floating point numbers. As a result, the value you read from the value property may not always exactly equal what you set it to.Consider this example:The log output will be false, because the playback rate parameter, rate, was converted to the 32-bit floating-point number closest to 5.3, which yields 5.300000190734863. One solution is to use the MathFround method, which returns the single-precision value equivalent to the 64-bit JavaScript value specified—when setting value, like this:In this case, the log output will be true.The value of an AudioParam can either be fixed or can vary over time. This is reflected by the value getter, which returns the value of the parameter as of the audio rendering engine&apos;s most recent render quantum, or moment at which audio buffers are processed and updated. In addition to processing audio buffers, each render quantum updates the value of each AudioParam as needed given the current time and any established time-based parameter value changes.Upon first creating the parameter, its value is set to its default value, given by DefaultValue. This is the parameter's value at a time of 0.0 seconds, and will remain the parameter&apos;s value until the first render quantum in which the value is altered.During each render quantum, the browser does the following things related to managing the value of a parameter:Thus, the value of a parameter is maintained to accurately reflect the state of the parameter over time. Remarks Setting value has the same effect as calling SetValueAtTime(Number, Number) with the time returned by the AudioContext's BaseAudioContext/currentTime property. -Using the Web Audio API See also on MDN Methods CancelAndHoldAtTime(Number) The cancelAndHoldAtTime() property of the AudioParam interface cancels all scheduled future changes to the AudioParam but holds its value at a given time until further changes are made using other methods. public AudioParam CancelAndHoldAtTime(Number cancelTime) Parameters cancelTime Number Returns AudioParam A reference to the AudioParam it was called on. Remarks See also on MDN CancelScheduledValues(Number) The cancelScheduledValues() method of the AudioParam Interface cancels all scheduled future changes to the AudioParam. public AudioParam CancelScheduledValues(Number cancelTime) Parameters cancelTime Number Returns AudioParam A reference to this AudioParam object. In some older implementations this method returns 'undefined'. Remarks -Using the Web Audio API See also on MDN ExponentialRampToValueAtTime(Number, Number) The exponentialRampToValueAtTime() method of the {{ domxref(&quot;AudioParam&quot;) }} Interface schedules a gradual exponential change in the value of the AudioParam. The change starts at the time specified for the previous event, follows an exponential ramp to the new value given in the value parameter, and reaches the new value at the time given in the endTime parameter. public AudioParam ExponentialRampToValueAtTime(Number value, Number endTime) Parameters value Number endTime Number Returns AudioParam A reference to this AudioParam object. In some browsers older implementations of this interface return 'undefined'. Remarks NOTE Note: Exponential ramps are considered more useful when changing frequencies or playback rates than linear ramps because of the way the human ear works. -Using the Web Audio API See also on MDN LinearRampToValueAtTime(Number, Number) The linearRampToValueAtTime() method of the AudioParam Interface schedules a gradual linear change in the value of the AudioParam. The change starts at the time specified for the previous event, follows a linear ramp to the new value given in the value parameter, and reaches the new value at the time given in the endTime parameter. public AudioParam LinearRampToValueAtTime(Number value, Number endTime) Parameters value Number endTime Number Returns AudioParam A reference to this AudioParam object. In some browsers older implementations of this interface return 'undefined'. Remarks -Using the Web Audio API See also on MDN SetTargetAtTime(Number, Number, Number) The setTargetAtTime() method of the AudioParam interface schedules the start of a gradual change to the AudioParam value. This is useful for decay or release portions of ADSR envelopes. public AudioParam SetTargetAtTime(Number target, Number startTime, Number timeConstant) Parameters target Number startTime Number timeConstant Number Returns AudioParam A reference to this AudioParam object. Some older browser implementations of this interface return 'undefined'. Remarks -Using the Web Audio API See also on MDN SetValueAtTime(Number, Number) The setValueAtTime() method of the AudioParam interface schedules an instant change to the AudioParam value at a precise time, as measured against BaseAudioContext/currentTime. The new value is given in the value parameter. public AudioParam SetValueAtTime(Number value, Number startTime) Parameters value Number startTime Number Returns AudioParam A reference to this AudioParam object. In some browsers older implementations of this interface return 'undefined'. Remarks -Using the Web Audio API See also on MDN SetValueCurveAtTime(List<Number>, Number, Number) The setValueCurveAtTime() method of the AudioParam interface schedules the parameter's value to change following a curve defined by a list of values. public AudioParam SetValueCurveAtTime(List<Number> values, Number startTime, Number duration) Parameters values List<Number> startTime Number duration Number Returns AudioParam A reference to this AudioParam object. Some older browser implementations of this interface return undefined. Remarks The curve is a linear interpolation between the sequence of values defined in an array of floating-point values, which are scaled to fit into the given interval starting at startTime and a specific duration. -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioParamDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioParamDescriptor.html",
    "title": "Class AudioParamDescriptor | CSharpToJavaScript",
    "keywords": "Class AudioParamDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioParamDescriptor dictionary of the Web Audio API specifies properties for AudioParam objects. [To(\"FirstCharToLowerCase\")] public class AudioParamDescriptor Inheritance object AudioParamDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It is used to create custom AudioParams on an AudioWorkletNode. If the underlying AudioWorkletProcessor has a AudioWorkletProcessor.ParameterDescriptors static getter, then the returned array of objects based on this dictionary is used internally by AudioWorkletNode constructor to populate its Parameters property accordingly. -Web Audio API -Using the Web Audio API See also on MDN Fields AutomationRate public AutomationRate AutomationRate Field Value AutomationRate DefaultValue public Number DefaultValue Field Value Number MaxValue public Number MaxValue Field Value Number MinValue public Number MinValue Field Value Number Name public required string Name Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioParamMap.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioParamMap.html",
    "title": "Class AudioParamMap | CSharpToJavaScript",
    "keywords": "Class AudioParamMap Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioParamMap interface of the Web Audio API represents an iterable and read-only set of multiple audio parameters. [To(\"FirstCharToLowerCase\")] public class AudioParamMap Inheritance object AudioParamMap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An AudioParamMap instance is a read-only Map-like object, in which each key is the name string for a parameter, and the corresponding value is an AudioParam containing the value of that parameter. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioProcessingEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioProcessingEvent.html",
    "title": "Class AudioProcessingEvent | CSharpToJavaScript",
    "keywords": "Class AudioProcessingEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The AudioProcessingEvent interface of the Web Audio API represents events that occur when a ScriptProcessorNode input buffer is ready to be processed. [To(\"FirstCharToLowerCase\")] public class AudioProcessingEvent : Event Inheritance object Event AudioProcessingEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An audioprocess event with this interface is fired on a ScriptProcessorNode when audio processing is required. During audio processing, the input buffer is read and processed to produce output audio data, which is then written to the output buffer. WARNING Warning: This feature has been deprecated and should be replaced by an AudioWorklet. -Using the Web Audio API See also on MDN Constructors AudioProcessingEvent() public AudioProcessingEvent() AudioProcessingEvent(string, AudioProcessingEventInit) IMPORTANT Deprecated The AudioProcessingEvent() constructor creates a new AudioProcessingEvent object. public AudioProcessingEvent(string type, AudioProcessingEventInit eventInitDict) Parameters type string eventInitDict AudioProcessingEventInit Remarks NOTE Note: Usually, this constructor is not directly called by your code, as the browser creates these objects itself and provides them to the event handler. -AudioProcessingEvent -ScriptProcessorNode See also on MDN Properties InputBuffer IMPORTANT Deprecated The inputBuffer read-only property of the AudioProcessingEvent interface represents the input buffer of an audio processing event. public AudioBuffer InputBuffer { get; } Property Value AudioBuffer An AudioBuffer object. Remarks The input buffer is represented by an AudioBuffer object, which contains a collection of audio channels, each of which is an array of floating-point values representing the audio signal waveform encoded as a series of amplitudes. The number of channels and the length of each channel are determined by the channel count and buffer size properties of the AudioBuffer. -OutputBuffer -ScriptProcessorNode See also on MDN OutputBuffer IMPORTANT Deprecated The outputBuffer read-only property of the AudioProcessingEvent interface represents the output buffer of an audio processing event. public AudioBuffer OutputBuffer { get; } Property Value AudioBuffer An AudioBuffer object. Remarks The output buffer is represented by an AudioBuffer object, which contains a collection of audio channels, each of which is an array of floating-point values representing the audio signal waveform encoded as a series of amplitudes. The number of channels and the length of each channel are determined by the channel count and buffer size properties of the AudioBuffer. -InputBuffer -ScriptProcessorNode See also on MDN PlaybackTime IMPORTANT Deprecated The playbackTime read-only property of the AudioProcessingEvent interface represents the time when the audio will be played. It is in the same coordinate system as the time used by the AudioContext. public Number PlaybackTime { get; } Property Value Number A number that doesn&apos;t need to be an integer. Remarks -AudioProcessingEvent -ScriptProcessorNode See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioProcessingEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioProcessingEventInit.html",
    "title": "Class AudioProcessingEventInit | CSharpToJavaScript",
    "keywords": "Class AudioProcessingEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioProcessingEventInit : EventInit Inheritance object EventInit AudioProcessingEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields InputBuffer public required AudioBuffer InputBuffer Field Value AudioBuffer OutputBuffer public required AudioBuffer OutputBuffer Field Value AudioBuffer PlaybackTime public required Number PlaybackTime Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioSampleFormat.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioSampleFormat.html",
    "title": "Enum AudioSampleFormat | CSharpToJavaScript",
    "keywords": "Enum AudioSampleFormat Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum AudioSampleFormat Fields F32 = 3 F32Planar = 7 S16 = 1 S16Planar = 5 S32 = 2 S32Planar = 6 U8 = 0 U8Planar = 4"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioScheduledSourceNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioScheduledSourceNode.html",
    "title": "Class AudioScheduledSourceNode | CSharpToJavaScript",
    "keywords": "Class AudioScheduledSourceNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioScheduledSourceNode interface—part of the Web Audio API—is a parent interface for several types of audio source node interfaces which share the ability to be started and stopped, optionally at specified times. Specifically, this interface defines the Start(Number) and Stop(Number) methods, as well as the AudioScheduledSourceNode.Ended_event event. [To(\"FirstCharToLowerCase\")] public class AudioScheduledSourceNode : AudioNode Inheritance object EventTarget AudioNode AudioScheduledSourceNode Derived AudioBufferSourceNode ConstantSourceNode OscillatorNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: You can&apos;t create an AudioScheduledSourceNode object directly. Instead, use an interface which extends it, such as AudioBufferSourceNode, OscillatorNode or ConstantSourceNode. Unless stated otherwise, nodes based upon AudioScheduledSourceNode output silence when not playing (that is, before start() is called and after stop() is called). Silence is represented, as always, by a stream of samples with the value zero (0). -Using the Web Audio API -AudioNode See also on MDN Properties Onended public EventHandlerNonNull Onended { get; set; } Property Value EventHandlerNonNull Methods Start(Number) The start() method on AudioScheduledSourceNode schedules a sound to begin playback at the specified time. If no time is specified, then the sound begins playing immediately. public GlobalObject.Undefined Start(Number when) Parameters when Number Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using the Web Audio API -Stop(Number) -AudioScheduledSourceNode -AudioBufferSourceNode -ConstantSourceNode -OscillatorNode See also on MDN Stop(Number) The stop() method on AudioScheduledSourceNode schedules a sound to cease playback at the specified time. If no time is specified, then the sound stops playing immediately. public GlobalObject.Undefined Stop(Number when) Parameters when Number Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Each time you call stop() on the same node, the specified time replaces any previously-scheduled stop time that hasn&apos;t occurred yet. If the node has already stopped, this method has no effect. NOTE Note: If a scheduled stop time occurs before the node&apos;s scheduled start time, the node never starts to play. -Using the Web Audio API -Start(Number) -AudioScheduledSourceNode -AudioBufferSourceNode -ConstantSourceNode -OscillatorNode See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioTimestamp.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioTimestamp.html",
    "title": "Class AudioTimestamp | CSharpToJavaScript",
    "keywords": "Class AudioTimestamp Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioTimestamp Inheritance object AudioTimestamp Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ContextTime public Number ContextTime Field Value Number PerformanceTime public Unsupported PerformanceTime Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioTrack.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioTrack.html",
    "title": "Class AudioTrack | CSharpToJavaScript",
    "keywords": "Class AudioTrack Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioTrack interface represents a single audio track from one of the HTML media elements, audio or video. [To(\"FirstCharToLowerCase\")] public class AudioTrack Inheritance object AudioTrack Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The most common use for accessing an AudioTrack object is to toggle its Enabled property in order to mute and unmute the track. See also on MDN Properties Enabled The AudioTrack property enabled specifies whether or not the described audio track is currently enabled for use. If the track is disabled by setting enabled to false, the track is muted and does not produce audio. public bool Enabled { get; set; } Property Value bool The enabled property is a Boolean whose value is true if the track is enabled; enabled tracks produce audio while the media is playing. Setting enabled to false effectively mutes the audio track, preventing it from contributing to the media&apos;s audio performance. Remarks See also on MDN Id The id property contains a string which uniquely identifies the track represented by the AudioTrack. public string Id { get; } Property Value string A string which identifies the track, suitable for use when calling GetTrackById(string) on an AudioTrackList such as the one specified by a media element's AudioTracks property. Remarks This ID can be used with the GetTrackById(string) method to locate a specific track within the media associated with a media element. The track ID can also be used as the fragment of a URL that loads the specific track (if the media supports media fragments). See also on MDN Kind The kind property contains a string indicating the category of audio contained in the AudioTrack. public string Kind { get; } Property Value string A string specifying the type of content the media represents. The string is one of those found in Audio track kind strings below. Remarks The kind can be used to determine the scenarios in which specific tracks should be enabled or disabled. See Audio track kind strings for a list of the kinds available for audio tracks. See also on MDN Label The read-only AudioTrack property label returns a string specifying the audio track&apos;s human-readable label, if one is available; otherwise, it returns an empty string. public string Label { get; } Property Value string A string specifying the track&apos;s human-readable label, if one is available in the track metadata. Otherwise, an empty string (&quot;&quot;) is returned.For example, a track whose Kind is &quot;commentary&quot; might have a label such as &quot;Commentary with director Mark Markmarkimark and star Donna Donnalidon&quot;. Remarks See also on MDN Language The read-only AudioTrack property language returns a string identifying the language used in the audio track. public string Language { get; } Property Value string A string specifying the BCP 47 ({{RFC(5646)}}) format language tag of the primary language used in the audio track, or an empty string (&quot;&quot;) if the language is not specified or known, or if the track doesn&apos;t contain speech.For example, if the primary language used in the track is United States English, this value would be &quot;en-US&quot;. For Brazilian Portuguese, the value would be &quot;pt-BR&quot;. Remarks For tracks that include multiple languages (such as a movie in English in which a few lines are spoken in other languages), this should be the video&apos;s primary language. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioTrackList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioTrackList.html",
    "title": "Class AudioTrackList | CSharpToJavaScript",
    "keywords": "Class AudioTrackList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioTrackList interface is used to represent a list of the audio tracks contained within a given HTML media element, with each track represented by a separate AudioTrack object in the list. [To(\"FirstCharToLowerCase\")] public class AudioTrackList : EventTarget Inheritance object EventTarget AudioTrackList Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Retrieve an instance of this object with 'HTMLMediaElement.AudioTracks'. The individual tracks can be accessed using array syntax. See also on MDN Properties Length The read-only AudioTrackList property length returns the number of entries in the AudioTrackList, each of which is an AudioTrack representing one audio track in the media element. A value of 0 indicates that there are no audio tracks in the media. public ulong Length { get; } Property Value ulong A number indicating how many audio tracks are included in the AudioTrackList. Each track can be accessed by treating the AudioTrackList as an array of objects of type AudioTrack. Remarks See also on MDN Onaddtrack public EventHandlerNonNull Onaddtrack { get; set; } Property Value EventHandlerNonNull Onchange public EventHandlerNonNull Onchange { get; set; } Property Value EventHandlerNonNull Onremovetrack public EventHandlerNonNull Onremovetrack { get; set; } Property Value EventHandlerNonNull Methods GetTrackById(string) The AudioTrackList method getTrackById() returns the first AudioTrack object from the track list whose {{domxref(\"AudioTrack.id\", &quot;id&quot;)}} matches the specified string. This lets you find a specified track if you know its ID string. public AudioTrack? GetTrackById(string id) Parameters id string Returns AudioTrack An AudioTrack object indicating the first track found within the AudioTrackList whose id matches the specified string. If no match is found, this method returns null.The tracks are searched in their natural order; that is, in the order defined by the media resource itself, or, if the resource doesn&apos;t define an order, the relative order in which the tracks are declared by the media resource. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioWorklet.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioWorklet.html",
    "title": "Class AudioWorklet | CSharpToJavaScript",
    "keywords": "Class AudioWorklet Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioWorklet interface of the Web Audio API is used to supply custom audio processing scripts that execute in a separate thread to provide very low latency audio processing. [To(\"FirstCharToLowerCase\")] public class AudioWorklet : Worklet Inheritance object Worklet AudioWorklet Inherited Members Worklet.AddModule(string, WorkletOptions) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The worklet's code is run in the AudioWorkletGlobalScope global execution context, using a separate Web Audio thread which is shared by the worklet and other audio nodes. Access the audio context&apos;s instance of AudioWorklet through the AudioWorklet property. -AudioWorkletGlobalScope — the global execution context of an AudioWorklet -Web Audio API -Using the Web Audio API -Using AudioWorklet See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioWorkletGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioWorkletGlobalScope.html",
    "title": "Class AudioWorkletGlobalScope | CSharpToJavaScript",
    "keywords": "Class AudioWorkletGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioWorkletGlobalScope interface of the Web Audio API represents a global execution context for user-supplied code, which defines custom AudioWorkletProcessor-derived classes. [To(\"FirstCharToLowerCase\")] public class AudioWorkletGlobalScope : WorkletGlobalScope Inheritance object WorkletGlobalScope AudioWorkletGlobalScope Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Each BaseAudioContext has a single AudioWorklet available under the AudioWorklet property, which runs its code in a single AudioWorkletGlobalScope. As the global execution context is shared across the current BaseAudioContext, it&apos;s possible to define any other variables and perform any actions allowed in worklets — apart from defining AudioWorkletProcessor derived classes. -Web Audio API -Using the Web Audio API -Using AudioWorklet See also on MDN Properties CurrentFrame The read-only currentFrame property of the AudioWorkletGlobalScope interface returns an integer that represents the ever-increasing current sample-frame of the audio block being processed. It is incremented by 128 (the size of a render quantum) after the processing of each audio block. public ulong CurrentFrame { get; } Property Value ulong An integer number. Remarks -Web Audio API -Using the Web Audio API See also on MDN CurrentTime The read-only currentTime property of the AudioWorkletGlobalScope interface returns a double that represents the ever-increasing context time of the audio block being processed. It is equal to the CurrentTime property of the BaseAudioContext the worklet belongs to. public Number CurrentTime { get; } Property Value Number A floating-point number representing the time. Remarks -Web Audio API -Using the Web Audio API See also on MDN SampleRate The read-only sampleRate property of the AudioWorkletGlobalScope interface returns a float that represents the sample rate of the associated BaseAudioContext the worklet belongs to. public Number SampleRate { get; } Property Value Number A floating-point number representing the associated sample rate. Remarks -Web Audio API -Using the Web Audio API See also on MDN Methods RegisterProcessor(string, AudioWorkletProcessorConstructor) The registerProcessor method of the AudioWorkletGlobalScope interface registers a class constructor derived from AudioWorkletProcessor interface under a specified name. public GlobalObject.Undefined RegisterProcessor(string name, AudioWorkletProcessorConstructor processorCtor) Parameters name string processorCtor AudioWorkletProcessorConstructor Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioWorkletNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioWorkletNode.html",
    "title": "Class AudioWorkletNode | CSharpToJavaScript",
    "keywords": "Class AudioWorkletNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll NOTE Note: Although the interface is available outside secure contexts, the AudioWorklet property is not, thus custom AudioWorkletProcessors cannot be defined outside them. [To(\"FirstCharToLowerCase\")] public class AudioWorkletNode : AudioNode Inheritance object EventTarget AudioNode AudioWorkletNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The AudioWorkletNode interface of the Web Audio API represents a base class for a user-defined AudioNode, which can be connected to an audio routing graph along with other nodes. It has an associated AudioWorkletProcessor, which does the actual audio processing in a Web Audio rendering thread. -Web Audio API -Using the Web Audio API -Using AudioWorklet See also on MDN Constructors AudioWorkletNode() public AudioWorkletNode() AudioWorkletNode(BaseAudioContext, string, AudioWorkletNodeOptions) The AudioWorkletNode() constructor creates a new AudioWorkletNode object, which represents an AudioNode that uses a JavaScript function to perform custom audio processing. public AudioWorkletNode(BaseAudioContext context, string name, AudioWorkletNodeOptions options) Parameters context BaseAudioContext name string options AudioWorkletNodeOptions Remarks -Web Audio API -Background audio processing using AudioWorklet -AudioWorkletNode interface See also on MDN Properties Onprocessorerror public EventHandlerNonNull Onprocessorerror { get; set; } Property Value EventHandlerNonNull Parameters The read-only parameters property of the AudioWorkletNode interface returns the associated AudioParamMap — that is, a Map-like collection of AudioParam objects. They are instantiated during creation of the underlying AudioWorkletProcessor according to its AudioWorkletProcessor.ParameterDescriptors static getter. public AudioParamMap Parameters { get; } Property Value AudioParamMap The AudioParamMap object containing AudioParam instances. They can be automated in the same way as with default AudioNodes, and their calculated values can be used in the {{domxref(&quot;AudioWorkletProcessor.process&quot;, \"process\")}} method of your AudioWorkletProcessor. Remarks -Web Audio API -Using the Web Audio API See also on MDN Port The read-only port property of the AudioWorkletNode interface returns the associated MessagePort. It can be used to communicate between the node and its associated AudioWorkletProcessor. public MessagePort Port { get; } Property Value MessagePort The MessagePort object that is connecting the AudioWorkletNode and its associated AudioWorkletProcessor. Remarks NOTE Note: The port at the other end of the channel is available under the Port property of the processor. -Web Audio API -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioWorkletNodeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioWorkletNodeOptions.html",
    "title": "Class AudioWorkletNodeOptions | CSharpToJavaScript",
    "keywords": "Class AudioWorkletNodeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AudioWorkletNodeOptions : AudioNodeOptions Inheritance object AudioNodeOptions AudioWorkletNodeOptions Inherited Members AudioNodeOptions.ChannelCount AudioNodeOptions.ChannelCountMode AudioNodeOptions.ChannelInterpretation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NumberOfInputs public ulong NumberOfInputs Field Value ulong NumberOfOutputs public ulong NumberOfOutputs Field Value ulong OutputChannelCount public List<ulong> OutputChannelCount Field Value List<ulong> ParameterData public Dictionary<string, Number> ParameterData Field Value Dictionary<string, Number> ProcessorOptions public object ProcessorOptions Field Value object"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioWorkletProcessCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioWorkletProcessCallback.html",
    "title": "Struct AudioWorkletProcessCallback | CSharpToJavaScript",
    "keywords": "Struct AudioWorkletProcessCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct AudioWorkletProcessCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioWorkletProcessor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioWorkletProcessor.html",
    "title": "Class AudioWorkletProcessor | CSharpToJavaScript",
    "keywords": "Class AudioWorkletProcessor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioWorkletProcessor interface of the Web Audio API represents an audio processing code behind a custom AudioWorkletNode. It lives in the AudioWorkletGlobalScope and runs on the Web Audio rendering thread. In turn, an AudioWorkletNode based on it runs on the main thread. [To(\"FirstCharToLowerCase\")] public class AudioWorkletProcessor Inheritance object AudioWorkletProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Web Audio API -Using the Web Audio API -Using AudioWorklet See also on MDN Constructors AudioWorkletProcessor() The AudioWorkletProcessor() constructor creates a new AudioWorkletProcessor object, which represents an underlying audio processing mechanism of an AudioWorkletNode. public AudioWorkletProcessor() Remarks -AudioWorkletNode interface See also on MDN Properties Port The read-only port property of the AudioWorkletProcessor interface returns the associated MessagePort. It can be used to communicate between the processor and the AudioWorkletNode to which it belongs. public MessagePort Port { get; } Property Value MessagePort The MessagePort object that is connecting the AudioWorkletProcessor and the associated AudioWorkletNode. Remarks NOTE Note: The port at the other end of the channel is available under the Port property of the node. -Web Audio API -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioWorkletProcessorConstructor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioWorkletProcessorConstructor.html",
    "title": "Struct AudioWorkletProcessorConstructor | CSharpToJavaScript",
    "keywords": "Struct AudioWorkletProcessorConstructor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct AudioWorkletProcessorConstructor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.AuthenticationExtensionsClientInputs.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AuthenticationExtensionsClientInputs.html",
    "title": "Class AuthenticationExtensionsClientInputs | CSharpToJavaScript",
    "keywords": "Class AuthenticationExtensionsClientInputs Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AuthenticationExtensionsClientInputs Inheritance object AuthenticationExtensionsClientInputs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Appid public string Appid Field Value string AuthnSel public List<Unsupported> AuthnSel Field Value List<Unsupported> Exts public bool Exts Field Value bool Loc public bool Loc Field Value bool Payment public AuthenticationExtensionsPaymentInputs Payment Field Value AuthenticationExtensionsPaymentInputs TxAuthGeneric public txAuthGenericArg TxAuthGeneric Field Value txAuthGenericArg TxAuthSimple public string TxAuthSimple Field Value string Uvi public bool Uvi Field Value bool Uvm public bool Uvm Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.AuthenticationExtensionsClientOutputs.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AuthenticationExtensionsClientOutputs.html",
    "title": "Class AuthenticationExtensionsClientOutputs | CSharpToJavaScript",
    "keywords": "Class AuthenticationExtensionsClientOutputs Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AuthenticationExtensionsClientOutputs Inheritance object AuthenticationExtensionsClientOutputs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Appid public bool Appid Field Value bool AuthnSel public bool AuthnSel Field Value bool Exts public List<string> Exts Field Value List<string> Loc public Unsupported Loc Field Value Unsupported TxAuthGeneric public byte[] TxAuthGeneric Field Value byte[] TxAuthSimple public string TxAuthSimple Field Value string Uvi public byte[] Uvi Field Value byte[] Uvm public List<Unsupported> Uvm Field Value List<Unsupported>"
  },
  "api/CSharpToJavaScript.APIs.JS.AuthenticationExtensionsPaymentInputs.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AuthenticationExtensionsPaymentInputs.html",
    "title": "Class AuthenticationExtensionsPaymentInputs | CSharpToJavaScript",
    "keywords": "Class AuthenticationExtensionsPaymentInputs Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AuthenticationExtensionsPaymentInputs Inheritance object AuthenticationExtensionsPaymentInputs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instrument public PaymentCredentialInstrument Instrument Field Value PaymentCredentialInstrument IsPayment public bool IsPayment Field Value bool PayeeName public string PayeeName Field Value string PayeeOrigin public string PayeeOrigin Field Value string RpId public string RpId Field Value string TopOrigin public string TopOrigin Field Value string Total public Unsupported Total Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.AuthenticatorAssertionResponse.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AuthenticatorAssertionResponse.html",
    "title": "Class AuthenticatorAssertionResponse | CSharpToJavaScript",
    "keywords": "Class AuthenticatorAssertionResponse Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AuthenticatorAssertionResponse interface of the Web Authentication API contains a digital signature from the private key of a particular WebAuthn credential. The relying party&apos;s server can verify this signature to authenticate a user, for example when they sign in. [To(\"FirstCharToLowerCase\")] public class AuthenticatorAssertionResponse : AuthenticatorResponse Inheritance object AuthenticatorResponse AuthenticatorAssertionResponse Inherited Members AuthenticatorResponse.ClientDataJSON object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An AuthenticatorAssertionResponse object instance is available in the Response property of a PublicKeyCredential object returned by a successful Get(CredentialRequestOptions) call. This interface inherits from AuthenticatorResponse. NOTE Note: This interface is restricted to top-level contexts. Use from within an iframe element will not have any effect. -AuthenticatorAttestationResponse: the interface for the type of response given when creating a new credential -AuthenticatorResponse: the parent interface See also on MDN Properties AuthenticatorData The authenticatorData property of the AuthenticatorAssertionResponse interface returns an {{jsxref(\"ArrayBuffer\")}} containing information from the authenticator such as the Relying Party ID Hash (rpIdHash), a signature counter, test of user presence, user verification flags, and any extensions processed by the authenticator. public byte[] AuthenticatorData { get; } Property Value byte[] An ArrayBuffer with a ArrayBufferByteLength of at least 37 bytes, which contains the data structure explained in Authenticator data. Remarks See also on MDN Signature The signature read-only property of the AuthenticatorAssertionResponse interface is an {{jsxref(\"ArrayBuffer\")}} object which is the signature of the authenticator for both AuthenticatorData and a SHA-256 hash of the client data (ClientDataJSON). public byte[] Signature { get; } Property Value byte[] An ArrayBuffer object which the signature of the authenticator (using its private key) for both AuthenticatorData and a SHA-256 hash given by the client for its data (the challenge, the origin, etc. and available from ClientDataJSON). Remarks This signature will be sent to the server for control, as part of the response. It provides the proof that an authenticator does possess the private key which was used for the credential&apos;s generation. See also on MDN UserHandle The userHandle read-only property of the AuthenticatorAssertionResponse interface is an {{jsxref(\"ArrayBuffer\")}} object providing an opaque identifier for the given user. Such an identifier can be used by the relying party's server to link the user account with its corresponding credentials and other data. public byte[]? UserHandle { get; } Property Value byte[] An ArrayBuffer object representing an identifier for the current user. This is not intended to be human-readable. The relying party should make sure that the user.id passed into the originating create() call does not contain any personally identifying information (for example user name, email, or phone number).For Create(CredentialCreationOptions) calls made with a non-empty allowCredentials properties, the returned userHandle may be null. Remarks This value is specified as user.id in the options passed to the originating Create(CredentialCreationOptions) call. -Create(CredentialCreationOptions) that sets the value of this property See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AuthenticatorAttachment.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AuthenticatorAttachment.html",
    "title": "Enum AuthenticatorAttachment | CSharpToJavaScript",
    "keywords": "Enum AuthenticatorAttachment Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum AuthenticatorAttachment Fields CrossPlatform = 1 Platform = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.AuthenticatorAttestationResponse.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AuthenticatorAttestationResponse.html",
    "title": "Class AuthenticatorAttestationResponse | CSharpToJavaScript",
    "keywords": "Class AuthenticatorAttestationResponse Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AuthenticatorAttestationResponse interface of the Web Authentication API is the result of a WebAuthn credential registration. It contains information about the credential that the server needs to perform WebAuthn assertions, such as its credential ID and public key. [To(\"FirstCharToLowerCase\")] public class AuthenticatorAttestationResponse : AuthenticatorResponse Inheritance object AuthenticatorResponse AuthenticatorAttestationResponse Inherited Members AuthenticatorResponse.ClientDataJSON object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An AuthenticatorAttestationResponse object instance is available in the Response property of a PublicKeyCredential object returned by a successful Create(CredentialCreationOptions) call. This interface inherits from AuthenticatorResponse. NOTE Note: This interface is restricted to top-level contexts. Use of its features from within an iframe element will not have any effect. -AuthenticatorAssertionResponse: the interface for the type of response given when retrieving an existing credential -AuthenticatorResponse: the parent interface See also on MDN Properties AttestationObject The attestationObject property of the AuthenticatorAttestationResponse interface returns an ArrayBuffer containing the new public key, as well as signature over the entire attestationObject with a private key that is stored in the authenticator when it is manufactured. public byte[] AttestationObject { get; } Property Value byte[] After decoding the CBOR encoded ArrayBuffer, the resulting JavaScript object will contain the following properties: Remarks As part of the Create(CredentialCreationOptions) call, an authenticator will create a new keypair as well as an attestationObject for that keypair. The public key that corresponds to the private key that has created the attestation signature is well known; however, there are various well known attestation public key chains for different ecosystems (for example, Android or TPM attestations). -Create(CredentialCreationOptions): the method used to create a statement with a cryptographic challenge which signature by the authenticator is contained in attStmt, with the specified attestation transport option. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AuthenticatorResponse.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AuthenticatorResponse.html",
    "title": "Class AuthenticatorResponse | CSharpToJavaScript",
    "keywords": "Class AuthenticatorResponse Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AuthenticatorResponse interface of the Web Authentication API is the base interface for interfaces that provide a cryptographic root of trust for a key pair. The child interfaces include information from the browser such as the challenge origin and either may be returned from Response. [To(\"FirstCharToLowerCase\")] public class AuthenticatorResponse Inheritance object AuthenticatorResponse Derived AuthenticatorAssertionResponse AuthenticatorAttestationResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -AuthenticatorAttestationResponse -AuthenticatorAssertionResponse -Response See also on MDN Properties ClientDataJSON The clientDataJSON property of the AuthenticatorResponse interface stores a JSON string in an {{jsxref(\"ArrayBuffer\")}}, representing the client data that was passed to Create(CredentialCreationOptions) or Get(CredentialRequestOptions). This property is only accessed on one of the child objects of AuthenticatorResponse, specifically AuthenticatorAttestationResponse or AuthenticatorAssertionResponse. public byte[] ClientDataJSON { get; } Property Value byte[] An ArrayBuffer. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AuthenticatorSelectionCriteria.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AuthenticatorSelectionCriteria.html",
    "title": "Class AuthenticatorSelectionCriteria | CSharpToJavaScript",
    "keywords": "Class AuthenticatorSelectionCriteria Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AuthenticatorSelectionCriteria Inheritance object AuthenticatorSelectionCriteria Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AuthenticatorAttachment public AuthenticatorAttachment AuthenticatorAttachment Field Value AuthenticatorAttachment RequireResidentKey public bool RequireResidentKey Field Value bool UserVerification public UserVerificationRequirement UserVerification Field Value UserVerificationRequirement"
  },
  "api/CSharpToJavaScript.APIs.JS.AuthenticatorTransport.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AuthenticatorTransport.html",
    "title": "Enum AuthenticatorTransport | CSharpToJavaScript",
    "keywords": "Enum AuthenticatorTransport Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum AuthenticatorTransport Fields Ble = 2 Internal = 3 Nfc = 1 Usb = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.AutoKeyword.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AutoKeyword.html",
    "title": "Enum AutoKeyword | CSharpToJavaScript",
    "keywords": "Enum AutoKeyword Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum AutoKeyword Fields Auto = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.AutomationRate.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AutomationRate.html",
    "title": "Enum AutomationRate | CSharpToJavaScript",
    "keywords": "Enum AutomationRate Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum AutomationRate Fields ARate = 0 KRate = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.AutoplayPolicy.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AutoplayPolicy.html",
    "title": "Enum AutoplayPolicy | CSharpToJavaScript",
    "keywords": "Enum AutoplayPolicy Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum AutoplayPolicy Fields Allowed = 0 AllowedMuted = 1 Disallowed = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.AutoplayPolicyMediaType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AutoplayPolicyMediaType.html",
    "title": "Enum AutoplayPolicyMediaType | CSharpToJavaScript",
    "keywords": "Enum AutoplayPolicyMediaType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum AutoplayPolicyMediaType Fields Audiocontext = 1 Mediaelement = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.BarProp.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BarProp.html",
    "title": "Class BarProp | CSharpToJavaScript",
    "keywords": "Class BarProp Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The BarProp interface of the 'Document Object Model' represents the web browser user interface elements that are exposed to scripts in web pages. Each of the following interface elements are represented by a BarProp object. [To(\"FirstCharToLowerCase\")] public class BarProp Inheritance object BarProp Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The BarProp interface is not accessed directly, but via one of these elements. See also on MDN Properties Visible The visible read-only property of the BarProp interface returns true if the user interface element it represents is visible. public bool Visible { get; } Property Value bool A Boolean, which is true if the top-level window is opened by Open(string, string, string) with the Open(string, string, string). NOTE Note: Historically this represented whether the interface element used is visible or not. But for privacy reasons, this no longer represents the actual visibility of each interface element. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.BaseAudioContext.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BaseAudioContext.html",
    "title": "Class BaseAudioContext | CSharpToJavaScript",
    "keywords": "Class BaseAudioContext Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The BaseAudioContext interface of the Web Audio API acts as a base definition for online and offline audio-processing graphs, as represented by AudioContext and OfflineAudioContext respectively. You wouldn't use BaseAudioContext directly — you&apos;d use its features via one of these two inheriting interfaces. [To(\"FirstCharToLowerCase\")] public class BaseAudioContext : EventTarget Inheritance object EventTarget BaseAudioContext Derived AudioContext OfflineAudioContext Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A BaseAudioContext can be a target of events, therefore it implements the EventTarget interface. -Using the Web Audio API -AudioContext -OfflineAudioContext See also on MDN Properties AudioWorklet The audioWorklet read-only property of the BaseAudioContext interface returns an instance of AudioWorklet that can be used for adding AudioWorkletProcessor-derived classes which implement custom audio processing. public AudioWorklet AudioWorklet { get; } Property Value AudioWorklet An AudioWorklet instance. Remarks -Using Web Audio API -AudioWorkletNode See also on MDN CurrentTime The currentTime read-only property of the BaseAudioContext interface returns a double representing an ever-increasing hardware timestamp in seconds that can be used for scheduling audio playback, visualizing timelines, etc. It starts at 0. public Number CurrentTime { get; } Property Value Number A floating point number. Remarks -Using Web Audio API See also on MDN Destination The destination property of the BaseAudioContext interface returns an AudioDestinationNode representing the final destination of all audio in the context. It often represents an actual audio-rendering device such as your device&apos;s speakers. public AudioDestinationNode Destination { get; } Property Value AudioDestinationNode An AudioDestinationNode. Remarks -Using the Web Audio API See also on MDN Listener The listener property of the BaseAudioContext interface returns an AudioListener object that can then be used for implementing 3D audio spatialization. public AudioListener Listener { get; } Property Value AudioListener An AudioListener object. Remarks -Using the Web Audio API See also on MDN Onstatechange public EventHandlerNonNull Onstatechange { get; set; } Property Value EventHandlerNonNull SampleRate The sampleRate property of the {{ domxref(&quot;BaseAudioContext&quot;) }} interface returns a floating point number representing the sample rate, in samples per second, used by all nodes in this audio context. This limitation means that sample-rate converters are not supported. public Number SampleRate { get; } Property Value Number A floating point number indicating the audio context&apos;s sample rate, in samples per second. Remarks -Using the Web Audio API See also on MDN State The state read-only property of the BaseAudioContext interface returns the current state of the AudioContext. public AudioContextState State { get; } Property Value AudioContextState A string. Possible values are: Remarks -Using the Web Audio API See also on MDN Methods CreateAnalyser() The createAnalyser() method of the BaseAudioContext interface creates an AnalyserNode, which can be used to expose audio time and frequency data and create data visualizations. public AnalyserNode CreateAnalyser() Returns AnalyserNode An AnalyserNode. Remarks NOTE Note: The AnalyserNode(BaseAudioContext, AnalyserOptions) constructor is the recommended way to create an AnalyserNode; see Creating an AudioNode. NOTE Note: For more on using this node, see the AnalyserNode page. -Using the Web Audio API See also on MDN CreateBiquadFilter() The createBiquadFilter() method of the BaseAudioContext interface creates a BiquadFilterNode, which represents a second order filter configurable as several different common filter types. public BiquadFilterNode CreateBiquadFilter() Returns BiquadFilterNode A BiquadFilterNode. Remarks NOTE Note: The BiquadFilterNode(BaseAudioContext, BiquadFilterOptions) constructor is the recommended way to create a BiquadFilterNode; see Creating an AudioNode. -Using the Web Audio API See also on MDN CreateBuffer(ulong, ulong, Number) The createBuffer() method of the BaseAudioContext Interface is used to create a new, empty AudioBuffer object, which can then be populated by data, and played via an {{ domxref(&quot;AudioBufferSourceNode&quot;) }} public AudioBuffer CreateBuffer(ulong numberOfChannels, ulong length, Number sampleRate) Parameters numberOfChannels ulong length ulong sampleRate Number Returns AudioBuffer An AudioBuffer configured based on the specified options. Remarks For more details about audio buffers, check out the AudioBuffer reference page. NOTE Note: createBuffer() used to be able to take compressed data and give back decoded samples, but this ability was removed from the specification, because all the decoding was done on the main thread, so createBuffer() was blocking other code execution. The asynchronous method decodeAudioData() does the same thing — takes compressed audio, such as an MP3 file, and directly gives you back an AudioBuffer that you can then play via an AudioBufferSourceNode. For simple use cases like playing an MP3, decodeAudioData() is what you should be using. -Using the Web Audio API See also on MDN CreateBufferSource() The createBufferSource() method of the BaseAudioContext Interface is used to create a new AudioBufferSourceNode, which can be used to play audio data contained within an AudioBuffer object. {{ domxref(&quot;AudioBuffer&quot;) }}s are created using CreateBuffer(ulong, ulong, Number) or returned by DecodeAudioData(byte[], DecodeSuccessCallback?, DecodeErrorCallback?) when it successfully decodes an audio track. public AudioBufferSourceNode CreateBufferSource() Returns AudioBufferSourceNode An AudioBufferSourceNode. Remarks NOTE Note: The AudioBufferSourceNode(BaseAudioContext, AudioBufferSourceOptions) constructor is the recommended way to create a AudioBufferSourceNode; see Creating an AudioNode. -Using the Web Audio API See also on MDN CreateChannelMerger(ulong) The createChannelMerger() method of the BaseAudioContext interface creates a ChannelMergerNode, which combines channels from multiple audio streams into a single audio stream. public ChannelMergerNode CreateChannelMerger(ulong numberOfInputs) Parameters numberOfInputs ulong Returns ChannelMergerNode A ChannelMergerNode. Remarks NOTE Note: The ChannelMergerNode(BaseAudioContext, ChannelMergerOptions) constructor is the recommended way to create a ChannelMergerNode; see Creating an AudioNode. -Using the Web Audio API See also on MDN CreateChannelSplitter(ulong) The createChannelSplitter() method of the BaseAudioContext Interface is used to create a ChannelSplitterNode, which is used to access the individual channels of an audio stream and process them separately. public ChannelSplitterNode CreateChannelSplitter(ulong numberOfOutputs) Parameters numberOfOutputs ulong Returns ChannelSplitterNode A ChannelSplitterNode. Remarks NOTE Note: The ChannelSplitterNode(BaseAudioContext, ChannelSplitterOptions) constructor is the recommended way to create a ChannelSplitterNode; see Creating an AudioNode. -Using the Web Audio API See also on MDN CreateConstantSource() The createConstantSource() property of the BaseAudioContext interface creates a ConstantSourceNode object, which is an audio source that continuously outputs a monaural (one-channel) sound signal whose samples all have the same value. public ConstantSourceNode CreateConstantSource() Returns ConstantSourceNode A 'ConstantSourceNode' instance. Remarks NOTE Note: The ConstantSourceNode(BaseAudioContext, ConstantSourceOptions) constructor is the recommended way to create a ConstantSourceNode; see Creating an AudioNode. See also on MDN CreateConvolver() The createConvolver() method of the BaseAudioContext interface creates a ConvolverNode, which is commonly used to apply reverb effects to your audio. See the spec definition of Convolution for more information. public ConvolverNode CreateConvolver() Returns ConvolverNode A ConvolverNode. Remarks NOTE Note: The ConvolverNode(BaseAudioContext, ConvolverOptions) constructor is the recommended way to create a ConvolverNode; see Creating an AudioNode. -Using the Web Audio API See also on MDN CreateDelay(Number) The createDelay() method of the BaseAudioContext Interface is used to create a DelayNode, which is used to delay the incoming audio signal by a certain amount of time. public DelayNode CreateDelay(Number maxDelayTime) Parameters maxDelayTime Number Returns DelayNode A DelayNode. The default DelayTime is 0 seconds. Remarks NOTE Note: The DelayNode(BaseAudioContext, DelayOptions) constructor is the recommended way to create a DelayNode; see Creating an AudioNode. -Using the Web Audio API See also on MDN CreateDynamicsCompressor() The createDynamicsCompressor() method of the {{ domxref(&quot;BaseAudioContext&quot;) }} Interface is used to create a DynamicsCompressorNode, which can be used to apply compression to an audio signal. public DynamicsCompressorNode CreateDynamicsCompressor() Returns DynamicsCompressorNode A DynamicsCompressorNode. Remarks Compression lowers the volume of the loudest parts of the signal and raises the volume of the softest parts. Overall, a louder, richer, and fuller sound can be achieved. It is especially important in games and musical applications where large numbers of individual sounds are played simultaneously, where you want to control the overall signal level and help avoid clipping (distorting) of the audio output. NOTE Note: The DynamicsCompressorNode(BaseAudioContext, DynamicsCompressorOptions) constructor is the recommended way to create a DynamicsCompressorNode; see Creating an AudioNode. -Using the Web Audio API See also on MDN CreateGain() The createGain() method of the BaseAudioContext interface creates a GainNode, which can be used to control the overall gain (or volume) of the audio graph. public GainNode CreateGain() Returns GainNode A GainNode which takes as input one or more audio sources and outputs audio whose volume has been adjusted in gain (volume) to a level specified by the node&apos;s Gain a-rate parameter. Remarks NOTE Note: The GainNode(BaseAudioContext, GainOptions) constructor is the recommended way to create a GainNode; see Creating an AudioNode. -Using the Web Audio API See also on MDN CreateIIRFilter(List<Number>, List<Number>) The createIIRFilter() method of the {{ domxref(\"BaseAudioContext\") }} interface creates an IIRFilterNode, which represents a general infinite impulse response (IIR) filter which can be configured to serve as various types of filter. public IIRFilterNode CreateIIRFilter(List<Number> feedforward, List<Number> feedback) Parameters feedforward List<Number> feedback List<Number> Returns IIRFilterNode An IIRFilterNode implementing the filter with the specified feedback and feedforward coefficient arrays. Remarks NOTE Note: The IIRFilterNode(BaseAudioContext, IIRFilterOptions) constructor is the recommended way to create a IIRFilterNode; see Creating an AudioNode. -Using the Web Audio API -IIRFilterNode -AudioNode See also on MDN CreateOscillator() The createOscillator() method of the BaseAudioContext interface creates an OscillatorNode, a source representing a periodic waveform. It basically generates a constant tone. public OscillatorNode CreateOscillator() Returns OscillatorNode An OscillatorNode. Remarks NOTE Note: The OscillatorNode(BaseAudioContext, OscillatorOptions) constructor is the recommended way to create a OscillatorNode; see Creating an AudioNode. -Using the Web Audio API See also on MDN CreatePanner() The createPanner() method of the BaseAudioContext Interface is used to create a new PannerNode, which is used to spatialize an incoming audio stream in 3D space. public PannerNode CreatePanner() Returns PannerNode A PannerNode. Remarks The panner node is spatialized in relation to the AudioContext&apos;s AudioListener (defined by the BaseAudioContext/listener attribute), which represents the position and orientation of the person listening to the audio. NOTE Note: The PannerNode(BaseAudioContext, PannerOptions) constructor is the recommended way to create a PannerNode; see Creating an AudioNode. -Using the Web Audio API See also on MDN CreatePeriodicWave(List<Number>, List<Number>, PeriodicWaveConstraints) The createPeriodicWave() method of the BaseAudioContext Interface is used to create a PeriodicWave, which is used to define a periodic waveform that can be used to shape the output of an OscillatorNode. public PeriodicWave CreatePeriodicWave(List<Number> real, List<Number> imag, PeriodicWaveConstraints constraints) Parameters real List<Number> imag List<Number> constraints PeriodicWaveConstraints Returns PeriodicWave A PeriodicWave. Remarks -Using the Web Audio API See also on MDN CreateScriptProcessor(ulong, ulong, ulong) IMPORTANT Deprecated The createScriptProcessor() method of the BaseAudioContext interface creates a ScriptProcessorNode used for direct audio processing. public ScriptProcessorNode CreateScriptProcessor(ulong bufferSize, ulong numberOfInputChannels, ulong numberOfOutputChannels) Parameters bufferSize ulong numberOfInputChannels ulong numberOfOutputChannels ulong Returns ScriptProcessorNode A ScriptProcessorNode. Remarks NOTE Note: This feature was replaced by AudioWorklets and the AudioWorkletNode interface. -Using the Web Audio API See also on MDN CreateStereoPanner() The createStereoPanner() method of the BaseAudioContext interface creates a StereoPannerNode, which can be used to apply stereo panning to an audio source. It positions an incoming audio stream in a stereo image using a low-cost panning algorithm. public StereoPannerNode CreateStereoPanner() Returns StereoPannerNode A StereoPannerNode. Remarks NOTE Note: The StereoPannerNode(BaseAudioContext, StereoPannerOptions) constructor is the recommended way to create a StereoPannerNode; see Creating an AudioNode. -Using the Web Audio API See also on MDN CreateWaveShaper() The createWaveShaper() method of the BaseAudioContext interface creates a WaveShaperNode, which represents a non-linear distortion. It is used to apply distortion effects to your audio. public WaveShaperNode CreateWaveShaper() Returns WaveShaperNode A WaveShaperNode. Remarks NOTE Note: The WaveShaperNode(BaseAudioContext, WaveShaperOptions) constructor is the recommended way to create a WaveShaperNode; see Creating an AudioNode. -Using the Web Audio API See also on MDN DecodeAudioData(byte[], DecodeSuccessCallback?, DecodeErrorCallback?) The decodeAudioData() method of the BaseAudioContext Interface is used to asynchronously decode audio file data contained in an ArrayBuffer. In this case the ArrayBuffer is loaded from XMLHttpRequest and FileReader. The decoded AudioBuffer is resampled to the AudioContext's sampling rate, then passed to a callback or promise. public Task<AudioBuffer> DecodeAudioData(byte[] audioData, DecodeSuccessCallback? successCallback, DecodeErrorCallback? errorCallback) Parameters audioData byte[] successCallback DecodeSuccessCallback? errorCallback DecodeErrorCallback? Returns Task<AudioBuffer> None (GlobalObject.Undefined) or a Promise object that fulfills with the decodedData. Remarks This is the preferred method of creating an audio source for Web Audio API from an audio track. This method only works on complete file data, not fragments of audio file data. -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.BeforeUnloadEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BeforeUnloadEvent.html",
    "title": "Class BeforeUnloadEvent | CSharpToJavaScript",
    "keywords": "Class BeforeUnloadEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll BeforeUnloadEvent is an interface for the Window/beforeunload_event event. [To(\"FirstCharToLowerCase\")] public class BeforeUnloadEvent : Event Inheritance object Event BeforeUnloadEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The beforeunload event is fired when the window, the document and its resources are about to be unloaded. When a non-empty string is assigned to the returnValue Event property, a dialog box appears, asking the users for confirmation to leave the page (see example below). When no value is provided, the event is processed silently. Some implementations only show the dialog box if the frame or any embedded frame receives a user gesture or user interaction. See Browser compatibility for more information. NOTE Note: For security reasons, only a generic string not under the control of the webpage is shown instead of the returned string. -Document/DOMContentLoaded_event -Document/readystatechange_event -Window/load_event -Window/beforeunload_event -Window/unload_event -Unloading Documents — Prompt to unload a document See also on MDN Properties ReturnValue public string ReturnValue { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.BinaryType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BinaryType.html",
    "title": "Enum BinaryType | CSharpToJavaScript",
    "keywords": "Enum BinaryType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum BinaryType Fields Arraybuffer = 1 Blob = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.BiquadFilterNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BiquadFilterNode.html",
    "title": "Class BiquadFilterNode | CSharpToJavaScript",
    "keywords": "Class BiquadFilterNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The BiquadFilterNode interface represents a simple low-order filter, and is created using the BaseAudioContext/createBiquadFilter method. It is an AudioNode that can represent different kinds of filters, tone control devices, and graphic equalizers. A BiquadFilterNode always has exactly one input and one output. [To(\"FirstCharToLowerCase\")] public class BiquadFilterNode : AudioNode Inheritance object EventTarget AudioNode BiquadFilterNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Using the Web Audio API See also on MDN Constructors BiquadFilterNode() public BiquadFilterNode() BiquadFilterNode(BaseAudioContext, BiquadFilterOptions) The BiquadFilterNode() constructor of the Web Audio API creates a new BiquadFilterNode object, which represents a simple low-order filter. public BiquadFilterNode(BaseAudioContext context, BiquadFilterOptions options) Parameters context BaseAudioContext options BiquadFilterOptions Remarks See also on MDN Properties Detune The detune property of the BiquadFilterNode interface is an a-rate AudioParam representing detuning of the frequency in cents. public AudioParam Detune { get; } Property Value AudioParam An a-rate AudioParam. NOTE Note: Though the AudioParam returned is read-only, the value it represents is not. Remarks -Using the Web Audio API See also on MDN Frequency The frequency property of the BiquadFilterNode interface is an a-rate AudioParam — a double representing a frequency in the current filtering algorithm measured in hertz (Hz). public AudioParam Frequency { get; } Property Value AudioParam An AudioParam. NOTE Note: Though the AudioParam returned is read-only, the value it represents is not. Remarks Its default value is 350, with a nominal range of 10 to the Nyquist frequency — that is, half of the sample rate. -Using the Web Audio API See also on MDN Gain The gain property of the BiquadFilterNode interface is an a-rate AudioParam — a double representing the gain used in the current filtering algorithm. public AudioParam Gain { get; } Property Value AudioParam An AudioParam. NOTE Note: Though the AudioParam returned is read-only, the value it represents is not. Remarks When its value is positive, it represents a real gain; when negative, it represents an attenuation. It is expressed in dB, has a default value of 0, and can take a value in a nominal range of -40 to 40. -Using the Web Audio API See also on MDN Q The Q property of the BiquadFilterNode interface is an a-rate AudioParam, a double representing a Q factor, or quality factor. public AudioParam Q { get; } Property Value AudioParam An AudioParam. NOTE Note: Though the AudioParam returned is read-only, the value it represents is not. Remarks It is a dimensionless value with a default value of 1 and a nominal range of 0.0001 to 1000. -Using the Web Audio API See also on MDN Type The type property of the BiquadFilterNode interface is a string (enum) value defining the kind of filtering algorithm the node is implementing. public BiquadFilterType Type { get; set; } Property Value BiquadFilterType A string (enum) representing a BiquadFilterType.type Remarks -Using the Web Audio API See also on MDN Methods GetFrequencyResponse(float, float, float) The getFrequencyResponse() method of the {{ domxref(&quot;BiquadFilterNode&quot;) }} interface takes the current filtering algorithm&apos;s settings and calculates the frequency response for frequencies specified in a specified array of frequencies. public GlobalObject.Undefined GetFrequencyResponse(float frequencyHz, float magResponse, float phaseResponse) Parameters frequencyHz float magResponse float phaseResponse float Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The two output arrays, magResponseOutput and phaseResponseOutput, must be created before calling this method; they must be the same size as the array of input frequency values (frequencyArray). -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.BiquadFilterOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BiquadFilterOptions.html",
    "title": "Class BiquadFilterOptions | CSharpToJavaScript",
    "keywords": "Class BiquadFilterOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class BiquadFilterOptions : AudioNodeOptions Inheritance object AudioNodeOptions BiquadFilterOptions Inherited Members AudioNodeOptions.ChannelCount AudioNodeOptions.ChannelCountMode AudioNodeOptions.ChannelInterpretation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Detune public Number Detune Field Value Number Frequency public Number Frequency Field Value Number Gain public Number Gain Field Value Number Q public Number Q Field Value Number Type public BiquadFilterType Type Field Value BiquadFilterType"
  },
  "api/CSharpToJavaScript.APIs.JS.BiquadFilterType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BiquadFilterType.html",
    "title": "Enum BiquadFilterType | CSharpToJavaScript",
    "keywords": "Enum BiquadFilterType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum BiquadFilterType Fields Allpass = 7 Bandpass = 2 Highpass = 1 Highshelf = 4 Lowpass = 0 Lowshelf = 3 Notch = 6 Peaking = 5"
  },
  "api/CSharpToJavaScript.APIs.JS.BitrateMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BitrateMode.html",
    "title": "Enum BitrateMode | CSharpToJavaScript",
    "keywords": "Enum BitrateMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum BitrateMode Fields Constant = 0 Variable = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.Blob.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Blob.html",
    "title": "Class Blob | CSharpToJavaScript",
    "keywords": "Class Blob Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Blob object represents a blob, which is a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a ReadableStream so its methods can be used for processing the data. [To(\"FirstCharToLowerCase\")] public class Blob Inheritance object Blob Derived File Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Blobs can represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user&apos;s system. -FileReader -File -CreateObjectURL(Union53) -Using files from web applications See also on MDN Constructors Blob() public Blob() Blob(List<Union51>, BlobPropertyBag) The Blob() constructor returns a new Blob object. The content of the blob consists of the concatenation of the values given in the parameter array. public Blob(List<Union51> blobParts, BlobPropertyBag options) Parameters blobParts List<Union51> options BlobPropertyBag Remarks See also on MDN Properties Size The Blob interface's size property returns the size of the Blob or File in bytes. public ulong Size { get; } Property Value ulong The number of bytes of data contained within the Blob (or Blob-based object, such as a File). Remarks -Blob -Using files from web applications See also on MDN Type The type property of a Blob object returns the {{Glossary(\"MIME type\")}} of the file. public string Type { get; } Property Value string A string containing the file&apos;s MIME type, or an empty string if the type could not be determined. Remarks -Blob -Using files from web applications See also on MDN Methods ArrayBuffer() The arrayBuffer() method in the Blob interface returns a Promise that resolves with the contents of the blob as binary data contained in an ArrayBuffer(). public Task<byte[]> ArrayBuffer() Returns Task<byte[]> A promise that resolves with an ArrayBuffer() that contains the blob's data in binary form. Remarks -Response.ArrayBuffer -Streams API -ReadAsArrayBuffer(Blob) See also on MDN Slice(long, long, string) The Blob interface's slice() method creates and returns a new Blob object which contains data from a subset of the blob on which it&apos;s called. public Blob Slice(long start, long end, string contentType) Parameters start long end long contentType string Returns Blob A new Blob object containing the specified subset of the data contained within the blob on which this method was called. The original blob is not altered. Remarks -Blob -Using files from web applications See also on MDN Stream() The Blob interface's stream() method returns a ReadableStream which upon reading returns the data contained within the Blob. public ReadableStream Stream() Returns ReadableStream A ReadableStream which, upon reading, returns the contents of the Blob. Remarks -Response.Body -Streams API See also on MDN Text() The text() method in the Blob interface returns a {{jsxref(\"Promise\")}} that resolves with a string containing the contents of the blob, interpreted as UTF-8. public Task<string> Text() Returns Task<string> A promise that resolves with a string which contains the blob&apos;s data as a text string. The data is always presumed to be in UTF-8 format. Remarks -Response.Text -Streams API -ReadAsText(Blob, string) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.BlobCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BlobCallback.html",
    "title": "Struct BlobCallback | CSharpToJavaScript",
    "keywords": "Struct BlobCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct BlobCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.BlobEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BlobEvent.html",
    "title": "Class BlobEvent | CSharpToJavaScript",
    "keywords": "Class BlobEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The BlobEvent interface represents events associated with a Blob. These blobs are typically, but not necessarily, associated with media content. [To(\"FirstCharToLowerCase\")] public class BlobEvent : Event Inheritance object Event BlobEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The Event base interface. -MediaStream Recording API: Sends BlobEvent objects each time a chunk of media is ready. -Using the MediaStream Recording API See also on MDN Constructors BlobEvent() public BlobEvent() BlobEvent(string, BlobEventInit) The BlobEvent() constructor returns a newly created BlobEvent object with an associated Blob. public BlobEvent(string type, BlobEventInit eventInitDict) Parameters type string eventInitDict BlobEventInit Remarks -The BlobEvent interface it belongs to. See also on MDN Properties Data The BlobEvent.data read-only property represents a Blob associated with the event. public Blob Data { get; } Property Value Blob A Blob object. Remarks -The BlobEvent interface it belongs to. See also on MDN Timecode The timecode read only property of the BlobEvent interface indicates the difference between the timestamp of the first chunk of data, and the timestamp of the first chunk in the first BlobEvent produced by this recorder. public Unsupported Timecode { get; } Property Value Unsupported A DOMHighResTimeStamp. Remarks Note that the timecode in the first produced BlobEvent does not need to be zero. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.BlobEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BlobEventInit.html",
    "title": "Class BlobEventInit | CSharpToJavaScript",
    "keywords": "Class BlobEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class BlobEventInit Inheritance object BlobEventInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Data public required Blob Data Field Value Blob Timecode public Unsupported Timecode Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.BlobPropertyBag.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BlobPropertyBag.html",
    "title": "Class BlobPropertyBag | CSharpToJavaScript",
    "keywords": "Class BlobPropertyBag Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class BlobPropertyBag Inheritance object BlobPropertyBag Derived FilePropertyBag Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Endings public EndingType Endings Field Value EndingType Type public string Type Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.BlockFragmentationType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BlockFragmentationType.html",
    "title": "Enum BlockFragmentationType | CSharpToJavaScript",
    "keywords": "Enum BlockFragmentationType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum BlockFragmentationType Fields Column = 2 None = 0 Page = 1 Region = 3"
  },
  "api/CSharpToJavaScript.APIs.JS.Body.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Body.html",
    "title": "Interface Body | CSharpToJavaScript",
    "keywords": "Interface Body Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface Body Properties Body ReadableStream? Body { get; } Property Value ReadableStream BodyUsed bool BodyUsed { get; } Property Value bool Methods ArrayBuffer() Task<byte[]> ArrayBuffer() Returns Task<byte[]> Blob() Task<Blob> Blob() Returns Task<Blob> FormData() Task<FormData> FormData() Returns Task<FormData> Json() Task<dynamic> Json() Returns Task<dynamic> Text() Task<string> Text() Returns Task<string>"
  },
  "api/CSharpToJavaScript.APIs.JS.BreakToken.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BreakToken.html",
    "title": "Class BreakToken | CSharpToJavaScript",
    "keywords": "Class BreakToken Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class BreakToken Inheritance object BreakToken Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ChildBreakTokens public List<ChildBreakToken> ChildBreakTokens { get; } Property Value List<ChildBreakToken> Data public dynamic Data { get; } Property Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.BreakTokenOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BreakTokenOptions.html",
    "title": "Class BreakTokenOptions | CSharpToJavaScript",
    "keywords": "Class BreakTokenOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class BreakTokenOptions Inheritance object BreakTokenOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ChildBreakTokens public List<ChildBreakToken> ChildBreakTokens Field Value List<ChildBreakToken> Data public dynamic Data Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.BreakType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BreakType.html",
    "title": "Enum BreakType | CSharpToJavaScript",
    "keywords": "Enum BreakType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum BreakType Fields Column = 2 Line = 1 None = 0 Page = 3 Region = 4"
  },
  "api/CSharpToJavaScript.APIs.JS.BroadcastChannel.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BroadcastChannel.html",
    "title": "Class BroadcastChannel | CSharpToJavaScript",
    "keywords": "Class BroadcastChannel Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The BroadcastChannel interface represents a named channel that any {{glossary(\"browsing context\")}} of a given {{glossary(\"origin\")}} can subscribe to. It allows communication between different documents (in different windows, tabs, frames or iframes) of the same origin. Messages are broadcasted via a BroadcastChannel/message_event event fired at all BroadcastChannel objects listening to the channel, except the object that sent the message. [To(\"FirstCharToLowerCase\")] public class BroadcastChannel : EventTarget Inheritance object EventTarget BroadcastChannel Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -Another, more heavyweight, way of communicating between browser contexts: ServiceWorker. -Broadcast Channel API overview See also on MDN Constructors BroadcastChannel() public BroadcastChannel() BroadcastChannel(string) The BroadcastChannel() constructor creates a new BroadcastChannel and connects it to the underlying channel. public BroadcastChannel(string name) Parameters name string Remarks AvailableInWorkers -BroadcastChannel, the interface it belongs to. See also on MDN Properties Name The read-only BroadcastChannel.name property returns a string, which uniquely identifies the given channel with its name. This name is passed to the BroadcastChannel.BroadCastChannel constructor at creation time and is therefore read-only. public string Name { get; } Property Value string A string. Remarks AvailableInWorkers -BroadcastChannel, the interface it belongs to. See also on MDN Onmessage public EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onmessageerror public EventHandlerNonNull Onmessageerror { get; set; } Property Value EventHandlerNonNull Methods Close() The BroadcastChannel.close() terminates the connection to the underlying channel, allowing the object to be garbage collected. This is a necessary step to perform as there is no other way for a browser to know that this channel is not needed anymore. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined Remarks AvailableInWorkers -BroadcastChannel, the interface it belongs to. See also on MDN PostMessage(dynamic) The BroadcastChannel.postMessage() sends a message, which can be of any kind of Object, to each listener in any browsing context with the same origin. The message is transmitted as a &apos;message&apos; event targeted at each BroadcastChannel bound to the channel. public GlobalObject.Undefined PostMessage(dynamic message) Parameters message dynamic Returns GlobalObject.Undefined None. Remarks AvailableInWorkers -BroadcastChannel, the interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ByteLengthQueuingStrategy.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ByteLengthQueuingStrategy.html",
    "title": "Class ByteLengthQueuingStrategy | CSharpToJavaScript",
    "keywords": "Class ByteLengthQueuingStrategy Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ByteLengthQueuingStrategy interface of the Streams API provides a built-in byte length queuing strategy that can be used when constructing streams. [To(\"FirstCharToLowerCase\")] public class ByteLengthQueuingStrategy Inheritance object ByteLengthQueuingStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -Internal queues and queuing strategies -ByteLengthQueuingStrategy(QueuingStrategyInit) constructor See also on MDN Constructors ByteLengthQueuingStrategy() public ByteLengthQueuingStrategy() ByteLengthQueuingStrategy(QueuingStrategyInit) The ByteLengthQueuingStrategy() constructor creates and returns a ByteLengthQueuingStrategy object instance. public ByteLengthQueuingStrategy(QueuingStrategyInit init) Parameters init QueuingStrategyInit Remarks -ByteLengthQueuingStrategy interface See also on MDN Properties HighWaterMark The read-only ByteLengthQueuingStrategy.highWaterMark property returns the total number of bytes that can be contained in the internal queue before backpressure is applied. public double HighWaterMark { get; } Property Value double An integer. Remarks NOTE Note: Unlike CountQueuingStrategy() where the highWaterMark property specifies a simple count of the number of chunks, with ByteLengthQueuingStrategy(), the highWaterMark parameter specifies a number of bytes — specifically, given a stream of chunks, how many bytes worth of those chunks (rather than a count of how many of those chunks) can be contained in the internal queue before backpressure is applied. -ByteLengthQueuingStrategy(QueuingStrategyInit) constructor See also on MDN Size The size() method of the ByteLengthQueuingStrategy interface returns the given chunk's byteLength property. public Function Size { get; } Property Value Function An integer representing the byte length of the given chunk. Remarks -ByteLengthQueuingStrategy(QueuingStrategyInit) constructor See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CDATASection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CDATASection.html",
    "title": "Class CDATASection | CSharpToJavaScript",
    "keywords": "Class CDATASection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CDATASection interface represents a CDATA section that can be used within XML to include extended portions of unescaped text. When inside a CDATA section, the symbols &lt; and & don&apos;t need escaping as they normally do. [To(\"FirstCharToLowerCase\")] public class CDATASection : Text, NonDocumentTypeChildNode, ChildNode, Slottable Inheritance object EventTarget Node CharacterData Text CDATASection Implements NonDocumentTypeChildNode ChildNode Slottable Inherited Members Text.SplitText(ulong) Text.WholeText CharacterData.Data CharacterData.Length CharacterData.SubstringData(ulong, ulong) CharacterData.AppendData(string) CharacterData.InsertData(ulong, string) CharacterData.DeleteData(ulong, ulong) CharacterData.ReplaceData(ulong, ulong, string) Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks In XML, a CDATA section looks like: For example: The only sequence which is not allowed within a CDATA section is the closing sequence of a CDATA section itself, ]]&gt;. NOTE Note: CDATA sections should not be used within HTML they are considered as comments and not displayed. -CreateCDATASection(string) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CSPViolationReportBody.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSPViolationReportBody.html",
    "title": "Class CSPViolationReportBody | CSharpToJavaScript",
    "keywords": "Class CSPViolationReportBody Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CSPViolationReportBody interface contains the report data for a Content Security Policy (CSP) violation. CSP violations are thrown when the webpage attempts to load a resource that violates the CSP set by the Content-Security-Policy HTTP header. [To(\"FirstCharToLowerCase\")] public class CSPViolationReportBody : ReportBody Inheritance object ReportBody CSPViolationReportBody Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: this interface is similar, but not identical to, the JSON objects sent back to the report-uri or report-to policy directive of the Content-Security-Policy header. -ReportBody -ReportingObserver -Content-Security-Policy -SecurityPolicyViolationEvent See also on MDN Properties BlockedURL public string? BlockedURL { get; } Property Value string ColumnNumber public ulong? ColumnNumber { get; } Property Value ulong? Disposition public SecurityPolicyViolationEventDisposition Disposition { get; } Property Value SecurityPolicyViolationEventDisposition DocumentURL public string DocumentURL { get; } Property Value string EffectiveDirective public string EffectiveDirective { get; } Property Value string LineNumber public ulong? LineNumber { get; } Property Value ulong? OriginalPolicy public string OriginalPolicy { get; } Property Value string Referrer public string? Referrer { get; } Property Value string Sample public string? Sample { get; } Property Value string SourceFile public string? SourceFile { get; } Property Value string StatusCode public ushort StatusCode { get; } Property Value ushort Methods ToJSON() public object ToJSON() Returns object"
  },
  "api/CSharpToJavaScript.APIs.JS.CSS.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSS.html",
    "title": "Class CSS | CSharpToJavaScript",
    "keywords": "Class CSS Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Cascading Style Sheets (CSS) is a stylesheet language used to describe the presentation of a document written in HTML or XML (including XML dialects such as SVG, MathML or XHTML). CSS describes how elements should be rendered on screen, on paper, in speech, or on other media. [To(\"FirstCharToLowerCase\")] public class CSS Inheritance object CSS Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks CSS is among the core languages of the open web and is standardized across Web browsers according to W3C specifications. Previously, the development of various parts of CSS specification was done synchronously, which allowed the versioning of the latest recommendations. You might have heard about CSS1, CSS2.1, or even CSS3. There will never be a CSS3 or a CSS4; rather, everything is now CSS without a version number. After CSS 2.1, the scope of the specification increased significantly and the progress on different CSS modules started to differ so much, that it became more effective to develop and release recommendations separately per module. Instead of versioning the CSS specification, W3C now periodically takes a snapshot of the latest stable state of the CSS specification and individual modules progress. CSS modules now have version numbers, or levels, such as CSS Color Module Level 5. -CSS demos: Get a creative boost by exploring examples of the latest CSS technologies in action. -Web languages to which CSS is often applied: HTML, SVG, MathML, XHTML, and XML. -Stack Overflow questions about CSS See also on MDN Properties AnimationWorklet public Worklet AnimationWorklet { get; } Property Value Worklet ElementSources public dynamic ElementSources { get; } Property Value dynamic Highlights public HighlightRegistry Highlights { get; } Property Value HighlightRegistry LayoutWorklet public Worklet LayoutWorklet { get; } Property Value Worklet PaintWorklet public Worklet PaintWorklet { get; } Property Value Worklet Methods Escape(Unsupported) public Unsupported Escape(Unsupported ident) Parameters ident Unsupported Returns Unsupported RegisterProperty(PropertyDefinition) public GlobalObject.Undefined RegisterProperty(PropertyDefinition definition) Parameters definition PropertyDefinition Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSAnimation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSAnimation.html",
    "title": "Class CSSAnimation | CSharpToJavaScript",
    "keywords": "Class CSSAnimation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The animation shorthand CSS property applies an animation between styles. It is a shorthand for animation-name, animation-duration, animation-timing-function, animation-delay, animation-iteration-count, animation-direction, animation-fill-mode, animation-play-state, and animation-timeline. [To(\"FirstCharToLowerCase\")] public class CSSAnimation : Animation Inheritance object Animation CSSAnimation Inherited Members Animation.StartTime Animation.CurrentTime object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks EmbedInteractiveExample(\"pages/css/animation.html\") -Using CSS animations -JavaScript AnimationEvent. API See also on MDN Properties AnimationName The animationName property of the CSSAnimation interface returns the {{CSSXref(\"animation-name\")}}. This specifies one or more keyframe at-rules which describe the animation applied to the element. public Unsupported AnimationName { get; } Property Value Unsupported A string. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSContainerRule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSContainerRule.html",
    "title": "Class CSSContainerRule | CSharpToJavaScript",
    "keywords": "Class CSSContainerRule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CSSContainerRule interface represents a single CSS @container rule. [To(\"FirstCharToLowerCase\")] public class CSSContainerRule Inheritance object CSSContainerRule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An object of this type can be used to get the query conditions for the @container, along with the container name if one is defined. Note that the container name and query together define the \"condition text\", which can be obtained using CSSConditionRule.ConditionText. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSCounterStyleRule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSCounterStyleRule.html",
    "title": "Class CSSCounterStyleRule | CSharpToJavaScript",
    "keywords": "Class CSSCounterStyleRule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CSSCounterStyleRule interface represents an @counter-style at-rule. [To(\"FirstCharToLowerCase\")] public class CSSCounterStyleRule : CSSRule Inheritance object CSSRule CSSCounterStyleRule Inherited Members CSSRule.COUNTER_STYLE_RULE CSSRule.VIEWPORT_RULE CSSRule.CssText CSSRule.ParentRule CSSRule.ParentStyleSheet CSSRule.Type CSSRule.STYLE_RULE CSSRule.CHARSET_RULE CSSRule.IMPORT_RULE CSSRule.MEDIA_RULE CSSRule.FONT_FACE_RULE CSSRule.PAGE_RULE CSSRule.MARGIN_RULE CSSRule.NAMESPACE_RULE object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -@counter-style See also on MDN Properties AdditiveSymbols The additiveSymbols property of the CSSCounterStyleRule interface gets and sets the value of the {{cssxref(\"@counter-style/additive-symbols\",\"additive-symbols\")}} descriptor. If the descriptor does not have a value set, this attribute returns an empty string. public Unsupported AdditiveSymbols { get; set; } Property Value Unsupported A string. Remarks See also on MDN Fallback The fallback property of the CSSCounterStyleRule interface gets and sets the value of the {{cssxref(\"@counter-style/fallback\",\"fallback\")}} descriptor. If the descriptor does not have a value set, this attribute returns an empty string. public Unsupported Fallback { get; set; } Property Value Unsupported A string. Remarks See also on MDN Name The name property of the CSSCounterStyleRule interface gets and sets the {{CSSxRef(\"&lt;custom-ident&gt;&quot;)}} defined as the name for the associated rule. public Unsupported Name { get; set; } Property Value Unsupported A string Remarks See also on MDN Negative The negative property of the CSSCounterStyleRule interface gets and sets the value of the {{cssxref(\"@counter-style/negative\",\"negative\")}} descriptor. If the descriptor does not have a value set, this attribute returns an empty string. public Unsupported Negative { get; set; } Property Value Unsupported A string Remarks See also on MDN Pad The pad property of the CSSCounterStyleRule interface gets and sets the value of the {{cssxref(\"@counter-style/pad\", \"pad\")}} descriptor. If the descriptor does not have a value set, this attribute returns an empty string. public Unsupported Pad { get; set; } Property Value Unsupported A string Remarks See also on MDN Prefix The prefix property of the CSSCounterStyleRule interface gets and sets the value of the {{cssxref(\"@counter-style/prefix\",\"prefix\")}} descriptor. If the descriptor does not have a value set, this attribute returns an empty string. public Unsupported Prefix { get; set; } Property Value Unsupported A string Remarks See also on MDN Range The range property of the CSSCounterStyleRule interface gets and sets the value of the {{cssxref(\"@counter-style/range\",\"range\")}} descriptor. If the descriptor does not have a value set, this attribute returns an empty string. public Unsupported Range { get; set; } Property Value Unsupported A string Remarks See also on MDN SpeakAs The speakAs property of the CSSCounterStyleRule interface gets and sets the value of the {{cssxref(\"@counter-style/speak-as\",\"speak-as\")}} descriptor. If the descriptor does not have a value set, this attribute returns an empty string. public Unsupported SpeakAs { get; set; } Property Value Unsupported A string Remarks See also on MDN Suffix The suffix property of the CSSCounterStyleRule interface gets and sets the value of the {{cssxref(\"@counter-style/suffix\",\"suffix\")}} descriptor. If the descriptor does not have a value set, this attribute returns an empty string. public Unsupported Suffix { get; set; } Property Value Unsupported A string Remarks See also on MDN Symbols The symbols property of the CSSCounterStyleRule interface gets and sets the value of the {{cssxref(\"@counter-style/symbols\",\"symbols\")}} descriptor. If the descriptor does not have a value set, this attribute returns an empty string. public Unsupported Symbols { get; set; } Property Value Unsupported A string Remarks See also on MDN System The system property of the CSSCounterStyleRule interface gets and sets the value of the {{cssxref(\"@counter-style/system\", \"system\")}} descriptor. If the descriptor does not have a value set, this attribute returns an empty string. public Unsupported System { get; set; } Property Value Unsupported A string Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSGroupingRule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSGroupingRule.html",
    "title": "Class CSSGroupingRule | CSharpToJavaScript",
    "keywords": "Class CSSGroupingRule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CSSGroupingRule interface of the CSS Object Model represents any CSS at-rule that contains other rules nested within it. [To(\"FirstCharToLowerCase\")] public class CSSGroupingRule : CSSRule Inheritance object CSSRule CSSGroupingRule Derived CSSPageRule CSSStartingStyleRule Inherited Members CSSRule.COUNTER_STYLE_RULE CSSRule.VIEWPORT_RULE CSSRule.CssText CSSRule.ParentRule CSSRule.ParentStyleSheet CSSRule.Type CSSRule.STYLE_RULE CSSRule.CHARSET_RULE CSSRule.IMPORT_RULE CSSRule.MEDIA_RULE CSSRule.FONT_FACE_RULE CSSRule.PAGE_RULE CSSRule.MARGIN_RULE CSSRule.NAMESPACE_RULE object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Using dynamic styling information See also on MDN Properties CssRules The cssRules property of the CSSGroupingRule interface returns a CSSRuleList containing a collection of CSSRule objects. public CSSRuleList CssRules { get; } Property Value CSSRuleList a CSSRuleList. Remarks See also on MDN Methods DeleteRule(ulong) The deleteRule() method of the CSSGroupingRule interface removes a CSS rule from a list of child CSS rules. public GlobalObject.Undefined DeleteRule(ulong index) Parameters index ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN InsertRule(Unsupported, ulong) The insertRule() method of the CSSGroupingRule interface adds a new CSS rule to a list of CSS rules. public ulong InsertRule(Unsupported rule, ulong index) Parameters rule Unsupported index ulong Returns ulong The index of the new rule. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSImportRule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSImportRule.html",
    "title": "Class CSSImportRule | CSharpToJavaScript",
    "keywords": "Class CSSImportRule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CSSImportRule interface represents an @import at-rule. [To(\"FirstCharToLowerCase\")] public class CSSImportRule : CSSRule Inheritance object CSSRule CSSImportRule Inherited Members CSSRule.COUNTER_STYLE_RULE CSSRule.VIEWPORT_RULE CSSRule.CssText CSSRule.ParentRule CSSRule.ParentStyleSheet CSSRule.Type CSSRule.STYLE_RULE CSSRule.CHARSET_RULE CSSRule.IMPORT_RULE CSSRule.MEDIA_RULE CSSRule.FONT_FACE_RULE CSSRule.PAGE_RULE CSSRule.MARGIN_RULE CSSRule.NAMESPACE_RULE object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Href The read-only href property of the CSSImportRule interface returns the URL specified by the @import at-rule. public string Href { get; } Property Value string A string. Remarks The resolved URL will be the href attribute of the associated stylesheet. See also on MDN Media The read-only media property of the CSSImportRule interface returns a MediaList object, containing the value of the media attribute of the associated stylesheet. public MediaList Media { get; } Property Value MediaList Returns a MediaList object.The value of media can be set by passing a string containing the media attribute; for example &quot;print&quot;. Remarks See also on MDN StyleSheet public CSSStyleSheet StyleSheet { get; } Property Value CSSStyleSheet"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSMarginRule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSMarginRule.html",
    "title": "Class CSSMarginRule | CSharpToJavaScript",
    "keywords": "Class CSSMarginRule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CSSMarginRule : CSSRule Inheritance object CSSRule CSSMarginRule Inherited Members CSSRule.COUNTER_STYLE_RULE CSSRule.VIEWPORT_RULE CSSRule.CssText CSSRule.ParentRule CSSRule.ParentStyleSheet CSSRule.Type CSSRule.STYLE_RULE CSSRule.CHARSET_RULE CSSRule.IMPORT_RULE CSSRule.MEDIA_RULE CSSRule.FONT_FACE_RULE CSSRule.PAGE_RULE CSSRule.MARGIN_RULE CSSRule.NAMESPACE_RULE object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public Unsupported Name { get; } Property Value Unsupported Style public CSSStyleDeclaration Style { get; } Property Value CSSStyleDeclaration"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSNamespaceRule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSNamespaceRule.html",
    "title": "Class CSSNamespaceRule | CSharpToJavaScript",
    "keywords": "Class CSSNamespaceRule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CSSNamespaceRule interface describes an object representing a single CSS @namespace at-rule. [To(\"FirstCharToLowerCase\")] public class CSSNamespaceRule : CSSRule Inheritance object CSSRule CSSNamespaceRule Inherited Members CSSRule.COUNTER_STYLE_RULE CSSRule.VIEWPORT_RULE CSSRule.CssText CSSRule.ParentRule CSSRule.ParentStyleSheet CSSRule.Type CSSRule.STYLE_RULE CSSRule.CHARSET_RULE CSSRule.IMPORT_RULE CSSRule.MEDIA_RULE CSSRule.FONT_FACE_RULE CSSRule.PAGE_RULE CSSRule.MARGIN_RULE CSSRule.NAMESPACE_RULE object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties NamespaceURI The read-only namespaceURI property of the CSSNamespaceRule returns a string containing the text of the URI of the given namespace. public Unsupported NamespaceURI { get; } Property Value Unsupported A string containing a URI. Remarks See also on MDN Prefix The read-only prefix property of the CSSNamespaceRule returns a string with the name of the prefix associated to this namespace. If there is no such prefix, it returns an empty string. public Unsupported Prefix { get; } Property Value Unsupported A string containing the prefix associated to this namespace. If there is no prefix an empty string. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSPageRule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSPageRule.html",
    "title": "Class CSSPageRule | CSharpToJavaScript",
    "keywords": "Class CSSPageRule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll CSSPageRule represents a single CSS @page rule. [To(\"FirstCharToLowerCase\")] public class CSSPageRule : CSSGroupingRule Inheritance object CSSRule CSSGroupingRule CSSPageRule Inherited Members CSSGroupingRule.CssRules CSSGroupingRule.InsertRule(Unsupported, ulong) CSSGroupingRule.DeleteRule(ulong) CSSRule.COUNTER_STYLE_RULE CSSRule.VIEWPORT_RULE CSSRule.CssText CSSRule.ParentRule CSSRule.ParentStyleSheet CSSRule.Type CSSRule.STYLE_RULE CSSRule.CHARSET_RULE CSSRule.IMPORT_RULE CSSRule.MEDIA_RULE CSSRule.FONT_FACE_RULE CSSRule.PAGE_RULE CSSRule.MARGIN_RULE CSSRule.NAMESPACE_RULE object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties SelectorText The selectorText property of the CSSPageRule interface gets and sets the selectors associated with the CSSPageRule. public Unsupported SelectorText { get; set; } Property Value Unsupported A string. Remarks See also on MDN Style The style read-only property of the CSSPageRule interface returns a CSSStyleDeclaration object. This represents an object that is a CSS declaration block, and exposes style information and various style-related methods and properties. public CSSStyleDeclaration Style { get; } Property Value CSSStyleDeclaration A CSSStyleDeclaration object, which represents a CSS declaration block with the following properties: Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSPropertyRule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSPropertyRule.html",
    "title": "Class CSSPropertyRule | CSharpToJavaScript",
    "keywords": "Class CSSPropertyRule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CSSPropertyRule interface of the 'CSS_Properties_and_Values_API' represents a single CSS {{cssxref(\"@property\")}} rule. [To(\"FirstCharToLowerCase\")] public class CSSPropertyRule : CSSRule Inheritance object CSSRule CSSPropertyRule Inherited Members CSSRule.COUNTER_STYLE_RULE CSSRule.VIEWPORT_RULE CSSRule.CssText CSSRule.ParentRule CSSRule.ParentStyleSheet CSSRule.Type CSSRule.STYLE_RULE CSSRule.CHARSET_RULE CSSRule.IMPORT_RULE CSSRule.MEDIA_RULE CSSRule.FONT_FACE_RULE CSSRule.PAGE_RULE CSSRule.MARGIN_RULE CSSRule.NAMESPACE_RULE object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Inherits The read-only inherits property of the CSSPropertyRule interface returns the inherit flag of the custom property registration represented by the {{cssxref(\"@property\")}} rule, a boolean describing whether or not the property inherits by default. public bool Inherits { get; } Property Value bool A boolean. Remarks See also on MDN InitialValue public Unsupported? InitialValue { get; } Property Value Unsupported Name The read-only name property of the CSSPropertyRule interface represents the property name, this being the serialization of the name given to the custom property in the {{cssxref(\"@property\")}} rule's prelude. public Unsupported Name { get; } Property Value Unsupported A string. Remarks See also on MDN Syntax The read-only syntax property of the CSSPropertyRule interface returns the literal syntax of the custom property registration represented by the {{cssxref(\"@property\")}} rule, controlling how the property's value is parsed at computed-value time. public Unsupported Syntax { get; } Property Value Unsupported A string. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSPseudoElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSPseudoElement.html",
    "title": "Class CSSPseudoElement | CSharpToJavaScript",
    "keywords": "Class CSSPseudoElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CSSPseudoElement interface represents a pseudo-element that may be the target of an event or animated using the 'Web Animations API'. Instances of this interface may be obtained by calling 'Element.Pseudo'. [To(\"FirstCharToLowerCase\")] public class CSSPseudoElement : EventTarget Inheritance object EventTarget CSSPseudoElement Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -'Element.Pseudo' -'Web Animations API' -'Element.Animate' See also on MDN Properties Element The element read-only property of the 'CSSPseudoElement' interface returns a reference to the originating element of the pseudo-element, in other words its parent element. public Element Element { get; } Property Value Element An 'Element' representing the pseudo-element's originating element. Remarks -'Element.Pseudo' See also on MDN Parent public Union39 Parent { get; } Property Value Union39 Type The type read-only property of the 'CSSPseudoElement' interface returns the type of the pseudo-element as a string, represented in the form of a CSS selector. public Unsupported Type { get; } Property Value Unsupported A string containing one of the following values: Remarks -'Element.Pseudo' -Index of standard pseudo-elements See also on MDN Methods Pseudo(Unsupported) public CSSPseudoElement? Pseudo(Unsupported type) Parameters type Unsupported Returns CSSPseudoElement"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSRule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSRule.html",
    "title": "Class CSSRule | CSharpToJavaScript",
    "keywords": "Class CSSRule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CSSRule interface represents a single CSS rule. There are several types of rules which inherit properties from CSSRule. [To(\"FirstCharToLowerCase\")] public class CSSRule Inheritance object CSSRule Derived CSSCounterStyleRule CSSGroupingRule CSSImportRule CSSMarginRule CSSNamespaceRule CSSPropertyRule CSSStyleRule CSSViewportRule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Using dynamic styling information See also on MDN Fields CHARSET_RULE public const ushort CHARSET_RULE = 2 Field Value ushort COUNTER_STYLE_RULE public const ushort COUNTER_STYLE_RULE = 11 Field Value ushort FONT_FACE_RULE public const ushort FONT_FACE_RULE = 5 Field Value ushort IMPORT_RULE public const ushort IMPORT_RULE = 3 Field Value ushort MARGIN_RULE public const ushort MARGIN_RULE = 9 Field Value ushort MEDIA_RULE public const ushort MEDIA_RULE = 4 Field Value ushort NAMESPACE_RULE public const ushort NAMESPACE_RULE = 10 Field Value ushort PAGE_RULE public const ushort PAGE_RULE = 6 Field Value ushort STYLE_RULE public const ushort STYLE_RULE = 1 Field Value ushort VIEWPORT_RULE public const ushort VIEWPORT_RULE = 15 Field Value ushort Properties CssText The cssText property of the CSSRule interface returns the actual text of a CSSStyleSheet style-rule. public Unsupported CssText { get; set; } Property Value Unsupported A string containing the actual text of the CSSStyleSheet rule. Remarks NOTE Note: Do not confuse this property with element-style CssText. Be aware that this property can no longer be set directly, as it is now specified to be functionally modify-only, and silently so. In other words, attempting to set it does absolutely nothing, and doesn&apos;t even omit a warning or error. Furthermore, it has no settable sub-properties. Therefore, to modify it, use the stylesheet's CSSRuleList[index] properties SelectorText and Style (or its sub-properties). See Using dynamic styling information for details. See also on MDN ParentRule The parentRule property of the CSSRule interface returns the containing rule of the current rule if this exists, or otherwise returns null. public CSSRule? ParentRule { get; } Property Value CSSRule A CSSRule which is the type of the containing rules. If the current rule is inside a media query, this would return CSSMediaRule. Otherwise it returns null. Remarks See also on MDN ParentStyleSheet The parentStyleSheet property of the CSSRule interface returns the StyleSheet object in which the current rule is defined. public CSSStyleSheet? ParentStyleSheet { get; } Property Value CSSStyleSheet A StyleSheet object. Remarks See also on MDN Type IMPORTANT Deprecated The read-only type property of the CSSRule interface is a deprecated property that returns an integer indicating which type of rule the CSSRule represents. public ushort Type { get; } Property Value ushort Both CSSRule.UNKNOWN_RULE (0) and CSSRule.CHARSET_RULE (2) are deprecated and cannot be obtained any more Remarks If you need to distinguish different types of CSS rule, a good alternative is to use constructor.name: See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSRuleList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSRuleList.html",
    "title": "Class CSSRuleList | CSharpToJavaScript",
    "keywords": "Class CSSRuleList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll A CSSRuleList represents an ordered collection of read-only CSSRule objects. [To(\"FirstCharToLowerCase\")] public class CSSRuleList Inheritance object CSSRuleList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks While the CSSRuleList object is read-only, and cannot be directly modified, it is considered a live object, as the content can change over time. To edit the underlying rules returned by CSSRule objects, use InsertRule(Unsupported, ulong) and DeleteRule(ulong), which are methods of CSSStyleSheet. The interface has no constructor. An instance of CSSRuleList is returned by CssRules and CSSKeyframesRule.CssRules. NOTE Note: This interface was an attempt to create an unmodifiable list and only continues to be supported to not break code that&apos;s already using it. Modern APIs use types that wrap around ECMAScript array types instead, so you can treat them like ECMAScript arrays, and at the same time impose additional semantics on their usage (such as making their items read-only). -CSSRule See also on MDN Properties Length The length property of the CSSRuleList interface returns the number of CSSRule objects in the list. public ulong Length { get; } Property Value ulong An integer. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSStartingStyleRule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSStartingStyleRule.html",
    "title": "Class CSSStartingStyleRule | CSharpToJavaScript",
    "keywords": "Class CSSStartingStyleRule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CSSStartingStyleRule : CSSGroupingRule Inheritance object CSSRule CSSGroupingRule CSSStartingStyleRule Inherited Members CSSGroupingRule.CssRules CSSGroupingRule.InsertRule(Unsupported, ulong) CSSGroupingRule.DeleteRule(ulong) CSSRule.COUNTER_STYLE_RULE CSSRule.VIEWPORT_RULE CSSRule.CssText CSSRule.ParentRule CSSRule.ParentStyleSheet CSSRule.Type CSSRule.STYLE_RULE CSSRule.CHARSET_RULE CSSRule.IMPORT_RULE CSSRule.MEDIA_RULE CSSRule.FONT_FACE_RULE CSSRule.PAGE_RULE CSSRule.MARGIN_RULE CSSRule.NAMESPACE_RULE object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSStyleDeclaration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSStyleDeclaration.html",
    "title": "Class CSSStyleDeclaration | CSharpToJavaScript",
    "keywords": "Class CSSStyleDeclaration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CSSStyleDeclaration interface represents an object that is a CSS declaration block, and exposes style information and various style-related methods and properties. [To(\"FirstCharToLowerCase\")] public class CSSStyleDeclaration Inheritance object CSSStyleDeclaration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A CSSStyleDeclaration object can be exposed using three different APIs: See also on MDN Properties CssFloat The cssFloat property of the CSSStyleDeclaration interface returns the result of invoking GetPropertyValue(Unsupported) with float as an argument. public Unsupported CssFloat { get; set; } Property Value Unsupported A string. Remarks When setting, it invokes SetProperty(Unsupported, Unsupported, Unsupported) with float as the first argument, and the given value as the second argument. The given value must be a valid value for the float property. See also on MDN CssText The cssText property of the CSSStyleDeclaration interface returns or sets the text of the element's inline style declaration only. public Unsupported CssText { get; set; } Property Value Unsupported A string containing the text of the element&apos;s inline style declaration. Remarks To be able to set a stylesheet rule dynamically, see Using dynamic styling information. Not to be confused with stylesheet style-rule CssText. See also on MDN Display [To(\"FirstCharToLowerCase\")] public string Display { get; set; } Property Value string Length The read-only property returns an integer that represents the number of style declarations in this CSS declaration block. public ulong Length { get; } Property Value ulong An integer that provides the number of styles explicitly set on the parent of the instance. Remarks See also on MDN ParentRule The CSSStyleDeclaration.parentRule read-only property returns a 'CSSRule' that is the parent of this style block, e.g. a 'CSSStyleRule' representing the style for a CSS selector. public CSSRule? ParentRule { get; } Property Value CSSRule The CSS rule that contains this declaration block or null if this 'CSSStyleDeclaration' is not attached to a 'CSSRule'. Remarks See also on MDN Methods GetPropertyPriority(Unsupported) The CSSStyleDeclaration.getPropertyPriority() method interface returns a string that provides all explicitly set priorities on the CSS property. public Unsupported GetPropertyPriority(Unsupported property) Parameters property Unsupported Returns Unsupported A string that represents the priority (e.g. &quot;important&quot;) if one exists. If none exists, returns the empty string. Remarks See also on MDN GetPropertyValue(Unsupported) The CSSStyleDeclaration.getPropertyValue() method interface returns a string containing the value of a specified CSS property. public Unsupported GetPropertyValue(Unsupported property) Parameters property Unsupported Returns Unsupported A string containing the value of the property. If not set, returns the empty string. Remarks See also on MDN RemoveProperty(Unsupported) The CSSStyleDeclaration.removeProperty() method interface removes a property from a CSS style declaration object. public Unsupported RemoveProperty(Unsupported property) Parameters property Unsupported Returns Unsupported A string equal to the value of the CSS property before it was removed. Remarks See also on MDN SetProperty(Unsupported, Unsupported, Unsupported) The CSSStyleDeclaration.setProperty() method interface sets a new value for a property on a CSS style declaration object. public GlobalObject.Undefined SetProperty(Unsupported property, Unsupported value, Unsupported priority) Parameters property Unsupported value Unsupported priority Unsupported Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSStyleRule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSStyleRule.html",
    "title": "Class CSSStyleRule | CSharpToJavaScript",
    "keywords": "Class CSSStyleRule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CSSStyleRule interface represents a single CSS style rule. [To(\"FirstCharToLowerCase\")] public class CSSStyleRule : CSSRule Inheritance object CSSRule CSSStyleRule Inherited Members CSSRule.COUNTER_STYLE_RULE CSSRule.VIEWPORT_RULE CSSRule.CssText CSSRule.ParentRule CSSRule.ParentStyleSheet CSSRule.Type CSSRule.STYLE_RULE CSSRule.CHARSET_RULE CSSRule.IMPORT_RULE CSSRule.MEDIA_RULE CSSRule.FONT_FACE_RULE CSSRule.PAGE_RULE CSSRule.MARGIN_RULE CSSRule.NAMESPACE_RULE object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties CssRules public CSSRuleList CssRules { get; } Property Value CSSRuleList SelectorText The selectorText property of the CSSStyleRule interface gets and sets the selectors associated with the CSSStyleRule. public Unsupported SelectorText { get; set; } Property Value Unsupported A string. Remarks See also on MDN Style The read-only style property is the CSSStyleDeclaration interface for the declaration block of the CSSStyleRule. public CSSStyleDeclaration Style { get; } Property Value CSSStyleDeclaration A CSSStyleDeclaration object, with the following properties: Remarks See also on MDN Methods DeleteRule(ulong) public GlobalObject.Undefined DeleteRule(ulong index) Parameters index ulong Returns GlobalObject.Undefined InsertRule(Unsupported, ulong) public ulong InsertRule(Unsupported rule, ulong index) Parameters rule Unsupported index ulong Returns ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSStyleSheet.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSStyleSheet.html",
    "title": "Class CSSStyleSheet | CSharpToJavaScript",
    "keywords": "Class CSSStyleSheet Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CSSStyleSheet interface represents a single CSS stylesheet, and lets you inspect and modify the list of rules contained in the stylesheet. It inherits properties and methods from its parent, StyleSheet. [To(\"FirstCharToLowerCase\")] public class CSSStyleSheet : StyleSheet Inheritance object StyleSheet CSSStyleSheet Inherited Members StyleSheet.Type StyleSheet.Href StyleSheet.OwnerNode StyleSheet.ParentStyleSheet StyleSheet.Title StyleSheet.Media StyleSheet.Disabled object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A stylesheet consists of a collection of CSSRule objects representing each of the rules in the stylesheet. The rules are contained in a CSSRuleList, which can be obtained from the stylesheet's CssRules property. For example, one rule might be a CSSStyleRule object containing a style such as: Another rule might be an at-rule such as @import or @media, and so forth. See the Obtaining a StyleSheet section for the various ways a CSSStyleSheet object can be obtained. A CSSStyleSheet object can also be directly constructed. The constructor, and the Replace(string), and ReplaceSync(string) methods are newer additions to the specification, enabling Constructable Stylesheets. -CSS Object Model -Using dynamic styling information See also on MDN Constructors CSSStyleSheet() public CSSStyleSheet() CSSStyleSheet(CSSStyleSheetInit) The CSSStyleSheet() constructor creates a new CSSStyleSheet object which represents a single Stylesheet. public CSSStyleSheet(CSSStyleSheetInit options) Parameters options CSSStyleSheetInit Remarks After constructing a stylesheet the Replace(string), ReplaceSync(string), InsertRule(Unsupported, ulong), and DeleteRule(ulong) methods can be used to modify the rules of the new stylesheet. A stylesheet created using this method is referred to as a &quot;constructed stylesheet&quot;. A constructed stylesheet can be shared between a document and its shadow DOM subtrees using ShadowRoot.AdoptedStyleSheets and Document.AdoptedStyleSheets. -Constructable Stylesheets (web.dev) -Using the Shadow DOM -construct-style-sheets-polyfill See also on MDN Properties CssRules The read-only CSSStyleSheet property cssRules returns a live CSSRuleList which provides a real-time, up-to-date list of every CSS rule which comprises the stylesheet. Each item in the list is a CSSRule defining a single rule. public CSSRuleList CssRules { get; } Property Value CSSRuleList A live-updating CSSRuleList containing each of the CSS rules making up the stylesheet. Each entry in the rule list is a CSSRule object describing one rule making up the stylesheet. Remarks -CSS Object Model -Using dynamic styling information See also on MDN OwnerRule The read-only CSSStyleSheet property ownerRule returns the CSSImportRule corresponding to the @import at-rule which imported the stylesheet into the document. If the stylesheet wasn&apos;t imported into the document using _import, the returned value is null. public CSSRule? OwnerRule { get; } Property Value CSSRule A CSSImportRule corresponding to the {{cssxref(\"@import\")}} rule which imported the stylesheet into the document. If the stylesheet wasn&apos;t imported into the document using _import, the returned value is null. Remarks -CSS Object Model -Using dynamic styling information See also on MDN Rules IMPORTANT Deprecated rules is a deprecated legacy property of the CSSStyleSheet interface. Functionally identical to the preferred CssRules property, it provides access to a live-updating list of the CSS rules comprising the stylesheet. public CSSRuleList Rules { get; } Property Value CSSRuleList A live-updating CSSRuleList containing each of the CSS rules making up the stylesheet. Each entry in the rule list is a CSSRule object describing one rule making up the stylesheet. Remarks NOTE Note: As a legacy property, you should not use rules and should instead use the preferred CssRules. While rules is unlikely to be removed soon, its availability is not as widespread and using it will result in compatibility problems for your site or app. -CSS Object Model -Using dynamic styling information See also on MDN Methods AddRule(string, string, ulong) IMPORTANT Deprecated The obsolete CSSStyleSheet interface's addRule() legacy method adds a new rule to the stylesheet. You should avoid using this method, and should instead use the more standard InsertRule(Unsupported, ulong) method. public long AddRule(string selector, string style, ulong index) Parameters selector string style string index ulong Returns long Always returns -1.Note that due to somewhat esoteric rules about where you can legally insert rules, it&apos;s possible that an exception may be thrown. See {{domxref(&quot;CSSStyleSheet.insertRule&quot;, &quot;insertRule()&quot;)}} for more information. Remarks -CSS Object Model -Using dynamic styling information See also on MDN DeleteRule(ulong) The CSSStyleSheet method deleteRule() removes a rule from the stylesheet object. public GlobalObject.Undefined DeleteRule(ulong index) Parameters index ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -CSS Object Model -Constructable Stylesheets (web.dev) -Using dynamic styling information -InsertRule(Unsupported, ulong) See also on MDN InsertRule(Unsupported, ulong) The CSSStyleSheet.insertRule() method inserts a new CSS rule into the current style sheet. public ulong InsertRule(Unsupported rule, ulong index) Parameters rule Unsupported index ulong Returns ulong The newly inserted rule&apos;s index within the stylesheet&apos;s rule-list. Remarks NOTE Note: Although insertRule() is exclusively a method of CSSStyleSheet, it actually inserts the rule into {{domxref(&quot;CSSStyleSheet&quot;, &quot;&quot;, &quot;&quot;, &quot;1&quot;)}}.cssRules — its internal CSSRuleList. -DeleteRule(ulong) -Constructable Stylesheets (web.dev) See also on MDN RemoveRule(ulong) IMPORTANT Deprecated The obsolete CSSStyleSheet method removeRule() removes a rule from the stylesheet object. It is functionally identical to the standard, preferred method DeleteRule(ulong). public GlobalObject.Undefined RemoveRule(ulong index) Parameters index ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: This is a legacy method which has been replaced by the standard method DeleteRule(ulong). You should use that instead. -CSS Object Model -Using dynamic styling information -InsertRule(Unsupported, ulong) See also on MDN Replace(string) The replace() method of the CSSStyleSheet interface asynchronously replaces the content of the stylesheet with the content passed into it. The method returns a promise that resolves with the CSSStyleSheet object. public Task<CSSStyleSheet> Replace(string text) Parameters text string Returns Task<CSSStyleSheet> A {{jsxref(\"Promise\")}} that resolves with the CSSStyleSheet. Remarks The replace() and ReplaceSync(string) methods can only be used on a stylesheet created with the CSSStyleSheet(CSSStyleSheetInit) constructor. -Constructable Stylesheets (web.dev) -Using the Shadow DOM See also on MDN ReplaceSync(string) The replaceSync() method of the CSSStyleSheet interface synchronously replaces the content of the stylesheet with the content passed into it. public GlobalObject.Undefined ReplaceSync(string text) Parameters text string Returns GlobalObject.Undefined None (undefined). Remarks The replaceSync() and Replace(string) methods can only be used on a stylesheet created with the CSSStyleSheet(CSSStyleSheetInit) constructor. -Constructable Stylesheets (web.dev) -Using the Shadow DOM See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSStyleSheetInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSStyleSheetInit.html",
    "title": "Class CSSStyleSheetInit | CSharpToJavaScript",
    "keywords": "Class CSSStyleSheetInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CSSStyleSheetInit Inheritance object CSSStyleSheetInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BaseURL public string BaseURL Field Value string Disabled public bool Disabled Field Value bool Media public Union38 Media Field Value Union38"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSTransition.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSTransition.html",
    "title": "Class CSSTransition | CSharpToJavaScript",
    "keywords": "Class CSSTransition Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The transition CSS property is a shorthand property for transition-property, transition-duration, transition-timing-function, transition-delay, and transition-behavior. [To(\"FirstCharToLowerCase\")] public class CSSTransition : Animation Inheritance object Animation CSSTransition Inherited Members Animation.StartTime Animation.CurrentTime object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks EmbedInteractiveExample(\"pages/css/transition.html\") Transitions enable you to define the transition between two states of an element. Different states may be defined using pseudo-classes like :hover or :active or dynamically set using JavaScript. -CSS transitions module -Using CSS transitions -TransitionEvent. See also on MDN Properties TransitionProperty The transitionProperty property of the CSSTransition interface returns the expanded transition property name of the transition. This is the longhand CSS property for which the transition was generated. public Unsupported TransitionProperty { get; } Property Value Unsupported A string. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSViewportRule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSViewportRule.html",
    "title": "Class CSSViewportRule | CSharpToJavaScript",
    "keywords": "Class CSSViewportRule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CSSViewportRule : CSSRule Inheritance object CSSRule CSSViewportRule Inherited Members CSSRule.COUNTER_STYLE_RULE CSSRule.VIEWPORT_RULE CSSRule.CssText CSSRule.ParentRule CSSRule.ParentStyleSheet CSSRule.Type CSSRule.STYLE_RULE CSSRule.CHARSET_RULE CSSRule.IMPORT_RULE CSSRule.MEDIA_RULE CSSRule.FONT_FACE_RULE CSSRule.PAGE_RULE CSSRule.MARGIN_RULE CSSRule.NAMESPACE_RULE object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Style public CSSStyleDeclaration Style { get; } Property Value CSSStyleDeclaration"
  },
  "api/CSharpToJavaScript.APIs.JS.Cache.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Cache.html",
    "title": "Class Cache | CSharpToJavaScript",
    "keywords": "Class Cache Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Cache interface provides a persistent storage mechanism for Request / Response object pairs that are cached in long lived memory. How long a Cache object lives is browser dependent, but a single origin&apos;s scripts can typically rely on the presence of a previously populated Cache object. Note that the Cache interface is exposed to windowed scopes as well as workers. You don&apos;t have to use it in conjunction with service workers, even though it is defined in the service worker spec. [To(\"FirstCharToLowerCase\")] public class Cache Inheritance object Cache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An origin can have multiple, named Cache objects. You are responsible for implementing how your script (e.g. in a ServiceWorker) handles Cache updates. Items in a Cache do not get updated unless explicitly requested; they don't expire unless deleted. Use Open(string) to open a specific named Cache object and then call any of the Cache methods to maintain the Cache. You are also responsible for periodically purging cache entries. Each browser has a hard limit on the amount of cache storage that a given origin can use. Cache quota usage estimates are available via the Estimate() method. The browser does its best to manage disk space, but it may delete the Cache storage for an origin. The browser will generally delete all of the data for an origin or none of the data for an origin. Make sure to version caches by name and use the caches only from the version of the script that they can safely operate on. See Deleting old caches for more information. NOTE Note: The key matching algorithm depends on the VARY header in the value. So matching a new key requires looking at both key and value for entries in the Cache object. NOTE Note: The caching API doesn&apos;t honor HTTP caching headers. AvailableInWorkers -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Methods Add(Union59) The add() method of the Cache interface takes a URL, retrieves it, and adds the resulting response object to the given cache. public Task<GlobalObject.Undefined> Add(Union59 request) Parameters request Union59 Returns Task<GlobalObject.Undefined> A Promise that resolves with undefined. Remarks The add() method is functionally equivalent to the following: For more complex operations, you'll need to use Put(Union59, Response) directly. NOTE Note: add() will overwrite any key/value pair previously stored in the cache that matches the request. -Using Service Workers -Cache -Caches See also on MDN AddAll(List<Union59>) The addAll() method of the Cache interface takes an array of URLs, retrieves them, and adds the resulting response objects to the given cache. The request objects created during retrieval become keys to the stored response operations. public Task<GlobalObject.Undefined> AddAll(List<Union59> requests) Parameters requests List<Union59> Returns Task<GlobalObject.Undefined> A Promise that resolves with undefined. Remarks NOTE Note: addAll() will overwrite any key/value pairs previously stored in the cache that match the request, but will fail if a resulting put() operation would overwrite a previous cache entry stored by the same addAll() method. -Using Service Workers -Cache -Caches See also on MDN Delete(Union59, CacheQueryOptions) The delete() method of the Cache interface finds the Cache entry whose key is the request, and if found, deletes the Cache entry and returns a {{jsxref(\"Promise\")}} that resolves to true. If no Cache entry is found, it resolves to false. public Task<bool> Delete(Union59 request, CacheQueryOptions options) Parameters request Union59 options CacheQueryOptions Returns Task<bool> a Promise that resolves to true if the cache entry is deleted, or false otherwise. Remarks -Using Service Workers -Cache -Caches See also on MDN Keys(Union59, CacheQueryOptions) The keys() method of the Cache interface returns a {{jsxref(\"Promise\")}} that resolves to an array of Request objects representing the keys of the Cache. public Task<Request[]> Keys(Union59 request, CacheQueryOptions options) Parameters request Union59 options CacheQueryOptions Returns Task<Request[]> A {{jsxref(\"Promise\")}} that resolves to an array of Request objects. Remarks The requests are returned in the same order that they were inserted. NOTE Note: Requests with duplicate URLs but different headers can be returned if their responses have the VARY header set on them. -Using Service Workers -Cache -Caches See also on MDN Match(Union59, CacheQueryOptions) The match() method of the Cache interface returns a {{jsxref(\"Promise\")}} that resolves to the Response associated with the first matching request in the Cache object. If no match is found, the Promise resolves to GlobalObject.Undefined. public Task<Response> Match(Union59 request, CacheQueryOptions options) Parameters request Union59 options CacheQueryOptions Returns Task<Response> A {{jsxref(\"Promise\")}} that resolves to the first Response that matches the request or to GlobalObject.Undefined if no match is found. NOTE Note: Cache.match() is basically identical to MatchAll(Union59, CacheQueryOptions), except that rather than resolving with an array of all matching responses, it resolves with the first matching response only (that is, response[0]). Remarks -Using Service Workers -Cache -Caches See also on MDN MatchAll(Union59, CacheQueryOptions) The matchAll() method of the Cache interface returns a Promise that resolves to an array of all matching responses in the Cache object. public Task<Response[]> MatchAll(Union59 request, CacheQueryOptions options) Parameters request Union59 options CacheQueryOptions Returns Task<Response[]> A Promise that resolves to an array of all matching responses in the Cache object. NOTE Note: Match(Union59, CacheQueryOptions) is basically identical to Cache.matchAll(), except that rather than resolving with an array of all matching responses, it resolves with the first matching response only (that is, response[0]). Remarks -Using Service Workers -Cache -Caches See also on MDN Put(Union59, Response) The put() method of the Cache interface allows key/value pairs to be added to the current Cache object. public Task<GlobalObject.Undefined> Put(Union59 request, Response response) Parameters request Union59 response Response Returns Task<GlobalObject.Undefined> A Promise that resolves with undefined. Remarks Often, you will just want to Fetch one or more requests, then add the result straight to your cache. In such cases you are better off using Add(Union59)/AddAll(List<Union59>), as they are shorthand functions for one or more of these operations. NOTE Note: put() will overwrite any key/value pair previously stored in the cache that matches the request. NOTE Note: Add(Union59)/AddAll(List<Union59>) do not cache responses with Response.status values that are not in the 200 range, whereas Put(Union59, Response) lets you store any request/response pair. As a result, Add(Union59)/AddAll(List<Union59>) can't be used to store opaque responses, whereas Put(Union59, Response) can. -Using Service Workers -Cache -Caches See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CacheQueryOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CacheQueryOptions.html",
    "title": "Class CacheQueryOptions | CSharpToJavaScript",
    "keywords": "Class CacheQueryOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CacheQueryOptions Inheritance object CacheQueryOptions Derived MultiCacheQueryOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IgnoreMethod public bool IgnoreMethod Field Value bool IgnoreSearch public bool IgnoreSearch Field Value bool IgnoreVary public bool IgnoreVary Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.CacheStorage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CacheStorage.html",
    "title": "Class CacheStorage | CSharpToJavaScript",
    "keywords": "Class CacheStorage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CacheStorage interface represents the storage for Cache objects. [To(\"FirstCharToLowerCase\")] public class CacheStorage Inheritance object CacheStorage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The interface: Use Open(string) to obtain a Cache instance. Use Match(Union59, MultiCacheQueryOptions) to check if a given Request is a key in any of the Cache objects that the CacheStorage object tracks. You can access CacheStorage through the global Caches property. NOTE Note: CacheStorage always rejects with a SecurityError on untrusted origins (i.e. those that aren&apos;t using HTTPS, although this definition will likely become more complex in the future.) When testing on Firefox, you can get around this by checking the Enable Service Workers over HTTP (when toolbox is open) option in the Firefox Devtools options/gear menu. Furthermore, because CacheStorage requires file-system access, it may be unavailable in private mode in Firefox. NOTE Note: Match(Union59, MultiCacheQueryOptions) is a convenience method. Equivalent functionality to match a cache entry can be implemented by returning an array of cache names from Keys(), opening each cache with Open(string), and matching the one you want with Match(Union59, CacheQueryOptions). AvailableInWorkers -Using Service Workers -Cache -Caches -Private Browsing / Incognito modes See also on MDN Methods Delete(string) The delete() method of the CacheStorage interface finds the Cache object matching the cacheName, and if found, deletes the Cache object and returns a {{jsxref(\"Promise\")}} that resolves to true. If no Cache object is found, it resolves to false. public Task<bool> Delete(string cacheName) Parameters cacheName string Returns Task<bool> a Promise that resolves to true if the Cache object is found and deleted, and false otherwise. Remarks You can access CacheStorage through the global Caches property. -Using Service Workers -Cache -Caches See also on MDN Has(string) The has() method of the CacheStorage interface returns a Promise that resolves to true if a Cache object matches the cacheName. public Task<bool> Has(string cacheName) Parameters cacheName string Returns Task<bool> a Promise that resolves to true if the cache exists or false if not. Remarks You can access CacheStorage through the global Caches property. -Using Service Workers -Cache -Caches See also on MDN Keys() The keys() method of the CacheStorage interface returns a {{jsxref(\"Promise\")}} that will resolve with an array containing strings corresponding to all of the named Cache objects tracked by the CacheStorage object in the order they were created. Use this method to iterate over a list of all Cache objects. public Task<List<string>> Keys() Returns Task<List<string>> a {{jsxref(\"Promise\")}} that resolves with an array of the Cache names inside the CacheStorage object. Remarks You can access CacheStorage through the global Caches property. -Using Service Workers -Cache -Caches See also on MDN Match(Union59, MultiCacheQueryOptions) The match() method of the CacheStorage interface checks if a given Request or URL string is a key for a stored Response. This method returns a {{jsxref(\"Promise\")}} for a Response, or a {{jsxref(\"Promise\")}} which resolves to undefined if no match is found. public Task<Response> Match(Union59 request, MultiCacheQueryOptions options) Parameters request Union59 options MultiCacheQueryOptions Returns Task<Response> a {{jsxref(\"Promise\")}} that resolves to the matching Response. If no matching response to the specified request is found, the promise resolves with undefined. Remarks You can access CacheStorage through the global Caches property. Cache objects are searched in creation order. NOTE Note: Match(Union59, MultiCacheQueryOptions) is a convenience method. Equivalent functionality is to call Match(Union59, CacheQueryOptions) on each cache (in the order returned by Keys()) until a Response is returned. -Using Service Workers -Cache -Caches See also on MDN Open(string) The open() method of the CacheStorage interface returns a {{jsxref(\"Promise\")}} that resolves to the Cache object matching the cacheName. public Task<Cache> Open(string cacheName) Parameters cacheName string Returns Task<Cache> A {{jsxref(\"Promise\")}} that resolves to the requested Cache object. Remarks You can access CacheStorage through the global Caches property. NOTE Note: If the specified Cache does not exist, a new cache is created with that cacheName and a Promise that resolves to this new Cache object is returned. -Using Service Workers -Cache -Caches See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CanPlayTypeResult.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanPlayTypeResult.html",
    "title": "Enum CanPlayTypeResult | CSharpToJavaScript",
    "keywords": "Enum CanPlayTypeResult Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanPlayTypeResult Fields Empty = 0 Maybe = 1 Probably = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasCompositing.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasCompositing.html",
    "title": "Interface CanvasCompositing | CSharpToJavaScript",
    "keywords": "Interface CanvasCompositing Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasCompositing Properties GlobalAlpha double GlobalAlpha { get; set; } Property Value double GlobalCompositeOperation string GlobalCompositeOperation { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasDirection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasDirection.html",
    "title": "Enum CanvasDirection | CSharpToJavaScript",
    "keywords": "Enum CanvasDirection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasDirection Fields Inherit = 2 Ltr = 0 Rtl = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasDrawImage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasDrawImage.html",
    "title": "Interface CanvasDrawImage | CSharpToJavaScript",
    "keywords": "Interface CanvasDrawImage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasDrawImage Methods DrawImage(Union16, double, double) GlobalObject.Undefined DrawImage(Union16 image, double dx, double dy) Parameters image Union16 dx double dy double Returns GlobalObject.Undefined DrawImage(Union16, double, double, double, double) GlobalObject.Undefined DrawImage(Union16 image, double dx, double dy, double dw, double dh) Parameters image Union16 dx double dy double dw double dh double Returns GlobalObject.Undefined DrawImage(Union16, double, double, double, double, double, double, double, double) GlobalObject.Undefined DrawImage(Union16 image, double sx, double sy, double sw, double sh, double dx, double dy, double dw, double dh) Parameters image Union16 sx double sy double sw double sh double dx double dy double dw double dh double Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasDrawPath.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasDrawPath.html",
    "title": "Interface CanvasDrawPath | CSharpToJavaScript",
    "keywords": "Interface CanvasDrawPath Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasDrawPath Methods BeginPath() GlobalObject.Undefined BeginPath() Returns GlobalObject.Undefined Clip(CanvasFillRule) GlobalObject.Undefined Clip(CanvasFillRule fillRule) Parameters fillRule CanvasFillRule Returns GlobalObject.Undefined Clip(Path2D, CanvasFillRule) GlobalObject.Undefined Clip(Path2D path, CanvasFillRule fillRule) Parameters path Path2D fillRule CanvasFillRule Returns GlobalObject.Undefined Fill(CanvasFillRule) GlobalObject.Undefined Fill(CanvasFillRule fillRule) Parameters fillRule CanvasFillRule Returns GlobalObject.Undefined Fill(Path2D, CanvasFillRule) GlobalObject.Undefined Fill(Path2D path, CanvasFillRule fillRule) Parameters path Path2D fillRule CanvasFillRule Returns GlobalObject.Undefined IsPointInPath(Path2D, double, double, CanvasFillRule) bool IsPointInPath(Path2D path, double x, double y, CanvasFillRule fillRule) Parameters path Path2D x double y double fillRule CanvasFillRule Returns bool IsPointInPath(double, double, CanvasFillRule) bool IsPointInPath(double x, double y, CanvasFillRule fillRule) Parameters x double y double fillRule CanvasFillRule Returns bool IsPointInStroke(Path2D, double, double) bool IsPointInStroke(Path2D path, double x, double y) Parameters path Path2D x double y double Returns bool IsPointInStroke(double, double) bool IsPointInStroke(double x, double y) Parameters x double y double Returns bool Stroke() GlobalObject.Undefined Stroke() Returns GlobalObject.Undefined Stroke(Path2D) GlobalObject.Undefined Stroke(Path2D path) Parameters path Path2D Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasFillRule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasFillRule.html",
    "title": "Enum CanvasFillRule | CSharpToJavaScript",
    "keywords": "Enum CanvasFillRule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasFillRule Fields Evenodd = 1 Nonzero = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasFillStrokeStyles.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasFillStrokeStyles.html",
    "title": "Interface CanvasFillStrokeStyles | CSharpToJavaScript",
    "keywords": "Interface CanvasFillStrokeStyles Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasFillStrokeStyles Properties FillStyle Union18 FillStyle { get; set; } Property Value Union18 StrokeStyle Union17 StrokeStyle { get; set; } Property Value Union17 Methods CreateConicGradient(Number, Number, Number) CanvasGradient CreateConicGradient(Number startAngle, Number x, Number y) Parameters startAngle Number x Number y Number Returns CanvasGradient CreateLinearGradient(Number, Number, Number, Number) CanvasGradient CreateLinearGradient(Number x0, Number y0, Number x1, Number y1) Parameters x0 Number y0 Number x1 Number y1 Number Returns CanvasGradient CreatePattern(Union16, string) CanvasPattern? CreatePattern(Union16 image, string repetition) Parameters image Union16 repetition string Returns CanvasPattern CreateRadialGradient(Number, Number, Number, Number, Number, Number) CanvasGradient CreateRadialGradient(Number x0, Number y0, Number r0, Number x1, Number y1, Number r1) Parameters x0 Number y0 Number r0 Number x1 Number y1 Number r1 Number Returns CanvasGradient"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasFilters.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasFilters.html",
    "title": "Interface CanvasFilters | CSharpToJavaScript",
    "keywords": "Interface CanvasFilters Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasFilters Properties Filter string Filter { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasFontKerning.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasFontKerning.html",
    "title": "Enum CanvasFontKerning | CSharpToJavaScript",
    "keywords": "Enum CanvasFontKerning Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasFontKerning Fields Auto = 0 None = 2 Normal = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasFontStretch.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasFontStretch.html",
    "title": "Enum CanvasFontStretch | CSharpToJavaScript",
    "keywords": "Enum CanvasFontStretch Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasFontStretch Fields Condensed = 2 Expanded = 6 ExtraCondensed = 1 ExtraExpanded = 7 Normal = 4 SemiCondensed = 3 SemiExpanded = 5 UltraCondensed = 0 UltraExpanded = 8"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasFontVariantCaps.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasFontVariantCaps.html",
    "title": "Enum CanvasFontVariantCaps | CSharpToJavaScript",
    "keywords": "Enum CanvasFontVariantCaps Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasFontVariantCaps Fields AllPetiteCaps = 4 AllSmallCaps = 2 Normal = 0 PetiteCaps = 3 SmallCaps = 1 TitlingCaps = 6 Unicase = 5"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasGradient.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasGradient.html",
    "title": "Class CanvasGradient | CSharpToJavaScript",
    "keywords": "Class CanvasGradient Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CanvasGradient interface represents an opaque object describing a gradient. It is returned by the methods CanvasRenderingContext2D.CreateLinearGradient, CanvasRenderingContext2D.CreateConicGradient or CanvasRenderingContext2D.CreateRadialGradient. [To(\"FirstCharToLowerCase\")] public class CanvasGradient Inheritance object CanvasGradient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It can be used as a CanvasRenderingContext2D.FillStyle or CanvasRenderingContext2D.StrokeStyle. -Creator methods in CanvasRenderingContext2D. -The {{HTMLElement(\"canvas\")}} element and its associated interface, HTMLCanvasElement. See also on MDN Methods AddColorStop(Number, string) The CanvasGradient.addColorStop() method adds a new color stop, defined by an offset and a color, to a given canvas gradient. public GlobalObject.Undefined AddColorStop(Number offset, string color) Parameters offset Number color string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The interface defining this method: CanvasGradient -CanvasRenderingContext2D.CreateLinearGradient -CanvasRenderingContext2D.CreateRadialGradient See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasImageData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasImageData.html",
    "title": "Interface CanvasImageData | CSharpToJavaScript",
    "keywords": "Interface CanvasImageData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasImageData Methods CreateImageData(ImageData) ImageData CreateImageData(ImageData imagedata) Parameters imagedata ImageData Returns ImageData CreateImageData(long, long, ImageDataSettings) ImageData CreateImageData(long sw, long sh, ImageDataSettings settings) Parameters sw long sh long settings ImageDataSettings Returns ImageData GetImageData(long, long, long, long, ImageDataSettings) ImageData GetImageData(long sx, long sy, long sw, long sh, ImageDataSettings settings) Parameters sx long sy long sw long sh long settings ImageDataSettings Returns ImageData PutImageData(ImageData, long, long) GlobalObject.Undefined PutImageData(ImageData imagedata, long dx, long dy) Parameters imagedata ImageData dx long dy long Returns GlobalObject.Undefined PutImageData(ImageData, long, long, long, long, long, long) GlobalObject.Undefined PutImageData(ImageData imagedata, long dx, long dy, long dirtyX, long dirtyY, long dirtyWidth, long dirtyHeight) Parameters imagedata ImageData dx long dy long dirtyX long dirtyY long dirtyWidth long dirtyHeight long Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasImageSmoothing.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasImageSmoothing.html",
    "title": "Interface CanvasImageSmoothing | CSharpToJavaScript",
    "keywords": "Interface CanvasImageSmoothing Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasImageSmoothing Properties ImageSmoothingEnabled bool ImageSmoothingEnabled { get; set; } Property Value bool ImageSmoothingQuality ImageSmoothingQuality ImageSmoothingQuality { get; set; } Property Value ImageSmoothingQuality"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasLineCap.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasLineCap.html",
    "title": "Enum CanvasLineCap | CSharpToJavaScript",
    "keywords": "Enum CanvasLineCap Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasLineCap Fields Butt = 0 Round = 1 Square = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasLineJoin.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasLineJoin.html",
    "title": "Enum CanvasLineJoin | CSharpToJavaScript",
    "keywords": "Enum CanvasLineJoin Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasLineJoin Fields Bevel = 1 Miter = 2 Round = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasPath.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasPath.html",
    "title": "Interface CanvasPath | CSharpToJavaScript",
    "keywords": "Interface CanvasPath Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasPath Methods Arc(double, double, double, double, double, bool) GlobalObject.Undefined Arc(double x, double y, double radius, double startAngle, double endAngle, bool counterclockwise) Parameters x double y double radius double startAngle double endAngle double counterclockwise bool Returns GlobalObject.Undefined ArcTo(double, double, double, double, double) GlobalObject.Undefined ArcTo(double x1, double y1, double x2, double y2, double radius) Parameters x1 double y1 double x2 double y2 double radius double Returns GlobalObject.Undefined BezierCurveTo(double, double, double, double, double, double) GlobalObject.Undefined BezierCurveTo(double cp1x, double cp1y, double cp2x, double cp2y, double x, double y) Parameters cp1x double cp1y double cp2x double cp2y double x double y double Returns GlobalObject.Undefined ClosePath() GlobalObject.Undefined ClosePath() Returns GlobalObject.Undefined Ellipse(double, double, double, double, double, double, double, bool) GlobalObject.Undefined Ellipse(double x, double y, double radiusX, double radiusY, double rotation, double startAngle, double endAngle, bool counterclockwise) Parameters x double y double radiusX double radiusY double rotation double startAngle double endAngle double counterclockwise bool Returns GlobalObject.Undefined LineTo(double, double) GlobalObject.Undefined LineTo(double x, double y) Parameters x double y double Returns GlobalObject.Undefined MoveTo(double, double) GlobalObject.Undefined MoveTo(double x, double y) Parameters x double y double Returns GlobalObject.Undefined QuadraticCurveTo(double, double, double, double) GlobalObject.Undefined QuadraticCurveTo(double cpx, double cpy, double x, double y) Parameters cpx double cpy double x double y double Returns GlobalObject.Undefined Rect(double, double, double, double) GlobalObject.Undefined Rect(double x, double y, double w, double h) Parameters x double y double w double h double Returns GlobalObject.Undefined RoundRect(double, double, double, double, Union19) GlobalObject.Undefined RoundRect(double x, double y, double w, double h, Union19 radii) Parameters x double y double w double h double radii Union19 Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasPathDrawingStyles.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasPathDrawingStyles.html",
    "title": "Interface CanvasPathDrawingStyles | CSharpToJavaScript",
    "keywords": "Interface CanvasPathDrawingStyles Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasPathDrawingStyles Properties LineCap CanvasLineCap LineCap { get; set; } Property Value CanvasLineCap LineDashOffset double LineDashOffset { get; set; } Property Value double LineJoin CanvasLineJoin LineJoin { get; set; } Property Value CanvasLineJoin LineWidth double LineWidth { get; set; } Property Value double MiterLimit double MiterLimit { get; set; } Property Value double Methods GetLineDash() List<double> GetLineDash() Returns List<double> SetLineDash(List<double>) GlobalObject.Undefined SetLineDash(List<double> segments) Parameters segments List<double> Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasPattern.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasPattern.html",
    "title": "Class CanvasPattern | CSharpToJavaScript",
    "keywords": "Class CanvasPattern Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CanvasPattern interface represents an opaque object describing a pattern, based on an image, a canvas, or a video, created by the CanvasRenderingContext2D.CreatePattern method. [To(\"FirstCharToLowerCase\")] public class CanvasPattern Inheritance object CanvasPattern Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It can be used as a CanvasRenderingContext2D.FillStyle or CanvasRenderingContext2D.StrokeStyle. -CanvasRenderingContext2D.CreatePattern -The {{HTMLElement(\"canvas\")}} element and its associated interface, HTMLCanvasElement See also on MDN Methods SetTransform(DOMMatrix2DInit) The CanvasPattern.setTransform() method uses a DOMMatrix object as the pattern's transformation matrix and invokes it on the pattern. public GlobalObject.Undefined SetTransform(DOMMatrix2DInit transform) Parameters transform DOMMatrix2DInit Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The interface defining this method: CanvasPattern -DOMMatrix See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasRect.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasRect.html",
    "title": "Interface CanvasRect | CSharpToJavaScript",
    "keywords": "Interface CanvasRect Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasRect Methods ClearRect(double, double, double, double) GlobalObject.Undefined ClearRect(double x, double y, double w, double h) Parameters x double y double w double h double Returns GlobalObject.Undefined FillRect(double, double, double, double) GlobalObject.Undefined FillRect(double x, double y, double w, double h) Parameters x double y double w double h double Returns GlobalObject.Undefined StrokeRect(double, double, double, double) GlobalObject.Undefined StrokeRect(double x, double y, double w, double h) Parameters x double y double w double h double Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasRenderingContext2D.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasRenderingContext2D.html",
    "title": "Class CanvasRenderingContext2D | CSharpToJavaScript",
    "keywords": "Class CanvasRenderingContext2D Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D rendering context for the drawing surface of a canvas element. It is used for drawing shapes, text, images, and other objects. [To(\"FirstCharToLowerCase\")] public class CanvasRenderingContext2D Inheritance object CanvasRenderingContext2D Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The interface&apos;s properties and methods are described in the reference section of this page. The Canvas tutorial has more explanation, examples, and resources, as well. For OffscreenCanvas, there is an equivalent interface that provides the rendering context. The offscreen rendering context inherits most of the same properties and methods as the CanvasRenderingContext2D and is described in more detail in the OffscreenCanvasRenderingContext2D reference page. -HTMLCanvasElement -canvas -OffscreenCanvas See also on MDN Properties Canvas The CanvasRenderingContext2D.canvas property, part of the Canvas API, is a read-only reference to the HTMLCanvasElement object that is associated with a given context. It might be null if there is no associated canvas element. public HTMLCanvasElement Canvas { get; } Property Value HTMLCanvasElement A HTMLCanvasElement object. Remarks -CanvasRenderingContext2D interface -Canvas API See also on MDN Methods GetContextAttributes() The CanvasRenderingContext2D.getContextAttributes() method returns an object that contains the actual context parameters. Context attributes can be requested with HTMLCanvasElement.getContext() on context creation. public CanvasRenderingContext2DSettings GetContextAttributes() Returns CanvasRenderingContext2DSettings A CanvasRenderingContext2DSettings object that contains the actual context parameters. It has the following members: Remarks -HTMLCanvasElement.getContext() -WebGLRenderingContext.getContextAttributes() See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasRenderingContext2DSettings.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasRenderingContext2DSettings.html",
    "title": "Class CanvasRenderingContext2DSettings | CSharpToJavaScript",
    "keywords": "Class CanvasRenderingContext2DSettings Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CanvasRenderingContext2DSettings Inheritance object CanvasRenderingContext2DSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alpha public bool Alpha Field Value bool ColorSpace public PredefinedColorSpace ColorSpace Field Value PredefinedColorSpace Desynchronized public bool Desynchronized Field Value bool WillReadFrequently public bool WillReadFrequently Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasShadowStyles.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasShadowStyles.html",
    "title": "Interface CanvasShadowStyles | CSharpToJavaScript",
    "keywords": "Interface CanvasShadowStyles Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasShadowStyles Properties ShadowBlur double ShadowBlur { get; set; } Property Value double ShadowColor string ShadowColor { get; set; } Property Value string ShadowOffsetX double ShadowOffsetX { get; set; } Property Value double ShadowOffsetY double ShadowOffsetY { get; set; } Property Value double"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasState.html",
    "title": "Interface CanvasState | CSharpToJavaScript",
    "keywords": "Interface CanvasState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasState Methods IsContextLost() bool IsContextLost() Returns bool Reset() GlobalObject.Undefined Reset() Returns GlobalObject.Undefined Restore() GlobalObject.Undefined Restore() Returns GlobalObject.Undefined Save() GlobalObject.Undefined Save() Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasText.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasText.html",
    "title": "Interface CanvasText | CSharpToJavaScript",
    "keywords": "Interface CanvasText Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasText Methods FillText(string, double, double, double) GlobalObject.Undefined FillText(string text, double x, double y, double maxWidth) Parameters text string x double y double maxWidth double Returns GlobalObject.Undefined MeasureText(string) TextMetrics MeasureText(string text) Parameters text string Returns TextMetrics StrokeText(string, double, double, double) GlobalObject.Undefined StrokeText(string text, double x, double y, double maxWidth) Parameters text string x double y double maxWidth double Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasTextAlign.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasTextAlign.html",
    "title": "Enum CanvasTextAlign | CSharpToJavaScript",
    "keywords": "Enum CanvasTextAlign Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasTextAlign Fields Center = 4 End = 1 Left = 2 Right = 3 Start = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasTextBaseline.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasTextBaseline.html",
    "title": "Enum CanvasTextBaseline | CSharpToJavaScript",
    "keywords": "Enum CanvasTextBaseline Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasTextBaseline Fields Alphabetic = 3 Bottom = 5 Hanging = 1 Ideographic = 4 Middle = 2 Top = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasTextDrawingStyles.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasTextDrawingStyles.html",
    "title": "Interface CanvasTextDrawingStyles | CSharpToJavaScript",
    "keywords": "Interface CanvasTextDrawingStyles Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasTextDrawingStyles Properties Direction CanvasDirection Direction { get; set; } Property Value CanvasDirection Font string Font { get; set; } Property Value string FontKerning CanvasFontKerning FontKerning { get; set; } Property Value CanvasFontKerning FontStretch CanvasFontStretch FontStretch { get; set; } Property Value CanvasFontStretch FontVariantCaps CanvasFontVariantCaps FontVariantCaps { get; set; } Property Value CanvasFontVariantCaps LetterSpacing string LetterSpacing { get; set; } Property Value string TextAlign CanvasTextAlign TextAlign { get; set; } Property Value CanvasTextAlign TextBaseline CanvasTextBaseline TextBaseline { get; set; } Property Value CanvasTextBaseline TextRendering CanvasTextRendering TextRendering { get; set; } Property Value CanvasTextRendering WordSpacing string WordSpacing { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasTextRendering.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasTextRendering.html",
    "title": "Enum CanvasTextRendering | CSharpToJavaScript",
    "keywords": "Enum CanvasTextRendering Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasTextRendering Fields Auto = 0 GeometricPrecision = 3 OptimizeLegibility = 2 OptimizeSpeed = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasTransform.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasTransform.html",
    "title": "Interface CanvasTransform | CSharpToJavaScript",
    "keywords": "Interface CanvasTransform Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasTransform Methods GetTransform() DOMMatrix GetTransform() Returns DOMMatrix ResetTransform() GlobalObject.Undefined ResetTransform() Returns GlobalObject.Undefined Rotate(double) GlobalObject.Undefined Rotate(double angle) Parameters angle double Returns GlobalObject.Undefined Scale(double, double) GlobalObject.Undefined Scale(double x, double y) Parameters x double y double Returns GlobalObject.Undefined SetTransform(DOMMatrix2DInit) GlobalObject.Undefined SetTransform(DOMMatrix2DInit transform) Parameters transform DOMMatrix2DInit Returns GlobalObject.Undefined SetTransform(double, double, double, double, double, double) GlobalObject.Undefined SetTransform(double a, double b, double c, double d, double e, double f) Parameters a double b double c double d double e double f double Returns GlobalObject.Undefined Transform(double, double, double, double, double, double) GlobalObject.Undefined Transform(double a, double b, double c, double d, double e, double f) Parameters a double b double c double d double e double f double Returns GlobalObject.Undefined Translate(double, double) GlobalObject.Undefined Translate(double x, double y) Parameters x double y double Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasUserInterface.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasUserInterface.html",
    "title": "Interface CanvasUserInterface | CSharpToJavaScript",
    "keywords": "Interface CanvasUserInterface Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasUserInterface Methods DrawFocusIfNeeded(Element) GlobalObject.Undefined DrawFocusIfNeeded(Element element) Parameters element Element Returns GlobalObject.Undefined DrawFocusIfNeeded(Path2D, Element) GlobalObject.Undefined DrawFocusIfNeeded(Path2D path, Element element) Parameters path Path2D element Element Returns GlobalObject.Undefined ScrollPathIntoView() GlobalObject.Undefined ScrollPathIntoView() Returns GlobalObject.Undefined ScrollPathIntoView(Path2D) GlobalObject.Undefined ScrollPathIntoView(Path2D path) Parameters path Path2D Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.ChannelCountMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ChannelCountMode.html",
    "title": "Enum ChannelCountMode | CSharpToJavaScript",
    "keywords": "Enum ChannelCountMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ChannelCountMode Fields ClampedMax = 1 Explicit = 2 Max = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.ChannelInterpretation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ChannelInterpretation.html",
    "title": "Enum ChannelInterpretation | CSharpToJavaScript",
    "keywords": "Enum ChannelInterpretation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ChannelInterpretation Fields Discrete = 1 Speakers = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.ChannelMergerNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ChannelMergerNode.html",
    "title": "Class ChannelMergerNode | CSharpToJavaScript",
    "keywords": "Class ChannelMergerNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ChannelMergerNode interface, often used in conjunction with its opposite, ChannelSplitterNode, reunites different mono inputs into a single output. Each input is used to fill a channel of the output. This is useful for accessing each channels separately, e.g. for performing channel mixing where gain must be separately controlled on each channel. [To(\"FirstCharToLowerCase\")] public class ChannelMergerNode : AudioNode Inheritance object EventTarget AudioNode ChannelMergerNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Default channel merger node with six mono inputs combining to form a single output. If ChannelMergerNode has one single output, but as many inputs as there are channels to merge; the number of inputs is defined as a parameter of its constructor and the call to BaseAudioContext/createChannelMerger. In the case that no value is given, it will default to 6. Using a ChannelMergerNode, it is possible to create outputs with more channels than the rendering hardware is able to process. In that case, when the signal is sent to the BaseAudioContext/listener object, supernumerary channels will be ignored. -Using the Web Audio API See also on MDN Constructors ChannelMergerNode() public ChannelMergerNode() ChannelMergerNode(BaseAudioContext, ChannelMergerOptions) The ChannelMergerNode() constructor creates a new ChannelMergerNode object instance. public ChannelMergerNode(BaseAudioContext context, ChannelMergerOptions options) Parameters context BaseAudioContext options ChannelMergerOptions Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ChannelMergerOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ChannelMergerOptions.html",
    "title": "Class ChannelMergerOptions | CSharpToJavaScript",
    "keywords": "Class ChannelMergerOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ChannelMergerOptions : AudioNodeOptions Inheritance object AudioNodeOptions ChannelMergerOptions Inherited Members AudioNodeOptions.ChannelCount AudioNodeOptions.ChannelCountMode AudioNodeOptions.ChannelInterpretation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NumberOfInputs public ulong NumberOfInputs Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.ChannelSplitterNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ChannelSplitterNode.html",
    "title": "Class ChannelSplitterNode | CSharpToJavaScript",
    "keywords": "Class ChannelSplitterNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ChannelSplitterNode interface, often used in conjunction with its opposite, ChannelMergerNode, separates the different channels of an audio source into a set of mono outputs. This is useful for accessing each channel separately, e.g. for performing channel mixing where gain must be separately controlled on each channel. [To(\"FirstCharToLowerCase\")] public class ChannelSplitterNode : AudioNode Inheritance object EventTarget AudioNode ChannelSplitterNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Default channel splitter node with a single input splitting to form 6 mono outputs. If your ChannelSplitterNode always has one single input, the amount of outputs is defined by a parameter on its constructor and the call to BaseAudioContext/createChannelSplitter. In the case that no value is given, it will default to 6. If there are fewer channels in the input than there are outputs, supernumerary outputs are silent. -Using the Web Audio API See also on MDN Constructors ChannelSplitterNode() public ChannelSplitterNode() ChannelSplitterNode(BaseAudioContext, ChannelSplitterOptions) The ChannelSplitterNode() constructor of the Web Audio API creates a new ChannelSplitterNode object instance, representing a node that splits the input into a separate output for each of the source node's audio channels. public ChannelSplitterNode(BaseAudioContext context, ChannelSplitterOptions options) Parameters context BaseAudioContext options ChannelSplitterOptions Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ChannelSplitterOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ChannelSplitterOptions.html",
    "title": "Class ChannelSplitterOptions | CSharpToJavaScript",
    "keywords": "Class ChannelSplitterOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ChannelSplitterOptions : AudioNodeOptions Inheritance object AudioNodeOptions ChannelSplitterOptions Inherited Members AudioNodeOptions.ChannelCount AudioNodeOptions.ChannelCountMode AudioNodeOptions.ChannelInterpretation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NumberOfOutputs public ulong NumberOfOutputs Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.CharacterData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CharacterData.html",
    "title": "Class CharacterData | CSharpToJavaScript",
    "keywords": "Class CharacterData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CharacterData abstract interface represents a Node object that contains characters. This is an abstract interface, meaning there aren't any objects of type CharacterData: it is implemented by other interfaces like Text, Comment, CDATASection, or ProcessingInstruction, which aren't abstract. [To(\"FirstCharToLowerCase\")] public class CharacterData : Node, NonDocumentTypeChildNode, ChildNode Inheritance object EventTarget Node CharacterData Implements NonDocumentTypeChildNode ChildNode Derived Comment ProcessingInstruction Text Inherited Members Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The DOM overview page. -The concrete interfaces implemented it: Text, CDATASection, ProcessingInstruction, and Comment. See also on MDN Properties Data The data property of the CharacterData interface represent the value of the current object's data. public string Data { get; set; } Property Value string A string with the character information contained in the CharacterData node. Remarks -Length returning the length of the data contained in the CharacterData node. See also on MDN Length The read-only CharacterData.length property returns the number of characters in the contained data, as a positive integer. public ulong Length { get; } Property Value ulong A positive integer with the length of the Data string. Remarks See also on MDN Methods AppendData(string) The appendData() method of the CharacterData interface adds the provided data to the end of the node&apos;s current data. public GlobalObject.Undefined AppendData(string data) Parameters data string Returns GlobalObject.Undefined None. Remarks -DeleteData(ulong, ulong), InsertData(ulong, string), ReplaceData(ulong, ulong, string) -Data See also on MDN DeleteData(ulong, ulong) The deleteData() method of the CharacterData interface removes all or part of the data from this CharacterData node. public GlobalObject.Undefined DeleteData(ulong offset, ulong count) Parameters offset ulong count ulong Returns GlobalObject.Undefined None. Remarks -AppendData(string), InsertData(ulong, string), ReplaceData(ulong, ulong, string) -Data See also on MDN InsertData(ulong, string) The insertData() method of the CharacterData interface inserts the provided data into this CharacterData node&apos;s current data, at the provided offset from the start of the existing data. The provided data is spliced into the existing data. public GlobalObject.Undefined InsertData(ulong offset, string data) Parameters offset ulong data string Returns GlobalObject.Undefined None. Remarks -AppendData(string), DeleteData(ulong, ulong), ReplaceData(ulong, ulong, string) -Data See also on MDN ReplaceData(ulong, ulong, string) The replaceData() method of the CharacterData interface removes a certain number of characters of the existing text in a given CharacterData node and replaces those characters with the text provided. public GlobalObject.Undefined ReplaceData(ulong offset, ulong count, string data) Parameters offset ulong count ulong data string Returns GlobalObject.Undefined None. Remarks -AppendData(string) -DeleteData(ulong, ulong) -InsertData(ulong, string) -Data See also on MDN SubstringData(ulong, ulong) The substringData() method of the CharacterData interface returns a portion of the existing data, starting at the specified index and extending for a given number of characters afterwards. public string SubstringData(ulong offset, ulong count) Parameters offset ulong count ulong Returns string A string with the substring. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ChildBreakToken.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ChildBreakToken.html",
    "title": "Class ChildBreakToken | CSharpToJavaScript",
    "keywords": "Class ChildBreakToken Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ChildBreakToken Inheritance object ChildBreakToken Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BreakType public BreakType BreakType { get; } Property Value BreakType Child public LayoutChild Child { get; } Property Value LayoutChild"
  },
  "api/CSharpToJavaScript.APIs.JS.ChildDisplayType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ChildDisplayType.html",
    "title": "Enum ChildDisplayType | CSharpToJavaScript",
    "keywords": "Enum ChildDisplayType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ChildDisplayType Fields Block = 0 Normal = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.ChildNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ChildNode.html",
    "title": "Interface ChildNode | CSharpToJavaScript",
    "keywords": "Interface ChildNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface ChildNode Methods After(params Union47[]) GlobalObject.Undefined After(params Union47[] nodes) Parameters nodes Union47[] Returns GlobalObject.Undefined Before(params Union46[]) GlobalObject.Undefined Before(params Union46[] nodes) Parameters nodes Union46[] Returns GlobalObject.Undefined Remove() GlobalObject.Undefined Remove() Returns GlobalObject.Undefined ReplaceWith(params Union48[]) GlobalObject.Undefined ReplaceWith(params Union48[] nodes) Parameters nodes Union48[] Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.Client.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Client.html",
    "title": "Class Client | CSharpToJavaScript",
    "keywords": "Class Client Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Client interface represents an executable context such as a Worker, or a SharedWorker. Window clients are represented by the more-specific WindowClient. You can get Client/WindowClient objects from methods such as MatchAll(ClientQueryOptions) and Get(string). [To(\"FirstCharToLowerCase\")] public class Client Inheritance object Client Derived WindowClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Using Service Workers -Is ServiceWorker ready? -Promises See also on MDN Properties FrameType The frameType read-only property of the Client interface indicates the type of browsing context of the current Client. This value can be one of &quot;auxiliary&quot;, &quot;top-level&quot;, &quot;nested&quot;, or &quot;none&quot;. public FrameType FrameType { get; } Property Value FrameType One of these four strings: &quot;auxiliary&quot;, &quot;top-level&quot;, &quot;nested&quot;, or &quot;none&quot;. Remarks See also on MDN Id The id read-only property of the Client interface returns the universally unique identifier of the Client object. public string Id { get; } Property Value string A string uniquely identifying the object. Remarks See also on MDN Type The type read-only property of the Client interface indicates the type of client the service worker is controlling. public ClientType Type { get; } Property Value ClientType A string, representing the client type. The value can be one of Remarks See also on MDN Url The url read-only property of the Client interface returns the URL of the current service worker client. public string Url { get; } Property Value string A string. Remarks See also on MDN Methods PostMessage(dynamic, StructuredSerializeOptions) The postMessage() method of the Client interface allows a service worker to send a message to a client (a Window, Worker, or SharedWorker). The message is received in the &quot;message&quot; event on ServiceWorkerContainer. public GlobalObject.Undefined PostMessage(dynamic message, StructuredSerializeOptions options) Parameters message dynamic options StructuredSerializeOptions Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN PostMessage(dynamic, List<object>) The postMessage() method of the Client interface allows a service worker to send a message to a client (a Window, Worker, or SharedWorker). The message is received in the &quot;message&quot; event on ServiceWorkerContainer. public GlobalObject.Undefined PostMessage(dynamic message, List<object> transfer) Parameters message dynamic transfer List<object> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ClientQueryOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ClientQueryOptions.html",
    "title": "Class ClientQueryOptions | CSharpToJavaScript",
    "keywords": "Class ClientQueryOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ClientQueryOptions Inheritance object ClientQueryOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IncludeUncontrolled public bool IncludeUncontrolled Field Value bool Type public ClientType Type Field Value ClientType"
  },
  "api/CSharpToJavaScript.APIs.JS.ClientType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ClientType.html",
    "title": "Enum ClientType | CSharpToJavaScript",
    "keywords": "Enum ClientType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The type read-only property of the Client interface indicates the type of client the service worker is controlling. public enum ClientType Fields All = 3 Sharedworker = 2 Window = 0 Worker = 1 Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Clients.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Clients.html",
    "title": "Class Clients | CSharpToJavaScript",
    "keywords": "Class Clients Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Clients interface provides access to Client objects. Access it via {{domxref(&quot;ServiceWorkerGlobalScope&quot;, &quot;self&quot;)}}.clients within a service worker. [To(\"FirstCharToLowerCase\")] public class Clients Inheritance object Clients Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Using Service Workers -Is ServiceWorker ready? -Promise See also on MDN Methods Claim() The claim() method of the Clients interface allows an active service worker to set itself as the Controller for all clients within its Scope. This triggers a &quot;controllerchange\" event on ServiceWorkerContainer in any clients that become controlled by this service worker. public Task<GlobalObject.Undefined> Claim() Returns Task<GlobalObject.Undefined> A Promise that resolves to undefined. Remarks When a service worker is initially registered, pages won&apos;t use it until they next load. The claim() method causes those pages to be controlled immediately. Be aware that this results in your service worker controlling pages that loaded regularly over the network, or possibly via a different service worker. -Using Service Workers -The service worker lifecycle -Is ServiceWorker ready? -Promise -SkipWaiting() - skip the service worker's waiting phase See also on MDN Get(string) The get() method of the Clients interface gets a service worker client matching a given id and returns it in a Promise. public Task<Client> Get(string id) Parameters id string Returns Task<Client> A {{jsxref(\"Promise\")}} that resolves to a Client object or undefined. Remarks See also on MDN MatchAll(ClientQueryOptions) The matchAll() method of the Clients interface returns a Promise for a list of service worker Client objects. Include the options parameter to return all service worker clients whose origin is the same as the associated service worker&apos;s origin. If options are not included, the method returns only the service worker clients controlled by the service worker. public Task<Client[]> MatchAll(ClientQueryOptions options) Parameters options ClientQueryOptions Returns Task<Client[]> A {{jsxref(\"Promise\")}} that resolves to an array of Client objects. In Chrome 46/Firefox 54 and later, this method returns clients in most recently focused order, correct as per spec. Remarks See also on MDN OpenWindow(string) The openWindow() method of the Clients interface creates a new top level browsing context and loads a given URL. If the calling script doesn&apos;t have permission to show popups, openWindow() will throw an InvalidAccessError. public Task<WindowClient?> OpenWindow(string url) Parameters url string Returns Task<WindowClient> A {{jsxref(\"Promise\")}} that resolves to a WindowClient object if the URL is from the same origin as the service worker or a {{Glossary(&quot;null&quot;, &quot;null value&quot;)}} otherwise. Remarks In Firefox, the method is allowed to show popups only when called as the result of a notification click event. In Chrome for Android, the method may instead open the URL in an existing browsing context provided by a standalone web app previously added to the user&apos;s home screen. As of recently, this also works on Chrome for Windows. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Clipboard.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Clipboard.html",
    "title": "Class Clipboard | CSharpToJavaScript",
    "keywords": "Class Clipboard Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Clipboard interface implements the Clipboard API, providing—if the user grants permission—both read and write access to the contents of the system clipboard. The Clipboard API can be used to implement cut, copy, and paste features within a web application. [To(\"FirstCharToLowerCase\")] public class Clipboard : EventTarget Inheritance object EventTarget Clipboard Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The system clipboard is exposed through the global Clipboard property. Calls to the methods of the Clipboard object will not succeed if the user hasn&apos;t granted the needed permissions using the Permissions API and the &apos;clipboard-read&apos; or &apos;clipboard-write&apos; permission as appropriate. NOTE Note: In reality, at this time browser requirements for access to the clipboard vary significantly. Please see the section Clipboard availability for details. All of the Clipboard API methods operate asynchronously; they return a Promise which is resolved once the clipboard access has been completed. The promise is rejected if clipboard access is denied. -ExecCommand(string, bool, string) See also on MDN Methods Read() The read() method of the Clipboard interface requests a copy of the clipboard's contents, delivering the data to the returned Promise when the promise is resolved. Unlike ReadText(), the read() method can return arbitrary data, such as images. This method can also return text. public Task<List<ClipboardItem>> Read() Returns Task<List<ClipboardItem>> A {{jsxref(\"Promise\")}} that resolves with an array of ClipboardItem objects containing the clipboard&apos;s contents. The promise is rejected if permission to access the clipboard is not granted. Remarks NOTE Note: The asynchronous Clipboard and Permissions APIs are still in the process of being integrated into most browsers, so they often deviate from the official rules for permissions and the like. Be sure to review the compatibility table before using these methods. -Clipboard API -Async Clipboard API demo on Glitch -Image support for Async Clipboard article See also on MDN ReadText() The Clipboard interface&apos;s readText() method returns a Promise which resolves with a copy of the textual contents of the system clipboard. public Task<string> ReadText() Returns Task<string> A Promise that resolves with a string containing the textual contents of the clipboard. Returns an empty string if the clipboard is empty, does not contain text, or does not include a textual representation among the DataTransfer objects representing the clipboard's contents.To read non-text contents from the clipboard, use the {{domxref(&quot;Clipboard.read&quot;, &quot;read()&quot;)}} method instead. You can write text to the clipboard using WriteText(string). Remarks -Clipboard API -Async Clipboard API demo on Glitch -Image support for Async Clipboard article -WriteText(string) -Write(List<ClipboardItem>) See also on MDN Write(List<ClipboardItem>) The Clipboard method write() writes arbitrary data, such as images, to the clipboard. This can be used to implement cut and copy functionality. public Task<GlobalObject.Undefined> Write(List<ClipboardItem> data) Parameters data List<ClipboardItem> Returns Task<GlobalObject.Undefined> A Promise which is resolved when the data has been written to the clipboard. The promise is rejected if the clipboard is unable to complete the clipboard access. Remarks The &quot;clipboard-write&quot; permission of the Permissions API, is granted automatically to pages when they are in the active tab. NOTE Note: Browser support for the asynchronous clipboard APIs is still in the process of being implemented. Be sure to check the compatibility table as well as Clipboard availability for more information. NOTE Note: For parity with Google Chrome, Firefox only allows this function to work with text, HTML, and PNG data. -Clipboard API -Async Clipboard API demo on Glitch -Image support for Async Clipboard article See also on MDN WriteText(string) The Clipboard interface's writeText() property writes the specified text string to the system clipboard. Text may be read back using either Read() or {{domxref(\"Clipboard.readText\", &quot;readText()&quot;)}}. public Task<GlobalObject.Undefined> WriteText(string data) Parameters data string Returns Task<GlobalObject.Undefined> A Promise which is resolved once the clipboard's contents have been updated. The promise is rejected if the caller does not have permission to write to the clipboard. Remarks -Clipboard API -Async Clipboard API demo on Glitch -Image support for Async Clipboard article See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ClipboardEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ClipboardEvent.html",
    "title": "Class ClipboardEvent | CSharpToJavaScript",
    "keywords": "Class ClipboardEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ClipboardEvent interface represents events providing information related to modification of the clipboard, that is Element/cut_event, Element/copy_event, and Element/paste_event events. [To(\"FirstCharToLowerCase\")] public class ClipboardEvent : Event Inheritance object Event ClipboardEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Copy-related events: Element/copy_event, Element/cut_event, Element/paste_event -Clipboard API -Async Clipboard API demo on Glitch -Image support for Async Clipboard article See also on MDN Constructors ClipboardEvent() public ClipboardEvent() ClipboardEvent(string, ClipboardEventInit) The ClipboardEvent() constructor returns a new ClipboardEvent, representing an event providing information related to modification of the clipboard, that is Element/cut_event, Element/copy_event, and Element/paste_event events. public ClipboardEvent(string type, ClipboardEventInit eventInitDict) Parameters type string eventInitDict ClipboardEventInit Remarks -Copy-related events: Element/copy_event, Element/cut_event, Element/paste_event -The ClipboardEvent interface it belongs to. -Clipboard API See also on MDN Properties ClipboardData The ClipboardEvent.clipboardData property holds a DataTransfer object, which can be used: public DataTransfer? ClipboardData { get; } Property Value DataTransfer A DataTransfer object. Remarks See the Element/cut_event, Element/copy_event, and Element/paste_event events documentation for more information. -Copy-related events: Element/copy_event, Element/cut_event, Element/paste_event -The ClipboardEvent interface it belongs to. -Clipboard API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ClipboardEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ClipboardEventInit.html",
    "title": "Class ClipboardEventInit | CSharpToJavaScript",
    "keywords": "Class ClipboardEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ClipboardEventInit : EventInit Inheritance object EventInit ClipboardEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ClipboardData public DataTransfer? ClipboardData Field Value DataTransfer"
  },
  "api/CSharpToJavaScript.APIs.JS.ClipboardItem.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ClipboardItem.html",
    "title": "Class ClipboardItem | CSharpToJavaScript",
    "keywords": "Class ClipboardItem Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ClipboardItem interface of the 'Clipboard API' represents a single item format, used when reading or writing data via the 'Clipboard API'. That is Read() and Write(List<ClipboardItem>) respectively. [To(\"FirstCharToLowerCase\")] public class ClipboardItem Inheritance object ClipboardItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The benefit of having the ClipboardItem interface to represent data, is that it enables developers to cope with the varying scope of file types and data easily. Access to the contents of the clipboard is gated behind the Permissions API: The clipboard-write permission is granted automatically to pages when they are in the active tab. The clipboard-read permission must be requested, which you can do by trying to read data from the clipboard. NOTE Note: To work with text see the ReadText() and WriteText(string) methods of the Clipboard interface. NOTE Note: You can only pass in one clipboard item at a time. -Clipboard API -Async Clipboard API demo on Glitch -Image support for Async Clipboard article See also on MDN Constructors ClipboardItem() public ClipboardItem() ClipboardItem(Dictionary<string, Task<string>>, ClipboardItemOptions) The ClipboardItem() constructor of the Clipboard API creates a new ClipboardItem object which represents data to be stored or retrieved via the Clipboard API, that is Write(List<ClipboardItem>) and Read() respectively. public ClipboardItem(Dictionary<string, Task<string>> items, ClipboardItemOptions options) Parameters items Dictionary<string, Task<string>> options ClipboardItemOptions Remarks NOTE Note: Image format support varies by browser. See the browser compatibility table for the Clipboard interface. -Clipboard API -Async Clipboard API demo on Glitch -Image support for Async Clipboard article See also on MDN Properties PresentationStyle The read-only presentationStyle property of the ClipboardItem interface returns a string indicating how an item should be presented. public PresentationStyle PresentationStyle { get; } Property Value PresentationStyle One of either &quot;unspecified&quot;, &quot;inline&quot; or &quot;attachment&quot;. Remarks -Clipboard API -Async Clipboard API demo on Glitch -Image support for Async Clipboard article See also on MDN Types The read-only types property of the ClipboardItem interface returns an Array of {{Glossary(\"MIME type\", 'MIME types')}} available within the ClipboardItem public string[] Types { get; } Property Value string[] An Array of available {{Glossary(\"MIME type\", 'MIME types')}}. Remarks -Clipboard API -Async Clipboard API demo on Glitch -Image support for Async Clipboard article See also on MDN Methods GetType(string) The getType() method of the ClipboardItem interface returns a {{jsxref(\"Promise\")}} that resolves with a Blob of the requested {{Glossary(\"MIME type\")}} or an error if the MIME type is not found. public Task<Blob> GetType(string type) Parameters type string Returns Task<Blob> A {{jsxref(\"Promise\")}} that resolves with a Blob object. Remarks -Clipboard API -Async Clipboard API demo on Glitch -Image support for Async Clipboard article See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ClipboardItemOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ClipboardItemOptions.html",
    "title": "Class ClipboardItemOptions | CSharpToJavaScript",
    "keywords": "Class ClipboardItemOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ClipboardItemOptions Inheritance object ClipboardItemOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields PresentationStyle public PresentationStyle PresentationStyle Field Value PresentationStyle"
  },
  "api/CSharpToJavaScript.APIs.JS.ClipboardPermissionDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ClipboardPermissionDescriptor.html",
    "title": "Class ClipboardPermissionDescriptor | CSharpToJavaScript",
    "keywords": "Class ClipboardPermissionDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ClipboardPermissionDescriptor Inheritance object ClipboardPermissionDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AllowWithoutGesture public bool AllowWithoutGesture Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.CloseEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CloseEvent.html",
    "title": "Class CloseEvent | CSharpToJavaScript",
    "keywords": "Class CloseEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll A CloseEvent is sent to clients using WebSockets when the connection is closed. This is delivered to the listener indicated by the WebSocket object&apos;s onclose attribute. [To(\"FirstCharToLowerCase\")] public class CloseEvent : Event Inheritance object Event CloseEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -WebSocket See also on MDN Constructors CloseEvent() public CloseEvent() CloseEvent(string, CloseEventInit) The CloseEvent() constructor creates a new CloseEvent object. public CloseEvent(string type, CloseEventInit eventInitDict) Parameters type string eventInitDict CloseEventInit Remarks -CloseEvent, the interface of the objects it constructs. See also on MDN Properties Code The code read-only property of the CloseEvent interface returns a WebSocket connection close code indicating the reason the server gave for closing the connection. public ushort Code { get; } Property Value ushort An integer WebSocket connection close code in the range 1000 - 4999, indicating the reason the server gave for closing the connection. Remarks -RFC 6455 (the WebSocket Protocol specification) -WebSocket Close Code Number Registry (IANA) See also on MDN Reason The reason read-only property of the CloseEvent interface returns the WebSocket connection close reason the server gave for closing the connection; that is, a concise human-readable prose explanation for the closure. public string Reason { get; } Property Value string A string. Remarks -RFC 6455 (the WebSocket Protocol specification) See also on MDN WasClean The wasClean read-only property of the CloseEvent interface returns true if the connection closed cleanly. public bool WasClean { get; } Property Value bool A boolean value. True if the connection closed cleanly, false otherwise. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CloseEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CloseEventInit.html",
    "title": "Class CloseEventInit | CSharpToJavaScript",
    "keywords": "Class CloseEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CloseEventInit : EventInit Inheritance object EventInit CloseEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Code public ushort Code Field Value ushort Reason public string Reason Field Value string WasClean public bool WasClean Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.CodecState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CodecState.html",
    "title": "Enum CodecState | CSharpToJavaScript",
    "keywords": "Enum CodecState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CodecState Fields Closed = 2 Configured = 1 Unconfigured = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.CollectedClientAdditionalPaymentData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CollectedClientAdditionalPaymentData.html",
    "title": "Class CollectedClientAdditionalPaymentData | CSharpToJavaScript",
    "keywords": "Class CollectedClientAdditionalPaymentData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CollectedClientAdditionalPaymentData Inheritance object CollectedClientAdditionalPaymentData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instrument public required PaymentCredentialInstrument Instrument Field Value PaymentCredentialInstrument PayeeName public string PayeeName Field Value string PayeeOrigin public string PayeeOrigin Field Value string RpId public required string RpId Field Value string TopOrigin public required string TopOrigin Field Value string Total public required Unsupported Total Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.CollectedClientData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CollectedClientData.html",
    "title": "Class CollectedClientData | CSharpToJavaScript",
    "keywords": "Class CollectedClientData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CollectedClientData Inheritance object CollectedClientData Derived CollectedClientPaymentData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Challenge public required string Challenge Field Value string Origin public required string Origin Field Value string TokenBinding public TokenBinding TokenBinding Field Value TokenBinding Type public required string Type Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.CollectedClientPaymentData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CollectedClientPaymentData.html",
    "title": "Class CollectedClientPaymentData | CSharpToJavaScript",
    "keywords": "Class CollectedClientPaymentData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CollectedClientPaymentData : CollectedClientData Inheritance object CollectedClientData CollectedClientPaymentData Inherited Members CollectedClientData.Type CollectedClientData.Challenge CollectedClientData.Origin CollectedClientData.TokenBinding object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Payment public required CollectedClientAdditionalPaymentData Payment Field Value CollectedClientAdditionalPaymentData"
  },
  "api/CSharpToJavaScript.APIs.JS.ColorGamut.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ColorGamut.html",
    "title": "Enum ColorGamut | CSharpToJavaScript",
    "keywords": "Enum ColorGamut Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ColorGamut Fields P3 = 1 Rec2020 = 2 Srgb = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.ColorSpaceConversion.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ColorSpaceConversion.html",
    "title": "Enum ColorSpaceConversion | CSharpToJavaScript",
    "keywords": "Enum ColorSpaceConversion Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ColorSpaceConversion Fields Default = 1 None = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.Comment.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Comment.html",
    "title": "Class Comment | CSharpToJavaScript",
    "keywords": "Class Comment Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Comment interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view. [To(\"FirstCharToLowerCase\")] public class Comment : CharacterData, NonDocumentTypeChildNode, ChildNode Inheritance object EventTarget Node CharacterData Comment Implements NonDocumentTypeChildNode ChildNode Inherited Members CharacterData.Data CharacterData.Length CharacterData.SubstringData(ulong, ulong) CharacterData.AppendData(string) CharacterData.InsertData(ulong, string) CharacterData.DeleteData(ulong, ulong) CharacterData.ReplaceData(ulong, ulong, string) Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Comments are represented in HTML and XML as content between &apos;&lt;!--&apos; and &apos;--&gt;&apos;. In XML, like inside SVG or MathML markup, the character sequence &apos;--&apos; cannot be used within a comment. -The DOM API See also on MDN Constructors Comment() public Comment() Comment(string) The Comment() constructor returns a newly created Comment object with the optional string given in parameter as its textual content. public Comment(string data) Parameters data string Remarks -The DOM interfaces index -CreateComment(string) is an outdated alternative to this constructor. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CompileError.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CompileError.html",
    "title": "Class CompileError | CSharpToJavaScript",
    "keywords": "Class CompileError Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CompileError Inheritance object CompileError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.CompositionEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CompositionEvent.html",
    "title": "Class CompositionEvent | CSharpToJavaScript",
    "keywords": "Class CompositionEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOM CompositionEvent represents events that occur due to the user indirectly entering text. [To(\"FirstCharToLowerCase\")] public class CompositionEvent : UIEvent Inheritance object Event UIEvent CompositionEvent Inherited Members UIEvent.View UIEvent.Detail UIEvent.InitUIEvent(string, bool, bool, Window, long) UIEvent.Which Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -compositionstart -compositionend -compositionupdate -UIEvent -Event See also on MDN Constructors CompositionEvent() public CompositionEvent() CompositionEvent(string, CompositionEventInit) The CompositionEvent() constructor creates a new CompositionEvent object. public CompositionEvent(string type, CompositionEventInit eventInitDict) Parameters type string eventInitDict CompositionEventInit Remarks -CompositionEvent, the interface of the objects it constructs. See also on MDN Properties Data The data read-only property of the CompositionEvent interface returns the characters generated by the input method that raised the event; its exact nature varies depending on the type of event that generated the CompositionEvent object. public string Data { get; } Property Value string A string representing the event data: Remarks -CompositionEvent See also on MDN Methods InitCompositionEvent(string, bool, bool, Window?, string) IMPORTANT Deprecated The initCompositionEvent() method of the CompositionEvent interface initializes the attributes of a CompositionEvent object instance. public GlobalObject.Undefined InitCompositionEvent(string typeArg, bool bubblesArg, bool cancelableArg, Window? viewArg, string dataArg) Parameters typeArg string bubblesArg bool cancelableArg bool viewArg Window dataArg string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: The correct way of creating a CompositionEvent is to use the constructor CompositionEvent(string, CompositionEventInit). -CompositionEvent See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CompositionEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CompositionEventInit.html",
    "title": "Class CompositionEventInit | CSharpToJavaScript",
    "keywords": "Class CompositionEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CompositionEventInit : UIEventInit Inheritance object EventInit UIEventInit CompositionEventInit Inherited Members UIEventInit.View UIEventInit.Detail UIEventInit.Which EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Data public string Data Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.ComputedEffectTiming.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ComputedEffectTiming.html",
    "title": "Class ComputedEffectTiming | CSharpToJavaScript",
    "keywords": "Class ComputedEffectTiming Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ComputedEffectTiming Inheritance object ComputedEffectTiming Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ActiveDuration public Unsupported ActiveDuration Field Value Unsupported EndTime public Unsupported EndTime Field Value Unsupported LocalTime public Unsupported? LocalTime Field Value Unsupported StartTime public Unsupported StartTime Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.ConstantSourceNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ConstantSourceNode.html",
    "title": "Class ConstantSourceNode | CSharpToJavaScript",
    "keywords": "Class ConstantSourceNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ConstantSourceNode interface—part of the Web Audio API—represents an audio source (based upon AudioScheduledSourceNode) whose output is single unchanging value. This makes it useful for cases in which you need a constant value coming in from an audio source. In addition, it can be used like a constructible AudioParam by automating the value of its Offset or by connecting another node to it; see Controlling multiple parameters with ConstantSourceNode. [To(\"FirstCharToLowerCase\")] public class ConstantSourceNode : AudioScheduledSourceNode Inheritance object EventTarget AudioNode AudioScheduledSourceNode ConstantSourceNode Inherited Members AudioScheduledSourceNode.Onended AudioScheduledSourceNode.Start(Number) AudioScheduledSourceNode.Stop(Number) AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A ConstantSourceNode has no inputs and exactly one monaural (one-channel) output. The output's value is always the same as the value of the Offset parameter. -Using the Web Audio API -AudioScheduledSourceNode -AudioNode See also on MDN Constructors ConstantSourceNode() public ConstantSourceNode() ConstantSourceNode(BaseAudioContext, ConstantSourceOptions) The ConstantSourceNode() constructor creates a new ConstantSourceNode object instance, representing an audio source which constantly outputs samples whose values are always the same. public ConstantSourceNode(BaseAudioContext context, ConstantSourceOptions options) Parameters context BaseAudioContext options ConstantSourceOptions Remarks See also on MDN Properties Offset The read-only offset property of the ConstantSourceNode interface returns a AudioParam object indicating the numeric a-rate value which is always returned by the source when asked for the next sample. public AudioParam Offset { get; } Property Value AudioParam An AudioParam object indicating the a-rate value returned for every sample by this node. The default value is 1.0.To access the offset parameter&apos;s current value, access the parameter&apos;s value property, as shown in the syntax box above. Remarks NOTE Note: While the AudioParam named offset is read-only, the value property within is not. So you can change the value of offset by setting the value of ConstantSourceNode.offset.value: -Using the Web Audio API -ConstantSourceNode -AudioNode -AudioParam See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ConstantSourceOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ConstantSourceOptions.html",
    "title": "Class ConstantSourceOptions | CSharpToJavaScript",
    "keywords": "Class ConstantSourceOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ConstantSourceOptions Inheritance object ConstantSourceOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Offset public Number Offset Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.ConstrainPoint2DParameters.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ConstrainPoint2DParameters.html",
    "title": "Class ConstrainPoint2DParameters | CSharpToJavaScript",
    "keywords": "Class ConstrainPoint2DParameters Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ConstrainPoint2DParameters Inheritance object ConstrainPoint2DParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Exact public List<Point2D> Exact Field Value List<Point2D> Ideal public List<Point2D> Ideal Field Value List<Point2D>"
  },
  "api/CSharpToJavaScript.APIs.JS.ContactAddress.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ContactAddress.html",
    "title": "Class ContactAddress | CSharpToJavaScript",
    "keywords": "Class ContactAddress Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ContactAddress interface of the 'contact_picker_api' represents a physical address. Instances of this interface are retrieved from the address property of the objects returned by GetProperties(). [To(\"FirstCharToLowerCase\")] public class ContactAddress Inheritance object ContactAddress Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It may be useful to refer to the Universal Postal Union website&apos;s Addressing S42 standard materials, which provide information about international standards for postal addresses. See also on MDN Properties AddressLine public string[] AddressLine { get; } Property Value string[] City public string City { get; } Property Value string Country public string Country { get; } Property Value string DependentLocality public string DependentLocality { get; } Property Value string Organization public string Organization { get; } Property Value string Phone public string Phone { get; } Property Value string PostalCode public string PostalCode { get; } Property Value string Recipient public string Recipient { get; } Property Value string Region public string Region { get; } Property Value string SortingCode public string SortingCode { get; } Property Value string Methods ToJSON() public object ToJSON() Returns object"
  },
  "api/CSharpToJavaScript.APIs.JS.ContactInfo.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ContactInfo.html",
    "title": "Class ContactInfo | CSharpToJavaScript",
    "keywords": "Class ContactInfo Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ContactInfo Inheritance object ContactInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Address public List<ContactAddress> Address Field Value List<ContactAddress> Email public List<string> Email Field Value List<string> Icon public List<Blob> Icon Field Value List<Blob> Name public List<string> Name Field Value List<string> Tel public List<string> Tel Field Value List<string>"
  },
  "api/CSharpToJavaScript.APIs.JS.ContactProperty.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ContactProperty.html",
    "title": "Enum ContactProperty | CSharpToJavaScript",
    "keywords": "Enum ContactProperty Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ContactProperty Fields Address = 0 Email = 1 Icon = 2 Name = 3 Tel = 4"
  },
  "api/CSharpToJavaScript.APIs.JS.ContactsManager.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ContactsManager.html",
    "title": "Class ContactsManager | CSharpToJavaScript",
    "keywords": "Class ContactsManager Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ContactsManager interface of the 'Contact Picker API' allows users to select entries from their contact list and share limited details of the selected entries with a website or application. [To(\"FirstCharToLowerCase\")] public class ContactsManager Inheritance object ContactsManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The ContactsManager is available through the global 'navigator.Contacts' property. -A Contact Picker for the Web -A Contact Picker demo on glitch See also on MDN Methods GetProperties() The getProperties() method of the ContactsManager interface returns a {{jsxref('Promise')}} which resolves with an 'Array' of 'String' indicating which contact properties are available. public Task<List<ContactProperty>> GetProperties() Returns Task<List<ContactProperty>> Returns a 'Promise' that resolves with an 'Array' of 'String' naming the contact properties that can be returned by the current system.Properties can include the following: Remarks See also on MDN Select(List<ContactProperty>, ContactsSelectOptions) The select() method of the ContactsManager interface returns a {{jsxref('Promise')}} which, when resolved, presents the user with a contact picker which allows them to select contact(s) they wish to share. This method requires a user gesture for the 'Promise' to resolve. public Task<List<ContactInfo>> Select(List<ContactProperty> properties, ContactsSelectOptions options) Parameters properties List<ContactProperty> options ContactsSelectOptions Returns Task<List<ContactInfo>> Returns a 'Promise' that resolves with an array of objects containing contact information. Each object represents a single contact may contain the following properties: Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ContactsSelectOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ContactsSelectOptions.html",
    "title": "Class ContactsSelectOptions | CSharpToJavaScript",
    "keywords": "Class ContactsSelectOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ContactsSelectOptions Inheritance object ContactsSelectOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Multiple public bool Multiple Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.ConvolverNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ConvolverNode.html",
    "title": "Class ConvolverNode | CSharpToJavaScript",
    "keywords": "Class ConvolverNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ConvolverNode interface is an AudioNode that performs a Linear Convolution on a given AudioBuffer, often used to achieve a reverb effect. A ConvolverNode always has exactly one input and one output. [To(\"FirstCharToLowerCase\")] public class ConvolverNode : AudioNode Inheritance object EventTarget AudioNode ConvolverNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: For more information on the theory behind Linear Convolution, see the Convolution article on Wikipedia. -Using the Web Audio API See also on MDN Constructors ConvolverNode() public ConvolverNode() ConvolverNode(BaseAudioContext, ConvolverOptions) The ConvolverNode() constructor of the Web Audio API creates a new ConvolverNode object instance. public ConvolverNode(BaseAudioContext context, ConvolverOptions options) Parameters context BaseAudioContext options ConvolverOptions Remarks See also on MDN Properties Buffer The buffer property of the ConvolverNode interface represents a mono, stereo, or 4-channel AudioBuffer containing the (possibly multichannel) impulse response used by the ConvolverNode to create the reverb effect. public AudioBuffer? Buffer { get; set; } Property Value AudioBuffer An AudioBuffer. Remarks This is normally a simple recording of as-close-to-an-impulse as can be found in the space you want to model. For example, if you want to model the reverb in your bathroom, you might set up a microphone near the door to record the sound of a balloon pop or synthesized impulse from the sink. That audio recording could then be used as the buffer. This AudioBuffer must have the same sample-rate as the AudioContext or an exception will be thrown. At the time when this attribute is set, the buffer and the state of the attribute will be used to configure the ConvolverNode with this impulse response having the given normalization. The initial value of this attribute is null. -Using the Web Audio API See also on MDN Normalize The normalize property of the ConvolverNode interface is a boolean that controls whether the impulse response from the buffer will be scaled by an equal-power normalization when the buffer attribute is set, or not. public bool Normalize { get; set; } Property Value bool A boolean. Remarks Its default value is true in order to achieve a more uniform output level from the convolver, when loaded with diverse impulse responses. If normalize is set to false, then the convolution will be rendered with no pre-processing/scaling of the impulse response. Changes to this value do not take effect until the next time the buffer attribute is set. -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ConvolverOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ConvolverOptions.html",
    "title": "Class ConvolverOptions | CSharpToJavaScript",
    "keywords": "Class ConvolverOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ConvolverOptions : AudioNodeOptions Inheritance object AudioNodeOptions ConvolverOptions Inherited Members AudioNodeOptions.ChannelCount AudioNodeOptions.ChannelCountMode AudioNodeOptions.ChannelInterpretation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Buffer public AudioBuffer? Buffer Field Value AudioBuffer DisableNormalization public bool DisableNormalization Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.CountQueuingStrategy.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CountQueuingStrategy.html",
    "title": "Class CountQueuingStrategy | CSharpToJavaScript",
    "keywords": "Class CountQueuingStrategy Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CountQueuingStrategy interface of the Streams API provides a built-in chunk counting queuing strategy that can be used when constructing streams. [To(\"FirstCharToLowerCase\")] public class CountQueuingStrategy Inheritance object CountQueuingStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -CountQueuingStrategy(QueuingStrategyInit) constructor -Internal queues and queuing strategies See also on MDN Constructors CountQueuingStrategy() public CountQueuingStrategy() CountQueuingStrategy(QueuingStrategyInit) The CountQueuingStrategy() constructor creates and returns a CountQueuingStrategy object instance. public CountQueuingStrategy(QueuingStrategyInit init) Parameters init QueuingStrategyInit Remarks -CountQueuingStrategy See also on MDN Properties HighWaterMark The read-only CountQueuingStrategy.highWaterMark property returns the total number of chunks that can be contained in the internal queue before backpressure is applied. public double HighWaterMark { get; } Property Value double An integer representing a number of chunks. Remarks -CountQueuingStrategy(QueuingStrategyInit) constructor See also on MDN Size The size() method of the CountQueuingStrategy interface always returns 1, so that the total queue size is a count of the number of chunks in the queue. public Function Size { get; } Property Value Function 1. Remarks -CountQueuingStrategy(QueuingStrategyInit) constructor See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Credential.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Credential.html",
    "title": "Class Credential | CSharpToJavaScript",
    "keywords": "Class Credential Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Credential interface of the Credential Management API provides information about an entity (usually a user) normally as a prerequisite to a trust decision. [To(\"FirstCharToLowerCase\")] public class Credential Inheritance object Credential Derived FederatedCredential PasswordCredential PublicKeyCredential Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Credential objects may be of four different types: See also on MDN Properties Id The id property of the Credential interface returns a string containing the credential&apos;s identifier. This might be any one of a GUID, username, or email address. public string Id { get; } Property Value string A string containing the credential&apos;s identifier. Remarks See also on MDN Type The type property of the Credential interface returns a string containing the credential&apos;s type. Valid values are password, federated and public-key. public string Type { get; } Property Value string A string contains a credential&apos;s given name. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CredentialCreationOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CredentialCreationOptions.html",
    "title": "Class CredentialCreationOptions | CSharpToJavaScript",
    "keywords": "Class CredentialCreationOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CredentialCreationOptions Inheritance object CredentialCreationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Federated public FederatedCredentialInit Federated Field Value FederatedCredentialInit Password public Union32 Password Field Value Union32 PublicKey public PublicKeyCredentialCreationOptions PublicKey Field Value PublicKeyCredentialCreationOptions Signal public AbortSignal Signal Field Value AbortSignal"
  },
  "api/CSharpToJavaScript.APIs.JS.CredentialData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CredentialData.html",
    "title": "Class CredentialData | CSharpToJavaScript",
    "keywords": "Class CredentialData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CredentialData Inheritance object CredentialData Derived FederatedCredentialInit PasswordCredentialData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Id public required string Id Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.CredentialMediationRequirement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CredentialMediationRequirement.html",
    "title": "Enum CredentialMediationRequirement | CSharpToJavaScript",
    "keywords": "Enum CredentialMediationRequirement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CredentialMediationRequirement Fields Optional = 1 Required = 2 Silent = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.CredentialRequestOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CredentialRequestOptions.html",
    "title": "Class CredentialRequestOptions | CSharpToJavaScript",
    "keywords": "Class CredentialRequestOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CredentialRequestOptions Inheritance object CredentialRequestOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Federated public FederatedCredentialRequestOptions Federated Field Value FederatedCredentialRequestOptions Mediation public CredentialMediationRequirement Mediation Field Value CredentialMediationRequirement Password public bool Password Field Value bool PublicKey public PublicKeyCredentialRequestOptions PublicKey Field Value PublicKeyCredentialRequestOptions Signal public AbortSignal Signal Field Value AbortSignal"
  },
  "api/CSharpToJavaScript.APIs.JS.CredentialUserData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CredentialUserData.html",
    "title": "Interface CredentialUserData | CSharpToJavaScript",
    "keywords": "Interface CredentialUserData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CredentialUserData Properties IconURL string IconURL { get; } Property Value string Name string Name { get; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.CredentialsContainer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CredentialsContainer.html",
    "title": "Class CredentialsContainer | CSharpToJavaScript",
    "keywords": "Class CredentialsContainer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CredentialsContainer interface of the Credential Management API exposes methods to request credentials and notify the user agent when events such as successful sign in or sign out happen. This interface is accessible from 'Navigator.Credentials'. [To(\"FirstCharToLowerCase\")] public class CredentialsContainer Inheritance object CredentialsContainer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Methods Create(CredentialCreationOptions) The create() method of the CredentialsContainer interface returns a {{jsxref(\"Promise\")}} that resolves with a new credential instance based on the provided options, the information from which can then be stored and later used to authenticate users via Get(CredentialRequestOptions). public Task<Credential?> Create(CredentialCreationOptions options) Parameters options CredentialCreationOptions Returns Task<Credential> A {{jsxref(\"Promise\")}} that resolves with a Credential instance matching the provided parameters:If a single credential cannot be successfully created, the Promise will resolve to null.A {{jsxref(\"Promise\")}} that resolves with an PublicKeyCredential instance matching the provided parameters. If no credential object can be created, the promise resolves with null. Remarks This is used by multiple different credential-related APIs with significantly different purposes: The below reference page starts with a syntax section that explains the general method call structure and parameters that apply to all the different APIs. After that, it is split into separate sections providing parameters, return values, and examples specific to each API. NOTE Note: This method is restricted to top-level browsing context (i.e., a document running directly inside a browser tab, and not embedded inside another document). Calls to it from within an &lt;iframe&gt; element will resolve without effect. See also on MDN Get(CredentialRequestOptions) The get() method of the CredentialsContainer interface returns a {{jsxref(\"Promise\")}} that fulfills with a single credential instance that matches the provided parameters, which the browser can then use to authenticate with a relying party. This is used by several different credential-related APIs with significantly different purposes: public Task<Credential?> Get(CredentialRequestOptions options) Parameters options CredentialRequestOptions Returns Task<Credential> A {{jsxref(\"Promise\")}} that resolves with a Credential instance matching the provided parameters:If a single credential cannot be unambiguously obtained, the Promise will resolve to null.A {{jsxref(\"Promise\")}} that resolves with an IdentityCredential instance matching the provided parameters. If a single credential cannot be unambiguously obtained, the Promise will resolve to null.A {{jsxref(\"Promise\")}} that resolves with an PublicKeyCredential instance matching the provided parameters. If a single credential cannot be unambiguously obtained, the Promise will resolve to null. Remarks The below reference page starts with a syntax section that explains the general method call structure and parameters that apply to all the different APIs. After that, it is split into separate sections providing parameters, return values, and examples specific to each API. See also on MDN PreventSilentAccess() The preventSilentAccess() method of the CredentialsContainer interface sets a flag that specifies whether automatic log in is allowed for future visits to the current origin, then returns an empty Promise. For example, you might call this, after a user signs out of a website to ensure that they aren&apos;t automatically signed in on the next site visit. Mediation varies by origin, and is an added check point of browser stored credentials, informing a user of an account login status. This method is typically called after a user signs out of a website, ensuring this user&apos;s login information is not automatically passed on the next site visit. public Task<GlobalObject.Undefined> PreventSilentAccess() Returns Task<GlobalObject.Undefined> An empty Promise. Remarks Earlier versions of the spec called this method requireUserMediation(). The Browser compatibility section has support details. See also on MDN Store(Credential) The store() method of the CredentialsContainer stores a set of credentials for the user inside a Credential instance, returning this in a {{jsxref(\"Promise\")}}. public Task<Credential> Store(Credential credential) Parameters credential Credential Returns Task<Credential> A Promise that resolves to undefined. Remarks NOTE Note: This method is restricted to top-level contexts. Calls to it within an &lt;iframe&gt; element will resolve without effect. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CustomElementConstructor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CustomElementConstructor.html",
    "title": "Struct CustomElementConstructor | CSharpToJavaScript",
    "keywords": "Struct CustomElementConstructor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct CustomElementConstructor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.CustomElementRegistry.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CustomElementRegistry.html",
    "title": "Class CustomElementRegistry | CSharpToJavaScript",
    "keywords": "Class CustomElementRegistry Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CustomElementRegistry interface provides methods for registering custom elements and querying registered elements. To get an instance of it, use the CustomElements property. [To(\"FirstCharToLowerCase\")] public class CustomElementRegistry Inheritance object CustomElementRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Methods Define(string, CustomElementConstructor, ElementDefinitionOptions) The define() method of the CustomElementRegistry interface defines a new custom element. public GlobalObject.Undefined Define(string name, CustomElementConstructor constructor, ElementDefinitionOptions options) Parameters name string constructor CustomElementConstructor options ElementDefinitionOptions Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks There are two types of custom elements you can create: See also on MDN Get(string) The get() method of the CustomElementRegistry interface returns the constructor for a previously-defined custom element. public Union24 Get(string name) Parameters name string Returns Union24 The constructor for the named custom element, or GlobalObject.Undefined if there is no custom element defined with the name. Remarks See also on MDN GetName(CustomElementConstructor) The getName() method of the CustomElementRegistry interface returns the name for a previously-defined custom element. public string? GetName(CustomElementConstructor constructor) Parameters constructor CustomElementConstructor Returns string The name for the previously defined custom element, or null if there is no custom element defined with the constructor. Remarks See also on MDN Upgrade(Node) The upgrade() method of the CustomElementRegistry interface upgrades all shadow-containing custom elements in a Node subtree, even before they are connected to the main document. public GlobalObject.Undefined Upgrade(Node root) Parameters root Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN WhenDefined(string) The whenDefined() method of the CustomElementRegistry interface returns a {{jsxref(\"Promise\")}} that resolves when the named element is defined. public Task<CustomElementConstructor> WhenDefined(string name) Parameters name string Returns Task<CustomElementConstructor> A Promise that fulfills with the custom element&apos;s constructor when a custom element becomes defined with the given name. If a custom element has already been defined with the name, the promise will immediately fulfill.The promise is rejected with a SyntaxError DOMException if the name is not a valid custom element name. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CustomEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CustomEvent.html",
    "title": "Class CustomEvent | CSharpToJavaScript",
    "keywords": "Class CustomEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CustomEvent interface represents events initialized by an application for any purpose. [To(\"Default\")] public class CustomEvent : Event Inheritance object Event CustomEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -PostMessage(dynamic, string, List<object>) -Creating and triggering events See also on MDN Constructors CustomEvent() public CustomEvent() CustomEvent(string, CustomEventInit) The CustomEvent() constructor creates a new CustomEvent object. public CustomEvent(string type, CustomEventInit eventInitDict) Parameters type string eventInitDict CustomEventInit Remarks -CustomEvent -Creating and triggering events See also on MDN Properties Detail The read-only detail property of the CustomEvent interface returns any data passed when initializing the event. [To(\"FirstCharToLowerCase\")] public dynamic Detail { get; } Property Value dynamic Whatever data the event was initialized with. Remarks -CustomEvent See also on MDN Methods InitCustomEvent(string, bool, bool, dynamic) IMPORTANT Deprecated The CustomEvent.initCustomEvent() method initializes a CustomEvent object. If the event has already been dispatched, this method does nothing. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined InitCustomEvent(string type, bool bubbles, bool cancelable, dynamic detail) Parameters type string bubbles bool cancelable bool detail dynamic Returns GlobalObject.Undefined Remarks Events initialized in this way must have been created with the CreateEvent(string) method. This method must be called to set the event before it is dispatched using DispatchEvent(Event). Once dispatched, it doesn&apos;t do anything anymore. NOTE Note: Do not use this method anymore, as it is deprecated. Rather than using the feature, instead use specific event constructors, like CustomEvent(string, CustomEventInit). The page on Creating and triggering events gives more information about the way to use those. -CustomEvent -The constructor to use instead of this deprecated method: CustomEvent(string, CustomEventInit). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CustomEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CustomEventInit.html",
    "title": "Class CustomEventInit | CSharpToJavaScript",
    "keywords": "Class CustomEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CustomEventInit : EventInit Inheritance object EventInit CustomEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Detail public dynamic Detail Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMException.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMException.html",
    "title": "Class DOMException | CSharpToJavaScript",
    "keywords": "Class DOMException Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMException interface represents an abnormal event (called an exception) that occurs as a result of calling a method or accessing a property of a web API. This is how error conditions are described in web APIs. [To(\"FirstCharToLowerCase\")] public class DOMException Inheritance object DOMException Derived GPUPipelineError WebTransportError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Each exception has a name, which is a short &quot;PascalCase&quot;-style string identifying the error or abnormal condition. DOMException is a {{Glossary(\"Serializable object\")}}, so it can be cloned with StructuredClone or copied between Workers using PostMessage(dynamic, List<object>). -A polyfill of DOMException is available in core-js -DOMError See also on MDN Constructors DOMException() public DOMException() DOMException(string, string) The DOMException() constructor returns a DOMException object with a specified message and name. public DOMException(string message, string name) Parameters message string name string Remarks -A polyfill of DOMException constructor is available in core-js See also on MDN Fields ABORT_ERR public const ushort ABORT_ERR = 20 Field Value ushort DATA_CLONE_ERR public const ushort DATA_CLONE_ERR = 25 Field Value ushort DOMSTRING_SIZE_ERR public const ushort DOMSTRING_SIZE_ERR = 2 Field Value ushort HIERARCHY_REQUEST_ERR public const ushort HIERARCHY_REQUEST_ERR = 3 Field Value ushort INDEX_SIZE_ERR public const ushort INDEX_SIZE_ERR = 1 Field Value ushort INUSE_ATTRIBUTE_ERR public const ushort INUSE_ATTRIBUTE_ERR = 10 Field Value ushort INVALID_ACCESS_ERR public const ushort INVALID_ACCESS_ERR = 15 Field Value ushort INVALID_CHARACTER_ERR public const ushort INVALID_CHARACTER_ERR = 5 Field Value ushort INVALID_MODIFICATION_ERR public const ushort INVALID_MODIFICATION_ERR = 13 Field Value ushort INVALID_NODE_TYPE_ERR public const ushort INVALID_NODE_TYPE_ERR = 24 Field Value ushort INVALID_STATE_ERR public const ushort INVALID_STATE_ERR = 11 Field Value ushort NAMESPACE_ERR public const ushort NAMESPACE_ERR = 14 Field Value ushort NETWORK_ERR public const ushort NETWORK_ERR = 19 Field Value ushort NOT_FOUND_ERR public const ushort NOT_FOUND_ERR = 8 Field Value ushort NOT_SUPPORTED_ERR public const ushort NOT_SUPPORTED_ERR = 9 Field Value ushort NO_DATA_ALLOWED_ERR public const ushort NO_DATA_ALLOWED_ERR = 6 Field Value ushort NO_MODIFICATION_ALLOWED_ERR public const ushort NO_MODIFICATION_ALLOWED_ERR = 7 Field Value ushort QUOTA_EXCEEDED_ERR public const ushort QUOTA_EXCEEDED_ERR = 22 Field Value ushort SECURITY_ERR public const ushort SECURITY_ERR = 18 Field Value ushort SYNTAX_ERR public const ushort SYNTAX_ERR = 12 Field Value ushort TIMEOUT_ERR public const ushort TIMEOUT_ERR = 23 Field Value ushort TYPE_MISMATCH_ERR public const ushort TYPE_MISMATCH_ERR = 17 Field Value ushort URL_MISMATCH_ERR public const ushort URL_MISMATCH_ERR = 21 Field Value ushort VALIDATION_ERR public const ushort VALIDATION_ERR = 16 Field Value ushort WRONG_DOCUMENT_ERR public const ushort WRONG_DOCUMENT_ERR = 4 Field Value ushort Properties Code IMPORTANT Deprecated The code read-only property of the DOMException interface returns one of the legacy error code constants, or 0 if none match. public ushort Code { get; } Property Value ushort One of the error code constants, or 0 if none match. Remarks This field is used for historical reasons. New DOM exceptions don't use this anymore: they put this info in the Name attribute. See also on MDN Message The message read-only property of the DOMException interface returns a string representing a message or description associated with the given error name. public string Message { get; } Property Value string A string. Remarks See also on MDN Name The name read-only property of the DOMException interface returns a string that contains one of the strings associated with an error name. public string Name { get; } Property Value string A string. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMImplementation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMImplementation.html",
    "title": "Class DOMImplementation | CSharpToJavaScript",
    "keywords": "Class DOMImplementation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMImplementation interface represents an object providing methods which are not dependent on any particular document. Such an object is returned by the Implementation property. [To(\"FirstCharToLowerCase\")] public class DOMImplementation Inheritance object DOMImplementation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The DOM interfaces index. See also on MDN Methods CreateDocument(string?, string, DocumentType?) The DOMImplementation.createDocument() method creates and returns an XMLDocument. public XMLDocument CreateDocument(string? namespace_, string qualifiedName, DocumentType? doctype) Parameters namespace_ string qualifiedName string doctype DocumentType Returns XMLDocument None (GlobalObject.Undefined). Remarks -The DOMImplementation interface it belongs to. See also on MDN CreateDocumentType(string, string, string) The DOMImplementation.createDocumentType() method returns a DocumentType object which can either be used with CreateDocument(string?, string, DocumentType?) upon document creation or can be put into the document via methods like InsertBefore(Node, Node?) or ReplaceChild(Node, Node). public DocumentType CreateDocumentType(string qualifiedName, string publicId, string systemId) Parameters qualifiedName string publicId string systemId string Returns DocumentType A DocumentType. Remarks -The DOMImplementation interface it belongs to. See also on MDN CreateHTMLDocument(string) The DOMImplementation.createHTMLDocument() method creates a new HTML Document. public Document CreateHTMLDocument(string title) Parameters title string Returns Document A new HTML Document object. Remarks -The DOMImplementation interface it belongs to. See also on MDN HasFeature() IMPORTANT Deprecated The DOMImplementation.hasFeature() method returns a boolean flag indicating if a given feature is supported. It is deprecated and modern browsers return true in all cases. public bool HasFeature() Returns bool None (GlobalObject.Undefined). Remarks The different implementations fairly diverged in what kind of features were reported. The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use. -The DOMImplementation interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMMatrix.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMMatrix.html",
    "title": "Class DOMMatrix | CSharpToJavaScript",
    "keywords": "Class DOMMatrix Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMMatrix interface represents 4×4 matrices, suitable for 2D and 3D operations including rotation and translation. It is a mutable version of the DOMMatrixReadOnly interface. [To(\"FirstCharToLowerCase\")] public class DOMMatrix : DOMMatrixReadOnly Inheritance object DOMMatrixReadOnly DOMMatrix Inherited Members DOMMatrixReadOnly.Is2D DOMMatrixReadOnly.IsIdentity DOMMatrixReadOnly.Translate(double, double, double) DOMMatrixReadOnly.Scale(double, double, double, double, double, double) DOMMatrixReadOnly.ScaleNonUniform(double, double) DOMMatrixReadOnly.Scale3d(double, double, double, double) DOMMatrixReadOnly.Rotate(double, double, double) DOMMatrixReadOnly.RotateFromVector(double, double) DOMMatrixReadOnly.RotateAxisAngle(double, double, double, double) DOMMatrixReadOnly.SkewX(double) DOMMatrixReadOnly.SkewY(double) DOMMatrixReadOnly.Multiply(DOMMatrixInit) DOMMatrixReadOnly.FlipX() DOMMatrixReadOnly.FlipY() DOMMatrixReadOnly.Inverse() DOMMatrixReadOnly.TransformPoint(DOMPointInit) DOMMatrixReadOnly.ToFloat32Array() DOMMatrixReadOnly.ToFloat64Array() DOMMatrixReadOnly.ToJSON() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks WebKitCSSMatrix and SVGMatrix are aliases to DOMMatrix. This interface should be available inside web workers, though some implementations don&apos;t allow it yet. -Its non-modifiable counterpart, DOMMatrixReadOnly See also on MDN Constructors DOMMatrix() public DOMMatrix() DOMMatrix(Union55) The DOMMatrix constructor creates a new DOMMatrix object which represents 4x4 matrices, suitable for 2D and 3D operations. public DOMMatrix(Union55 init) Parameters init Union55 Remarks See also on MDN Properties A public double A { get; set; } Property Value double B public double B { get; set; } Property Value double C public double C { get; set; } Property Value double D public double D { get; set; } Property Value double E public double E { get; set; } Property Value double F public double F { get; set; } Property Value double M11 public double M11 { get; set; } Property Value double M12 public double M12 { get; set; } Property Value double M13 public double M13 { get; set; } Property Value double M14 public double M14 { get; set; } Property Value double M21 public double M21 { get; set; } Property Value double M22 public double M22 { get; set; } Property Value double M23 public double M23 { get; set; } Property Value double M24 public double M24 { get; set; } Property Value double M31 public double M31 { get; set; } Property Value double M32 public double M32 { get; set; } Property Value double M33 public double M33 { get; set; } Property Value double M34 public double M34 { get; set; } Property Value double M41 public double M41 { get; set; } Property Value double M42 public double M42 { get; set; } Property Value double M43 public double M43 { get; set; } Property Value double M44 public double M44 { get; set; } Property Value double Methods FromFloat32Array(float) public static DOMMatrix FromFloat32Array(float array32) Parameters array32 float Returns DOMMatrix FromFloat64Array(double) public static DOMMatrix FromFloat64Array(double array64) Parameters array64 double Returns DOMMatrix FromMatrix(DOMMatrixInit) public static DOMMatrix FromMatrix(DOMMatrixInit other) Parameters other DOMMatrixInit Returns DOMMatrix InvertSelf() public DOMMatrix InvertSelf() Returns DOMMatrix MultiplySelf(DOMMatrixInit) public DOMMatrix MultiplySelf(DOMMatrixInit other) Parameters other DOMMatrixInit Returns DOMMatrix PreMultiplySelf(DOMMatrixInit) public DOMMatrix PreMultiplySelf(DOMMatrixInit other) Parameters other DOMMatrixInit Returns DOMMatrix RotateAxisAngleSelf(double, double, double, double) public DOMMatrix RotateAxisAngleSelf(double x, double y, double z, double angle) Parameters x double y double z double angle double Returns DOMMatrix RotateFromVectorSelf(double, double) public DOMMatrix RotateFromVectorSelf(double x, double y) Parameters x double y double Returns DOMMatrix RotateSelf(double, double, double) public DOMMatrix RotateSelf(double rotX, double rotY, double rotZ) Parameters rotX double rotY double rotZ double Returns DOMMatrix Scale3dSelf(double, double, double, double) public DOMMatrix Scale3dSelf(double scale, double originX, double originY, double originZ) Parameters scale double originX double originY double originZ double Returns DOMMatrix ScaleSelf(double, double, double, double, double, double) public DOMMatrix ScaleSelf(double scaleX, double scaleY, double scaleZ, double originX, double originY, double originZ) Parameters scaleX double scaleY double scaleZ double originX double originY double originZ double Returns DOMMatrix SetMatrixValue(string) public DOMMatrix SetMatrixValue(string transformList) Parameters transformList string Returns DOMMatrix SkewXSelf(double) public DOMMatrix SkewXSelf(double sx) Parameters sx double Returns DOMMatrix SkewYSelf(double) public DOMMatrix SkewYSelf(double sy) Parameters sy double Returns DOMMatrix TranslateSelf(double, double, double) public DOMMatrix TranslateSelf(double tx, double ty, double tz) Parameters tx double ty double tz double Returns DOMMatrix"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMMatrix2DInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMMatrix2DInit.html",
    "title": "Class DOMMatrix2DInit | CSharpToJavaScript",
    "keywords": "Class DOMMatrix2DInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DOMMatrix2DInit Inheritance object DOMMatrix2DInit Derived DOMMatrixInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields A public double A Field Value double B public double B Field Value double C public double C Field Value double D public double D Field Value double E public double E Field Value double F public double F Field Value double M11 public double M11 Field Value double M12 public double M12 Field Value double M21 public double M21 Field Value double M22 public double M22 Field Value double M41 public double M41 Field Value double M42 public double M42 Field Value double"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMMatrixInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMMatrixInit.html",
    "title": "Class DOMMatrixInit | CSharpToJavaScript",
    "keywords": "Class DOMMatrixInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DOMMatrixInit : DOMMatrix2DInit Inheritance object DOMMatrix2DInit DOMMatrixInit Inherited Members DOMMatrix2DInit.A DOMMatrix2DInit.B DOMMatrix2DInit.C DOMMatrix2DInit.D DOMMatrix2DInit.E DOMMatrix2DInit.F DOMMatrix2DInit.M11 DOMMatrix2DInit.M12 DOMMatrix2DInit.M21 DOMMatrix2DInit.M22 DOMMatrix2DInit.M41 DOMMatrix2DInit.M42 object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Is2D public bool Is2D Field Value bool M13 public double M13 Field Value double M14 public double M14 Field Value double M23 public double M23 Field Value double M24 public double M24 Field Value double M31 public double M31 Field Value double M32 public double M32 Field Value double M33 public double M33 Field Value double M34 public double M34 Field Value double M43 public double M43 Field Value double M44 public double M44 Field Value double"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMMatrixReadOnly.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMMatrixReadOnly.html",
    "title": "Class DOMMatrixReadOnly | CSharpToJavaScript",
    "keywords": "Class DOMMatrixReadOnly Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMMatrixReadOnly interface represents a read-only 4×4 matrix, suitable for 2D and 3D operations. The DOMMatrix interface — which is based upon DOMMatrixReadOnly—adds mutability, allowing you to alter the matrix after creating it. [To(\"FirstCharToLowerCase\")] public class DOMMatrixReadOnly Inheritance object DOMMatrixReadOnly Derived DOMMatrix Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface should be available inside web workers, though some implementations doesn&apos;t allow it yet. -The mutable matrix type, DOMMatrix, which is based on this one. -The CSS transform-function and transform-function functional notation that can be generated from this interface to be used in a CSS transform. See also on MDN Constructors DOMMatrixReadOnly() public DOMMatrixReadOnly() DOMMatrixReadOnly(Union54) The DOMMatrixReadOnly constructor creates a new DOMMatrixReadOnly object which represents 4x4 matrices, suitable for 2D and 3D operations. public DOMMatrixReadOnly(Union54 init) Parameters init Union54 Remarks See also on MDN Properties A public double A { get; } Property Value double B public double B { get; } Property Value double C public double C { get; } Property Value double D public double D { get; } Property Value double E public double E { get; } Property Value double F public double F { get; } Property Value double Is2D public bool Is2D { get; } Property Value bool IsIdentity public bool IsIdentity { get; } Property Value bool M11 public double M11 { get; } Property Value double M12 public double M12 { get; } Property Value double M13 public double M13 { get; } Property Value double M14 public double M14 { get; } Property Value double M21 public double M21 { get; } Property Value double M22 public double M22 { get; } Property Value double M23 public double M23 { get; } Property Value double M24 public double M24 { get; } Property Value double M31 public double M31 { get; } Property Value double M32 public double M32 { get; } Property Value double M33 public double M33 { get; } Property Value double M34 public double M34 { get; } Property Value double M41 public double M41 { get; } Property Value double M42 public double M42 { get; } Property Value double M43 public double M43 { get; } Property Value double M44 public double M44 { get; } Property Value double Methods FlipX() The flipX() method of the DOMMatrixReadOnly interface creates a new matrix being the result of the original matrix flipped about the x-axis. public DOMMatrix FlipX() Returns DOMMatrix Returns a DOMMatrix containing a new matrix being the result of the original matrix flipped about the x-axis, which is equivalent to multiplying the matrix by DOMMatrix(-1, 0, 0, 1, 0, 0). The original matrix is not modified. Remarks See also on MDN FlipY() public DOMMatrix FlipY() Returns DOMMatrix FromFloat32Array(float) public static DOMMatrixReadOnly FromFloat32Array(float array32) Parameters array32 float Returns DOMMatrixReadOnly FromFloat64Array(double) public static DOMMatrixReadOnly FromFloat64Array(double array64) Parameters array64 double Returns DOMMatrixReadOnly FromMatrix(DOMMatrixInit) public static DOMMatrixReadOnly FromMatrix(DOMMatrixInit other) Parameters other DOMMatrixInit Returns DOMMatrixReadOnly Inverse() public DOMMatrix Inverse() Returns DOMMatrix Multiply(DOMMatrixInit) public DOMMatrix Multiply(DOMMatrixInit other) Parameters other DOMMatrixInit Returns DOMMatrix Rotate(double, double, double) public DOMMatrix Rotate(double rotX, double rotY, double rotZ) Parameters rotX double rotY double rotZ double Returns DOMMatrix RotateAxisAngle(double, double, double, double) public DOMMatrix RotateAxisAngle(double x, double y, double z, double angle) Parameters x double y double z double angle double Returns DOMMatrix RotateFromVector(double, double) public DOMMatrix RotateFromVector(double x, double y) Parameters x double y double Returns DOMMatrix Scale(double, double, double, double, double, double) The scale() method of the DOMMatrixReadOnly interface creates a new matrix being the result of the original matrix with a scale transform applied. public DOMMatrix Scale(double scaleX, double scaleY, double scaleZ, double originX, double originY, double originZ) Parameters scaleX double scaleY double scaleZ double originX double originY double originZ double Returns DOMMatrix Returns a DOMMatrix containing a new matrix being the result of the matrix x and y dimensions being scaled by the given factor, centered on the origin given. The original matrix is not modified.If a scale is applied about the z-axis, the resulting matrix will be a 4✕4 3D matrix. Remarks See also on MDN Scale3d(double, double, double, double) public DOMMatrix Scale3d(double scale, double originX, double originY, double originZ) Parameters scale double originX double originY double originZ double Returns DOMMatrix ScaleNonUniform(double, double) public DOMMatrix ScaleNonUniform(double scaleX, double scaleY) Parameters scaleX double scaleY double Returns DOMMatrix SkewX(double) public DOMMatrix SkewX(double sx) Parameters sx double Returns DOMMatrix SkewY(double) public DOMMatrix SkewY(double sy) Parameters sy double Returns DOMMatrix ToFloat32Array() public float ToFloat32Array() Returns float ToFloat64Array() public double ToFloat64Array() Returns double ToJSON() public object ToJSON() Returns object TransformPoint(DOMPointInit) public DOMPoint TransformPoint(DOMPointInit point) Parameters point DOMPointInit Returns DOMPoint Translate(double, double, double) The translate() method of the DOMMatrixReadOnly interface creates a new matrix being the result of the original matrix with a translation applied. public DOMMatrix Translate(double tx, double ty, double tz) Parameters tx double ty double tz double Returns DOMMatrix Returns a DOMMatrix containing a new matrix being the result of the matrix being translated by the given vector. The original matrix is not modified.If a translation is applied about the z-axis, the resulting matrix will be a 4x4 3D matrix. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMParser.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMParser.html",
    "title": "Class DOMParser | CSharpToJavaScript",
    "keywords": "Class DOMParser Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMParser interface provides the ability to parse XML or HTML source code from a string into a DOM Document. [To(\"FirstCharToLowerCase\")] public class DOMParser Inheritance object DOMParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can perform the opposite operation—converting a DOM tree into XML or HTML source—using the XMLSerializer interface. In the case of an HTML document, you can also replace portions of the DOM with new DOM trees built from HTML by setting the value of the InnerHTML and OuterHTML properties. These properties can also be read to fetch HTML fragments corresponding to the corresponding DOM subtree. Note that XMLHttpRequest can parse XML and HTML directly from a URL-addressable resource, returning a Document in its Response property. NOTE Note: Be aware that block-level elements like &lt;p&gt; will be automatically closed if another block-level element is nested inside and therefore parsed before the closing &lt;/p&gt; tag. -Parsing and serializing XML -XMLHttpRequest -XMLSerializer -JSONParse - counterpart for JSON documents. See also on MDN Constructors DOMParser() The DOMParser() constructor creates a new DOMParser object. This object can be used to parse the text of a document using the parseFromString() method. public DOMParser() Remarks See also on MDN Methods ParseFromString(string, DOMParserSupportedType) The parseFromString() method of the DOMParser interface parses a string containing either HTML or XML, returning an HTMLDocument or an XMLDocument. public Document ParseFromString(string string_, DOMParserSupportedType type) Parameters string_ string type DOMParserSupportedType Returns Document An HTMLDocument or an XMLDocument, depending on the mimeType argument. Remarks -XMLSerializer -JSONParse - counterpart for JSON documents. See also on MDN ParseFromString(string, Unsupported) The parseFromString() method of the DOMParser interface parses a string containing either HTML or XML, returning an HTMLDocument or an XMLDocument. public Document ParseFromString(string str, Unsupported type) Parameters str string type Unsupported Returns Document An HTMLDocument or an XMLDocument, depending on the mimeType argument. Remarks -XMLSerializer -JSONParse - counterpart for JSON documents. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMParserSupportedType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMParserSupportedType.html",
    "title": "Enum DOMParserSupportedType | CSharpToJavaScript",
    "keywords": "Enum DOMParserSupportedType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum DOMParserSupportedType Fields ApplicationXhtmlXml = 3 ApplicationXml = 2 ImageSvgXml = 4 TextHtml = 0 TextXml = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMPoint.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMPoint.html",
    "title": "Class DOMPoint | CSharpToJavaScript",
    "keywords": "Class DOMPoint Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll A DOMPoint object represents a 2D or 3D point in a coordinate system; it includes values for the coordinates in up to three dimensions, as well as an optional perspective value. DOMPoint is based on DOMPointReadOnly but allows its properties' values to be changed. [To(\"FirstCharToLowerCase\")] public class DOMPoint : DOMPointReadOnly Inheritance object DOMPointReadOnly DOMPoint Inherited Members DOMPointReadOnly.MatrixTransform(DOMMatrixInit) DOMPointReadOnly.ToJSON() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks In general, a positive x component represents a position to the right of the origin, a positive y component is downward from the origin, and a positive z component extends outward from the screen (in other words, toward the user). -DOMRect -DOMMatrix See also on MDN Constructors DOMPoint() public DOMPoint() DOMPoint(double, double, double, double) The DOMPoint() constructor creates and returns a new DOMPoint object, given the values for some or all of its properties. public DOMPoint(double x, double y, double z, double w) Parameters x double y double z double w double Remarks You can also create a DOMPoint by calling the FromPoint(DOMPointInit) static function. That function accepts any object with the required parameters, including a DOMPoint or DOMPointReadOnly. -DOMPointReadOnly(double, double, double, double) -DOMRect -DOMMatrix See also on MDN Properties W The DOMPoint interface&apos;s w property holds the point&apos;s perspective value, w, for a point in space. public double W { get; set; } Property Value double A double-precision floating-point value indicating the w perspective value for the point. This value is unrestricted, meaning that it is allowed to be infinite or invalid (that is, its value may be GlobalObject.NaN or {{jsxref(\"Infinity\", &quot;±Infinity&quot;)}}). The default is 1.0. Remarks -The other coordinate properties: X, Y, and Z. See also on MDN X The DOMPoint interface&apos;s x property holds the horizontal coordinate, x, for a point in space. public double X { get; set; } Property Value double A double-precision floating-point value indicating the x coordinate&apos;s value for the point. This value is unrestricted, meaning that it is allowed to be infinite or invalid (that is, its value may be GlobalObject.NaN or {{jsxref(\"Infinity\", &quot;±Infinity&quot;)}}). Remarks In general, positive values x mean to the right, and negative values of x means to the left, barring any transforms that may have altered the orientation of the axes. -The other coordinate properties: Y, Z, and the perspective value, {{domxref(\"DOMPoint.w\", &quot;w&quot;)}}. See also on MDN Y The DOMPoint interface&apos;s y property holds the vertical coordinate, y, for a point in space. public double Y { get; set; } Property Value double A double-precision floating-point value indicating the y coordinate&apos;s value for the point. This value is unrestricted, meaning that it is allowed to be infinite or invalid (that is, its value may be GlobalObject.NaN or GlobalObject.Infinity). Remarks Unless transforms have been applied to alter the orientation, the value of y increases downward and decreases upward. -The other coordinate properties: X, Z, and the perspective value, {{domxref(\"DOMPoint.w\", &quot;w&quot;)}}. See also on MDN Z The DOMPoint interface&apos;s z property specifies the depth coordinate of a point in space. public double Z { get; set; } Property Value double A double-precision floating-point value indicating the z coordinate&apos;s value for the point. This value is unrestricted, meaning that it is allowed to be infinite or invalid (that is, its value may be GlobalObject.NaN or GlobalObject.Infinity). Remarks Unless transforms have changed the orientation, a z of 0 is the plane of the screen, with positive values extending outward toward the user from the screen, and negative values receding into the distance behind the screen. -The other coordinate properties: X, Y, and the perspective value, {{domxref(\"DOMPoint.w\", &quot;w&quot;)}}. See also on MDN Methods FromPoint(DOMPointInit) public static DOMPoint FromPoint(DOMPointInit other) Parameters other DOMPointInit Returns DOMPoint"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMPointInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMPointInit.html",
    "title": "Class DOMPointInit | CSharpToJavaScript",
    "keywords": "Class DOMPointInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DOMPointInit Inheritance object DOMPointInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields W public double W Field Value double X public double X Field Value double Y public double Y Field Value double Z public double Z Field Value double"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMPointReadOnly.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMPointReadOnly.html",
    "title": "Class DOMPointReadOnly | CSharpToJavaScript",
    "keywords": "Class DOMPointReadOnly Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMPointReadOnly interface specifies the coordinate and perspective fields used by DOMPoint to define a 2D or 3D point in a coordinate system. [To(\"FirstCharToLowerCase\")] public class DOMPointReadOnly Inheritance object DOMPointReadOnly Derived DOMPoint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers There are two ways to create a new DOMPointReadOnly instance. First, you can use its constructor, passing in the values of the parameters for each dimension and, optionally, the perspective: The other option is to use the static FromPoint(DOMPointInit) method: -DOMPoint -DOMRect -DOMMatrix See also on MDN Constructors DOMPointReadOnly() public DOMPointReadOnly() DOMPointReadOnly(double, double, double, double) The DOMPointReadOnly() constructor returns a new DOMPointReadOnly object representing a point in 2D or 3D space, optionally with perspective, whose values cannot be altered by script code. public DOMPointReadOnly(double x, double y, double z, double w) Parameters x double y double z double w double Remarks See also on MDN Properties W The DOMPointReadOnly interface&apos;s w property holds the point&apos;s perspective value, w, for a read-only point in space. public double W { get; } Property Value double A double-precision floating-point value indicating the w perspective value for the point. This value is unrestricted, meaning that it is allowed to be infinite or invalid (that is, its value may be GlobalObject.NaN or GlobalObject.Infinity). The default is 1.0. Remarks If your script needs to be able to change the value of this property, you should instead use the DOMPoint object. -The other coordinate properties: X, Y, and Z. See also on MDN X The DOMPointReadOnly interface&apos;s x property holds the horizontal coordinate, x, for a read-only point in space. This property cannot be changed by JavaScript code in this read-only version of the DOMPoint object. public double X { get; } Property Value double A double-precision floating-point value indicating the x coordinate&apos;s value for the point. This value is unrestricted, meaning that it is allowed to be infinite or invalid (that is, its value may be GlobalObject.NaN or {{jsxref(\"Infinity\", &quot;±Infinity&quot;)}}). Remarks In general, positive values x mean to the right, and negative values of x means to the left, assuming no transforms have resulted in a reversal. -The other coordinate properties: Y, Z, and the perspective value, W. See also on MDN Y The DOMPointReadOnly interface&apos;s y property holds the vertical coordinate, y, for a read-only point in space. public double Y { get; } Property Value double A double-precision floating-point value indicating the y coordinate&apos;s value for the point. This value is unrestricted, meaning that it is allowed to be infinite or invalid (that is, its value may be GlobalObject.NaN or {{jsxref(\"Infinity\", &quot;±Infinity&quot;)}}). Remarks If your script needs to be able to change the value of this property, you should instead use the DOMPoint object. In general, positive values of y mean downward, and negative values of y mean upward, assuming no transforms have resulted in a reversal. -The other coordinate properties: X, Z, and the perspective value, W. See also on MDN Z The DOMPointReadOnly interface&apos;s z property holds the depth coordinate, z, for a read-only point in space. public double Z { get; } Property Value double A double-precision floating-point value indicating the z coordinate&apos;s value for the point. This value is unrestricted, meaning that it is allowed to be infinite or invalid (that is, its value may be GlobalObject.NaN or {{jsxref(\"Infinity\", &quot;±Infinity&quot;)}}). Remarks If your script needs to be able to change the value of this property, you should instead use the DOMPoint object. In general, positive values of z mean toward the user (out from the screen), and negative values of z mean away from the user (into the screen), assuming no transforms have resulted in a reversal. -The other coordinate properties: X, Y, and the perspective value, W. See also on MDN Methods FromPoint(DOMPointInit) public static DOMPointReadOnly FromPoint(DOMPointInit other) Parameters other DOMPointInit Returns DOMPointReadOnly MatrixTransform(DOMMatrixInit) public DOMPoint MatrixTransform(DOMMatrixInit matrix) Parameters matrix DOMMatrixInit Returns DOMPoint ToJSON() The DOMPointReadOnly method toJSON() returns an object giving the JSON form of the point object. public object ToJSON() Returns object A new object whose properties are set to the values in the DOMPoint or DOMPointReadOnly on which the method was called. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMQuad.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMQuad.html",
    "title": "Class DOMQuad | CSharpToJavaScript",
    "keywords": "Class DOMQuad Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll A DOMQuad is a collection of four DOMPoints defining the corners of an arbitrary quadrilateral. Returning DOMQuads lets getBoxQuads() return accurate information even when arbitrary 2D or 3D transforms are present. It has a handy bounds attribute returning a DOMRectReadOnly for those cases where you just want an axis-aligned bounding rectangle. [To(\"FirstCharToLowerCase\")] public class DOMQuad Inheritance object DOMQuad Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors DOMQuad() public DOMQuad() DOMQuad(DOMPointInit, DOMPointInit, DOMPointInit, DOMPointInit) public DOMQuad(DOMPointInit p1, DOMPointInit p2, DOMPointInit p3, DOMPointInit p4) Parameters p1 DOMPointInit p2 DOMPointInit p3 DOMPointInit p4 DOMPointInit Properties P1 public DOMPoint P1 { get; } Property Value DOMPoint P2 public DOMPoint P2 { get; } Property Value DOMPoint P3 public DOMPoint P3 { get; } Property Value DOMPoint P4 public DOMPoint P4 { get; } Property Value DOMPoint Methods FromQuad(DOMQuadInit) public static DOMQuad FromQuad(DOMQuadInit other) Parameters other DOMQuadInit Returns DOMQuad FromRect(DOMRectInit) public static DOMQuad FromRect(DOMRectInit other) Parameters other DOMRectInit Returns DOMQuad GetBounds() public DOMRect GetBounds() Returns DOMRect ToJSON() public object ToJSON() Returns object"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMQuadInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMQuadInit.html",
    "title": "Class DOMQuadInit | CSharpToJavaScript",
    "keywords": "Class DOMQuadInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DOMQuadInit Inheritance object DOMQuadInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields P1 public DOMPointInit P1 Field Value DOMPointInit P2 public DOMPointInit P2 Field Value DOMPointInit P3 public DOMPointInit P3 Field Value DOMPointInit P4 public DOMPointInit P4 Field Value DOMPointInit"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMRect.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMRect.html",
    "title": "Class DOMRect | CSharpToJavaScript",
    "keywords": "Class DOMRect Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll A DOMRect describes the size and position of a rectangle. [To(\"FirstCharToLowerCase\")] public class DOMRect : DOMRectReadOnly Inheritance object DOMRectReadOnly DOMRect Inherited Members DOMRectReadOnly.Top DOMRectReadOnly.Right DOMRectReadOnly.Bottom DOMRectReadOnly.Left DOMRectReadOnly.ToJSON() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The type of box represented by the DOMRect is specified by the method or property that returned it. For example, Range.GetBoundingClientRect specifies the rectangle that bounds the content of the range using such objects. It inherits from its parent, DOMRectReadOnly. -DOMPoint See also on MDN Constructors DOMRect() public DOMRect() DOMRect(double, double, double, double) The DOMRect() constructor creates a new DOMRect object. public DOMRect(double x, double y, double width, double height) Parameters x double y double width double height double Remarks -DOMPoint -DOMRect -FromRect(DOMRectInit) See also on MDN Properties Height public double Height { get; set; } Property Value double Width public double Width { get; set; } Property Value double X public double X { get; set; } Property Value double Y public double Y { get; set; } Property Value double Methods FromRect(DOMRectInit) public static DOMRect FromRect(DOMRectInit other) Parameters other DOMRectInit Returns DOMRect"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMRectInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMRectInit.html",
    "title": "Class DOMRectInit | CSharpToJavaScript",
    "keywords": "Class DOMRectInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DOMRectInit Inheritance object DOMRectInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Height public double Height Field Value double Width public double Width Field Value double X public double X Field Value double Y public double Y Field Value double"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMRectList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMRectList.html",
    "title": "Class DOMRectList | CSharpToJavaScript",
    "keywords": "Class DOMRectList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DOMRectList Inheritance object DOMRectList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Length public ulong Length { get; } Property Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMRectReadOnly.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMRectReadOnly.html",
    "title": "Class DOMRectReadOnly | CSharpToJavaScript",
    "keywords": "Class DOMRectReadOnly Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMRectReadOnly interface specifies the standard properties used by DOMRect to define a rectangle whose properties are immutable. [To(\"FirstCharToLowerCase\")] public class DOMRectReadOnly Inheritance object DOMRectReadOnly Derived DOMRect Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -DOMPoint See also on MDN Constructors DOMRectReadOnly() public DOMRectReadOnly() DOMRectReadOnly(double, double, double, double) The DOMRectReadOnly() constructor creates a new DOMRectReadOnly object. public DOMRectReadOnly(double x, double y, double width, double height) Parameters x double y double width double height double Remarks -DOMPoint -DOMRect See also on MDN Properties Bottom The bottom read-only property of the DOMRectReadOnly interface returns the bottom coordinate value of the DOMRect. (Has the same value as y + height, or y if height is negative.) public double Bottom { get; } Property Value double A double. Remarks -DOMRect See also on MDN Height The height read-only property of the DOMRectReadOnly interface represents the height of the DOMRect. public double Height { get; } Property Value double A double. Remarks -DOMRect See also on MDN Left The left read-only property of the DOMRectReadOnly interface returns the left coordinate value of the DOMRect. (Has the same value as x, or x + width if width is negative.) public double Left { get; } Property Value double A double. Remarks -DOMRect See also on MDN Right The right read-only property of the DOMRectReadOnly interface returns the right coordinate value of the DOMRect. (Has the same value as x + width, or x if width is negative.) public double Right { get; } Property Value double A double. Remarks -DOMRect See also on MDN Top The top read-only property of the DOMRectReadOnly interface returns the top coordinate value of the DOMRect. (Has the same value as y, or y + height if height is negative.) public double Top { get; } Property Value double A double. Remarks -DOMRect See also on MDN Width The width read-only property of the DOMRectReadOnly interface represents the width of the DOMRect. public double Width { get; } Property Value double A double. Remarks -DOMRect See also on MDN X The x read-only property of the DOMRectReadOnly interface represents the x coordinate of the DOMRect&apos;s origin. public double X { get; } Property Value double A double. Remarks -DOMRect See also on MDN Y The y read-only property of the DOMRectReadOnly interface represents the y coordinate of the DOMRect&apos;s origin. public double Y { get; } Property Value double A double. Remarks -DOMRect See also on MDN Methods FromRect(DOMRectInit) public static DOMRectReadOnly FromRect(DOMRectInit other) Parameters other DOMRectInit Returns DOMRectReadOnly ToJSON() public object ToJSON() Returns object"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMStringList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMStringList.html",
    "title": "Class DOMStringList | CSharpToJavaScript",
    "keywords": "Class DOMStringList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMString interface is a legacy type returned by some APIs and represents a non-modifiable list of strings (DOMString). Modern APIs use Array objects (in WebIDL: sequence&lt;DOMString&gt;) instead. [To(\"FirstCharToLowerCase\")] public class DOMStringList Inheritance object DOMStringList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface is used in IndexedDB and in the Location API: See also on MDN Properties Length The read-only length property indicates the number of strings in the DOMStringList. public ulong Length { get; } Property Value ulong A Number. Remarks See also on MDN Methods Contains(string) The contains() method returns a boolean indicating whether the given string is in the list. public bool Contains(string string_) Parameters string_ string Returns bool A boolean indicating whether the given string is in the list. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMStringMap.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMStringMap.html",
    "title": "Class DOMStringMap | CSharpToJavaScript",
    "keywords": "Class DOMStringMap Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMStringMap interface is used for the HTMLElement.Dataset/SVGElement.Dataset attribute, to represent data for custom attributes added to elements. [To(\"FirstCharToLowerCase\")] public class DOMStringMap Inheritance object DOMStringMap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTMLElement.Dataset / SVGElement.Dataset -Global attributes - data-* See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMTokenList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMTokenList.html",
    "title": "Class DOMTokenList | CSharpToJavaScript",
    "keywords": "Class DOMTokenList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMTokenList interface represents a set of space-separated tokens. Such a set is returned by ClassList or RelList, and many others. [To(\"FirstCharToLowerCase\")] public class DOMTokenList Inheritance object DOMTokenList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A DOMTokenList is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive. See also on MDN Properties this[int] public string this[int i] { get; set; } Parameters i int Property Value string Length The read-only length property of the DOMTokenList interface is an integer representing the number of objects stored in the object. public ulong Length { get; } Property Value ulong An positive integer, or 0 if the list is empty. Remarks See also on MDN Value The value property of the DOMTokenList interface is a stringifier that returns the value of the list serialized as a string, or clears and sets the list to the given value. public string Value { get; set; } Property Value string A string representing the serialized content of the list. Each item is separated by a space. Remarks See also on MDN Methods Add(params string[]) The add() method of the DOMTokenList interface adds the given tokens to the list, omitting any that are already present. public GlobalObject.Undefined Add(params string[] tokens) Parameters tokens string[] Returns GlobalObject.Undefined None. Remarks See also on MDN Contains(string) The contains() method of the DOMTokenList interface returns a boolean value — true if the underlying list contains the given token, otherwise false. public bool Contains(string token) Parameters token string Returns bool A boolean value, which is true if the calling list contains token, otherwise false. Remarks See also on MDN Remove(params string[]) The remove() method of the DOMTokenList interface removes the specified tokens from the list. public GlobalObject.Undefined Remove(params string[] tokens) Parameters tokens string[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Replace(string, string) The replace() method of the DOMTokenList interface replaces an existing token with a new token. If the first token doesn&apos;t exist, replace() returns false immediately, without adding the new token to the token list. public bool Replace(string token, string newToken) Parameters token string newToken string Returns bool A boolean value, which is true if oldToken was successfully replaced, or false if not. Remarks See also on MDN Supports(string) The supports() method of the DOMTokenList interface returns true if a given token is in the associated attribute&apos;s supported tokens. This method is intended to support feature detection. public bool Supports(string token) Parameters token string Returns bool A boolean value indicating whether the token was found. Remarks See also on MDN Toggle(string, bool) The toggle() method of the DOMTokenList interface removes an existing token from the list and returns false. If the token doesn&apos;t exist it&apos;s added and the function returns true. public bool Toggle(string token, bool force) Parameters token string force bool Returns bool A boolean value, true or false, indicating whether token is in the list after the call or not. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DataTransfer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DataTransfer.html",
    "title": "Class DataTransfer | CSharpToJavaScript",
    "keywords": "Class DataTransfer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DataTransfer object is used to hold the data that is being dragged during a drag and drop operation. It may hold one or more data items, each of one or more data types. For more information about drag and drop, see HTML Drag and Drop API. [To(\"FirstCharToLowerCase\")] public class DataTransfer Inheritance object DataTransfer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This object is available from the DataTransfer property of all DragEvent. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN Constructors DataTransfer() The DataTransfer constructor creates a new DataTransfer object instance. public DataTransfer() Remarks See also on MDN Properties DropEffect The DataTransfer.dropEffect property controls the feedback (typically visual) the user is given during a drag and drop operation. It will affect which cursor is displayed while dragging. For example, when the user hovers over a target drop element, the browser&apos;s cursor may indicate which type of operation will occur. public string DropEffect { get; set; } Property Value string A string representing the drag operation effect. The possible values are:Assigning any other value to dropEffect has no effect and the old value is retained. Remarks When the DataTransfer object is created, dropEffect is set to a string value. On getting, it returns its current value. On setting, if the new value is one of the values listed below, then the property&apos;s current value will be set to the new value and other values will be ignored. For the HTMLElement/dragenter_event and HTMLElement/dragover_event events, dropEffect will be initialized based on what action the user is requesting. How this is determined is platform specific, but typically the user can press modifier keys such as the alt key to adjust the desired action. Within event handlers for HTMLElement/dragenter_event and HTMLElement/dragover_event events, dropEffect should be modified if a different action is desired than the action that the user is requesting. For the HTMLElement/drop_event and HTMLElement/dragend_event events, dropEffect will be set to the action that was desired, which will be the value dropEffect had after the last HTMLElement/dragenter_event or HTMLElement/dragover_event event. In a HTMLElement/dragend_event event, for instance, if the desired dropEffect is \"move\", then the data being dragged should be removed from the source. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN EffectAllowed The DataTransfer.effectAllowed property specifies the effect that is allowed for a drag operation. The copy operation is used to indicate that the data being dragged will be copied from its present location to the drop location. The move operation is used to indicate that the data being dragged will be moved, and the link operation is used to indicate that some form of relationship or connection will be created between the source and drop locations. public string EffectAllowed { get; set; } Property Value string A string representing the drag operation that is allowed. The possible values are:Assigning any other value to effectAllowed has no effect and the old value is retained. Remarks This property should be set in the HTMLElement/dragstart_event event to set the desired drag effect for the drag source. Within the HTMLElement/dragenter_event and HTMLElement/dragover_event event handlers, this property will be set to whatever value was assigned during the HTMLElement/dragstart_event event, thus effectAllowed may be used to determine which effect is permitted. Assigning a value to effectAllowed in events other than HTMLElement/dragstart_event has no effect. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN Files The files property of DataTransfer objects is a FileList in the drag operation. If the operation includes no files, the list is empty. public FileList Files { get; } Property Value FileList A FileList of the files in a drag operation, one list item for each file in the operation. If the drag operation had no files, the list is empty. Remarks This feature can be used to drag files from a user&apos;s desktop to the browser. NOTE Note: The files property of DataTransfer objects can only be accessed from within the drop event. For all other events, the files property will be empty — because its underlying data store will be in a protected mode. See also on MDN Items The read-only DataTransfer property items property is a DataTransferItemList of the {{domxref(\"DataTransferItem\",\"data transfer items&quot;, &quot;&quot;, &quot;nocode&quot;)}} in a drag operation. The list includes one item for each item in the operation and if the operation had no items, the list is empty. public DataTransferItemList Items { get; } Property Value DataTransferItemList A DataTransferItemList object containing DataTransferItem objects representing the items being dragged in a drag operation, one list item for each object being dragged. If the drag operation had no data, the list is empty. Remarks -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN Types The DataTransfer.types read-only property returns the available types that exist in the Items. public string[] Types { get; } Property Value string[] An array of the data formats used in the drag operation. Each format is a string which is generally a MIME type such as text/plain or text/html. If the drag operation included no data, this list will be empty. If any files are included in the drag operation, then one of the types will be the string Files. Remarks -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN Methods ClearData(string) The DataTransfer.clearData() method removes the drag operation's DataTransfer for the given type. If data for the given type does not exist, this method does nothing. public GlobalObject.Undefined ClearData(string format) Parameters format string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If this method is called with no arguments or the format is an empty string, the data of all types will be removed. This method does not remove files from the drag operation, so it&apos;s possible for there still to be an entry with the type &quot;Files&quot; left in the object&apos;s Types list if there are any files included in the drag. NOTE Note: This method can only be used in the handler for the HTMLElement/dragstart_event event, because that&apos;s the only time the drag operation&apos;s data store is writable. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN GetData(string) The DataTransfer.getData() method retrieves drag data (as a string) for the specified type. If the drag operation does not include data, this method returns an empty string. public string GetData(string format) Parameters format string Returns string A string representing the drag data for the specified format. If the drag operation has no data or the operation has no data for the specified format, this method returns an empty string. Remarks Example data types are text/plain and text/uri-list. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN SetData(string, string) The DataTransfer.setData() method sets the drag operation's DataTransfer to the specified data and type. If data for the given type does not exist, it is added at the end of the drag data store, such that the last item in the Types list will be the new type. If data for the given type already exists, the existing data is replaced in the same position. That is, the order of the Types list is not changed when replacing data of the same type. public GlobalObject.Undefined SetData(string format, string data) Parameters format string data string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Example data types are text/plain and text/uri-list. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN SetDragImage(Element, long, long) When a drag occurs, a translucent image is generated from the drag target (the element the HTMLElement/dragstart_event event is fired at), and follows the mouse pointer during the drag. This image is created automatically, so you do not need to create it yourself. However, if a custom image is desired, the DataTransfer.setDragImage() method can be used to set the custom image to be used. The image will typically be an img element but it can also be a canvas or any other visible element. public GlobalObject.Undefined SetDragImage(Element image, long x, long y) Parameters image Element x long y long Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The method&apos;s x and y coordinates define how the image should appear relative to the mouse pointer. These coordinates define the offset into the image where the mouse cursor should be. For instance, to display the image so that the pointer is at its center, use values that are half the width and height of the image. This method must be called in the HTMLElement/dragstart_event event handler. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DataTransferItem.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DataTransferItem.html",
    "title": "Class DataTransferItem | CSharpToJavaScript",
    "keywords": "Class DataTransferItem Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DataTransferItem object represents one drag data item. During a drag operation, each DragEvent has a DataTransfer property which contains a DataTransferItemList of drag data items. Each item in the list is a DataTransferItem object. [To(\"FirstCharToLowerCase\")] public class DataTransferItem Inheritance object DataTransferItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface has no constructor. See also on MDN Properties Kind The read-only DataTransferItem.kind property returns a DataTransferItem representing the drag data item kind: some text or some file. public string Kind { get; } Property Value string A string representing the drag data item&apos;s kind. It must be one of the following values: Remarks -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN Type The read-only DataTransferItem.type property returns the type (format) of the DataTransferItem object representing the drag data item. The type is a Unicode string generally given by a MIME type, although a MIME type is not required. public string Type { get; } Property Value string A string representing the drag data item&apos;s type. Remarks Some example types are: text/plain and text/html. -Types -List of common MIME types See also on MDN Methods GetAsFile() If the item is a file, the DataTransferItem.getAsFile() method returns the drag data item's File object. If the item is not a file, this method returns null. public File? GetAsFile() Returns File Remarks -Files See also on MDN GetAsString(FunctionStringCallback?) The DataTransferItem.getAsString() method invokes the given callback with the drag data item&apos;s string data as the argument if the item&apos;s Kind is a Plain unicode string (i.e. kind is string). public GlobalObject.Undefined GetAsString(FunctionStringCallback? callback) Parameters callback FunctionStringCallback? Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -GetData(string) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DataTransferItemList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DataTransferItemList.html",
    "title": "Class DataTransferItemList | CSharpToJavaScript",
    "keywords": "Class DataTransferItemList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DataTransferItemList object is a list of DataTransferItem objects representing items being dragged. During a drag operation, each DragEvent has a DataTransfer property and that property is a DataTransferItemList. [To(\"FirstCharToLowerCase\")] public class DataTransferItemList Inheritance object DataTransferItemList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The individual items can be accessed using the bracket notation []. This interface has no constructor. See also on MDN Properties Length The read-only length property of the DataTransferItemList interface returns the number of items currently in the drag item list. public ulong Length { get; } Property Value ulong The number of drag data items in the list, or 0 if the list is empty or disabled. The drag item list is considered to be disabled if the item list&apos;s DataTransfer object is not associated with a drag data store. Remarks See also on MDN Methods Add(File) The DataTransferItemList.add() method creates a new DataTransferItem using the specified data and adds it to the drag data list. The item may be a File or a string of a given type. If the item is successfully added to the list, the newly-created DataTransferItem object is returned. public DataTransferItem? Add(File data) Parameters data File Returns DataTransferItem A DataTransferItem containing the specified data. If the drag item couldn't be created (for example, if the associated DataTransfer object has no data store), null is returned. Remarks See also on MDN Add(string, string) The DataTransferItemList.add() method creates a new DataTransferItem using the specified data and adds it to the drag data list. The item may be a File or a string of a given type. If the item is successfully added to the list, the newly-created DataTransferItem object is returned. public DataTransferItem? Add(string data, string type) Parameters data string type string Returns DataTransferItem A DataTransferItem containing the specified data. If the drag item couldn't be created (for example, if the associated DataTransfer object has no data store), null is returned. Remarks See also on MDN Clear() The DataTransferItemList method clear() removes all DataTransferItem objects from the drag data items list, leaving the list empty. public GlobalObject.Undefined Clear() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The drag data store in which this list is kept is only writable while handling the HTMLElement/dragstart_event event. While handling HTMLElement/drop_event, the drag data store is in read-only mode, and this method silently does nothing. No exception is thrown. See also on MDN Remove(ulong) The DataTransferItemList.remove() method removes the DataTransferItem at the specified index from the list. If the index is less than zero or greater than one less than the length of the list, the list will not be changed. public GlobalObject.Undefined Remove(ulong index) Parameters index ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Date.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Date.html",
    "title": "Class Date | CSharpToJavaScript",
    "keywords": "Class Date Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class Date : DatePrototype Inheritance object DatePrototype Date Inherited Members DatePrototype.GetDate() DatePrototype.GetDay() DatePrototype.GetFullYear() DatePrototype.GetHours() DatePrototype.GetMilliseconds() DatePrototype.GetMinutes() DatePrototype.GetMonth() DatePrototype.GetSeconds() DatePrototype.GetTime() DatePrototype.GetTimezoneOffset() DatePrototype.GetUTCDate() DatePrototype.GetUTCDay() DatePrototype.GetUTCFullYear() DatePrototype.GetUTCHours() DatePrototype.GetUTCMilliseconds() DatePrototype.GetUTCMinutes() DatePrototype.GetUTCMonth() DatePrototype.GetUTCSeconds() DatePrototype.SetDate(float) DatePrototype.SetFullYear(float, float?, float?) DatePrototype.SetHours(float, float?, float?, float?) DatePrototype.SetMilliseconds(float) DatePrototype.SetMinutes(float, float?, float?) DatePrototype.SetMonth(float, float?) DatePrototype.SetSeconds(float, float?) DatePrototype.SetTime(float) DatePrototype.SetUTCDate(float) DatePrototype.SetUTCFullYear(float, float?, float?) DatePrototype.SetUTCHours(float, float?, float?, float?) DatePrototype.SetUTCMilliseconds(float) DatePrototype.SetUTCMinutes(float, float?, float?) DatePrototype.SetUTCMonth(float, float?) DatePrototype.SetUTCSeconds(float, float?) DatePrototype.ToDateString() DatePrototype.ToISOString() DatePrototype.ToJSON(dynamic) DatePrototype.ToLocaleDateString(dynamic, dynamic) DatePrototype.ToLocaleString(dynamic, dynamic) DatePrototype.ToLocaleTimeString(dynamic, dynamic) DatePrototype.ToString() DatePrototype.ToTimeString() DatePrototype.ToUTCString() DatePrototype.ValueOf() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Date() public Date() Date(params float[]) public Date(params float[] values) Parameters values float[] Date(string) public Date(string value) Parameters value string Properties Prototype [To(\"FirstCharToLowerCase\")] public static DatePrototype Prototype { get; } Property Value DatePrototype Methods Now() [To(\"FirstCharToLowerCase\")] public static float Now() Returns float Parse(string) [To(\"FirstCharToLowerCase\")] public static float Parse(string str) Parameters str string Returns float UTC(float, float, float, float, float, float, float) [To(\"Default\")] public static float UTC(float year, float month = 0, float date = 1, float hours = 0, float minutes = 0, float seconds = 0, float ms = 0) Parameters year float month float date float hours float minutes float seconds float ms float Returns float"
  },
  "api/CSharpToJavaScript.APIs.JS.DatePrototype.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DatePrototype.html",
    "title": "Class DatePrototype | CSharpToJavaScript",
    "keywords": "Class DatePrototype Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DatePrototype Inheritance object DatePrototype Derived Date Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods GetDate() public float GetDate() Returns float GetDay() public float GetDay() Returns float GetFullYear() public float GetFullYear() Returns float GetHours() public float GetHours() Returns float GetMilliseconds() public float GetMilliseconds() Returns float GetMinutes() public float GetMinutes() Returns float GetMonth() public float GetMonth() Returns float GetSeconds() public float GetSeconds() Returns float GetTime() public float GetTime() Returns float GetTimezoneOffset() public float GetTimezoneOffset() Returns float GetUTCDate() public float GetUTCDate() Returns float GetUTCDay() public float GetUTCDay() Returns float GetUTCFullYear() public float GetUTCFullYear() Returns float GetUTCHours() public float GetUTCHours() Returns float GetUTCMilliseconds() public float GetUTCMilliseconds() Returns float GetUTCMinutes() public float GetUTCMinutes() Returns float GetUTCMonth() public float GetUTCMonth() Returns float GetUTCSeconds() public float GetUTCSeconds() Returns float SetDate(float) public float SetDate(float date) Parameters date float Returns float SetFullYear(float, float?, float?) public float SetFullYear(float year, float? month = null, float? date = null) Parameters year float month float? date float? Returns float SetHours(float, float?, float?, float?) public float SetHours(float hour, float? min = null, float? sec = null, float? ms = null) Parameters hour float min float? sec float? ms float? Returns float SetMilliseconds(float) public float SetMilliseconds(float ms) Parameters ms float Returns float SetMinutes(float, float?, float?) public float SetMinutes(float min, float? sec = null, float? ms = null) Parameters min float sec float? ms float? Returns float SetMonth(float, float?) public float SetMonth(float month, float? date = null) Parameters month float date float? Returns float SetSeconds(float, float?) public float SetSeconds(float sec, float? ms = null) Parameters sec float ms float? Returns float SetTime(float) public float SetTime(float time) Parameters time float Returns float SetUTCDate(float) public float SetUTCDate(float date) Parameters date float Returns float SetUTCFullYear(float, float?, float?) public float SetUTCFullYear(float year, float? month = null, float? date = null) Parameters year float month float? date float? Returns float SetUTCHours(float, float?, float?, float?) public float SetUTCHours(float hour, float? min = null, float? sec = null, float? ms = null) Parameters hour float min float? sec float? ms float? Returns float SetUTCMilliseconds(float) public float SetUTCMilliseconds(float ms) Parameters ms float Returns float SetUTCMinutes(float, float?, float?) public float SetUTCMinutes(float min, float? sec = null, float? ms = null) Parameters min float sec float? ms float? Returns float SetUTCMonth(float, float?) public float SetUTCMonth(float month, float? date = null) Parameters month float date float? Returns float SetUTCSeconds(float, float?) public float SetUTCSeconds(float sec, float? ms = null) Parameters sec float ms float? Returns float ToDateString() public string ToDateString() Returns string ToISOString() public string ToISOString() Returns string ToJSON(dynamic) public string ToJSON(dynamic key) Parameters key dynamic Returns string ToLocaleDateString(dynamic?, dynamic?) public string ToLocaleDateString(dynamic? reserved1 = null, dynamic? reserved2 = null) Parameters reserved1 dynamic reserved2 dynamic Returns string ToLocaleString(dynamic?, dynamic?) public string ToLocaleString(dynamic? reserved1 = null, dynamic? reserved2 = null) Parameters reserved1 dynamic reserved2 dynamic Returns string ToLocaleTimeString(dynamic?, dynamic?) public string ToLocaleTimeString(dynamic? reserved1 = null, dynamic? reserved2 = null) Parameters reserved1 dynamic reserved2 dynamic Returns string ToString() public string ToString() Returns string ToTimeString() public string ToTimeString() Returns string ToUTCString() public string ToUTCString() Returns string ValueOf() public float ValueOf() Returns float"
  },
  "api/CSharpToJavaScript.APIs.JS.DecodeErrorCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DecodeErrorCallback.html",
    "title": "Struct DecodeErrorCallback | CSharpToJavaScript",
    "keywords": "Struct DecodeErrorCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct DecodeErrorCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.DecodeSuccessCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DecodeSuccessCallback.html",
    "title": "Struct DecodeSuccessCallback | CSharpToJavaScript",
    "keywords": "Struct DecodeSuccessCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct DecodeSuccessCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.DedicatedWorkerGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DedicatedWorkerGlobalScope.html",
    "title": "Class DedicatedWorkerGlobalScope | CSharpToJavaScript",
    "keywords": "Class DedicatedWorkerGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DedicatedWorkerGlobalScope object (the Worker global scope) is accessible through the Self keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See also: Functions available to workers. [To(\"FirstCharToLowerCase\")] public class DedicatedWorkerGlobalScope : WorkerGlobalScope, WindowOrWorkerGlobalScope, FontFaceSource, AnimationFrameProvider Inheritance object EventTarget WorkerGlobalScope DedicatedWorkerGlobalScope Implements WindowOrWorkerGlobalScope FontFaceSource AnimationFrameProvider Inherited Members WorkerGlobalScope.Self WorkerGlobalScope.Location WorkerGlobalScope.Navigator WorkerGlobalScope.ImportScripts(params string[]) WorkerGlobalScope.Onerror WorkerGlobalScope.Onlanguagechange WorkerGlobalScope.Onoffline WorkerGlobalScope.Ononline WorkerGlobalScope.Onrejectionhandled WorkerGlobalScope.Onunhandledrejection EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Worker -WorkerGlobalScope -Using web workers -Functions available to workers See also on MDN Properties Name The name read-only property of the DedicatedWorkerGlobalScope interface returns the name that the Worker was (optionally) given when it was created. This is the name that the Worker(string, WorkerOptions) constructor can pass to get a reference to the DedicatedWorkerGlobalScope. public string Name { get; } Property Value string A string. Remarks -DedicatedWorkerGlobalScope See also on MDN Onmessage public EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onmessageerror public EventHandlerNonNull Onmessageerror { get; set; } Property Value EventHandlerNonNull Onrtctransform public EventHandlerNonNull Onrtctransform { get; set; } Property Value EventHandlerNonNull Methods Close() The close() method of the DedicatedWorkerGlobalScope interface discards any tasks queued in the DedicatedWorkerGlobalScope&apos;s event loop, effectively closing this particular scope. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks DedicatedWorkerGlobalScope See also on MDN PostMessage(dynamic, StructuredSerializeOptions) The postMessage() method of the DedicatedWorkerGlobalScope interface sends a message to the main thread that spawned it. public GlobalObject.Undefined PostMessage(dynamic message, StructuredSerializeOptions options) Parameters message dynamic options StructuredSerializeOptions Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This accepts a data parameter, which contains data to copy from the worker to the main thread. The data may be any value or JavaScript object handled by the structured clone algorithm, which includes cyclical references. The method also accepts an optional array of transferable objects to transfer to the main thread; Unlike the data parameter transferred objects are no longer usable in the worker thread. (Where possible, objects are transferred using a high performance zero-copy operation). The main scope that spawned the worker can send back information to the thread that spawned it using the PostMessage(dynamic, List<object>) method. The DedicatedWorkerGlobalScope interface it belongs to. See also on MDN PostMessage(dynamic, List<object>) The postMessage() method of the DedicatedWorkerGlobalScope interface sends a message to the main thread that spawned it. public GlobalObject.Undefined PostMessage(dynamic message, List<object> transfer) Parameters message dynamic transfer List<object> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This accepts a data parameter, which contains data to copy from the worker to the main thread. The data may be any value or JavaScript object handled by the structured clone algorithm, which includes cyclical references. The method also accepts an optional array of transferable objects to transfer to the main thread; Unlike the data parameter transferred objects are no longer usable in the worker thread. (Where possible, objects are transferred using a high performance zero-copy operation). The main scope that spawned the worker can send back information to the thread that spawned it using the PostMessage(dynamic, List<object>) method. The DedicatedWorkerGlobalScope interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DelayNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DelayNode.html",
    "title": "Class DelayNode | CSharpToJavaScript",
    "keywords": "Class DelayNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DelayNode interface represents a delay-line; an AudioNode audio-processing module that causes a delay between the arrival of an input data and its propagation to the output. [To(\"FirstCharToLowerCase\")] public class DelayNode : AudioNode Inheritance object EventTarget AudioNode DelayNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A DelayNode always has exactly one input and one output, both with the same amount of channels. The DelayNode acts as a delay-line, here with a value of 1s. When creating a graph that has a cycle, it is mandatory to have at least one DelayNode in the cycle, or the nodes taking part in the cycle will be muted. -Using the Web Audio API See also on MDN Constructors DelayNode() public DelayNode() DelayNode(BaseAudioContext, DelayOptions) The DelayNode() constructor of the Web Audio API creates a new DelayNode object with a delay-line; an AudioNode audio-processing module that causes a delay between the arrival of an input data, and its propagation to the output. public DelayNode(BaseAudioContext context, DelayOptions options) Parameters context BaseAudioContext options DelayOptions Remarks See also on MDN Properties DelayTime The delayTime property of the DelayNode interface is an a-rate AudioParam representing the amount of delay to apply. public AudioParam DelayTime { get; } Property Value AudioParam An AudioParam. Remarks delayTime is expressed in seconds, its minimal value is 0, and its maximum value is defined by the maxDelayTime argument of the CreateDelay(Number) method that created it. NOTE Note: Though the AudioParam returned is read-only, the value it represents is not. -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DelayOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DelayOptions.html",
    "title": "Class DelayOptions | CSharpToJavaScript",
    "keywords": "Class DelayOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DelayOptions : AudioNodeOptions Inheritance object AudioNodeOptions DelayOptions Inherited Members AudioNodeOptions.ChannelCount AudioNodeOptions.ChannelCountMode AudioNodeOptions.ChannelInterpretation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DelayTime public Number DelayTime Field Value Number MaxDelayTime public Number MaxDelayTime Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.DeviceMotionEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DeviceMotionEvent.html",
    "title": "Class DeviceMotionEvent | CSharpToJavaScript",
    "keywords": "Class DeviceMotionEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DeviceMotionEvent interface provides web developers with information about the speed of changes for the device&apos;s position and orientation. [To(\"FirstCharToLowerCase\")] public class DeviceMotionEvent : Event Inheritance object Event DeviceMotionEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks WARNING Warning: Currently, Firefox and Chrome do not handle the coordinates the same way. Take care about this while using them. -Window/deviceorientation_event -DeviceOrientationEvent -Window/devicemotion_event -Accelerometer -LinearAccelerationSensor -Detecting device orientation -Orientation and motion data explained See also on MDN Constructors DeviceMotionEvent() public DeviceMotionEvent() DeviceMotionEvent(string, DeviceMotionEventInit) The DeviceMotionEvent() constructor creates a new DeviceMotionEvent object. public DeviceMotionEvent(string type, DeviceMotionEventInit eventInitDict) Parameters type string eventInitDict DeviceMotionEventInit Remarks See also on MDN Properties Acceleration The DeviceMotionEventAcceleration object provides information about the amount of acceleration the device is experiencing along all three axes. public DeviceMotionEventAcceleration? Acceleration { get; } Property Value DeviceMotionEventAcceleration Remarks See also on MDN AccelerationIncludingGravity The accelerationIncludingGravity property returns the amount of acceleration recorded by the device, in meters per second squared (m/s²). Unlike Acceleration which compensates for the influence of gravity, its value is the sum of the acceleration of the device as induced by the user and an acceleration equal and opposite to that caused by gravity. In other words, it measures the g-force. In practice, this value represents the raw data measured by an accelerometer. public DeviceMotionEventAcceleration? AccelerationIncludingGravity { get; } Property Value DeviceMotionEventAcceleration The accelerationIncludingGravity property is an object providing information about acceleration on three axis. Each axis is represented with its own property: Remarks This value is not typically as useful as Acceleration, but may be the only value available on devices that aren&apos;t able to remove gravity from the acceleration data, such as on devices that don&apos;t have a gyroscope. NOTE Note: accelerationIncludingGravity&apos;s name can be misleading. This property represents acceleration including the effects of gravity. For example, if a device is lying flat on a horizontal surface with the screen pointing up, gravity would be -9.8 along the Z axis, while acceleration.z would be 0 and accelerationIncludingGravity.z would be 9.8. Similarly, if a device is in free fall with its screen horizontal and pointing up, gravity would be -9.8 along the Z axis, while acceleration.z would be -9.8 and accelerationIncludingGravity.z would be 0. -Acceleration -Window.Devicemotion_event event -Window.Deviceorientation_event event -DeviceOrientationEvent -Accelerometer -Detecting device orientation -Orientation and motion data explained See also on MDN Interval The DeviceMotionEvent.interval property returns the interval, in milliseconds, at which data is obtained from the underlying hardware. You can use this to determine the granularity of motion events. public Number Interval { get; } Property Value Number A number representing the interval of time, in milliseconds. Remarks -DeviceMotionEvent -Window.Devicemotion_event event -Window.Deviceorientation_event event -DeviceOrientationEvent -Detecting device orientation -Orientation and motion data explained See also on MDN RotationRate A DeviceMotionEventRotationRate object provides information about the rate at which the device is rotating around all three axes. public DeviceMotionEventRotationRate? RotationRate { get; } Property Value DeviceMotionEventRotationRate Remarks See also on MDN Methods RequestPermission() public static Task<Unsupported> RequestPermission() Returns Task<Unsupported>"
  },
  "api/CSharpToJavaScript.APIs.JS.DeviceMotionEventAcceleration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DeviceMotionEventAcceleration.html",
    "title": "Class DeviceMotionEventAcceleration | CSharpToJavaScript",
    "keywords": "Class DeviceMotionEventAcceleration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DeviceMotionEventAcceleration object provides information about the amount of acceleration the device is experiencing along all three axes. [To(\"FirstCharToLowerCase\")] public class DeviceMotionEventAcceleration Inheritance object DeviceMotionEventAcceleration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties X The DeviceMotionEventAcceleration.x read-only property indicates the amount of acceleration that occurred along the X axis in a DeviceMotionEventAcceleration object. public Number? X { get; } Property Value Number A double indicating the amount of acceleration along the X axis. See Accelerometer values explained for details. Remarks -DeviceMotionEventAcceleration.y -DeviceMotionEventAcceleration.z See also on MDN Y The DeviceMotionEventAcceleration.x read-only property indicates the amount of acceleration that occurred along the Y axis in a DeviceMotionEventAcceleration object. public Number? Y { get; } Property Value Number A double indicating the amount of acceleration along the Y axis. See Accelerometer values explained for details. Remarks -DeviceMotionEventAcceleration.x -DeviceMotionEventAcceleration.z See also on MDN Z The DeviceMotionEventAcceleration.x read-only property indicates the amount of acceleration that occurred along the Z axis in a DeviceMotionEventAcceleration object. public Number? Z { get; } Property Value Number A double indicating the amount of acceleration along the Z axis. See Accelerometer values explained for details. Remarks -DeviceMotionEventAcceleration.x -DeviceMotionEventAcceleration.y See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DeviceMotionEventAccelerationInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DeviceMotionEventAccelerationInit.html",
    "title": "Class DeviceMotionEventAccelerationInit | CSharpToJavaScript",
    "keywords": "Class DeviceMotionEventAccelerationInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DeviceMotionEventAccelerationInit Inheritance object DeviceMotionEventAccelerationInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields X public Number? X Field Value Number Y public Number? Y Field Value Number Z public Number? Z Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.DeviceMotionEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DeviceMotionEventInit.html",
    "title": "Class DeviceMotionEventInit | CSharpToJavaScript",
    "keywords": "Class DeviceMotionEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DeviceMotionEventInit : EventInit Inheritance object EventInit DeviceMotionEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Acceleration public DeviceMotionEventAccelerationInit Acceleration Field Value DeviceMotionEventAccelerationInit AccelerationIncludingGravity public DeviceMotionEventAccelerationInit AccelerationIncludingGravity Field Value DeviceMotionEventAccelerationInit Interval public Number Interval Field Value Number RotationRate public DeviceMotionEventRotationRateInit RotationRate Field Value DeviceMotionEventRotationRateInit"
  },
  "api/CSharpToJavaScript.APIs.JS.DeviceMotionEventRotationRate.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DeviceMotionEventRotationRate.html",
    "title": "Class DeviceMotionEventRotationRate | CSharpToJavaScript",
    "keywords": "Class DeviceMotionEventRotationRate Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll A DeviceMotionEventRotationRate object provides information about the rate at which the device is rotating around all three axes. [To(\"FirstCharToLowerCase\")] public class DeviceMotionEventRotationRate Inheritance object DeviceMotionEventRotationRate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Alpha The DeviceMotionEventRotationRate.alpha read-only property indicates the rate of rotation around the Z axis, in degrees per second. public Number? Alpha { get; } Property Value Number A double indicating the rate of rotation around the Z axis, in degrees per second. See Accelerometer values explained for details. Remarks See also on MDN Beta The DeviceMotionEventRotationRate.alpha read-only property indicates the rate of rotation around the X axis, in degrees per second. public Number? Beta { get; } Property Value Number A double indicating the rate of rotation around the X axis, in degrees per second. See Accelerometer values explained for details. Remarks See also on MDN Gamma This property indicates the rate of rotation around the Y axis, in degrees per second. public Number? Gamma { get; } Property Value Number A double indicating the rate of rotation around the Y axis, in degrees per second. See Accelerometer values explained for details. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DeviceMotionEventRotationRateInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DeviceMotionEventRotationRateInit.html",
    "title": "Class DeviceMotionEventRotationRateInit | CSharpToJavaScript",
    "keywords": "Class DeviceMotionEventRotationRateInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DeviceMotionEventRotationRateInit Inheritance object DeviceMotionEventRotationRateInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alpha public Number? Alpha Field Value Number Beta public Number? Beta Field Value Number Gamma public Number? Gamma Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.DeviceOrientationEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DeviceOrientationEvent.html",
    "title": "Class DeviceOrientationEvent | CSharpToJavaScript",
    "keywords": "Class DeviceOrientationEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DeviceOrientationEvent object provides web developers with information from the physical orientation of the device running the web page. [To(\"FirstCharToLowerCase\")] public class DeviceOrientationEvent : Event Inheritance object Event DeviceOrientationEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Window.Deviceorientation_event -DeviceMotionEvent -Window.Devicemotion_event -Detecting device orientation -Orientation and motion data explained See also on MDN Constructors DeviceOrientationEvent() public DeviceOrientationEvent() DeviceOrientationEvent(string, DeviceOrientationEventInit) The DeviceOrientationEvent() constructor creates a new DeviceOrientationEvent object. public DeviceOrientationEvent(string type, DeviceOrientationEventInit eventInitDict) Parameters type string eventInitDict DeviceOrientationEventInit Remarks See also on MDN Properties Absolute Indicates whether or not the device is providing orientation data absolutely (that is, in reference to the Earth&apos;s coordinate frame) or using some arbitrary frame determined by the device. See Orientation and motion data explained for details. public bool Absolute { get; } Property Value bool Remarks -DeviceOrientationEvent -Detecting device orientation -Orientation and motion data explained -Window.Deviceorientation_event event -Window.Deviceorientation_event See also on MDN Alpha Returns the rotation of the device around the Z axis; that is, the number of degrees by which the device is being twisted around the center of the screen. See Orientation and motion data explained for details. public Number? Alpha { get; } Property Value Number A number. Remarks -DeviceOrientationEvent -Detecting device orientation -Orientation and motion data explained -Window.Deviceorientation_event event -Window.Deviceorientation_event See also on MDN Beta Returns the rotation of the device around the X axis; that is, the number of degrees, ranged between -180 and 180, by which the device is tipped forward or backward. See Orientation and motion data explained for details. public Number? Beta { get; } Property Value Number A number. Remarks -DeviceOrientationEvent -Detecting device orientation -Orientation and motion data explained -Window.Deviceorientation_event event -Window.Deviceorientation_event See also on MDN Gamma Returns the rotation of the device around the Y axis; that is, the number of degrees, ranged between -90 and 90, by which the device is tilted left or right. See Orientation and motion data explained for details. public Number? Gamma { get; } Property Value Number A number. Remarks -DeviceOrientationEvent -Detecting device orientation -Orientation and motion data explained -Window.Deviceorientation_event event -Window.Deviceorientation_event See also on MDN Methods RequestPermission() public static Task<Unsupported> RequestPermission() Returns Task<Unsupported>"
  },
  "api/CSharpToJavaScript.APIs.JS.DeviceOrientationEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DeviceOrientationEventInit.html",
    "title": "Class DeviceOrientationEventInit | CSharpToJavaScript",
    "keywords": "Class DeviceOrientationEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DeviceOrientationEventInit : EventInit Inheritance object EventInit DeviceOrientationEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Absolute public bool Absolute Field Value bool Alpha public Number? Alpha Field Value Number Beta public Number? Beta Field Value Number Gamma public Number? Gamma Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.DirectionSetting.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DirectionSetting.html",
    "title": "Enum DirectionSetting | CSharpToJavaScript",
    "keywords": "Enum DirectionSetting Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum DirectionSetting Fields Empty = 0 Lr = 2 Rl = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.DistanceModelType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DistanceModelType.html",
    "title": "Enum DistanceModelType | CSharpToJavaScript",
    "keywords": "Enum DistanceModelType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum DistanceModelType Fields Exponential = 2 Inverse = 1 Linear = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.Document.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Document.html",
    "title": "Class Document | CSharpToJavaScript",
    "keywords": "Class Document Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Document interface represents any web page loaded in the browser and serves as an entry point into the web page&apos;s content, which is the DOM tree. [To(\"FirstCharToLowerCase\")] public class Document : Node Inheritance object EventTarget Node Document Derived XMLDocument Inherited Members Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The DOM tree includes elements such as body and table, among many others. It provides functionality globally to the document, like how to obtain the page&apos;s URL and create new elements in the document. The Document interface describes the common properties and methods for any kind of document. Depending on the document&apos;s type (e.g. HTML, XML, SVG, …), a larger API is available: HTML documents, served with the &quot;text/html&quot; content type, also implement the HTMLDocument interface, whereas XML and SVG documents implement the XMLDocument interface. See also on MDN Constructors Document() The Document constructor creates a new Document object that is a web page loaded in the browser and serving as an entry point into the page&apos;s content. public Document() Remarks See also on MDN Properties AlinkColor IMPORTANT Deprecated Returns or sets the color of an active link in the document body. A link is active during the time between mousedown and mouseup events. public string AlinkColor { get; set; } Property Value string A string containing the name of the color (e.g., blue, darkblue, etc.) or the hexadecimal value of the color (e.g., #0000FF). Remarks See also on MDN All IMPORTANT Deprecated The Document interface's read-only all property returns an HTMLAllCollection rooted at the document node. In other words, it returns all of the document&apos;s elements, accessible by order (like an array) and by ID (like a regular object). public HTMLAllCollection All { get; } Property Value HTMLAllCollection An HTMLAllCollection which contains every element in the document. Remarks See also on MDN Anchors IMPORTANT Deprecated The anchors read-only property of the Document interface returns a list of all of the anchors in the document. public HTMLCollection Anchors { get; } Property Value HTMLCollection An HTMLCollection. Remarks See also on MDN Applets IMPORTANT Deprecated The applets property of the Document returns an empty HTMLCollection. This property is kept only for compatibility reasons; in older versions of browsers, it returned a list of the applets within a document. public HTMLCollection Applets { get; } Property Value HTMLCollection An empty HTMLCollection. Remarks NOTE Note: Support for the applet element has been removed by all browsers. Therefore, calling document.applets always returns an empty collection. See also on MDN BgColor IMPORTANT Deprecated The deprecated bgColor property gets or sets the background color of the current document. public string BgColor { get; set; } Property Value string A string representing the color as a word (e.g., &quot;red&quot;) or hexadecimal value (e.g., &quot;#ff0000&quot;). Remarks See also on MDN Body The Document.body property represents the body or frameset node of the current document, or null if no such element exists. public HTMLElement? Body { get; set; } Property Value HTMLElement One of the following: Remarks -Head See also on MDN CharacterSet The Document.characterSet read-only property returns the character encoding of the document that it&apos;s currently rendered with. public string CharacterSet { get; } Property Value string A string. Remarks NOTE Note: A &quot;character set&quot; and a &quot;character encoding&quot; are related, but different. Despite the name of this property, it returns the encoding. Users can override the developer-specified encoding inside the Content-Type header or inline like &lt;meta charset=&quot;utf-8&quot;&gt;, such as with Firefox&apos;s &lt;kbd&gt;View → Text Encoding&lt;/kbd&gt; menu. This override is provided to fix incorrect developer-specified encodings that result in garbled text. NOTE Note: The properties document.charset and document.inputEncoding are legacy aliases for document.characterSet. Do not use them any more. See also on MDN Charset public string Charset { get; } Property Value string CompatMode The Document.compatMode read-only property indicates whether the document is rendered in Quirks mode or Standards mode. public string CompatMode { get; } Property Value string An enumerated value that can be: NOTE Note: All these modes are now standardized, so the older &quot;standards&quot; and &quot;almost standards&quot; names are nonsensical and no longer used in standards. Remarks See also on MDN ContentType The Document.contentType read-only property returns the MIME type that the document is being rendered as. This may come from HTTP headers or other sources of MIME information, and might be affected by automatic type conversions performed by either the browser or extensions. public string ContentType { get; } Property Value string contentType is a read-only property. Remarks NOTE Note: This property is unaffected by meta elements. See also on MDN Cookie The Document property cookie lets you read and write cookies associated with the document. It serves as a getter and setter for the actual values of the cookies. public string Cookie { get; set; } Property Value string Remarks -HTTP cookies -DOM Storage -URL.pathname -DateToUTCString -RFC 2965 See also on MDN CurrentScript The Document.currentScript property returns the script element whose script is currently being processed and isn&apos;t a JavaScript module. (For modules use import.meta instead.) public Union5? CurrentScript { get; } Property Value Union5? A HTMLScriptElement or null. Remarks It's important to note that this will not reference the script element if the code in the script is being called as a callback or event handler; it will only reference the element while it&apos;s initially being processed. -import.meta -script -Document.Afterscriptexecute_event -Document.Beforescriptexecute_event See also on MDN DefaultView In browsers, document.defaultView returns the Window object associated with {{Glossary(\"Browsing_context\", \"a document&quot;)}}, or null if none is available. public Window? DefaultView { get; } Property Value Window The Window object. Remarks This property is read-only. See also on MDN DesignMode document.designMode controls whether the entire document is editable. Valid values are &quot;on&quot; and &quot;off&quot;. According to the specification, this property is meant to default to &quot;off&quot;. Firefox follows this standard. The earlier versions of Chrome and IE default to &quot;inherit&quot;. Starting in Chrome 43, the default is &quot;off&quot; and &quot;inherit&quot; is no longer supported. In IE6-10, the value is capitalized. public string DesignMode { get; set; } Property Value string A string indicating whether designMode is (or should be) set to on or off. Valid values are on and off. Remarks -HTMLElement.ContentEditable See also on MDN Dir The Document.dir property is a string representing the directionality of the text of the document, whether left to right (default) or right to left. Possible values are &apos;rtl&apos;, right to left, and &apos;ltr&apos;, left to right. public string Dir { get; set; } Property Value string A string. Remarks -dir global attribute See also on MDN Doctype Returns the Document Type Declaration (DTD) associated with current document. The returned object implements the DocumentType interface. Use CreateDocumentType(string, string, string) to create a DocumentType. public DocumentType? Doctype { get; } Property Value DocumentType A DocumentType object. Remarks See also on MDN DocumentElement Document.documentElement returns the Element that is the root element of the Document (for example, the html element for HTML documents). public Element? DocumentElement { get; } Property Value Element A Element object. Remarks See also on MDN DocumentURI The documentURI read-only property of the Document interface returns the document location as a string. public string DocumentURI { get; } Property Value string A string. Remarks -The URL property which returns the same value. See also on MDN Domain IMPORTANT Deprecated The domain property of the Document interface gets/sets the domain portion of the origin of the current document, as used by the same-origin policy. public string Domain { get; set; } Property Value string A string. Remarks -Same-origin policy -Hostname -Host -Origin See also on MDN Embeds The embeds read-only property of the Document interface returns a list of the embedded embed elements within the current document. public HTMLCollection Embeds { get; } Property Value HTMLCollection An HTMLCollection. Remarks See also on MDN FgColor IMPORTANT Deprecated fgColor gets/sets the foreground color, or text color, of the current document. public string FgColor { get; set; } Property Value string A string representing the color as a word (e.g., &quot;red&quot;) or hexadecimal value (e.g., &quot;#ff0000&quot;). Remarks See also on MDN Forms The forms read-only property of the Document interface returns an HTMLCollection listing all the form elements contained in the document. public HTMLCollection Forms { get; } Property Value HTMLCollection An HTMLCollection object listing all of the document's forms. Each item in the collection is a HTMLFormElement representing a single &lt;form&gt; element.If the document has no forms, the returned collection is empty, with a length of zero. Remarks NOTE Note: Similarly, you can access a list of a form&apos;s component user input elements using the Elements property. -HTML forms -{{HTMLElement(\"form\")}} and the HTMLFormElement interface See also on MDN Fullscreen IMPORTANT Deprecated The obsolete Document interface's fullscreen read-only property reports whether or not the document is currently displaying content in fullscreen mode. public bool Fullscreen { get; } Property Value bool A Boolean value which is true if the document is currently displaying an element in fullscreen mode; otherwise, the value is false. Remarks Although this property is read-only, it will not throw if it is modified (even in strict mode); the setter is a no-operation and it will be ignored. NOTE Note: Since this property is deprecated, you can determine if fullscreen mode is active on the document by checking to see if Document.FullscreenElement is not null. -Fullscreen API -Guide to the Fullscreen API -FullscreenEnabled See also on MDN FullscreenEnabled The read-only fullscreenEnabled property on the Document interface indicates whether or not fullscreen mode is available. public bool FullscreenEnabled { get; } Property Value bool A boolean value which is true if the document and the elements within can be placed into fullscreen mode by calling RequestFullscreen(FullscreenOptions). If fullscreen mode isn't available, this value is false. Remarks fullscreen mode is available only for a page that has no windowed plug-ins in any of its documents, and if all iframe elements which contain the document have their allowfullscreen attribute set. Although this property is read-only, it will not throw if it is modified (even in strict mode); the setter is a no-operation and it will be ignored. -Fullscreen API -Guide to the Fullscreen API -RequestFullscreen(FullscreenOptions) -ExitFullscreen() -Document.FullscreenElement -:fullscreen and {{cssxref(\"::backdrop&quot;)}} -The iframe allowfullscreen attribute See also on MDN Head The head read-only property of the Document interface returns the {{HTMLElement(\"head\")}} element of the current document. public HTMLHeadElement? Head { get; } Property Value HTMLHeadElement An HTMLHeadElement. Remarks -Body See also on MDN Hidden The Document.hidden read-only property returns a Boolean value indicating if the page is considered hidden or not. public bool Hidden { get; } Property Value bool Remarks NOTE Note: This property is described as &quot;historical&quot; in the Page Visibility Level 2 specification. Consider using the VisibilityState property instead. See also on MDN Images The images read-only property of the Document interface returns a collection of the images in the current HTML document. public HTMLCollection Images { get; } Property Value HTMLCollection An HTMLCollection providing a live list of all of the images contained in the current document. Each entry in the collection is an HTMLImageElement representing a single image element. Remarks See also on MDN Implementation The Document.implementation property returns a DOMImplementation object associated with the current document. public DOMImplementation Implementation { get; } Property Value DOMImplementation A DOMImplementation object. Remarks See also on MDN InputEncoding public string InputEncoding { get; } Property Value string LastModified The lastModified property of the Document interface returns a string containing the date and time on which the current document was last modified. public string LastModified { get; } Property Value string A string. Remarks See also on MDN LinkColor IMPORTANT Deprecated The Document.linkColor property gets/sets the color of links within the document. public string LinkColor { get; set; } Property Value string A string representing the color as a word (e.g., red) or hexadecimal value (e.g., #ff0000). Remarks This property is deprecated. As an alternative, you can set the CSS {{cssxref(\"color\")}} property on either HTML anchor links (a) or on :link pseudo-classes. Another alternative is document.body.link, although this is deprecated in HTML 4.01. -VlinkColor -AlinkColor See also on MDN Links The links read-only property of the Document interface returns a collection of all {{HTMLElement(\"area\")}} elements and {{HTMLElement(\"a\")}} elements in a document with a value for the href attribute. public HTMLCollection Links { get; } Property Value HTMLCollection An HTMLCollection. Remarks See also on MDN Location The Document.location read-only property returns a Location object, which contains information about the URL of the document and provides methods for changing that URL and loading another URL. public Location? Location { get; } Property Value Location A Location object. Remarks Though Document.location is a read-only Location object, you can also assign a string to it. This means that you can work with document.location as if it were a string in most cases: document.location = &apos;http://www.example.com&apos; is a synonym of document.location.href = &apos;http://www.example.com&apos;. If you assign another string to it, browser will load the website you assigned. To retrieve just the URL as a string, the read-only URL property can also be used. If the current document is not in a browsing context, the returned value is null. -The interface of the returned value, Location -A similar information, but attached to the browsing context, Location See also on MDN Onfullscreenchange public EventHandlerNonNull Onfullscreenchange { get; set; } Property Value EventHandlerNonNull Onfullscreenerror public EventHandlerNonNull Onfullscreenerror { get; set; } Property Value EventHandlerNonNull Onreadystatechange public EventHandlerNonNull Onreadystatechange { get; set; } Property Value EventHandlerNonNull Onvisibilitychange public EventHandlerNonNull Onvisibilitychange { get; set; } Property Value EventHandlerNonNull PermissionsPolicy public PermissionsPolicy PermissionsPolicy { get; } Property Value PermissionsPolicy PictureInPictureEnabled The read-only pictureInPictureEnabled property of the Document interface indicates whether or not picture-in-picture mode is available. public bool PictureInPictureEnabled { get; } Property Value bool A boolean value, which is true if a video can enter picture-in-picture and be displayed in a floating window by calling RequestPictureInPicture(). If picture-in-picture mode isn't available, this value is false. Remarks Picture-in-Picture mode is available by default unless specified otherwise by a Permissions-Policy. Although this property is read-only, it will not throw if it is modified (even in strict mode); the setter is a no-operation and will be ignored. -RequestPictureInPicture() -DisablePictureInPicture -ExitPictureInPicture() -Document.PictureInPictureElement -:picture-in-picture See also on MDN Plugins The plugins read-only property of the Document interface returns an HTMLCollection object containing one or more HTMLEmbedElements representing the embed elements in the current document. public HTMLCollection Plugins { get; } Property Value HTMLCollection An HTMLCollection. Remarks NOTE Note: For a list of installed plugins, use Navigator.plugins instead. -MSDN documentation See also on MDN ReadyState The Document.readyState property describes the loading state of the Document. When the value of this property changes, a Document/readystatechange_event event fires on the Document object. public DocumentReadyState ReadyState { get; } Property Value DocumentReadyState The readyState of a document can be one of following: Remarks -Related events:-Document/readystatechange_event -Document/DOMContentLoaded_event -Window/load_event See also on MDN Referrer The Document.referrer property returns the URI of the page that linked to this page. public string Referrer { get; } Property Value string The value is an empty string if the user navigated to the page directly (not through a link, but, for example, by using a bookmark). Because this property returns only a string, it doesn&apos;t give you document object model (DOM) access to the referring page.Inside an iframe, the Document.referrer will initially be set to the same value as the HTMLAnchorElement/href of the parent window's Window/location. Remarks See also on MDN Scripts The scripts property of the Document interface returns a list of the script elements in the document. The returned object is an HTMLCollection. public HTMLCollection Scripts { get; } Property Value HTMLCollection An HTMLCollection. You can use this just like an array to get all the elements in the list. Remarks See also on MDN Title The document.title property gets or sets the current title of the document. When present, it defaults to the value of the &lt;title&gt;. public string Title { get; set; } Property Value string A string containing the document&apos;s title. If the title was overridden by setting document.title, it contains that value. Otherwise, it contains the title specified in the &lt;title&gt; element.newTitle is the new title of the document. The assignment affects the return value of document.title, the title displayed for the document (e.g. in the titlebar of the window or tab), and it also affects the DOM of the document (e.g. the content of the &lt;title&gt; element in an HTML document). Remarks See also on MDN URL The URL read-only property of the Document interface returns the document location as a string. public string URL { get; } Property Value string A string containing the URL of the document. Remarks -The DocumentURI property which returns the same value. See also on MDN VisibilityState The Document.visibilityState read-only property returns the visibility of the 'document', that is in which context this element is now visible. It is useful to know if the document is in the background or an invisible tab, or only loaded for pre-rendering. public DocumentVisibilityState VisibilityState { get; } Property Value DocumentVisibilityState Remarks Possible values are: When the value of this property changes, the Document/visibilitychange_event event is sent to the Document. Typical use of this can be to prevent the download of some assets when the document is solely prerendered, or stop some activities when the document is in the background or minimized. See also on MDN VlinkColor IMPORTANT Deprecated The Document.vlinkColor property gets/sets the color of links that the user has visited in the document. public string VlinkColor { get; set; } Property Value string A string representing the color as a word (e.g., &quot;red&quot;) or hexadecimal value (e.g., &quot;#ff0000&quot;). Remarks See also on MDN Methods AdoptNode(Node) Document.adoptNode() transfers a {{Glossary(&quot;node/dom&quot;, &quot;node&quot;)}} from another {{domxref(&quot;Document&quot;, &quot;document&quot;, &quot;&quot;, &quot;1&quot;)}} into the method&apos;s document. The adopted node and its subtree are removed from their original document (if any), and their OwnerDocument is changed to the current document. The node can then be inserted into the current document. public Node AdoptNode(Node node) Parameters node Node Returns Node The copied importedNode in the scope of the importing document.After calling this method, importedNode and externalNode are the same object. NOTE Note: importedNode&apos;s ParentNode is null, since it has not yet been inserted into the document tree! Remarks -ImportNode(Node, bool) See also on MDN CaptureEvents() public GlobalObject.Undefined CaptureEvents() Returns GlobalObject.Undefined Clear() IMPORTANT Deprecated The Document.clear() method does nothing, but doesn&apos;t raise any error. public GlobalObject.Undefined Clear() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Close() The Document.close() method finishes writing to a document, opened with Open(string, string). public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN CreateAttribute(string) The Document.createAttribute() method creates a new attribute node, and returns it. The object created is a node implementing the Attr interface. The DOM does not enforce what sort of attributes can be added to a particular element in this manner. public Attr CreateAttribute(string localName) Parameters localName string Returns Attr A Attr node. Remarks NOTE Note: The string given in parameter is converted to lowercase. -CreateAttributeNS(string?, string) -CreateElement(string, string) -SetAttribute(string, string) -SetAttributeNode(Attr) See also on MDN CreateAttributeNS(string?, string) The Document.createAttributeNS() method creates a new attribute node with the specified namespace URI and qualified name, and returns it. The object created is a node implementing the Attr interface. The DOM does not enforce what sort of attributes can be added to a particular element in this manner. public Attr CreateAttributeNS(string? namespace_, string qualifiedName) Parameters namespace_ string qualifiedName string Returns Attr The new Attr node. Remarks -CreateAttribute(string) -CreateElementNS(string?, string, Union50) -SetAttributeNS(string?, string, string) -SetAttributeNode(Attr) -SetAttributeNodeNS(Attr) See also on MDN CreateCDATASection(string) createCDATASection() creates a new CDATA section node, and returns it. public CDATASection CreateCDATASection(string data) Parameters data string Returns CDATASection A CDATA Section node. Remarks See also on MDN CreateComment(string) createComment() creates a new comment node, and returns it. public Comment CreateComment(string data) Parameters data string Returns Comment A new Comment object. Remarks See also on MDN CreateDocumentFragment() Creates a new empty DocumentFragment into which DOM nodes can be added to build an offscreen DOM tree. public DocumentFragment CreateDocumentFragment() Returns DocumentFragment A newly created, empty, DocumentFragment object, which is ready to have nodes inserted into it. Remarks -{{domxref(&quot;DOMImplementation.createDocument&quot;, &quot;document.implementation.createDocument()&quot;)}} -DocumentFragment See also on MDN CreateElement(string, Union49) In an HTML document, the document.createElement() method creates the HTML element specified by tagName, or an HTMLUnknownElement if tagName isn&apos;t recognized. public Element CreateElement(string localName, Union49 options) Parameters localName string options Union49 Returns Element The new Element. NOTE Note: A new {{domxref(&quot;HTMLElement&quot;, &quot;HTMLElement&quot;, &quot;&quot;, &quot;1&quot;)}} is returned if the document is an {{domxref(&quot;HTMLDocument&quot;, &quot;HTMLDocument&quot;, , &quot;1&quot;)}}, which is the most common case. Otherwise a new {{domxref(&quot;Element&quot;,&quot;Element&quot;,,&quot;1&quot;)}} is returned. Remarks -RemoveChild(Node) -ReplaceChild(Node, Node) -AppendChild(Node) -InsertBefore(Node, Node?) -HasChildNodes() -CreateElementNS(string?, string, Union50) — to explicitly specify the namespace URI for the element. See also on MDN CreateElement(string, string) [To(\"FirstCharToLowerCase\")] public Element CreateElement(string localName, string options = \"\") Parameters localName string options string Returns Element CreateElementNS(string?, string, Union50) Creates an element with the specified namespace URI and qualified name. public Element CreateElementNS(string? namespace_, string qualifiedName, Union50 options) Parameters namespace_ string qualifiedName string options Union50 Returns Element The new Element. Remarks To create an element without specifying a namespace URI, use the CreateElement(string, string) method. -CreateElement(string, string) -CreateTextNode(string) -NamespaceURI -Namespaces in XML See also on MDN CreateEvent(string) WARNING Warning: Many methods used with createEvent, such as initCustomEvent, are deprecated. Use event constructors instead. public Event CreateEvent(string interface_) Parameters interface_ string Returns Event An Event object. Remarks Creates an event of the type specified. The returned object should be first initialized and can then be passed to DispatchEvent(Event). -Creating and triggering events See also on MDN CreateNodeIterator(Node, ulong, NodeFilter?) The Document.createNodeIterator() method returns a new NodeIterator object. public NodeIterator CreateNodeIterator(Node root, ulong whatToShow, NodeFilter? filter) Parameters root Node whatToShow ulong filter NodeFilter Returns NodeIterator A new NodeIterator object. Remarks See also on MDN CreateProcessingInstruction(string, string) createProcessingInstruction() generates a new processing instruction node and returns it. public ProcessingInstruction CreateProcessingInstruction(string target, string data) Parameters target string data string Returns ProcessingInstruction None (GlobalObject.Undefined). Remarks The new node usually will be inserted into an XML document in order to accomplish anything with it, such as with InsertBefore(Node, Node?). See also on MDN CreateRange() The Document.createRange() method returns a new Range object. public Range CreateRange() Returns Range The created Range object. Remarks See also on MDN CreateTextNode(string) Creates a new Text node. This method can be used to escape HTML characters. public Text CreateTextNode(string data) Parameters data string Returns Text A Text node. Remarks See also on MDN CreateTouch(Window, EventTarget, long, long, long, long, long) IMPORTANT Deprecated The Document.createTouch() method creates and returns a new Touch object. public Touch CreateTouch(Window view, EventTarget target, long identifier, long pageX, long pageY, long screenX, long screenY) Parameters view Window target EventTarget identifier long pageX long pageY long screenX long screenY long Returns Touch Remarks NOTE Note: Use the TouchEvent() constructor. -Touch events -TouchList -Touch -CreateTouchList(params Touch[]) See also on MDN CreateTouchList(params Touch[]) IMPORTANT Deprecated The Document.createTouchList() method creates and returns a new TouchList object. public TouchList CreateTouchList(params Touch[] touches) Parameters touches Touch[] Returns TouchList Remarks -Touch events -Touch -TouchEvent -TouchList -CreateTouch(Window, EventTarget, long, long, long, long, long) See also on MDN CreateTreeWalker(Node, ulong, NodeFilter?) The Document.createTreeWalker() creator method returns a newly created TreeWalker object. public TreeWalker CreateTreeWalker(Node root, ulong whatToShow, NodeFilter? filter) Parameters root Node whatToShow ulong filter NodeFilter Returns TreeWalker A new TreeWalker object. Remarks -TreeWalker: Related interface See also on MDN ExecCommand(string, bool, string) IMPORTANT Deprecated When an HTML document has been switched to designMode, its document object exposes an execCommand method to run commands that manipulate the current editable region, such as form inputs or contentEditable elements. public bool ExecCommand(string commandId, bool showUI, string value) Parameters commandId string showUI bool value string Returns bool A boolean value that is false if the command is unsupported or disabled. NOTE Note: document.execCommand() only returns true if it is invoked as part of a user interaction. You can&apos;t use it to verify browser support before calling a command. From Firefox 82, nested document.execCommand() calls will always return false. Remarks Most commands affect the document&apos;s selection (bold, italics, etc.), while others insert new elements (adding a link), or affect an entire line (indenting). When using contentEditable, execCommand() affects the currently active editable element. The Clipboard API can be used instead of execCommand in many cases, but execCommand is still sometimes useful. In particular, the Clipboard API doesn&apos;t replace the insertText command, which you can use to programmatically replace text at the cursor while preserving the undo buffer (edit history) in plain textarea and input elements. -Clipboard API -HTMLElement.ContentEditable -DesignMode See also on MDN ExitFullscreen() The Document method exitFullscreen() requests that the element on this document which is currently being presented in fullscreen mode be taken out of fullscreen mode, restoring the previous state of the screen. This usually reverses the effects of a previous call to RequestFullscreen(FullscreenOptions). public Task<GlobalObject.Undefined> ExitFullscreen() Returns Task<GlobalObject.Undefined> A Promise which is resolved once the {{Glossary(\"user agent\")}} has finished exiting fullscreen mode. If an error occurs while attempting to exit fullscreen mode, the catch() handler for the promise is called. Remarks -Fullscreen API -Guide to the Fullscreen API -RequestFullscreen(FullscreenOptions) -Document.FullscreenElement -:fullscreen and {{cssxref(\"::backdrop&quot;)}} -The iframe allowfullscreen attribute See also on MDN ExitPictureInPicture() The Document method exitPictureInPicture() requests that a video contained in this document, which is currently floating, be taken out of picture-in-picture mode, restoring the previous state of the screen. This usually reverses the effects of a previous call to RequestPictureInPicture(). public Task<GlobalObject.Undefined> ExitPictureInPicture() Returns Task<GlobalObject.Undefined> A Promise, which is resolved once the {{Glossary(\"user agent\")}} has finished exiting picture-in-picture mode. If an error occurs while attempting to exit fullscreen mode, the catch() handler for the promise is called. Remarks -RequestPictureInPicture() -DisablePictureInPicture -PictureInPictureEnabled -Document.PictureInPictureElement -:picture-in-picture -Picture-in-Picture events See also on MDN GetElementsByClassName(string) The getElementsByClassName method of Document interface returns an array-like object of all child elements which have all of the given class name(s). public HTMLCollection GetElementsByClassName(string classNames) Parameters classNames string Returns HTMLCollection A live HTMLCollection of found elements. Remarks When called on the Document object, the complete document is searched, including the root node. You may also call {{domxref(&quot;Element.getElementsByClassName&quot;, &quot;getElementsByClassName()&quot;)}} on any element; it will return only elements which are descendants of the specified root element with the given class name(s). WARNING Warning: This is a live HTMLCollection. Changes in the DOM will reflect in the array as the changes occur. If an element selected by this array no longer qualifies for the selector, it will automatically be removed. Be aware of this for iteration purposes. See also on MDN GetElementsByName(string) The getElementsByName() method of the Document object returns a NodeList Collection of elements with a given name attribute in the document. public NodeList GetElementsByName(string elementName) Parameters elementName string Returns NodeList A live NodeList collection, meaning it automatically updates as new elements with the same name are added to, or removed from, the document. Remarks -Document.GetElementById to return a reference to an element by its unique id -GetElementsByTagName(string) to return references to elements with the same tag name -Document.QuerySelector to return references to elements via CSS selectors like &apos;div.myclass&apos; See also on MDN GetElementsByTagName(string) The getElementsByTagName method of Document interface returns an HTMLCollection of elements with the given tag name. public HTMLCollection GetElementsByTagName(string qualifiedName) Parameters qualifiedName string Returns HTMLCollection A live HTMLCollection of found elements in the order they appear in the tree. NOTE Note: The latest W3C specification says returned value is an HTMLCollection; however, this method returns a NodeList in WebKit browsers. See Firefox bug 14869 for details. Remarks The complete document is searched, including the root node. The returned HTMLCollection is live, meaning that it updates itself automatically to stay in sync with the DOM tree without having to call document.getElementsByTagName() again. -GetElementsByTagName(string) -Document.GetElementById to return a reference to an element by its id -GetElementsByName(string) to return a reference to an element by its name -Document.QuerySelector for powerful selectors via queries like &apos;div.myclass&apos; See also on MDN GetElementsByTagNameNS(string?, string) Returns a list of elements with the given tag name belonging to the given namespace. The complete document is searched, including the root node. public HTMLCollection GetElementsByTagNameNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns HTMLCollection A live NodeList (but see the note below) of found elements in the order they appear in the tree. NOTE Note: While the W3C specification says returned value is a NodeList, this method returns a HTMLCollection in Firefox. Opera returns a NodeList, but with a namedItem method implemented, which makes it similar to a HTMLCollection. As of January 2012, only in WebKit browsers is the returned value a pure NodeList. See bug 14869 for details. NOTE Note: Currently parameters in this method are case-sensitive, but they were case-insensitive in Firefox 3.5 and before. See the developer release note for Firefox 3.6 and a note in Browser compatibility section in GetElementsByTagNameNS(string?, string) for details. Remarks -GetElementsByTagNameNS(string?, string) See also on MDN HasFocus() The hasFocus() method of the Document interface returns a boolean value indicating whether the document or any element inside the document has focus. This method can be used to determine whether the active element in a document has focus. public bool HasFocus() Returns bool false if the active element in the document has no focus; true if the active element in the document has focus. Remarks NOTE Note: When viewing a document, an element with focus is always the active element in the document, but an active element does not necessarily have focus. For example, an active element within a popup window that is not the foreground doesn&apos;t have focus. -Document.ActiveElement -Using the Page Visibility API See also on MDN ImportNode(Node, bool) The Document object's importNode() method creates a copy of a Node or DocumentFragment from another document, to be inserted into the current document later. public Node ImportNode(Node node, bool deep) Parameters node Node deep bool Returns Node The copied importedNode in the scope of the importing document. NOTE Note: importedNode's ParentNode is null, since it has not yet been inserted into the document tree! Remarks The imported node is not yet included in the document tree. To include it, you need to call an insertion method such as AppendChild(Node) or InsertBefore(Node, Node?) with a node that is currently in the document tree. Unlike AdoptNode(Node), the original node is not removed from its original document. The imported node is a clone of the original. -AdoptNode(Node), which behaves very similar to this method -AppendChild(Node) -InsertBefore(Node, Node?) See also on MDN Open(string, string) The Document.open() method opens a document for {{domxref(&quot;Document.write&quot;, &quot;writing&quot;, &quot;&quot;, &quot;1&quot;)}}. public Document Open(string unused1, string unused2) Parameters unused1 string unused2 string Returns Document A Document object instance. Remarks This does come with some side effects. For example: -Document -Open(string, string, string) See also on MDN Open(string, string, string) The Document.open() method opens a document for {{domxref(&quot;Document.write&quot;, &quot;writing&quot;, &quot;&quot;, &quot;1&quot;)}}. public Window? Open(string url, string name, string features) Parameters url string name string features string Returns Window A Document object instance. Remarks This does come with some side effects. For example: -Document -Open(string, string, string) See also on MDN QueryCommandEnabled(string) IMPORTANT Deprecated The Document.queryCommandEnabled() method reports whether or not the specified editor command is enabled by the browser. public bool QueryCommandEnabled(string commandId) Parameters commandId string Returns bool Returns a boolean value which is true if the command is enabled and false if the command isn&apos;t. Remarks -ExecCommand(string, bool, string) -QueryCommandSupported(string) See also on MDN QueryCommandIndeterm(string) public bool QueryCommandIndeterm(string commandId) Parameters commandId string Returns bool QueryCommandState(string) IMPORTANT Deprecated The queryCommandState() method will tell you if the current selection has a certain ExecCommand(string, bool, string) command applied. public bool QueryCommandState(string commandId) Parameters commandId string Returns bool queryCommandState() can return a boolean value or null if the state is unknown. Remarks -HTMLElement.ContentEditable -DesignMode -Browser bugs related to queryCommandState(): Scribe&apos;s &quot;Browser Inconsistencies&quot; documentation See also on MDN QueryCommandSupported(string) IMPORTANT Deprecated The Document.queryCommandSupported() method reports whether or not the specified editor command is supported by the browser. public bool QueryCommandSupported(string commandId) Parameters commandId string Returns bool Returns a boolean value which is true if the command is supported and false if the command isn&apos;t. Remarks -ExecCommand(string, bool, string) -QueryCommandEnabled(string) See also on MDN QueryCommandValue(string) public string QueryCommandValue(string commandId) Parameters commandId string Returns string ReleaseEvents() public GlobalObject.Undefined ReleaseEvents() Returns GlobalObject.Undefined StartViewTransition(UpdateCallback?) The startViewTransition() method of the {{domxref(&quot;View Transitions API&quot;, &quot;View Transitions API&quot;, &quot;&quot;, \"nocode\")}} starts a new view transition and returns a ViewTransition object to represent it. public ViewTransition StartViewTransition(UpdateCallback? updateCallback) Parameters updateCallback UpdateCallback? Returns ViewTransition A ViewTransition object instance. Remarks When startViewTransition() is invoked, a sequence of steps is followed as explained in The view transition process. -Smooth and simple transitions with the View Transitions API See also on MDN Write(params string[]) WARNING Warning: Use of the document.write() method is strongly discouraged. public GlobalObject.Undefined Write(params string[] text) Parameters text string[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks As the HTML spec itself warns: This method has very idiosyncratic behavior. In some cases, this method can affect the state of the HTML parser while the parser is running, resulting in a DOM that does not correspond to the source of the document (e.g. if the string written is the string &quot;&lt;plaintext&gt;&quot; or &quot;&lt;!--&quot;). In other cases, the call can clear the current page first, as if document.open() had been called. In yet more cases, the method is simply ignored, or throws an exception. Users agents are explicitly allowed to avoid executing script elements inserted via this method. And to make matters even worse, the exact behavior of this method can in some cases be dependent on network latency, which can lead to failures that are very hard to debug. For all these reasons, use of this method is strongly discouraged. Therefore, avoid using document.write() — and if possible, update any existing code that is still using it. The document.write() method writes a string of text to a document stream opened by Open(string, string). NOTE Note: Because document.write() writes to the document stream, calling document.write() on a closed (loaded) document automatically calls document.open(), which will clear the document. -InnerHTML -CreateElement(string, string) See also on MDN Writeln(params string[]) WARNING Warning: Use of the document.writeln() method is strongly discouraged. public GlobalObject.Undefined Writeln(params string[] text) Parameters text string[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks As the HTML spec itself warns: This method has very idiosyncratic behavior. In some cases, this method can affect the state of the HTML parser while the parser is running, resulting in a DOM that does not correspond to the source of the document (e.g. if the string written is the string &quot;&lt;plaintext&gt;&quot; or &quot;&lt;!--&quot;). In other cases, the call can clear the current page first, as if document.open() had been called. In yet more cases, the method is simply ignored, or throws an exception. Users agents are explicitly allowed to avoid executing script elements inserted via this method. And to make matters even worse, the exact behavior of this method can in some cases be dependent on network latency, which can lead to failures that are very hard to debug. For all these reasons, use of this method is strongly discouraged. Therefore, avoid using document.writeln() — and if possible, update any existing code that is still using it. Writes a string of text followed by a newline character to a document. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DocumentFragment.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DocumentFragment.html",
    "title": "Class DocumentFragment | CSharpToJavaScript",
    "keywords": "Class DocumentFragment Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DocumentFragment interface represents a minimal document object that has no parent. [To(\"FirstCharToLowerCase\")] public class DocumentFragment : Node, NonElementParentNode, ParentNode Inheritance object EventTarget Node DocumentFragment Implements NonElementParentNode ParentNode Derived ShadowRoot Inherited Members Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document. The key difference is due to the fact that the document fragment isn't part of the active document tree structure. Changes made to the fragment don't affect the document. See also on MDN Constructors DocumentFragment() The DocumentFragment() constructor returns a new, empty DocumentFragment object. public DocumentFragment() Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DocumentOrShadowRoot.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DocumentOrShadowRoot.html",
    "title": "Interface DocumentOrShadowRoot | CSharpToJavaScript",
    "keywords": "Interface DocumentOrShadowRoot Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface DocumentOrShadowRoot Properties ActiveElement Element? ActiveElement { get; } Property Value Element AdoptedStyleSheets CSSStyleSheet[] AdoptedStyleSheets { get; set; } Property Value CSSStyleSheet[] FullscreenElement Element? FullscreenElement { get; } Property Value Element PictureInPictureElement Element? PictureInPictureElement { get; } Property Value Element StyleSheets StyleSheetList StyleSheets { get; } Property Value StyleSheetList"
  },
  "api/CSharpToJavaScript.APIs.JS.DocumentReadyState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DocumentReadyState.html",
    "title": "Enum DocumentReadyState | CSharpToJavaScript",
    "keywords": "Enum DocumentReadyState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Document.readyState property describes the loading state of the Document. When the value of this property changes, a Document/readystatechange_event event fires on the Document object. public enum DocumentReadyState Fields Complete = 2 Interactive = 1 Loading = 0 Remarks -Related events:-Document/readystatechange_event -Document/DOMContentLoaded_event -Window/load_event See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DocumentType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DocumentType.html",
    "title": "Class DocumentType | CSharpToJavaScript",
    "keywords": "Class DocumentType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DocumentType interface represents a Node containing a doctype. [To(\"FirstCharToLowerCase\")] public class DocumentType : Node, ChildNode Inheritance object EventTarget Node DocumentType Implements ChildNode Inherited Members Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The DOM interfaces index. -CreateDocumentType(string, string, string) to create a new DocumentType node. See also on MDN Properties Name The read-only name property of the DocumentType returns the type of the document. public string Name { get; } Property Value string A string. Remarks For synthetic DocumentType, this property reflects the value given in parameter to CreateDocumentType(string, string, string). For HTML documents, browsers always set it up to html, whatever the actual DOCTYPE in the source code is. See also on MDN PublicId The read-only publicId property of the DocumentType returns a formal identifier of the document. public string PublicId { get; } Property Value string A string. Remarks For synthetic DocumentType, this property reflects the value given in parameter to CreateDocumentType(string, string, string). For HTML documents, browsers always set it up to html, whatever the actual DOCTYPE in the source code is. For SVG documents, for example, it can be &quot;-//W3C//DTD SVG 1.1//EN&quot;. See also on MDN SystemId The read-only systemId property of the DocumentType returns the URL of the associated DTD. public string SystemId { get; } Property Value string A string. Remarks For synthetic DocumentType, this property reflects the value given in parameter to CreateDocumentType(string, string, string). For HTML documents, browsers always set it up to html, whatever the actual DOCTYPE in the source code is. For SVG documents, for example, it can be &quot;http://www.w3.org/2000/svg&quot;. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DocumentVisibilityState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DocumentVisibilityState.html",
    "title": "Enum DocumentVisibilityState | CSharpToJavaScript",
    "keywords": "Enum DocumentVisibilityState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Document.visibilityState read-only property returns the visibility of the 'document', that is in which context this element is now visible. It is useful to know if the document is in the background or an invisible tab, or only loaded for pre-rendering. public enum DocumentVisibilityState Fields Hidden = 1 Visible = 0 Remarks Possible values are: When the value of this property changes, the Document/visibilitychange_event event is sent to the Document. Typical use of this can be to prevent the download of some assets when the document is solely prerendered, or stop some activities when the document is in the background or minimized. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DragEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DragEvent.html",
    "title": "Class DragEvent | CSharpToJavaScript",
    "keywords": "Class DragEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DragEvent interface is a Event that represents a drag and drop interaction. The user initiates a drag by placing a pointer device (such as a mouse) on the touch surface and then dragging the pointer to a new location (such as another DOM element). Applications are free to interpret a drag and drop interaction in an application-specific way. [To(\"FirstCharToLowerCase\")] public class DragEvent : MouseEvent Inheritance object Event UIEvent MouseEvent DragEvent Inherited Members MouseEvent.ScreenX MouseEvent.ScreenY MouseEvent.ClientX MouseEvent.ClientY MouseEvent.LayerX MouseEvent.LayerY MouseEvent.CtrlKey MouseEvent.ShiftKey MouseEvent.AltKey MouseEvent.MetaKey MouseEvent.Button MouseEvent.Buttons MouseEvent.RelatedTarget MouseEvent.GetModifierState(string) MouseEvent.InitMouseEvent(string, bool, bool, Window, long, long, long, long, long, bool, bool, bool, bool, Number, EventTarget) UIEvent.View UIEvent.Detail UIEvent.InitUIEvent(string, bool, bool, Window, long) UIEvent.Which Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface inherits properties from MouseEvent and Event. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN Constructors DragEvent() public DragEvent() DragEvent(string, DragEventInit) This constructor is used to create a synthetic DragEvent object. public DragEvent(string type, DragEventInit eventInitDict) Parameters type string eventInitDict DragEventInit Remarks Although this interface has a constructor, it is not possible to create a useful DataTransfer object from script, since DataTransfer objects have a processing and security model that is coordinated by the browser during drag-and-drops. This interface inherits properties from MouseEvent and Event. See also on MDN Properties DataTransfer The DragEvent.dataTransfer property holds the drag operation's data (as a DataTransfer object). public DataTransfer? DataTransfer { get; } Property Value DataTransfer A DataTransfer object which contains the DragEvent. Remarks This property is {{ReadOnlyInline}}. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DragEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DragEventInit.html",
    "title": "Class DragEventInit | CSharpToJavaScript",
    "keywords": "Class DragEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DragEventInit : MouseEventInit Inheritance object EventInit UIEventInit EventModifierInit MouseEventInit DragEventInit Inherited Members MouseEventInit.ScreenX MouseEventInit.ScreenY MouseEventInit.ClientX MouseEventInit.ClientY MouseEventInit.Button MouseEventInit.Buttons MouseEventInit.RelatedTarget EventModifierInit.CtrlKey EventModifierInit.ShiftKey EventModifierInit.AltKey EventModifierInit.MetaKey EventModifierInit.ModifierAltGraph EventModifierInit.ModifierCapsLock EventModifierInit.ModifierFn EventModifierInit.ModifierFnLock EventModifierInit.ModifierHyper EventModifierInit.ModifierNumLock EventModifierInit.ModifierScrollLock EventModifierInit.ModifierSuper EventModifierInit.ModifierSymbol EventModifierInit.ModifierSymbolLock UIEventInit.View UIEventInit.Detail UIEventInit.Which EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DataTransfer public DataTransfer? DataTransfer Field Value DataTransfer"
  },
  "api/CSharpToJavaScript.APIs.JS.DynamicsCompressorNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DynamicsCompressorNode.html",
    "title": "Class DynamicsCompressorNode | CSharpToJavaScript",
    "keywords": "Class DynamicsCompressorNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DynamicsCompressorNode interface provides a compression effect, which lowers the volume of the loudest parts of the signal in order to help prevent clipping and distortion that can occur when multiple sounds are played and multiplexed together at once. This is often used in musical production and game audio. DynamicsCompressorNode is an AudioNode that has exactly one input and one output. [To(\"FirstCharToLowerCase\")] public class DynamicsCompressorNode : AudioNode Inheritance object EventTarget AudioNode DynamicsCompressorNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Using the Web Audio API See also on MDN Constructors DynamicsCompressorNode() public DynamicsCompressorNode() DynamicsCompressorNode(BaseAudioContext, DynamicsCompressorOptions) The DynamicsCompressorNode() constructor creates a new DynamicsCompressorNode object which provides a compression effect, which lowers the volume of the loudest parts of the signal, in order to help prevent clipping and distortion. That can occur when multiple sounds are played and multiplexed together at once. public DynamicsCompressorNode(BaseAudioContext context, DynamicsCompressorOptions options) Parameters context BaseAudioContext options DynamicsCompressorOptions Remarks See also on MDN Properties Attack The attack property of the DynamicsCompressorNode interface is a k-rate AudioParam representing the amount of time, in seconds, required to reduce the gain by 10 dB. It defines how quickly the signal is adapted when its volume is increased. public AudioParam Attack { get; } Property Value AudioParam An AudioParam. NOTE Note: Though the AudioParam returned is read-only, the value it represents is not. Remarks The attack property&apos;s default value is 0.003 and it can be set between 0 and 1. -Using the Web Audio API See also on MDN Knee The knee property of the DynamicsCompressorNode interface is a k-rate AudioParam containing a decibel value representing the range above the threshold where the curve smoothly transitions to the compressed portion. public AudioParam Knee { get; } Property Value AudioParam An AudioParam. NOTE Note: Though the AudioParam returned is read-only, the value it represents is not. Remarks The knee property&apos;s default value is 30 and it can be set between 0 and 40. Describes the effect of a knee, showing two curves one for a hard knee, the other for a soft knee. -Using the Web Audio API See also on MDN Ratio The ratio property of the DynamicsCompressorNode interface Is a k-rate AudioParam representing the amount of change, in dB, needed in the input for a 1 dB change in the output. public AudioParam Ratio { get; } Property Value AudioParam An AudioParam. NOTE Note: Though the AudioParam returned is read-only, the value it represents is not. Remarks The ratio property&apos;s default value is 12 and it can be set between 1 and 20. Describes the effect of different ratio on the output signal -Using the Web Audio API See also on MDN Reduction The reduction read-only property of the DynamicsCompressorNode interface is a float representing the amount of gain reduction currently applied by the compressor to the signal. public Number Reduction { get; } Property Value Number A float. Remarks Intended for metering purposes, it returns a value in dB, or 0 (no gain reduction) if no signal is fed into the DynamicsCompressorNode. The range of this value is between -20 and 0 (in dB). -Using the Web Audio API See also on MDN Release The release property of the DynamicsCompressorNode interface Is a k-rate AudioParam representing the amount of time, in seconds, required to increase the gain by 10 dB. It defines how quick the signal is adapted when its volume is reduced. public AudioParam Release { get; } Property Value AudioParam An AudioParam. NOTE Note: Though the AudioParam returned is read-only, the value it represents is not. Remarks The release property&apos;s default value is 0.25 and it can be set between 0 and 1. -Using the Web Audio API See also on MDN Threshold The threshold property of the DynamicsCompressorNode interface is a k-rate AudioParam representing the decibel value above which the compression will start taking effect. public AudioParam Threshold { get; } Property Value AudioParam An AudioParam. NOTE Note: Though the AudioParam returned is read-only, the value it represents is not. Remarks The threshold property&apos;s default value is -24 and it can be set between -100 and 0. The threshold attribute has no effect on signals lowers than its value, but induce volume reduction on signal stronger than its value. -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DynamicsCompressorOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DynamicsCompressorOptions.html",
    "title": "Class DynamicsCompressorOptions | CSharpToJavaScript",
    "keywords": "Class DynamicsCompressorOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DynamicsCompressorOptions : AudioNodeOptions Inheritance object AudioNodeOptions DynamicsCompressorOptions Inherited Members AudioNodeOptions.ChannelCount AudioNodeOptions.ChannelCountMode AudioNodeOptions.ChannelInterpretation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Attack public Number Attack Field Value Number Knee public Number Knee Field Value Number Ratio public Number Ratio Field Value Number Release public Number Release Field Value Number Threshold public Number Threshold Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.EffectCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EffectCallback.html",
    "title": "Struct EffectCallback | CSharpToJavaScript",
    "keywords": "Struct EffectCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct EffectCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.EffectTiming.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EffectTiming.html",
    "title": "Class EffectTiming | CSharpToJavaScript",
    "keywords": "Class EffectTiming Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class EffectTiming Inheritance object EffectTiming Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Delay public Number Delay Field Value Number Duration public Union90 Duration Field Value Union90 EndDelay public Number EndDelay Field Value Number PlaybackRate public Number PlaybackRate Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.Element.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Element.html",
    "title": "Class Element | CSharpToJavaScript",
    "keywords": "Class Element Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element. [To(\"FirstCharToLowerCase\")] public class Element : Node Inheritance object EventTarget Node Element Derived HTMLElement Inherited Members Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks For example, the HTMLElement interface is the base interface for HTML elements, while the SVGElement interface is the basis for all SVG elements. Most functionality is specified further down the class hierarchy. Languages outside the realm of the Web platform, like XUL through the XULElement interface, also implement Element. See also on MDN Properties Attributes The Element.attributes property returns a live collection of all attribute nodes registered to the specified node. It is a NamedNodeMap, not an Array, so it has no Array methods and the Attr nodes' indexes may differ among browsers. To be more specific, attributes is a key/value pair of strings that represents any information regarding that attribute. public NamedNodeMap Attributes { get; } Property Value NamedNodeMap A NamedNodeMap object. Remarks -NamedNodeMap, the interface of the returned object -Cross-browser compatibility considerations: on quirksmode See also on MDN ClassList The Element.classList is a read-only property that returns a live DOMTokenList collection of the class attributes of the element. This can then be used to manipulate the class list. public DOMTokenList ClassList { get; } Property Value DOMTokenList A DOMTokenList representing the contents of the element's class attribute. If the class attribute is not set or empty, it returns an empty DOMTokenList, i.e. a DOMTokenList with the length property equal to 0.Although the classList property itself is read-only, you can modify its associated DOMTokenList using the DOMTokenList/add, DOMTokenList/remove, DOMTokenList/replace, and DOMTokenList/toggle methods.You can test whether the element contains a given class using the DOMTokenList/contains method. Remarks Using classList is a convenient alternative to accessing an element&apos;s list of classes as a space-delimited string via ClassName. -ClassName -DOMTokenList -classList.js (a cross-browser JavaScript polyfill that fully implements element.classList) See also on MDN ClassName The className property of the Element interface gets and sets the value of the class attribute of the specified element. public string ClassName { get; set; } Property Value string A string variable representing the class or space-separated classes of the current element. Remarks -ClassList See also on MDN Id The id property of the Element interface represents the element&apos;s identifier, reflecting the id global attribute. public string Id { get; set; } Property Value string A string. Remarks If the id value is not the empty string, it must be unique in a document. The id is often used with {{domxref(&quot;Document.getElementById()&quot;, &quot;getElementById()&quot;)}} to retrieve a particular element. Another common case is to use an element&apos;s ID as a selector when styling the document with CSS. NOTE Note: Identifiers are case-sensitive, but you should avoid creating IDs that differ only in the capitalization. -The DOM id global attribute. See also on MDN InnerHTML The Element property innerHTML gets or sets the HTML or XML markup contained within the element. public string InnerHTML { get; set; } Property Value string A string containing the HTML serialization of the element&apos;s descendants. Setting the value of innerHTML removes all of the element&apos;s descendants and replaces them with nodes constructed by parsing the HTML given in the string htmlString. Remarks To insert the HTML into the document rather than replace the contents of an element, use the method InsertAdjacentHTML(string, string). -TextContent and InnerText -InsertAdjacentHTML(string, string) -OuterHTML -Element.SetHTML -Parsing HTML or XML into a DOM tree: DOMParser -Serializing a DOM tree into an XML string: XMLSerializer See also on MDN LocalName The Element.localName read-only property returns the local part of the qualified name of an element. public string LocalName { get; } Property Value string A string representing the local part of the element&apos;s qualified name. Remarks -NamespaceURI -Prefix -LocalName See also on MDN NamespaceURI The Element.namespaceURI read-only property returns the namespace URI of the element, or null if the element is not in a namespace. public string? NamespaceURI { get; } Property Value string A string, or null. Remarks -LocalName -Prefix -NamespaceURI See also on MDN Onfullscreenchange public EventHandlerNonNull Onfullscreenchange { get; set; } Property Value EventHandlerNonNull Onfullscreenerror public EventHandlerNonNull Onfullscreenerror { get; set; } Property Value EventHandlerNonNull OuterHTML The outerHTML attribute of the Element DOM interface gets the serialized HTML fragment describing the element including its descendants. It can also be set to replace the element with nodes parsed from the given string. public string OuterHTML { get; set; } Property Value string Reading the value of outerHTML returns a string containing an HTML serialization of the element and its descendants. Setting the value of outerHTML replaces the element and all of its descendants with a new DOM tree constructed by parsing the specified htmlString. Remarks To only obtain the HTML representation of the contents of an element, or to replace the contents of an element, use the InnerHTML property instead. -Serializing DOM trees into XML strings: XMLSerializer -Parsing XML or HTML into DOM trees: DOMParser -OuterText See also on MDN Part The part property of the Element interface represents the part identifier(s) of the element (i.e. set using the part attribute), returned as a DOMTokenList. These can be used to style parts of a shadow DOM, via the {{cssxref(&quot;::part&quot;)}} pseudo-element. public DOMTokenList Part { get; } Property Value DOMTokenList A DOMTokenList object. Remarks -{{cssxref(&quot;::part&quot;)}} -part See also on MDN Prefix The Element.prefix read-only property returns the namespace prefix of the specified element, or null if no prefix is specified. public string? Prefix { get; } Property Value string A string. Remarks -NamespaceURI -LocalName -Prefix See also on MDN ShadowRoot The Element.shadowRoot read-only property represents the shadow root hosted by the element. public ShadowRoot? ShadowRoot { get; } Property Value ShadowRoot A ShadowRoot object instance, or null if the associated shadow root was attached with its Mode set to closed. (See AttachShadow(ShadowRootInit) for further details). Remarks Use AttachShadow(ShadowRootInit) to add a shadow root to an existing element. See also on MDN Slot The slot property of the Element interface returns the name of the shadow DOM slot the element is inserted in. public string Slot { get; set; } Property Value string A string. Remarks A slot is a placeholder inside a web component that users can fill with their own markup (see Using templates and slots for more information). See also on MDN TagName The tagName read-only property of the Element interface returns the tag name of the element on which it&apos;s called. public string TagName { get; } Property Value string A string indicating the element&apos;s tag name. This string&apos;s capitalization depends on the document type:For Element objects, the value of tagName is the same as the value of the NodeName property the element object inherits from Node. Remarks For example, if the element is an img, its tagName property is &quot;IMG&quot; (for HTML documents; it may be cased differently for XML/XHTML documents). See also on MDN Uiactions public DOMTokenList Uiactions { get; } Property Value DOMTokenList Uitrigger public string Uitrigger { get; set; } Property Value string Methods AttachShadow(ShadowRootInit) The Element.attachShadow() method attaches a shadow DOM tree to the specified element and returns a reference to its ShadowRoot. public ShadowRoot AttachShadow(ShadowRootInit init) Parameters init ShadowRootInit Returns ShadowRoot Returns a ShadowRoot object. Remarks -Mode -DelegatesFocus -SlotAssignment See also on MDN Closest(string) The closest() method of the Element interface traverses the element and its parents (heading toward the document root) until it finds a node that matches the specified CSS selector. public Element? Closest(string selectors) Parameters selectors string Returns Element The closest ancestor Element or itself, which matches the selectors. If there are no such element, null. Remarks -CSS selectors reference -Other Element methods that take selectors: Element.QuerySelector, Element.QuerySelectorAll, and Matches(string). See also on MDN FocusableAreas(FocusableAreasOption) public List<Node> FocusableAreas(FocusableAreasOption option) Parameters option FocusableAreasOption Returns List<Node> GetAttribute(string) The getAttribute() method of the Element interface returns the value of a specified attribute on the element. public string? GetAttribute(string qualifiedName) Parameters qualifiedName string Returns string A string containing the value of attributeName. Remarks If the given attribute does not exist, the value returned will either be null or &quot;&quot; (the empty string); see Non-existing attributes for details. See also on MDN GetAttributeNS(string?, string) The getAttributeNS() method of the Element interface returns the string value of the attribute with the specified namespace and name. If the named attribute does not exist, the value returned will either be null or &quot;&quot; (the empty string); see Notes for details. public string? GetAttributeNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns string The string value of the specified attribute. If the attribute doesn&apos;t exist, the result is null. NOTE Note: Earlier versions of the DOM specification had this method described as returning an empty string for non-existent attributes, but it was not typically implemented this way since null makes more sense. The DOM4 specification now says this method should return null for non-existent attributes. Remarks -Code snippets:getAttributeNS See also on MDN GetAttributeNames() The getAttributeNames() method of the Element interface returns the attribute names of the element as an Array of strings. If the element has no attributes it returns an empty array. public List<string> GetAttributeNames() Returns List<string> None (GlobalObject.Undefined). Remarks Using getAttributeNames() along with GetAttribute(string), is a memory-efficient and performant alternative to accessing Attributes. The names returned by getAttributeNames() are qualified attribute names, meaning that attributes with a namespace prefix have their names returned with that namespace prefix (not the actual namespace), followed by a colon, followed by the attribute name (for example, xlink:href), while any attributes which have no namespace prefix have their names returned as-is (for example, href). See also on MDN GetAttributeNode(string) Returns the specified attribute of the specified element, as an Attr node. public Attr? GetAttributeNode(string qualifiedName) Parameters qualifiedName string Returns Attr An Attr node for the attribute. Remarks See also on MDN GetAttributeNodeNS(string?, string) Returns the Attr node for the attribute with the given namespace and name. public Attr? GetAttributeNodeNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns Attr The node for specified attribute. Remarks See also on MDN GetElementsByClassName(string) The Element method getElementsByClassName() returns a live HTMLCollection which contains every descendant element which has the specified class name or names. public HTMLCollection GetElementsByClassName(string classNames) Parameters classNames string Returns HTMLCollection An HTMLCollection providing a live-updating list of every element which is a member of every class in names. Remarks The method GetElementsByClassName(string) on the Document interface works essentially the same way, except it acts on the entire document, starting at the document root. See also on MDN GetElementsByTagName(string) The Element.getElementsByTagName() method returns a live HTMLCollection of elements with the given tag name. public HTMLCollection GetElementsByTagName(string qualifiedName) Parameters qualifiedName string Returns HTMLCollection A live HTMLCollection of elements with a matching tag name, in the order they appear. If no elements are found, the HTMLCollection is empty. Remarks All descendants of the specified element are searched, but not the element itself. The returned list is live, which means it updates itself with the DOM tree automatically. Therefore, there is no need to call Element.getElementsByTagName() with the same element and arguments repeatedly if the DOM changes in between calls. When called on an HTML element in an HTML document, getElementsByTagName lower-cases the argument before searching for it. This is undesirable when trying to match camel-cased SVG elements (such as &lt;linearGradient&gt;) in an HTML document. Instead, use GetElementsByTagNameNS(string?, string), which preserves the capitalization of the tag name. Element.getElementsByTagName is similar to GetElementsByTagName(string), except that it only searches for elements that are descendants of the specified element. See also on MDN GetElementsByTagNameNS(string?, string) The Element.getElementsByTagNameNS() method returns a live HTMLCollection of elements with the given tag name belonging to the given namespace. It is similar to GetElementsByTagNameNS(string?, string), except that its search is restricted to descendants of the specified element. public HTMLCollection GetElementsByTagNameNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns HTMLCollection A live HTMLCollection of found elements in the order they appear in the tree. Remarks See also on MDN GetSpatialNavigationContainer() public Node GetSpatialNavigationContainer() Returns Node HasAttribute(string) The Element.hasAttribute() method returns a Boolean value indicating whether the specified element has the specified attribute or not. public bool HasAttribute(string qualifiedName) Parameters qualifiedName string Returns bool A boolean. Remarks See also on MDN HasAttributeNS(string?, string) hasAttributeNS returns a boolean value indicating whether the current element has the specified attribute. public bool HasAttributeNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns bool A boolean. Remarks See also on MDN HasAttributes() The hasAttributes() method of the Element interface returns a boolean value indicating whether the current element has any attributes or not. public bool HasAttributes() Returns bool A boolean. Remarks -Attributes -HasAttribute(string) See also on MDN InsertAdjacentElement(string, Element) The insertAdjacentElement() method of the Element interface inserts a given element node at a given position relative to the element it is invoked upon. public Element? InsertAdjacentElement(string where, Element element) Parameters where string element Element Returns Element The element that was inserted, or null, if the insertion failed. Remarks -InsertAdjacentHTML(string, string) -InsertAdjacentText(string, string) -InsertBefore(Node, Node?) (similar to beforebegin, with different arguments) -AppendChild(Node) (same effect as beforeend) See also on MDN InsertAdjacentHTML(string, string) The insertAdjacentHTML() method of the Element interface parses the specified text as HTML or XML and inserts the resulting nodes into the DOM tree at a specified position. public GlobalObject.Undefined InsertAdjacentHTML(string position, string text) Parameters position string text string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -InsertAdjacentElement(string, Element) -InsertAdjacentText(string, string) -XMLSerializer: Serialize a DOM tree into an XML string -hacks.mozilla.org guest post by Henri Sivonen including benchmark showing that insertAdjacentHTML can be way faster in some cases. See also on MDN InsertAdjacentText(string, string) The insertAdjacentText() method of the Element interface, given a relative position and a string, inserts a new text node at the given position relative to the element it is called from. public GlobalObject.Undefined InsertAdjacentText(string where, string data) Parameters where string data string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -InsertAdjacentElement(string, Element) -InsertAdjacentHTML(string, string) See also on MDN Matches(string) The matches() method of the Element interface tests whether the element would be selected by the specified CSS selector. public bool Matches(string selectors) Parameters selectors string Returns bool true if the Element matches the selectors. Otherwise, false. Remarks -CSS selectors reference -Other Element methods that take selectors: Element.QuerySelector, Element.QuerySelectorAll, and Closest(string). See also on MDN Pseudo(Unsupported) public CSSPseudoElement? Pseudo(Unsupported type) Parameters type Unsupported Returns CSSPseudoElement RemoveAttribute(string) The Element method removeAttribute() removes the attribute with the specified name from the element. public GlobalObject.Undefined RemoveAttribute(string qualifiedName) Parameters qualifiedName string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN RemoveAttributeNS(string?, string) The removeAttributeNS() method of the Element interface removes the specified attribute from an element. public GlobalObject.Undefined RemoveAttributeNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN RemoveAttributeNode(Attr) The removeAttributeNode() method of the Element interface removes the specified attribute from the element. public Attr RemoveAttributeNode(Attr attr) Parameters attr Attr Returns Attr The attribute node that was removed. Remarks See also on MDN RequestFullscreen(FullscreenOptions) The Element.requestFullscreen() method issues an asynchronous request to make the element be displayed in fullscreen mode. public Task<GlobalObject.Undefined> RequestFullscreen(FullscreenOptions options) Parameters options FullscreenOptions Returns Task<GlobalObject.Undefined> A Promise which is resolved with a value of undefined when the transition to full screen is complete. Remarks It&apos;s not guaranteed that the element will be put into full screen mode. If permission to enter full screen mode is granted, the returned Promise will resolve and the element will receive a Element/fullscreenchange_event event to let it know that it&apos;s now in full screen mode. If permission is denied, the promise is rejected and the element receives a Element/fullscreenerror_event event instead. If the element has been detached from the original document, then the document receives these events instead. -Fullscreen API -ExitFullscreen() -Fullscreen -Document.FullscreenElement -:fullscreen -allowfullscreen See also on MDN SetAttribute(string, string) Sets the value of an attribute on the specified element. If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value. public GlobalObject.Undefined SetAttribute(string qualifiedName, string value) Parameters qualifiedName string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks To get the current value of an attribute, use {{domxref(&quot;Element.getAttribute&quot;, &quot;getAttribute()&quot;)}}; to remove an attribute, call {{domxref(&quot;Element.removeAttribute&quot;, &quot;removeAttribute()&quot;)}}. See also on MDN SetAttributeNS(string?, string, string) setAttributeNS adds a new attribute or changes the value of an attribute with the given namespace and name. public GlobalObject.Undefined SetAttributeNS(string? namespace_, string qualifiedName, string value) Parameters namespace_ string qualifiedName string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN SetAttributeNode(Attr) The setAttributeNode() method adds a new Attr node to the specified element. public Attr? SetAttributeNode(Attr attr) Parameters attr Attr Returns Attr The replaced attribute node, if any, returned by this function. Remarks -CreateAttribute(string) See also on MDN SetAttributeNodeNS(Attr) setAttributeNodeNS adds a new namespaced attribute node to an element. public Attr? SetAttributeNodeNS(Attr attr) Parameters attr Attr Returns Attr The replaced attribute node, if any, returned by this function. Remarks -CreateAttribute(string) -CreateAttributeNS(string?, string) See also on MDN SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) public Node? SpatialNavigationSearch(SpatialNavigationDirection dir, SpatialNavigationSearchOptions options) Parameters dir SpatialNavigationDirection options SpatialNavigationSearchOptions Returns Node ToggleAttribute(string, bool) The toggleAttribute() method of the Element interface toggles a Boolean attribute (removing it if it is present and adding it if it is not present) on the given element. public bool ToggleAttribute(string qualifiedName, bool force) Parameters qualifiedName string force bool Returns bool true if attribute name is eventually present, and false otherwise. Remarks See also on MDN WebkitMatchesSelector(string) public bool WebkitMatchesSelector(string selectors) Parameters selectors string Returns bool"
  },
  "api/CSharpToJavaScript.APIs.JS.ElementCSSInlineStyle.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ElementCSSInlineStyle.html",
    "title": "Interface ElementCSSInlineStyle | CSharpToJavaScript",
    "keywords": "Interface ElementCSSInlineStyle Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface ElementCSSInlineStyle Properties Style CSSStyleDeclaration Style { get; } Property Value CSSStyleDeclaration"
  },
  "api/CSharpToJavaScript.APIs.JS.ElementContentEditable.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ElementContentEditable.html",
    "title": "Interface ElementContentEditable | CSharpToJavaScript",
    "keywords": "Interface ElementContentEditable Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface ElementContentEditable Properties ContentEditable string ContentEditable { get; set; } Property Value string EnterKeyHint string EnterKeyHint { get; set; } Property Value string InputMode string InputMode { get; set; } Property Value string IsContentEditable bool IsContentEditable { get; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.ElementCreationOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ElementCreationOptions.html",
    "title": "Class ElementCreationOptions | CSharpToJavaScript",
    "keywords": "Class ElementCreationOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ElementCreationOptions Inheritance object ElementCreationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Is public string Is Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.ElementDefinitionOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ElementDefinitionOptions.html",
    "title": "Class ElementDefinitionOptions | CSharpToJavaScript",
    "keywords": "Class ElementDefinitionOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ElementDefinitionOptions Inheritance object ElementDefinitionOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Extends public string Extends Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.ElementInternals.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ElementInternals.html",
    "title": "Class ElementInternals | CSharpToJavaScript",
    "keywords": "Class ElementInternals Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ElementInternals interface of the Document Object Model gives web developers a way to allow custom elements to fully participate in HTML forms. It provides utilities for working with these elements in the same way you would work with any standard HTML form element, and also exposes the Accessibility Object Model to the element. [To(\"FirstCharToLowerCase\")] public class ElementInternals Inheritance object ElementInternals Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -More capable form controls -Creating custom form controls with ElementInternals -ElementInternals polyfill See also on MDN Properties Form The form read-only property of the ElementInternals interface returns the HTMLFormElement associated with this element. public HTMLFormElement? Form { get; } Property Value HTMLFormElement An HTMLFormElement. Remarks See also on MDN Labels The labels read-only property of the ElementInternals interface returns the labels associated with the element. public NodeList Labels { get; } Property Value NodeList A NodeList containing all of the label elements associated with this element. Remarks See also on MDN ShadowRoot The shadowRoot read-only property of the ElementInternals interface returns the ShadowRoot for this element. public ShadowRoot? ShadowRoot { get; } Property Value ShadowRoot A ShadowRoot if the element has a shadow root, otherwise null. Remarks See also on MDN ValidationMessage The validationMessage read-only property of the ElementInternals interface returns the validation message for the element. public string ValidationMessage { get; } Property Value string A string containing the validation message of this element. Remarks See also on MDN Validity The validity read-only property of the ElementInternals interface returns a ValidityState object which represents the different validity states the element can be in, with respect to constraint validation. public ValidityState Validity { get; } Property Value ValidityState A ValidityState object. Remarks See also on MDN WillValidate The willValidate read-only property of the ElementInternals interface returns true if the element is a submittable element that is a candidate for constraint validation. public bool WillValidate { get; } Property Value bool true if the element is a candidate for constraint validation, otherwise false. Remarks Elements that are barred from being candidates for constraint validation include those that have the attributes: disabled, hidden or readonly, input elements of type=button or type=reset, or any element that is a datalist element or has a &lt;datalist&gt; element ancestor. See also on MDN Methods CheckValidity() The checkValidity() method of the ElementInternals interface checks if the element meets any constraint validation rules applied to it. public bool CheckValidity() Returns bool A boolean value, true if the element meets all validation constraints. Remarks If checkValidity returns false then a cancelable invalid event is fired on the element. See also on MDN ReportValidity() The reportValidity() method of the ElementInternals interface checks if the element meets any constraint validation rules applied to it. public bool ReportValidity() Returns bool A boolean value, true if the element meets all validation constraints. Remarks If reportValidity returns false then a cancelable invalid event is fired on the element. This method behaves in a similar way to CheckValidity(), however it additionally sends the value of ValidationMessage to the user agent for display. See also on MDN SetFormValue(Union25?, Union26?) The setFormValue() method of the ElementInternals interface sets the element's submission value and state, communicating these to the user agent. public GlobalObject.Undefined SetFormValue(Union25? value, Union26? state) Parameters value Union25? state Union26? Returns GlobalObject.Undefined Undefined. Remarks See also on MDN SetValidity(ValidityStateFlags, string, HTMLElement) The setValidity() method of the ElementInternals interface sets the validity of the element. public GlobalObject.Undefined SetValidity(ValidityStateFlags flags, string message, HTMLElement anchor) Parameters flags ValidityStateFlags message string anchor HTMLElement Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.EncodedAudioChunk.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EncodedAudioChunk.html",
    "title": "Class EncodedAudioChunk | CSharpToJavaScript",
    "keywords": "Class EncodedAudioChunk Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The EncodedAudioChunk interface of the 'WebCodecs API' represents a chunk of encoded audio data. [To(\"FirstCharToLowerCase\")] public class EncodedAudioChunk Inheritance object EncodedAudioChunk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors EncodedAudioChunk() public EncodedAudioChunk() EncodedAudioChunk(EncodedAudioChunkInit) The EncodedAudioChunk() constructor creates a new EncodedAudioChunk object representing a chunk of encoded audio. public EncodedAudioChunk(EncodedAudioChunkInit init) Parameters init EncodedAudioChunkInit Remarks See also on MDN Properties ByteLength The byteLength read-only property of the EncodedAudioChunk interface returns the length in bytes of the encoded audio data. public ulong ByteLength { get; } Property Value ulong An integer. Remarks See also on MDN Duration The duration read-only property of the EncodedAudioChunk interface returns an integer indicating the duration of the audio in microseconds. public ulong? Duration { get; } Property Value ulong? An integer. Remarks See also on MDN Timestamp The timestamp read-only property of the EncodedAudioChunk interface returns an integer indicating the timestamp of the audio in microseconds. public long Timestamp { get; } Property Value long An integer. Remarks See also on MDN Type The type read-only property of the EncodedAudioChunk interface returns a value indicating whether the audio chunk is a key chunk, which does not relying on other frames for decoding. public EncodedAudioChunkType Type { get; } Property Value EncodedAudioChunkType A string, one of: Remarks See also on MDN Methods CopyTo(Union68) The copyTo() method of the EncodedAudioChunk interface copies the encoded chunk of audio data. public GlobalObject.Undefined CopyTo(Union68 destination) Parameters destination Union68 Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.EncodedAudioChunkInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EncodedAudioChunkInit.html",
    "title": "Class EncodedAudioChunkInit | CSharpToJavaScript",
    "keywords": "Class EncodedAudioChunkInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class EncodedAudioChunkInit Inheritance object EncodedAudioChunkInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Data public required Union67 Data Field Value Union67 Duration public ulong Duration Field Value ulong Timestamp public required long Timestamp Field Value long Transfer public List<byte[]> Transfer Field Value List<byte[]> Type public required EncodedAudioChunkType Type Field Value EncodedAudioChunkType"
  },
  "api/CSharpToJavaScript.APIs.JS.EncodedAudioChunkMetadata.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EncodedAudioChunkMetadata.html",
    "title": "Class EncodedAudioChunkMetadata | CSharpToJavaScript",
    "keywords": "Class EncodedAudioChunkMetadata Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class EncodedAudioChunkMetadata Inheritance object EncodedAudioChunkMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DecoderConfig public AudioDecoderConfig DecoderConfig Field Value AudioDecoderConfig"
  },
  "api/CSharpToJavaScript.APIs.JS.EncodedAudioChunkOutputCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EncodedAudioChunkOutputCallback.html",
    "title": "Struct EncodedAudioChunkOutputCallback | CSharpToJavaScript",
    "keywords": "Struct EncodedAudioChunkOutputCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct EncodedAudioChunkOutputCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.EncodedAudioChunkType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EncodedAudioChunkType.html",
    "title": "Enum EncodedAudioChunkType | CSharpToJavaScript",
    "keywords": "Enum EncodedAudioChunkType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The type read-only property of the EncodedAudioChunk interface returns a value indicating whether the audio chunk is a key chunk, which does not relying on other frames for decoding. public enum EncodedAudioChunkType Fields Delta = 1 Key = 0 Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.EncodedVideoChunk.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EncodedVideoChunk.html",
    "title": "Class EncodedVideoChunk | CSharpToJavaScript",
    "keywords": "Class EncodedVideoChunk Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The EncodedVideoChunk interface of the 'WebCodecs API' represents a chunk of encoded video data. [To(\"FirstCharToLowerCase\")] public class EncodedVideoChunk Inheritance object EncodedVideoChunk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors EncodedVideoChunk() public EncodedVideoChunk() EncodedVideoChunk(EncodedVideoChunkInit) The EncodedVideoChunk() constructor creates a new EncodedVideoChunk object representing a chunk of encoded video. public EncodedVideoChunk(EncodedVideoChunkInit init) Parameters init EncodedVideoChunkInit Remarks See also on MDN Properties ByteLength The byteLength read-only property of the EncodedVideoChunk interface returns the length in bytes of the encoded video data. public ulong ByteLength { get; } Property Value ulong An integer. Remarks See also on MDN Duration The duration read-only property of the EncodedVideoChunk interface returns an integer indicating the duration of the video in microseconds. public ulong? Duration { get; } Property Value ulong? An integer. Remarks See also on MDN Timestamp The timestamp read-only property of the EncodedVideoChunk interface returns an integer indicating the timestamp of the video in microseconds. public long Timestamp { get; } Property Value long An integer. Remarks See also on MDN Type The type read-only property of the EncodedVideoChunk interface returns a value indicating whether the video chunk is a key chunk, which does not rely on other frames for decoding. public EncodedVideoChunkType Type { get; } Property Value EncodedVideoChunkType A string, one of: Remarks See also on MDN Methods CopyTo(Union68) The copyTo() method of the EncodedVideoChunk interface copies the encoded chunk of video data. public GlobalObject.Undefined CopyTo(Union68 destination) Parameters destination Union68 Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.EncodedVideoChunkInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EncodedVideoChunkInit.html",
    "title": "Class EncodedVideoChunkInit | CSharpToJavaScript",
    "keywords": "Class EncodedVideoChunkInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class EncodedVideoChunkInit Inheritance object EncodedVideoChunkInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Data public required Union68 Data Field Value Union68 Duration public ulong Duration Field Value ulong Timestamp public required long Timestamp Field Value long Transfer public List<byte[]> Transfer Field Value List<byte[]> Type public required EncodedVideoChunkType Type Field Value EncodedVideoChunkType"
  },
  "api/CSharpToJavaScript.APIs.JS.EncodedVideoChunkMetadata.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EncodedVideoChunkMetadata.html",
    "title": "Class EncodedVideoChunkMetadata | CSharpToJavaScript",
    "keywords": "Class EncodedVideoChunkMetadata Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class EncodedVideoChunkMetadata Inheritance object EncodedVideoChunkMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AlphaSideData public Union67 AlphaSideData Field Value Union67 DecoderConfig public VideoDecoderConfig DecoderConfig Field Value VideoDecoderConfig Svc public SvcOutputMetadata Svc Field Value SvcOutputMetadata"
  },
  "api/CSharpToJavaScript.APIs.JS.EncodedVideoChunkOutputCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EncodedVideoChunkOutputCallback.html",
    "title": "Struct EncodedVideoChunkOutputCallback | CSharpToJavaScript",
    "keywords": "Struct EncodedVideoChunkOutputCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct EncodedVideoChunkOutputCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.EncodedVideoChunkType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EncodedVideoChunkType.html",
    "title": "Enum EncodedVideoChunkType | CSharpToJavaScript",
    "keywords": "Enum EncodedVideoChunkType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The type read-only property of the EncodedVideoChunk interface returns a value indicating whether the video chunk is a key chunk, which does not rely on other frames for decoding. public enum EncodedVideoChunkType Fields Delta = 1 Key = 0 Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.EndingType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EndingType.html",
    "title": "Enum EndingType | CSharpToJavaScript",
    "keywords": "Enum EndingType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum EndingType Fields Native = 1 Transparent = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.ErrorEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ErrorEvent.html",
    "title": "Class ErrorEvent | CSharpToJavaScript",
    "keywords": "Class ErrorEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ErrorEvent interface represents events providing information related to errors in scripts or in files. [To(\"FirstCharToLowerCase\")] public class ErrorEvent : Event Inheritance object Event ErrorEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Using web workers, most likely objects to raise such an event See also on MDN Constructors ErrorEvent() public ErrorEvent() ErrorEvent(string, ErrorEventInit) public ErrorEvent(string type, ErrorEventInit eventInitDict) Parameters type string eventInitDict ErrorEventInit Properties Colno public ulong Colno { get; } Property Value ulong Error public dynamic Error { get; } Property Value dynamic Filename public string Filename { get; } Property Value string Lineno public ulong Lineno { get; } Property Value ulong Message public string Message { get; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.ErrorEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ErrorEventInit.html",
    "title": "Class ErrorEventInit | CSharpToJavaScript",
    "keywords": "Class ErrorEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ErrorEventInit : EventInit Inheritance object EventInit ErrorEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Colno public ulong Colno Field Value ulong Error public dynamic Error Field Value dynamic Filename public string Filename Field Value string Lineno public ulong Lineno Field Value ulong Message public string Message Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.Event.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Event.html",
    "title": "Class Event | CSharpToJavaScript",
    "keywords": "Class Event Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Event interface represents an event which takes place in the DOM. [To(\"FirstCharToLowerCase\")] public class Event Inheritance object Event Derived AnimationPlaybackEvent AudioProcessingEvent BeforeUnloadEvent BlobEvent ClipboardEvent CloseEvent CustomEvent DeviceMotionEvent DeviceOrientationEvent ErrorEvent ExtendableEvent FontFaceSetLoadEvent FormDataEvent GPUUncapturedErrorEvent HashChangeEvent IDBVersionChangeEvent MIDIConnectionEvent MIDIMessageEvent MessageEvent MutationEvent NavigateEvent NavigationCurrentEntryChangeEvent OfflineAudioCompletionEvent PageTransitionEvent PictureInPictureEvent PopStateEvent ProgressEvent PromiseRejectionEvent RTCTransformEvent SFrameTransformErrorEvent SecurityPolicyViolationEvent SensorErrorEvent StorageEvent SubmitEvent ToggleEvent TrackEvent UIEvent XRInputSourceEvent XRInputSourcesChangeEvent XRLayerEvent XRReferenceSpaceEvent XRSessionEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An event can be triggered by the user action e.g. clicking the mouse button or tapping keyboard, or generated by APIs to represent the progress of an asynchronous task. It can also be triggered programmatically, such as by calling the HTMLElement.click() method of an element, or by defining the event, then sending it to a specified target using EventTarget.dispatchEvent(). There are many types of events, some of which use other interfaces based on the main Event interface. Event itself contains the properties and methods which are common to all events. Many DOM elements can be set up to accept (or &quot;listen&quot; for) these events, and execute code in response to process (or &quot;handle&quot;) them. Event-handlers are usually connected (or &quot;attached&quot;) to various HTML elements (such as &lt;button&gt;, &lt;div&gt;, &lt;span&gt;, etc.) using EventTarget.addEventListener(), and this generally replaces using the old HTML event handler attributes. Further, when properly added, such handlers can also be disconnected if needed using removeEventListener(). NOTE Note: One element can have several such handlers, even for the exact same event—particularly if separate, independent code modules attach them, each for its own independent purposes. (For example, a webpage with an advertising-module and statistics-module both monitoring video-watching.) When there are many nested elements, each with its own handler(s), event processing can become very complicated—especially where a parent element receives the very same event as its child elements because &quot;spatially&quot; they overlap so the event technically occurs in both, and the processing order of such events depends on the Event bubbling and capture settings of each handler triggered. -Types of events available: Event reference -Comparison of Event Targets (target vs. currentTarget vs. relatedTarget vs. originalTarget) -Creating and triggering custom events See also on MDN Constructors Event() public Event() Event(string, EventInit) The Event() constructor creates a new Event object. An event created in this way is called a synthetic event, as opposed to an event fired by the browser, and can be dispatched by a script. public Event(string type, EventInit eventInitDict) Parameters type string eventInitDict EventInit Remarks -Event -DispatchEvent(Event) -Creating and triggering events See also on MDN Fields AT_TARGET public const ushort AT_TARGET = 2 Field Value ushort BUBBLING_PHASE public const ushort BUBBLING_PHASE = 3 Field Value ushort CAPTURING_PHASE public const ushort CAPTURING_PHASE = 1 Field Value ushort NONE public const ushort NONE = 0 Field Value ushort Properties Bubbles The bubbles read-only property of the Event interface indicates whether the event bubbles up through the DOM tree or not. public bool Bubbles { get; } Property Value bool A boolean value, which is true if the event bubbles up through the DOM tree. Remarks NOTE Note: See Event bubbling and capture for more information on bubbling. -StopPropagation() to prevent further propagation of the current event in the capturing and bubbling phases -StopImmediatePropagation() to not call any further listeners for the same event at the same level in the DOM -PreventDefault() to allow propagation to continue but to disallow the browser to perform its default action should no listeners handle the event See also on MDN CancelBubble IMPORTANT Deprecated The cancelBubble property of the Event interface is deprecated. Use StopPropagation() instead. Setting its value to true before returning from an event handler prevents propagation of the event. In later implementations, setting this to false does nothing. See Browser compatibility for details. public bool CancelBubble { get; set; } Property Value bool A boolean value. The value true means that the event must not be propagated further. Remarks See also on MDN Cancelable The cancelable read-only property of the Event interface indicates whether the event can be canceled, and therefore prevented as if the event never happened. public bool Cancelable { get; } Property Value bool A boolean value, which is true if the event can be canceled. Remarks If the event is not cancelable, then its cancelable property will be false and the event listener cannot stop the event from occurring. Most browser-native events that can be canceled are the ones that result from the user interacting with the page. Canceling the Element/click_event, Document/wheel_event, or Window/beforeunload_event events would prevent the user from clicking on something, scrolling the page with the mouse wheel, or navigating away from the page, respectively. Synthetic events created by other JavaScript code define if they can be canceled when they are created. To cancel an event, call the PreventDefault() method on the event. This keeps the implementation from executing the default action that is associated with the event. Event listeners that handle multiple kinds of events may want to check cancelable before invoking their {{domxref(&quot;event.preventDefault&quot;, &quot;preventDefault()&quot;)}} methods. See also on MDN Composed The read-only composed property of the Event interface returns a boolean value which indicates whether or not the event will propagate across the shadow DOM boundary into the standard DOM. public bool Composed { get; } Property Value bool A boolean value which is true if the event will cross from the shadow DOM into the standard DOM after reaching the shadow root. (That is, the first node in the shadow DOM in which the event began to propagate.)If this value is false, the shadow root will be the last node to be offered the event. Remarks All UA-dispatched UI events are composed (click/touch/mouseover/copy/paste, etc.). Most other types of events are not composed, and so will return false. For example, this includes synthetic events that are created without their composed option set to true. Propagation only occurs if the Bubbles property is also true. However, capturing only composed events are also handled at host as if they were in AT_TARGET phase. You can determine the path the event will follow through the shadow root to the DOM root by calling ComposedPath(). See also on MDN CurrentTarget The currentTarget read-only property of the Event interface identifies the current target for the event, as the event traverses the DOM. It always refers to the element to which the event handler has been attached, as opposed to Target, which identifies the element on which the event occurred and which may be its descendant. public EventTarget? CurrentTarget { get; } Property Value EventTarget An EventTarget representing the object to which the current event handler is attached. Remarks -Comparison of Event Targets See also on MDN DefaultPrevented The defaultPrevented read-only property of the Event interface returns a boolean value indicating whether or not the call to PreventDefault() canceled the event. public bool DefaultPrevented { get; } Property Value bool A boolean value, where true indicates that the default user agent action was prevented, and false indicates that it was not. Remarks See also on MDN EventPhase The eventPhase read-only property of the Event interface indicates which phase of the event flow is currently being evaluated. public ushort EventPhase { get; } Property Value ushort Returns an integer value which specifies the current evaluation phase of the event flow. Possible values are: Remarks See also on MDN IsTrusted The isTrusted read-only property of the Event interface is a boolean value that is true when the event was generated by a user action, and false when the event was created or modified by a script or dispatched via DispatchEvent(Event). public bool IsTrusted { get; } Property Value bool A boolean value. Remarks See also on MDN ReturnValue IMPORTANT Deprecated The Event property returnValue indicates whether the default action for this event has been prevented or not. public bool ReturnValue { get; set; } Property Value bool A boolean value which is true if the event has not been canceled; otherwise, if the event has been canceled or the default has been prevented, the value is false.The value of returnValue is the opposite of the value returned by DefaultPrevented. Remarks It is set to true by default, allowing the default action to occur. Setting this property to false prevents the default action. NOTE Note: While returnValue has been adopted into the DOM standard, it is present primarily to support existing code. Use PreventDefault(), and DefaultPrevented instead of this historical property. -ReturnValue: the return value for the {{HTMLElement(\"dialog\")}}. See also on MDN SrcElement IMPORTANT Deprecated The deprecated Event.srcElement is an alias for the Target property. Use Target instead. public EventTarget? SrcElement { get; } Property Value EventTarget Remarks -Event See also on MDN Target The EventTarget interface is implemented by objects that can receive events and may have listeners for them. In other words, any target of events implements the three methods associated with this interface. public EventTarget? Target { get; } Property Value EventTarget Remarks Element, and its children, as well as Document and Window, are the most common event targets, but other objects can be event targets, too. For example XMLHttpRequest, AudioNode, and AudioContext are also event targets. Many event targets (including elements, documents, and windows) also support setting event handlers via onevent properties and attributes. -Event reference – the events available in the platform. -Introduction to events -Event interface See also on MDN TimeStamp The timeStamp read-only property of the Event interface returns the time (in milliseconds) at which the event was created. public Unsupported TimeStamp { get; } Property Value Unsupported This value is the number of milliseconds elapsed from the beginning of the time origin until the event was created. If the global object is Window, the time origin is the moment the user clicked on the link, or the script that initiated the loading of the document. In a worker, the time origin is the moment of creation of the worker.The value is a DOMHighResTimeStamp accurate to 5 microseconds (0.005 ms), but the precision is reduced to prevent fingerprinting. Remarks See also on MDN Type The type read-only property of the Event interface returns a string containing the event&apos;s type. It is set when the event is constructed and is the name commonly used to refer to the specific event, such as click, load, or error. public string Type { get; } Property Value string A string containing the type of Event. Remarks -AddEventListener(string, Action?, Union41) -RemoveEventListener(string, Action?, Union2) See also on MDN Methods ComposedPath() The composedPath() method of the Event interface returns the event&apos;s path which is an array of the objects on which listeners will be invoked. This does not include nodes in shadow trees if the shadow root was created with its Mode closed. public List<EventTarget> ComposedPath() Returns List<EventTarget> An array of EventTarget objects representing the objects on which an event listener will be invoked. Remarks See also on MDN InitEvent(string, bool, bool) IMPORTANT Deprecated The Event.initEvent() method is used to initialize the value of an Event created using CreateEvent(string). public GlobalObject.Undefined InitEvent(string type, bool bubbles, bool cancelable) Parameters type string bubbles bool cancelable bool Returns GlobalObject.Undefined None. Remarks Events initialized in this way must have been created with the CreateEvent(string) method. This method must be called to set the event before it is dispatched, using DispatchEvent(Event). Once dispatched, it doesn&apos;t do anything anymore. NOTE Note: Do not use this method anymore as it is deprecated. Instead use specific event constructors, like Event(string, EventInit). The page on Creating and triggering events gives more information about the way to use these. -The constructor to use instead of this deprecated method: Event(string, EventInit). To create more specific event interfaces than Event, use the constructor defined for the desired event interface. See also on MDN PreventDefault() The preventDefault() method of the Event interface tells the {{Glossary(\"user agent\")}} that if the event does not get explicitly handled, its default action should not be taken as it normally would be. public GlobalObject.Undefined PreventDefault() Returns GlobalObject.Undefined Remarks The event continues to propagate as usual, unless one of its event listeners calls StopPropagation() or StopImmediatePropagation(), either of which terminates propagation at once. As noted below, calling preventDefault() for a non-cancelable event, such as one dispatched via DispatchEvent(Event), without specifying cancelable: true has no effect. See also on MDN StopImmediatePropagation() The stopImmediatePropagation() method of the Event interface prevents other listeners of the same event from being called. public GlobalObject.Undefined StopImmediatePropagation() Returns GlobalObject.Undefined Remarks If several listeners are attached to the same element for the same event type, they are called in the order in which they were added. If stopImmediatePropagation() is invoked during one such call, no remaining listeners will be called, either on that element or any other element. See also on MDN StopPropagation() The stopPropagation() method of the Event interface prevents further propagation of the current event in the capturing and bubbling phases. It does not, however, prevent any default behaviors from occurring; for instance, clicks on links are still processed. If you want to stop those behaviors, see the PreventDefault() method. It also does not prevent propagation to other event-handlers of the current element. If you want to stop those, see StopImmediatePropagation(). public GlobalObject.Undefined StopPropagation() Returns GlobalObject.Undefined None. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.EventCounts.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventCounts.html",
    "title": "Class EventCounts | CSharpToJavaScript",
    "keywords": "Class EventCounts Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The EventCounts interface of the Performance API provides the number of events that have been dispatched for each event type. [To(\"FirstCharToLowerCase\")] public class EventCounts Inheritance object EventCounts Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An EventCounts instance is a read-only Map-like object, in which each key is the name string for an event type, and the corresponding value is an integer indicating the number of events that have been dispatched for that event type. -EventCounts -PerformanceEventTiming -Map See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.EventHandlerNonNull.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventHandlerNonNull.html",
    "title": "Struct EventHandlerNonNull | CSharpToJavaScript",
    "keywords": "Struct EventHandlerNonNull Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct EventHandlerNonNull Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.EventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventInit.html",
    "title": "Class EventInit | CSharpToJavaScript",
    "keywords": "Class EventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class EventInit Inheritance object EventInit Derived AnimationPlaybackEventInit AudioProcessingEventInit ClipboardEventInit CloseEventInit CustomEventInit DeviceMotionEventInit DeviceOrientationEventInit ErrorEventInit ExtendableEventInit FontFaceSetLoadEventInit FormDataEventInit GPUUncapturedErrorEventInit HashChangeEventInit IDBVersionChangeEventInit MIDIConnectionEventInit MIDIMessageEventInit MessageEventInit NavigateEventInit NavigationCurrentEntryChangeEventInit OfflineAudioCompletionEventInit PageTransitionEventInit PictureInPictureEventInit PopStateEventInit ProgressEventInit PromiseRejectionEventInit SFrameTransformErrorEventInit SecurityPolicyViolationEventInit SensorErrorEventInit StorageEventInit SubmitEventInit ToggleEventInit TrackEventInit UIEventInit XRInputSourceEventInit XRInputSourcesChangeEventInit XRLayerEventInit XRReferenceSpaceEventInit XRSessionEventInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Bubbles public bool Bubbles Field Value bool Cancelable public bool Cancelable Field Value bool Composed public bool Composed Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.EventListener.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventListener.html",
    "title": "Interface EventListener | CSharpToJavaScript",
    "keywords": "Interface EventListener Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface EventListener Methods HandleEvent(Event) GlobalObject.Undefined HandleEvent(Event event_) Parameters event_ Event Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.EventListenerOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventListenerOptions.html",
    "title": "Class EventListenerOptions | CSharpToJavaScript",
    "keywords": "Class EventListenerOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class EventListenerOptions Inheritance object EventListenerOptions Derived AddEventListenerOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Capture public bool Capture Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.EventModifierInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventModifierInit.html",
    "title": "Class EventModifierInit | CSharpToJavaScript",
    "keywords": "Class EventModifierInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class EventModifierInit : UIEventInit Inheritance object EventInit UIEventInit EventModifierInit Derived KeyboardEventInit MouseEventInit Inherited Members UIEventInit.View UIEventInit.Detail UIEventInit.Which EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AltKey public bool AltKey Field Value bool CtrlKey public bool CtrlKey Field Value bool MetaKey public bool MetaKey Field Value bool ModifierAltGraph public bool ModifierAltGraph Field Value bool ModifierCapsLock public bool ModifierCapsLock Field Value bool ModifierFn public bool ModifierFn Field Value bool ModifierFnLock public bool ModifierFnLock Field Value bool ModifierHyper public bool ModifierHyper Field Value bool ModifierNumLock public bool ModifierNumLock Field Value bool ModifierScrollLock public bool ModifierScrollLock Field Value bool ModifierSuper public bool ModifierSuper Field Value bool ModifierSymbol public bool ModifierSymbol Field Value bool ModifierSymbolLock public bool ModifierSymbolLock Field Value bool ShiftKey public bool ShiftKey Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.EventSource.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventSource.html",
    "title": "Class EventSource | CSharpToJavaScript",
    "keywords": "Class EventSource Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The EventSource interface is web content&apos;s interface to server-sent events. [To(\"FirstCharToLowerCase\")] public class EventSource : EventTarget Inheritance object EventTarget EventSource Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An EventSource instance opens a persistent connection to an HTTP server, which sends events in text/event-stream format. The connection remains open until closed by calling Close(). Once the connection is opened, incoming messages from the server are delivered to your code in the form of events. If there is an event field in the incoming message, the triggered event is the same as the event field value. If no event field is present, then a generic EventSource/message_event event is fired. Unlike WebSockets, server-sent events are unidirectional; that is, data messages are delivered in one direction, from the server to the client (such as a user&apos;s web browser). That makes them an excellent choice when there&apos;s no need to send data from the client to the server in message form. For example, EventSource is a useful approach for handling things like social media status updates, news feeds, or delivering data into a client-side storage mechanism like IndexedDB or web storage. WARNING Warning: When not used over HTTP/2, SSE suffers from a limitation to the maximum number of open connections, which can be specially painful when opening various tabs as the limit is per browser and set to a very low number (6). The issue has been marked as &quot;Won&apos;t fix&quot; in Chrome and Firefox. This limit is per browser + domain, so that means that you can open 6 SSE connections across all of the tabs to www.example1.com and another 6 SSE connections to www.example2.com. (from Stackoverflow). When using HTTP/2, the maximum number of simultaneous HTTP streams is negotiated between the server and the client (defaults to 100). -Server-sent events -Using server-sent events See also on MDN Constructors EventSource() public EventSource() EventSource(string, EventSourceInit) The EventSource() constructor returns a newly-created EventSource, which represents a remote resource. public EventSource(string url, EventSourceInit eventSourceInitDict) Parameters url string eventSourceInitDict EventSourceInit Remarks -EventSource See also on MDN Fields CLOSED public const ushort CLOSED = 2 Field Value ushort CONNECTING public const ushort CONNECTING = 0 Field Value ushort OPEN public const ushort OPEN = 1 Field Value ushort Properties Onerror public EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull Onmessage public EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onopen public EventHandlerNonNull Onopen { get; set; } Property Value EventHandlerNonNull ReadyState The readyState read-only property of the EventSource interface returns a number representing the state of the connection. public ushort ReadyState { get; } Property Value ushort A number representing the state of the connection. Possible values are: Remarks -EventSource See also on MDN Url The url read-only property of the EventSource interface returns a string representing the URL of the source. public string Url { get; } Property Value string A string representing the URL of the source. Remarks -EventSource See also on MDN WithCredentials The withCredentials read-only property of the EventSource interface returns a boolean value indicating whether the EventSource object was instantiated with CORS credentials set. public bool WithCredentials { get; } Property Value bool A boolean value indicating whether the EventSource object was instantiated with CORS credentials set (true), or not (false, the default). Remarks -EventSource See also on MDN Methods Close() The close() method of the EventSource interface closes the connection, if one is made, and sets the ReadyState attribute to 2 (closed). public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: If the connection is already closed, the method does nothing. -EventSource See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.EventSourceInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventSourceInit.html",
    "title": "Class EventSourceInit | CSharpToJavaScript",
    "keywords": "Class EventSourceInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class EventSourceInit Inheritance object EventSourceInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields WithCredentials public bool WithCredentials Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.EventTarget.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventTarget.html",
    "title": "Class EventTarget | CSharpToJavaScript",
    "keywords": "Class EventTarget Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The EventTarget interface is implemented by objects that can receive events and may have listeners for them. In other words, any target of events implements the three methods associated with this interface. [To(\"FirstCharToLowerCase\")] public class EventTarget Inheritance object EventTarget Derived AbortSignal AudioDecoder AudioEncoder AudioNode AudioTrackList BaseAudioContext BroadcastChannel CSSPseudoElement Clipboard EventSource FileReader FontFaceSet GPUDevice IDBDatabase IDBRequest IDBTransaction MIDIAccess MIDIPort MediaRecorder MessagePort Navigation NavigationHistoryEntry Node Notification OffscreenCanvas PictureInPictureWindow SFrameTransform ScreenDetails Sensor ServiceWorker ServiceWorkerContainer ServiceWorkerRegistration SharedWorker TextTrack TextTrackCue TextTrackList VideoDecoder VideoEncoder VideoTrackList WebSocket Window Worker WorkerGlobalScope XMLHttpRequestEventTarget XRLayer XRLightProbe XRSession XRSpace XRSystem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Element, and its children, as well as Document and Window, are the most common event targets, but other objects can be event targets, too. For example XMLHttpRequest, AudioNode, and AudioContext are also event targets. Many event targets (including elements, documents, and windows) also support setting event handlers via onevent properties and attributes. -Event reference – the events available in the platform. -Introduction to events -Event interface See also on MDN Constructors EventTarget() The EventTarget() constructor creates a new EventTarget object instance. public EventTarget() Remarks NOTE Note: It is fairly rare to explicitly call this constructor. Most of the time, this constructor is used inside the constructor of an object extending the EventTarget interface, using the super keyword. -EventTarget See also on MDN Methods AddEventListener(string, EventListener?, Union41) The addEventListener() method of the EventTarget interface sets up a function that will be called whenever the specified event is delivered to the target. public GlobalObject.Undefined AddEventListener(string type, EventListener? callback, Union41 options) Parameters type string callback EventListener options Union41 Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Common targets are Element, or its children, Document, and Window, but the target may be any object that supports events (such as XMLHttpRequest). NOTE Note: The addEventListener() method is the recommended way to register an event listener. The benefits are as follows: The method addEventListener() works by adding a function, or an object that implements AddEventListener(string, Action?, Union41), to the list of event listeners for the specified event type on the EventTarget on which it's called. If the function or object is already in the list of event listeners for this target, the function or object is not added a second time. NOTE Note: If a particular anonymous function is in the list of event listeners registered for a certain target, and then later in the code, an identical anonymous function is given in an addEventListener call, the second function will also be added to the list of event listeners for that target. Indeed, anonymous functions are not identical even if defined using the same unchanging source-code called repeatedly, even if in a loop. Repeatedly defining the same unnamed function in such cases can be problematic. (See Memory issues, below.) If an event listener is added to an EventTarget from inside another listener — that is, during the processing of the event — that event will not trigger the new listener. However, the new listener may be triggered during a later stage of event flow, such as during the bubbling phase. -RemoveEventListener(string, Action?, Union2) -Creating and triggering custom events -More details on the use of this in event handlers See also on MDN AddEventListener(string, Action?, Union41) public Unsupported AddEventListener(string type, Action? callback, Union41 options) Parameters type string callback Action options Union41 Returns Unsupported AddEventListener(string, Action<Event>?, Union41) public Unsupported AddEventListener(string type, Action<Event>? callback, Union41 options) Parameters type string callback Action<Event> options Union41 Returns Unsupported AddEventListener(string, Action<MouseEvent>?, Union41) public Unsupported AddEventListener(string type, Action<MouseEvent>? callback, Union41 options) Parameters type string callback Action<MouseEvent> options Union41 Returns Unsupported DispatchEvent(Event) The dispatchEvent() method of the EventTarget sends an Event to the object, (synchronously) invoking the affected EventListeners in the appropriate order. The normal event processing rules (including the capturing and optional bubbling phase) also apply to events dispatched manually with dispatchEvent(). public bool DispatchEvent(Event event_) Parameters event_ Event Returns bool false if event is cancelable, and at least one of the event handlers which received event called PreventDefault(). Otherwise true. Remarks Calling dispatchEvent() is the last step to firing an event. The event should have already been created and initialized using an Event/Event constructor. NOTE Note: When calling this method, the Target property is initialized to the current EventTarget. Unlike &quot;native&quot; events, which are fired by the browser and invoke event handlers asynchronously via the event loop, dispatchEvent() invokes event handlers synchronously. All applicable event handlers are called and return before dispatchEvent() returns. -The Event object reference See also on MDN RemoveEventListener(string, EventListener?, Union42) The removeEventListener() method of the EventTarget interface removes an event listener previously registered with AddEventListener(string, Action?, Union41) from the target. The event listener to be removed is identified using a combination of the event type, the event listener function itself, and various optional options that may affect the matching process; see Matching event listeners for removal. public GlobalObject.Undefined RemoveEventListener(string type, EventListener? callback, Union42 options) Parameters type string callback EventListener options Union42 Returns GlobalObject.Undefined None. Remarks Calling removeEventListener() with arguments that do not identify any currently registered event listener on the EventTarget has no effect. If an event listener is removed from an EventTarget while another listener of the target is processing an event, it will not be triggered by the event. However, it can be reattached. WARNING Warning: If a listener is registered twice, one with the capture flag set and one without, you must remove each one separately. Removal of a capturing listener does not affect a non-capturing version of the same listener, and vice versa. Event listeners can also be removed by passing an AbortSignal to an EventTarget/addEventListener and then later calling AbortController/abort on the controller owning the signal. -AddEventListener(string, Action?, Union41) See also on MDN RemoveEventListener(string, Action?, Union2) public Unsupported RemoveEventListener(string type, Action? callback, Union2 options) Parameters type string callback Action options Union2 Returns Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.ExtendableEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ExtendableEvent.html",
    "title": "Class ExtendableEvent | CSharpToJavaScript",
    "keywords": "Class ExtendableEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ExtendableEvent interface extends the lifetime of the install and activate events dispatched on the global scope as part of the service worker lifecycle. This ensures that any functional events (like FetchEvent) are not dispatched until it upgrades database schemas and deletes the outdated cache entries. [To(\"FirstCharToLowerCase\")] public class ExtendableEvent : Event Inheritance object Event ExtendableEvent Derived ExtendableMessageEvent FetchEvent NotificationEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks If WaitUntil(Task<dynamic>) is called outside of the ExtendableEvent handler, the browser should throw an InvalidStateError; note also that multiple calls will stack up, and the resulting promises will be added to the list of extend lifetime promises. NOTE Note: The behavior described in the above paragraph was fixed in Firefox 43 (see Firefox bug 1180274.) This interface inherits from the Event interface. NOTE Note: This interface is only available when the global scope is a ServiceWorkerGlobalScope. It is not available when it is a Window, or the scope of another kind of worker. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Constructors ExtendableEvent() public ExtendableEvent() ExtendableEvent(string, ExtendableEventInit) The ExtendableEvent() constructor creates a new ExtendableEvent object. public ExtendableEvent(string type, ExtendableEventInit eventInitDict) Parameters type string eventInitDict ExtendableEventInit Remarks -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Methods WaitUntil(Task<dynamic>) The ExtendableEvent.waitUntil() method tells the event dispatcher that work is ongoing. It can also be used to detect whether that work was successful. In service workers, waitUntil() tells the browser that work is ongoing until the promise settles, and it shouldn&apos;t terminate the service worker if it wants that work to complete. public GlobalObject.Undefined WaitUntil(Task<dynamic> f) Parameters f Task<dynamic> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The ServiceWorkerGlobalScope/install_event events in service workers use waitUntil() to hold the service worker in the Installing phase until tasks complete. If the promise passed to waitUntil() rejects, the install is considered a failure, and the installing service worker is discarded. This is primarily used to ensure that a service worker is not considered installed until all of the core caches it depends on are successfully populated. The ServiceWorkerGlobalScope/activate_event events in service workers use waitUntil() to buffer functional events such as fetch and push until the promise passed to waitUntil() settles. This gives the service worker time to update database schemas and delete outdated Cache, so other events can rely on a completely upgraded state. The waitUntil() method must be initially called within the event callback, but after that it can be called multiple times, until all the promises passed to it settle. NOTE Note: The behavior described in the above paragraph was fixed in Firefox 43 (see Firefox bug 1180274). -Using Service Workers -Is ServiceWorker ready? -Promise See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ExtendableEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ExtendableEventInit.html",
    "title": "Class ExtendableEventInit | CSharpToJavaScript",
    "keywords": "Class ExtendableEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ExtendableEventInit : EventInit Inheritance object EventInit ExtendableEventInit Derived ExtendableMessageEventInit FetchEventInit NotificationEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.ExtendableMessageEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ExtendableMessageEvent.html",
    "title": "Class ExtendableMessageEvent | CSharpToJavaScript",
    "keywords": "Class ExtendableMessageEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ExtendableMessageEvent interface of the Service Worker API represents the event object of a ServiceWorkerGlobalScope/message_event event fired on a service worker (when a message is received on the ServiceWorkerGlobalScope from another context) — extends the lifetime of such events. [To(\"FirstCharToLowerCase\")] public class ExtendableMessageEvent : ExtendableEvent Inheritance object Event ExtendableEvent ExtendableMessageEvent Inherited Members ExtendableEvent.WaitUntil(Task<dynamic>) Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface inherits from the ExtendableEvent interface. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Channel Messaging See also on MDN Constructors ExtendableMessageEvent() public ExtendableMessageEvent() ExtendableMessageEvent(string, ExtendableMessageEventInit) The ExtendableMessageEvent() constructor creates a new ExtendableMessageEvent object. public ExtendableMessageEvent(string type, ExtendableMessageEventInit eventInitDict) Parameters type string eventInitDict ExtendableMessageEventInit Remarks -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Channel Messaging See also on MDN Properties Data The data read-only property of the ExtendableMessageEvent interface returns the event's data. It can be any data type. public dynamic Data { get; } Property Value dynamic Any data type. Remarks -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Channel Messaging See also on MDN LastEventId The lastEventID read-only property of the ExtendableMessageEvent interface represents, in server-sent events, the last event ID of the event source. This is an empty string. public string LastEventId { get; } Property Value string A string. Remarks -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Channel Messaging See also on MDN Origin The origin read-only property of the ExtendableMessageEvent interface returns the origin of the Client that sent the message. public string Origin { get; } Property Value string A string. Remarks -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Channel Messaging See also on MDN Ports The ports read-only property of the ExtendableMessageEvent interface returns the array containing the MessagePort objects representing the ports of the associated message channel (the channel the message is being sent through.) public MessagePort[] Ports { get; } Property Value MessagePort[] An array of MessagePort objects. Remarks -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Channel Messaging See also on MDN Source The source read-only property of the ExtendableMessageEvent interface returns a reference to the Client object from which the message was sent. public Union88? Source { get; } Property Value Union88? A Client, ServiceWorker or MessagePort object. Remarks -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Channel Messaging See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ExtendableMessageEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ExtendableMessageEventInit.html",
    "title": "Class ExtendableMessageEventInit | CSharpToJavaScript",
    "keywords": "Class ExtendableMessageEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ExtendableMessageEventInit : ExtendableEventInit Inheritance object EventInit ExtendableEventInit ExtendableMessageEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Data public dynamic Data Field Value dynamic LastEventId public string LastEventId Field Value string Origin public string Origin Field Value string Ports public List<MessagePort> Ports Field Value List<MessagePort> Source public Union89? Source Field Value Union89?"
  },
  "api/CSharpToJavaScript.APIs.JS.External.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.External.html",
    "title": "Class External | CSharpToJavaScript",
    "keywords": "Class External Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class External Inheritance object External Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddSearchProvider() public GlobalObject.Undefined AddSearchProvider() Returns GlobalObject.Undefined IsSearchProviderInstalled() public GlobalObject.Undefined IsSearchProviderInstalled() Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.FederatedCredential.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FederatedCredential.html",
    "title": "Class FederatedCredential | CSharpToJavaScript",
    "keywords": "Class FederatedCredential Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FederatedCredential interface of the Credential Management API provides information about credentials from a federated identity provider. A federated identity provider is an entity that a website trusts to correctly authenticate a user, and that provides an API for that purpose. OpenID Connect is an example of a federated identity provider framework. [To(\"FirstCharToLowerCase\")] public class FederatedCredential : Credential, CredentialUserData Inheritance object Credential FederatedCredential Implements CredentialUserData Inherited Members Credential.Id Credential.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: The Federated Credential Management API (FedCM) provides a more complete solution for handling identity federation in the browser, and uses the IdentityCredential type. In browsers that support it, an instance of this interface may be passed in the credential member of the init object for global 'fetch'. See also on MDN Constructors FederatedCredential() public FederatedCredential() FederatedCredential(FederatedCredentialInit) The FederatedCredential() constructor creates a new FederatedCredential object. In supporting browsers, an instance of this class may be passed the credential received from the init object for global 'fetch'. public FederatedCredential(FederatedCredentialInit data) Parameters data FederatedCredentialInit Remarks See also on MDN Properties Protocol The protocol property of the FederatedCredential interface returns a read-only string containing a credential&apos;s federated identity protocol. If this property is null, the protocol may be inferred from the Provider property. public string? Protocol { get; } Property Value string A string containing a credential&apos;s federated identity protocol (e.g. openidconnect). Remarks See also on MDN Provider The provider property of the FederatedCredential interface returns a string containing a credential&apos;s federated identity provider. public string Provider { get; } Property Value string A string containing a credential&apos;s federated identity provider. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FederatedCredentialInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FederatedCredentialInit.html",
    "title": "Class FederatedCredentialInit | CSharpToJavaScript",
    "keywords": "Class FederatedCredentialInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FederatedCredentialInit : CredentialData Inheritance object CredentialData FederatedCredentialInit Inherited Members CredentialData.Id object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IconURL public string IconURL Field Value string Name public string Name Field Value string Origin public required string Origin Field Value string Protocol public string Protocol Field Value string Provider public required string Provider Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.FederatedCredentialRequestOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FederatedCredentialRequestOptions.html",
    "title": "Class FederatedCredentialRequestOptions | CSharpToJavaScript",
    "keywords": "Class FederatedCredentialRequestOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FederatedCredentialRequestOptions Inheritance object FederatedCredentialRequestOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Protocols public List<string> Protocols Field Value List<string> Providers public List<string> Providers Field Value List<string>"
  },
  "api/CSharpToJavaScript.APIs.JS.FetchEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FetchEvent.html",
    "title": "Class FetchEvent | CSharpToJavaScript",
    "keywords": "Class FetchEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll This is the event type for fetch events dispatched on the {{domxref(&quot;ServiceWorkerGlobalScope&quot;, &quot;service worker global scope&quot;, &quot;&quot;, 1)}}. It contains information about the fetch, including the request and how the receiver will treat the response. It provides the RespondWith(Task<Response>) method, which allows us to provide a response to this fetch. [To(\"FirstCharToLowerCase\")] public class FetchEvent : ExtendableEvent Inheritance object Event ExtendableEvent FetchEvent Inherited Members ExtendableEvent.WaitUntil(Task<dynamic>) Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -fetch event -Promise -Fetch API See also on MDN Constructors FetchEvent() public FetchEvent() FetchEvent(string, FetchEventInit) The FetchEvent() constructor creates a new FetchEvent object. public FetchEvent(string type, FetchEventInit eventInitDict) Parameters type string eventInitDict FetchEventInit Remarks -Promise -Fetch API See also on MDN Properties ClientId The clientId read-only property of the FetchEvent interface returns the id of the Client that the current service worker is controlling. public string ClientId { get; } Property Value string A string that represents the client ID. Remarks The Get(string) method could then be passed this ID to retrieve the associated client. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Handled The handled property of the FetchEvent interface returns a promise indicating if the event has been handled by the fetch algorithm or not. This property allows executing code after the browser has consumed a response, and is usually used together with the WaitUntil(Task<dynamic>) method. public Task<GlobalObject.Undefined> Handled { get; } Property Value Task<GlobalObject.Undefined> A Promise that is pending while the event has not been handled, and fulfilled once it has. Remarks -WaitUntil(Task<dynamic>) See also on MDN PreloadResponse The preloadResponse read-only property of the FetchEvent interface returns a {{jsxref(\"Promise\")}} that resolves to the navigation preload Response if navigation preload was triggered, or undefined otherwise. public Task<dynamic> PreloadResponse { get; } Property Value Task<dynamic> A {{jsxref(\"Promise\")}} that resolves to a Response or otherwise to undefined. Remarks Navigation preload is triggered if navigation preload is enabled, the request is a GET request, and the request is a navigation request (generated by the browser when loading pages and iframes). A service worker can wait on this promise in its fetch event handler in order to track completion of a fetch request made during service-worker boot. -Speed up Service Worker with Navigation Preloads -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN ReplacesClientId The replacesClientId read-only property of the FetchEvent interface is the Id of the Client that is being replaced during a page navigation. public string ReplacesClientId { get; } Property Value string A string. Remarks For example, when navigating from page A to page B replacesClientId is the ID of the client associated with page A. It can be an empty string when navigating from about:blank to another page, as about:blank&apos;s client will be reused, rather than be replaced. Additionally, if the fetch isn&apos;t a navigation, replacesClientId will be an empty string. This could be used to access/communicate with a client that will imminently be replaced, right before a navigation. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Request The request read-only property of the FetchEvent interface returns the Request that triggered the event handler. public Request Request { get; } Property Value Request A Request object. Remarks This property is non-nullable (since version 46, in the case of Firefox.) If a request is not provided by some other means, the constructor options object must contain a request (see FetchEvent(string, FetchEventInit).) -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN ResultingClientId The resultingClientId read-only property of the FetchEvent interface is the Id of the Client that replaces the previous client during a page navigation. public string ResultingClientId { get; } Property Value string A string. Remarks For example, when navigating from page A to page B resultingClientId is the ID of the client associated with page B. If the fetch request is a subresource request or the request&apos;s destination is report, resultingClientId will be an empty string. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Methods RespondWith(Task<Response>) The respondWith() method of FetchEvent prevents the browser's default fetch handling, and allows you to provide a promise for a Response yourself. public GlobalObject.Undefined RespondWith(Task<Response> r) Parameters r Task<Response> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks In most cases you can provide any response that the receiver understands. For example, if an 'img' initiates the request, the response body needs to be image data. For security reasons, there are a few global rules: -Using Service Workers -Is ServiceWorker ready? -Promise -Fetch API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FetchEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FetchEventInit.html",
    "title": "Class FetchEventInit | CSharpToJavaScript",
    "keywords": "Class FetchEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FetchEventInit : ExtendableEventInit Inheritance object EventInit ExtendableEventInit FetchEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ClientId public string ClientId Field Value string Handled public Task<GlobalObject.Undefined> Handled Field Value Task<GlobalObject.Undefined> PreloadResponse public Task<dynamic> PreloadResponse Field Value Task<dynamic> ReplacesClientId public string ReplacesClientId Field Value string Request public required Request Request Field Value Request ResultingClientId public string ResultingClientId Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.File.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.File.html",
    "title": "Class File | CSharpToJavaScript",
    "keywords": "Class File Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The File interface provides information about files and allows JavaScript in a web page to access their content. [To(\"FirstCharToLowerCase\")] public class File : Blob Inheritance object Blob File Inherited Members Blob.Size Blob.Type Blob.Slice(long, long, string) Blob.Stream() Blob.Text() Blob.ArrayBuffer() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks File objects are generally retrieved from a FileList object returned as a result of a user selecting files using the {{HTMLElement(\"input\")}} element, or from a drag and drop operation's DataTransfer object. A File object is a specific kind of Blob, and can be used in any context that a Blob can. In particular, FileReader, CreateObjectURL(Union53), CreateImageBitmap, and {{DOMxRef(\"XMLHttpRequest\", &quot;&quot;, &quot;send()&quot;)}} accept both Blobs and Files. See Using files from web applications for more information and examples. -Using files from web applications -FileReader See also on MDN Constructors File() public File() File(List<Union51>, string, FilePropertyBag) The File() constructor creates a new File object instance. public File(List<Union51> fileBits, string fileName, FilePropertyBag options) Parameters fileBits List<Union51> fileName string options FilePropertyBag Remarks -FileReader -Blob See also on MDN Properties LastModified The File.lastModified read-only property provides the last modified date of the file as the number of milliseconds since the Unix epoch (January 1, 1970 at midnight). Files without a known last modified date return the current date. public long LastModified { get; } Property Value long A number that represents the number of milliseconds since the Unix epoch. Remarks -File See also on MDN Name Returns the name of the file represented by a File object. For security reasons, the path is excluded from this property. public string Name { get; } Property Value string A string, containing the name of the file without path, such as &quot;My Resume.rtf&quot;. Remarks -Using files from web applications See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FileList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FileList.html",
    "title": "Class FileList | CSharpToJavaScript",
    "keywords": "Class FileList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll An object of this type is returned by the files property of the HTML input element; this lets you access the list of files selected with the &lt;input type=&quot;file&quot;&gt; element. It&apos;s also used for a list of files dropped into web content when using the drag and drop API; see the DataTransfer object for details on this usage. [To(\"FirstCharToLowerCase\")] public class FileList Inheritance object FileList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks All &lt;input&gt; element nodes have a files attribute of type FileList on them which allows access to the items in this list. For example, if the HTML includes the following file input: The following line of code fetches the first file in the node&apos;s file list as a File object: NOTE Note: This interface was an attempt to create an unmodifiable list and only continues to be supported to not break code that&apos;s already using it. Modern APIs use types that wrap around ECMAScript array types instead, so you can treat them like ECMAScript arrays, and at the same time impose additional semantics on their usage (such as making their items read-only). -Using files from web applications -File -FileReader See also on MDN Properties Length The read-only FileList length property returns the number of files in the FileList. public ulong Length { get; } Property Value ulong A number indicating the number of files in the list. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FilePropertyBag.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FilePropertyBag.html",
    "title": "Class FilePropertyBag | CSharpToJavaScript",
    "keywords": "Class FilePropertyBag Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FilePropertyBag : BlobPropertyBag Inheritance object BlobPropertyBag FilePropertyBag Inherited Members BlobPropertyBag.Type BlobPropertyBag.Endings object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LastModified public long LastModified Field Value long"
  },
  "api/CSharpToJavaScript.APIs.JS.FileReader.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FileReader.html",
    "title": "Class FileReader | CSharpToJavaScript",
    "keywords": "Class FileReader Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FileReader object lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read. [To(\"FirstCharToLowerCase\")] public class FileReader : EventTarget Inheritance object EventTarget FileReader Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks File objects may be obtained from a FileList object returned as a result of a user selecting files using the {{HTMLElement(\"input\")}} element, or from a drag and drop operation's DataTransfer object. FileReader can only access the contents of files that the user has explicitly selected, either using an HTML &lt;input type=&quot;file&quot;&gt; element or by drag and drop. It cannot be used to read a file by pathname from the user&apos;s file system. To read files on the client&apos;s file system by pathname, use the File System Access API. To read server-side files, use standard Ajax solutions, with CORS permission if reading cross-domain. AvailableInWorkers -Using files from web applications -File -Blob -FileReaderSync See also on MDN Constructors FileReader() The FileReader() constructor creates a new FileReader. public FileReader() Remarks For details about how to use FileReader, see Using files from web applications. -Using files from web applications See also on MDN Fields DONE public const ushort DONE = 2 Field Value ushort EMPTY public const ushort EMPTY = 0 Field Value ushort LOADING public const ushort LOADING = 1 Field Value ushort Properties Error The FileReader error property returns the error that occurred while reading the file. public DOMException? Error { get; } Property Value DOMException A DOMError containing the relevant error. In Chrome 48+/Firefox 58+ this property returns a DOMException because DOMError has been removed from the DOM standard. Remarks -FileReader See also on MDN Onabort public EventHandlerNonNull Onabort { get; set; } Property Value EventHandlerNonNull Onerror public EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull Onload public EventHandlerNonNull Onload { get; set; } Property Value EventHandlerNonNull Onloadend public EventHandlerNonNull Onloadend { get; set; } Property Value EventHandlerNonNull Onloadstart public EventHandlerNonNull Onloadstart { get; set; } Property Value EventHandlerNonNull Onprogress public EventHandlerNonNull Onprogress { get; set; } Property Value EventHandlerNonNull ReadyState The FileReader readyState property provides the current state of the reading operation a FileReader is in. A FileReader exists in one of the following states: public ushort ReadyState { get; } Property Value ushort A number which is one of the three possible state constants define for the FileReader API. Remarks Value State Description 0 EMPTY Reader has been created. None of the read methods called yet. 1 LOADING A read method has been called. 2 DONE The operation is complete. -Blob See also on MDN Result The FileReader result property returns the file&apos;s contents. This property is only valid after the read operation is complete, and the format of the data depends on which of the methods was used to initiate the read operation. public Union52? Result { get; } Property Value Union52? An appropriate string or ArrayBuffer based on which of the reading methods was used to initiate the read operation. The value is null if the reading is not yet complete or was unsuccessful.The result types are described below. Remarks -FileReader See also on MDN Methods Abort() The abort method aborts the read operation. Upon return, the ReadyState will be DONE. public GlobalObject.Undefined Abort() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -FileReader See also on MDN ReadAsArrayBuffer(Blob) The FileReader interface's readAsArrayBuffer() method is used to start reading the contents of a specified Blob or File. When the read operation is finished, the ReadyState becomes DONE, and the FileReader/loadend_event is triggered. At that time, the Result attribute contains an ArrayBuffer representing the file's data. public GlobalObject.Undefined ReadAsArrayBuffer(Blob blob) Parameters blob Blob Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: The ArrayBuffer() method is a newer promise-based API to read a file as an array buffer. -FileReader See also on MDN ReadAsBinaryString(Blob) The readAsBinaryString method is used to start reading the contents of the specified Blob or File. When the read operation is finished, the ReadyState becomes DONE, and the FileReader.Loadend_event is triggered. At that time, the Result attribute contains the raw binary data from the file. public GlobalObject.Undefined ReadAsBinaryString(Blob blob) Parameters blob Blob Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Note that this method was once removed from the File API specification, but re-introduced for backward compatibility. Using ReadAsArrayBuffer(Blob) is recommended. -FileReader See also on MDN ReadAsDataURL(Blob) The readAsDataURL method is used to read the contents of the specified Blob or File. When the read operation is finished, the ReadyState becomes DONE, and the FileReader/loadend_event is triggered. At that time, the Result attribute contains the data as a data: URL representing the file&apos;s data as a base64 encoded string. public GlobalObject.Undefined ReadAsDataURL(Blob blob) Parameters blob Blob Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: The blob's Result cannot be directly decoded as Base64 without first removing the Data-URL declaration preceding the Base64-encoded data. To retrieve only the Base64 encoded string, first remove data:*/*;base64, from the result. -FileReader -CreateObjectURL(Union53) See also on MDN ReadAsText(Blob, string) The readAsText() method is used to read the contents of the specified Blob or File. When the read operation is complete, the ReadyState is changed to DONE, the FileReader/loadend_event event is triggered, and the Result property contains the contents of the file as a text string. public GlobalObject.Undefined ReadAsText(Blob blob, string encoding) Parameters blob Blob encoding string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: The Text() method is a newer promise-based API to read a file as text. NOTE Note: This method loads the entire file&apos;s content into memory and is not suitable for large files. Prefer readAsArrayBuffer() for large files. -FileReader See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FileReaderSync.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FileReaderSync.html",
    "title": "Class FileReaderSync | CSharpToJavaScript",
    "keywords": "Class FileReaderSync Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FileReaderSync interface allows to read File or Blob objects synchronously. [To(\"FirstCharToLowerCase\")] public class FileReaderSync Inheritance object FileReaderSync Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers WARNING Warning: This interface is only available in workers as it enables synchronous I/O that could potentially block. -FileReader -Blob -File See also on MDN Constructors FileReaderSync() The FileReaderSync() constructor creates a new FileReaderSync. public FileReaderSync() Remarks See also on MDN Methods ReadAsArrayBuffer(Blob) The readAsArrayBuffer() method of the FileReaderSync interface allows to read File or Blob objects in a synchronous way into an {{jsxref(\"ArrayBuffer\")}}. This interface is only available in workers as it enables synchronous I/O that could potentially block. public byte[] ReadAsArrayBuffer(Blob blob) Parameters blob Blob Returns byte[] An ArrayBuffer representing the file's data. Remarks -File API -File -FileReaderSync -FileReader -Blob See also on MDN ReadAsBinaryString(Blob) IMPORTANT Deprecated NOTE Note: This method is deprecated in favor of ReadAsArrayBuffer(Blob). public string ReadAsBinaryString(Blob blob) Parameters blob Blob Returns string A string representing the input data. Remarks The readAsBinaryString() method of the FileReaderSync interface allows to read File or Blob objects in a synchronous way into a string. This interface is only available in workers as it enables synchronous I/O that could potentially block. -File API -File -FileReaderSync -FileReader -Blob See also on MDN ReadAsDataURL(Blob) The readAsDataURL() method of the FileReaderSync interface allows to read File or Blob objects in a synchronous way into a string representing a data URL. This interface is only available in workers as it enables synchronous I/O that could potentially block. public string ReadAsDataURL(Blob blob) Parameters blob Blob Returns string A string representing the input data as a data URL. Remarks -File and Directory Entries API -File -FileReaderSync -FileReader -Blob See also on MDN ReadAsText(Blob, string) The readAsText() method of the FileReaderSync interface allows to read File or Blob objects in a synchronous way into a string. This interface is only available in workers as it enables synchronous I/O that could potentially block. public string ReadAsText(Blob blob, string encoding) Parameters blob Blob encoding string Returns string A string representing the input data. Remarks -File API -File -FileReaderSync -FileReader -Blob See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FileSystemCreateWritableOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FileSystemCreateWritableOptions.html",
    "title": "Class FileSystemCreateWritableOptions | CSharpToJavaScript",
    "keywords": "Class FileSystemCreateWritableOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FileSystemCreateWritableOptions Inheritance object FileSystemCreateWritableOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields KeepExistingData public bool KeepExistingData Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.FileSystemDirectoryHandle.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FileSystemDirectoryHandle.html",
    "title": "Class FileSystemDirectoryHandle | CSharpToJavaScript",
    "keywords": "Class FileSystemDirectoryHandle Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FileSystemDirectoryHandle interface of the 'File System Access API' provides a handle to a file system directory. [To(\"FirstCharToLowerCase\")] public class FileSystemDirectoryHandle : FileSystemHandle Inheritance object FileSystemHandle FileSystemDirectoryHandle Inherited Members FileSystemHandle.Kind FileSystemHandle.Name FileSystemHandle.IsSameEntry(FileSystemHandle) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The interface can be accessed via the 'window.ShowDirectoryPicker', 'StorageManager.GetDirectory', 'DataTransferItem.GetAsFileSystemHandle', and 'FileSystemDirectoryHandle.GetDirectoryHandle' methods. -File System Access API -The File System Access API: simplifying access to local files See also on MDN Properties this[int] public string this[int i] { get; set; } Parameters i int Property Value string Methods GetDirectoryHandle(string, FileSystemGetDirectoryOptions) The getDirectoryHandle() method of the FileSystemDirectoryHandle interface returns a 'FileSystemDirectoryHandle' for a subdirectory with the specified name within the directory handle on which the method is called. public Task<FileSystemDirectoryHandle> GetDirectoryHandle(string name, FileSystemGetDirectoryOptions options) Parameters name string options FileSystemGetDirectoryOptions Returns Task<FileSystemDirectoryHandle> A {{jsxref('Promise')}} which resolves with a 'FileSystemDirectoryHandle'. Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN GetFileHandle(string, FileSystemGetFileOptions) The getFileHandle() method of the FileSystemDirectoryHandle interface returns a 'FileSystemFileHandle' for a file with the specified name, within the directory the method is called. public Task<FileSystemFileHandle> GetFileHandle(string name, FileSystemGetFileOptions options) Parameters name string options FileSystemGetFileOptions Returns Task<FileSystemFileHandle> A {{jsxref('Promise')}} which resolves with a 'FileSystemFileHandle'. Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN RemoveEntry(string, FileSystemRemoveOptions) The removeEntry() method of the FileSystemDirectoryHandle interface attempts to remove an entry if the directory handle contains a file or directory called the name specified. public Task<GlobalObject.Undefined> RemoveEntry(string name, FileSystemRemoveOptions options) Parameters name string options FileSystemRemoveOptions Returns Task<GlobalObject.Undefined> A 'Promise' which resolves with undefined. Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN Resolve(FileSystemHandle) The resolve() method of the FileSystemDirectoryHandle interface returns an {{jsxref('Array')}} of directory names from the parent handle to the specified child entry, with the name of the child entry as the last array item. public Task<List<string>?> Resolve(FileSystemHandle possibleDescendant) Parameters possibleDescendant FileSystemHandle Returns Task<List<string>> A 'Promise' which resolves with an 'Array' of strings, or null if possibleDescendant is not a descendant of this 'FileSystemDirectoryHandle'. Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FileSystemFileHandle.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FileSystemFileHandle.html",
    "title": "Class FileSystemFileHandle | CSharpToJavaScript",
    "keywords": "Class FileSystemFileHandle Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FileSystemFileHandle interface of the {{domxref(&quot;File System Access API&quot;, &quot;File System Access API&quot;, &quot;&quot;, \"nocode\")}} represents a handle to a file system entry. The interface is accessed through the 'window.ShowOpenFilePicker' method. [To(\"FirstCharToLowerCase\")] public class FileSystemFileHandle : FileSystemHandle Inheritance object FileSystemHandle FileSystemFileHandle Inherited Members FileSystemHandle.Kind FileSystemHandle.Name FileSystemHandle.IsSameEntry(FileSystemHandle) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Note that read and write operations depend on file-access permissions that do not persist after a page refresh if no other tabs for that origin remain open. The FileSystemHandle.QueryPermission method of the FileSystemHandle interface can be used to verify permission state before accessing a file. -File System Access API -The File System Access API: simplifying access to local files See also on MDN Methods CreateSyncAccessHandle() The createSyncAccessHandle() method of the FileSystemFileHandle interface returns a {{jsxref('Promise')}} which resolves to a 'FileSystemSyncAccessHandle' object that can be used to synchronously read from and write to a file. The synchronous nature of this method brings performance advantages, but it is only usable inside dedicated Web Workers for files within the origin private file system. public Task<FileSystemSyncAccessHandle> CreateSyncAccessHandle() Returns Task<FileSystemSyncAccessHandle> A {{jsxref('Promise')}} which resolves to a 'FileSystemSyncAccessHandle' object. Remarks Creating a 'FileSystemSyncAccessHandle' takes an exclusive lock on the file associated with the file handle. This prevents the creation of further 'FileSystemSyncAccessHandle's or 'FileSystemWritableFileStream's for the file until the existing access handle is closed. -File System Access API -The File System Access API: simplifying access to local files See also on MDN CreateWritable(FileSystemCreateWritableOptions) The createWritable() method of the FileSystemFileHandle interface creates a 'FileSystemWritableFileStream' that can be used to write to a file. The method returns a 'Promise' which resolves to this created stream. public Task<FileSystemWritableFileStream> CreateWritable(FileSystemCreateWritableOptions options) Parameters options FileSystemCreateWritableOptions Returns Task<FileSystemWritableFileStream> A {{jsxref('Promise')}} which resolves to a 'FileSystemWritableFileStream' object. Remarks Any changes made through the stream won&apos;t be reflected in the file represented by the file handle until the stream has been closed. This is typically implemented by writing data to a temporary file, and only replacing the file represented by file handle with the temporary file when the writable filestream is closed. -File System Access API -The File System Access API: simplifying access to local files See also on MDN GetFile() The getFile() method of the FileSystemFileHandle interface returns a {{jsxref('Promise')}} which resolves to a 'File' object representing the state on disk of the entry represented by the handle. public Task<File> GetFile() Returns Task<File> A {{jsxref('Promise')}} which resolves to a 'File' object. Remarks If the file on disk changes or is removed after this method is called, the returned 'File' object will likely be no longer readable. -File System Access API -The File System Access API: simplifying access to local files See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FileSystemGetDirectoryOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FileSystemGetDirectoryOptions.html",
    "title": "Class FileSystemGetDirectoryOptions | CSharpToJavaScript",
    "keywords": "Class FileSystemGetDirectoryOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FileSystemGetDirectoryOptions Inheritance object FileSystemGetDirectoryOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Create public bool Create Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.FileSystemGetFileOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FileSystemGetFileOptions.html",
    "title": "Class FileSystemGetFileOptions | CSharpToJavaScript",
    "keywords": "Class FileSystemGetFileOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FileSystemGetFileOptions Inheritance object FileSystemGetFileOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Create public bool Create Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.FileSystemHandle.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FileSystemHandle.html",
    "title": "Class FileSystemHandle | CSharpToJavaScript",
    "keywords": "Class FileSystemHandle Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FileSystemHandle interface of the 'File System Access API' is an object which represents a file or directory entry. Multiple handles can represent the same entry. For the most part you do not work with FileSystemHandle directly but rather its child interfaces 'FileSystemFileHandle' and 'FileSystemDirectoryHandle'. [To(\"FirstCharToLowerCase\")] public class FileSystemHandle Inheritance object FileSystemHandle Derived FileSystemDirectoryHandle FileSystemFileHandle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN Properties Kind The kind read-only property of the FileSystemHandle interface returns the type of entry. This is &apos;file&apos; if the associated entry is a file or &apos;directory&apos;. It is used to distinguish files from directories when iterating over the contents of a directory. public FileSystemHandleKind Kind { get; } Property Value FileSystemHandleKind A string that can be: Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN Name The name read-only property of the FileSystemHandle interface returns the name of the entry represented by handle. public string Name { get; } Property Value string A string. Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN Methods IsSameEntry(FileSystemHandle) The isSameEntry() method of the FileSystemHandle interface compares two {{domxref(\"FileSystemHandle\", &quot;handles&quot;)}} to see if the associated entries (either a file or directory) match. public Task<bool> IsSameEntry(FileSystemHandle other) Parameters other FileSystemHandle Returns Task<bool> Returns a 'Boolean' which is true is the entries match. Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FileSystemHandleKind.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FileSystemHandleKind.html",
    "title": "Enum FileSystemHandleKind | CSharpToJavaScript",
    "keywords": "Enum FileSystemHandleKind Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The kind read-only property of the FileSystemHandle interface returns the type of entry. This is &apos;file&apos; if the associated entry is a file or &apos;directory&apos;. It is used to distinguish files from directories when iterating over the contents of a directory. public enum FileSystemHandleKind Fields Directory = 1 File = 0 Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FileSystemReadWriteOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FileSystemReadWriteOptions.html",
    "title": "Class FileSystemReadWriteOptions | CSharpToJavaScript",
    "keywords": "Class FileSystemReadWriteOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FileSystemReadWriteOptions Inheritance object FileSystemReadWriteOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields At public ulong At Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.FileSystemRemoveOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FileSystemRemoveOptions.html",
    "title": "Class FileSystemRemoveOptions | CSharpToJavaScript",
    "keywords": "Class FileSystemRemoveOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FileSystemRemoveOptions Inheritance object FileSystemRemoveOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Recursive public bool Recursive Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.FileSystemSyncAccessHandle.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FileSystemSyncAccessHandle.html",
    "title": "Class FileSystemSyncAccessHandle | CSharpToJavaScript",
    "keywords": "Class FileSystemSyncAccessHandle Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FileSystemSyncAccessHandle interface of the {{domxref(&quot;File System Access API&quot;, &quot;File System Access API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a synchronous handle to a file system entry. The synchronous nature of the file reads and writes allows for higher performance for critical methods in contexts where asynchronous operations come with high overhead, e.g., WebAssembly. [To(\"FirstCharToLowerCase\")] public class FileSystemSyncAccessHandle Inheritance object FileSystemSyncAccessHandle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This class is only accessible inside dedicated Web Workers for files within the origin private file system. The interface is accessed through the 'FileSystemFileHandle.CreateSyncAccessHandle' method. -File System Access API -The File System Access API: simplifying access to local files See also on MDN Methods Close() The close() method of the FileSystemSyncAccessHandle interface closes an open synchronous file handle, disabling any further operations on it and releasing the exclusive lock previously put on the file associated with the file handle. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined A 'Promise' which resolves to undefined. Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN Flush() The flush() method of the FileSystemSyncAccessHandle interface persists any changes made to the file associated with the handle via the 'FileSystemSyncAccessHandle.Write' method to disk. public GlobalObject.Undefined Flush() Returns GlobalObject.Undefined A 'Promise' which resolves to undefined. Remarks Bear in mind that you only need to call this method if you need the changes committed to disk at a specific time, otherwise you can leave the underlying operating system to handle this when it sees fit, which should be OK in most cases. -File System Access API -The File System Access API: simplifying access to local files See also on MDN GetSize() The getSize() method of the FileSystemSyncAccessHandle interface returns the size of the file associated with the handle in bytes. public ulong GetSize() Returns ulong A 'Promise' which resolves to a number representing the number of bytes in the file. Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN Read(Union68, FileSystemReadWriteOptions) The read() method of the FileSystemSyncAccessHandle interface reads the content of the file associated with the handle into a specified buffer, optionally at a given offset. public ulong Read(Union68 buffer, FileSystemReadWriteOptions options) Parameters buffer Union68 options FileSystemReadWriteOptions Returns ulong A 'Promise' which resolves to a number representing the number of bytes read from the file. Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN Truncate(ulong) The truncate() method of the FileSystemSyncAccessHandle interface resizes the file associated with the handle to a specified number of bytes. public GlobalObject.Undefined Truncate(ulong newSize) Parameters newSize ulong Returns GlobalObject.Undefined A 'Promise' which resolves to undefined. Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN Write(Union68, FileSystemReadWriteOptions) The write() method of the FileSystemSyncAccessHandle interface writes the content of a specified buffer to the file associated with the handle, optionally at a given offset. Note that you cannot directly manipulate the contents of an ArrayBuffer. Instead, you create one of the typed array objects like an Int8Array or a DataView object which represents the buffer in a specific format, and use that to read and write the contents of the buffer. public ulong Write(Union68 buffer, FileSystemReadWriteOptions options) Parameters buffer Union68 options FileSystemReadWriteOptions Returns ulong A 'Promise' which resolves to a number representing the number of bytes written to the file. Remarks Writes performed using 'FileSystemSyncAccessHandle.Write' are in-place, meaning that changes are written to the actual underlying file at the same time as they are written to the writer. This is not the case with other writing mechanisms available in the {{domxref(\"File System Access API\", \"File System Access API\", &quot;&quot;, \"nocode\")}} (e.g. 'FileSystemFileHandle.CreateWritable'), where changes are not committed to disk until the writing stream is closed. -File System Access API -The File System Access API: simplifying access to local files See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FileSystemWritableFileStream.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FileSystemWritableFileStream.html",
    "title": "Class FileSystemWritableFileStream | CSharpToJavaScript",
    "keywords": "Class FileSystemWritableFileStream Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FileSystemWritableFileStream interface of the 'File System Access API' is a 'WritableStream' object with additional convenience methods, which operates on a single file on disk. The interface is accessed through the 'FileSystemFileHandle.CreateWritable' method. [To(\"FirstCharToLowerCase\")] public class FileSystemWritableFileStream : WritableStream Inheritance object WritableStream FileSystemWritableFileStream Inherited Members WritableStream.Locked WritableStream.Abort(dynamic) WritableStream.Close() WritableStream.GetWriter() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN Methods Seek(ulong) The seek() method of the FileSystemWritableFileStream interface updates the current file cursor offset to the position (in bytes) specified when calling the method. public Task<GlobalObject.Undefined> Seek(ulong position) Parameters position ulong Returns Task<GlobalObject.Undefined> 'Promise' which returns undefined. Remarks -File System Access API -The File System Access API: simplifying access to local files See also on MDN Truncate(ulong) The truncate() method of the FileSystemWritableFileStream interface resizes the file associated with the stream to be the specified size in bytes. public Task<GlobalObject.Undefined> Truncate(ulong size) Parameters size ulong Returns Task<GlobalObject.Undefined> A 'Promise' which returns undefined. Remarks If the size specified is larger than the current file size this pads the file with null bytes, otherwise it truncates the file. The file cursor is also updated when truncate() is called. If the offset is smaller than the size, it remains unchanged. If the offset is larger than size, the offset is set to that size. This ensures that subsequent writes do not error. No changes are written to the actual file on disk until the stream has been closed. Changes are typically written to a temporary file instead. -File System Access API -The File System Access API: simplifying access to local files See also on MDN Write(Union61) The write() method of the FileSystemWritableFileStream interface writes content into the file the method is called on, at the current file cursor offset. public Task<GlobalObject.Undefined> Write(Union61 data) Parameters data Union61 Returns Task<GlobalObject.Undefined> 'Promise' which returns undefined. Remarks No changes are written to the actual file on disk until the stream has been closed. Changes are typically written to a temporary file instead. This method can also be used to seek to a byte point within the stream and truncate to modify the total bytes the file contains. -File System Access API -The File System Access API: simplifying access to local files See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FillLightMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FillLightMode.html",
    "title": "Enum FillLightMode | CSharpToJavaScript",
    "keywords": "Enum FillLightMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum FillLightMode Fields Auto = 0 Flash = 2 Off = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.FillMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FillMode.html",
    "title": "Enum FillMode | CSharpToJavaScript",
    "keywords": "Enum FillMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum FillMode Fields Auto = 4 Backwards = 2 Both = 3 Forwards = 1 None = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.FocusEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FocusEvent.html",
    "title": "Class FocusEvent | CSharpToJavaScript",
    "keywords": "Class FocusEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FocusEvent interface represents focus-related events, including Element/focus_event, Element/blur_event, Element/focusin_event, and Element/focusout_event. [To(\"FirstCharToLowerCase\")] public class FocusEvent : UIEvent Inheritance object Event UIEvent FocusEvent Inherited Members UIEvent.View UIEvent.Detail UIEvent.InitUIEvent(string, bool, bool, Window, long) UIEvent.Which Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The Event base interface See also on MDN Constructors FocusEvent() public FocusEvent() FocusEvent(string, FocusEventInit) The FocusEvent() constructor returns a newly created FocusEvent object with an optional EventTarget. When the event has both a source and a destination, the relatedTarget value must be set to the other target. public FocusEvent(string type, FocusEventInit eventInitDict) Parameters type string eventInitDict FocusEventInit Remarks -The FocusEvent interface it belongs to. See also on MDN Properties RelatedTarget The FocusEvent.relatedTarget read-only property is the secondary target, depending on the type of event: public EventTarget? RelatedTarget { get; } Property Value EventTarget An instance of EventTarget. Remarks Note that many elements can&apos;t have focus, which is a common reason for relatedTarget to be null. relatedTarget may also be set to null for security reasons, like when tabbing in or out of a page. RelatedTarget is a similar property for mouse events. -The FocusEvent interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FocusEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FocusEventInit.html",
    "title": "Class FocusEventInit | CSharpToJavaScript",
    "keywords": "Class FocusEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FocusEventInit : UIEventInit Inheritance object EventInit UIEventInit FocusEventInit Inherited Members UIEventInit.View UIEventInit.Detail UIEventInit.Which EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields RelatedTarget public EventTarget? RelatedTarget Field Value EventTarget"
  },
  "api/CSharpToJavaScript.APIs.JS.FocusOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FocusOptions.html",
    "title": "Class FocusOptions | CSharpToJavaScript",
    "keywords": "Class FocusOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FocusOptions Inheritance object FocusOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FocusVisible public bool FocusVisible Field Value bool PreventScroll public bool PreventScroll Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.FocusableAreaSearchMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FocusableAreaSearchMode.html",
    "title": "Enum FocusableAreaSearchMode | CSharpToJavaScript",
    "keywords": "Enum FocusableAreaSearchMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum FocusableAreaSearchMode Fields All = 1 Visible = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.FocusableAreasOption.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FocusableAreasOption.html",
    "title": "Class FocusableAreasOption | CSharpToJavaScript",
    "keywords": "Class FocusableAreasOption Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FocusableAreasOption Inheritance object FocusableAreasOption Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Mode public FocusableAreaSearchMode Mode Field Value FocusableAreaSearchMode"
  },
  "api/CSharpToJavaScript.APIs.JS.FontFace.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FontFace.html",
    "title": "Class FontFace | CSharpToJavaScript",
    "keywords": "Class FontFace Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FontFace interface of the CSS Font Loading API represents a single usable font face. [To(\"FirstCharToLowerCase\")] public class FontFace Inheritance object FontFace Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface defines the source of a font face, either a URL to an external resource or a buffer, and font properties such as style, weight, and so on. For URL font sources it allows authors to trigger when the remote font is fetched and loaded, and to track loading status. -_font-face See also on MDN Constructors FontFace() public FontFace() FontFace(Unsupported, Union35, FontFaceDescriptors) The FontFace() constructor creates a new FontFace object. public FontFace(Unsupported family, Union35 source, FontFaceDescriptors descriptors) Parameters family Unsupported source Union35 descriptors FontFaceDescriptors Remarks -@font-face See also on MDN Properties AscentOverride The ascentOverride property of the FontFace interface returns and sets the ascent metric for the font, the height above the baseline that CSS uses to lay out line boxes in an inline formatting context. public Unsupported AscentOverride { get; set; } Property Value Unsupported A string. The possible values are normal, indicating that the metric used should be obtained from the font file, or a percentage.This property accepts the same values as the @font-face/ascent-override descriptor. Remarks This property is equivalent to the @font-face/ascent-override descriptor of @font-face. See also on MDN DescentOverride The descentOverride property of the FontFace interface returns and sets the value of the {{cssxref(\"@font-face/descent-override\")}} descriptor. The possible values are normal, indicating that the metric used should be obtained from the font file, or a percentage. public Unsupported DescentOverride { get; set; } Property Value Unsupported A string. Remarks See also on MDN Display The display property of the FontFace interface determines how a font face is displayed based on whether and when it is downloaded and ready to use. This property is equivalent to the CSS font-display descriptor. public Unsupported Display { get; set; } Property Value Unsupported A string with one of the following values. Remarks When this property is used, font loading has a timeline with three periods. The lengths of the first two periods depend on the value of the property and the user agent. (See below.) See also on MDN Family The FontFace.family property allows the author to get or set the font family of a FontFace object. public Unsupported Family { get; set; } Property Value Unsupported A string. Remarks The value is used for name matching against a particular font face when styling elements using the font-family property. Any name may be used, and this overrides any name specified in the underlying font data. This property is equivalent to the @font-face/font-family descriptor of @font-face. See also on MDN FeatureSettings The featureSettings property of the FontFace interface retrieves or sets infrequently used font features that are not available from a font's variant properties. public Unsupported FeatureSettings { get; set; } Property Value Unsupported A string containing a descriptor. Remarks This property is equivalent to the font-feature-settings descriptor. See also on MDN Features public FontFaceFeatures Features { get; } Property Value FontFaceFeatures LineGapOverride The lineGapOverride property of the FontFace interface returns and sets the value of the {{cssxref(\"@font-face/line-gap-override\")}} descriptor. The possible values are normal, indicating that the metric used should be obtained from the font file, or a percentage. public Unsupported LineGapOverride { get; set; } Property Value Unsupported A string. Remarks See also on MDN Loaded The loaded read-only property of the FontFace interface returns a {{jsxref('Promise')}} that resolves with the current FontFace object when the font specified in the object&apos;s constructor is done loading or rejects with a SyntaxError. public Task<FontFace> Loaded { get; } Property Value Task<FontFace> A 'Promise' that resolves with the current FontFace object. Remarks See also on MDN Palettes public FontFacePalettes Palettes { get; } Property Value FontFacePalettes Status The status read-only property of the FontFace interface returns an enumerated value indicating the status of the font, one of &quot;unloaded&quot;, &quot;loading&quot;, &quot;loaded&quot;, or &quot;error&quot;. public FontFaceLoadStatus Status { get; } Property Value FontFaceLoadStatus One of &quot;unloaded&quot;, &quot;loading&quot;, &quot;loaded&quot;, or &quot;error&quot;. Remarks See also on MDN Stretch The stretch property of the FontFace interface retrieves or sets how the font stretches. public Unsupported Stretch { get; set; } Property Value Unsupported A string containing a descriptor as it would be defined in a style sheet&apos;s _font-face rule. Remarks This property is equivalent to the @font-face/font-stretch descriptor. See also on MDN Style The style property of the FontFace interface retrieves or sets the font's style. public Unsupported Style { get; set; } Property Value Unsupported A string containing the descriptors defined in the style sheet&apos;s _font-face rule. Remarks This property is equivalent to the @font-face/font-style descriptor. See also on MDN UnicodeRange The unicodeRange property of the FontFace interface retrieves or sets the range of unicode code points encompassing the font. public Unsupported UnicodeRange { get; set; } Property Value Unsupported A string containing a descriptor as it would appear in a style sheet&apos;s _font-face rule. Remarks This property is equivalent to the @font-face/unicode-range descriptor. See also on MDN Variant The variant property of the FontFace interface programmatically retrieves or sets font variant values. public Unsupported Variant { get; set; } Property Value Unsupported A string containing a descriptor as it would be defined in a style sheet&apos;s _font-face rule. Remarks See also on MDN VariationSettings The variationSettings property of the FontFace interface retrieves or sets low-level OpenType or TrueType font variations. public Unsupported VariationSettings { get; set; } Property Value Unsupported A string containing a descriptor. Remarks This property is equivalent to the @font-face/font-variation-settings descriptor. See also on MDN Variations public FontFaceVariations Variations { get; } Property Value FontFaceVariations Weight The weight property of the FontFace interface retrieves or sets the weight of the font. public Unsupported Weight { get; set; } Property Value Unsupported A string containing a descriptor as it would be defined in a style sheet&apos;s _font-face rule. Remarks This property is equivalent to the @font-face/font-weight descriptor. See also on MDN Methods Load() The load() method of the FontFace interface requests and loads a font whose source was specified as a URL. It returns a 'Promise' that resolves with the current FontFace object. public Task<FontFace> Load() Returns Task<FontFace> A 'Promise' that resolves with a reference to the current FontFace object when the font loads or rejects with a NetworkError DOMException if the loading process fails. Remarks If the source for the font face was specified as binary data, or the font FontFace/status property of the font face is anything other than unloaded, then this method does nothing. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FontFaceDescriptors.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FontFaceDescriptors.html",
    "title": "Class FontFaceDescriptors | CSharpToJavaScript",
    "keywords": "Class FontFaceDescriptors Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FontFaceDescriptors Inheritance object FontFaceDescriptors Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AscentOverride public Unsupported AscentOverride Field Value Unsupported DescentOverride public Unsupported DescentOverride Field Value Unsupported Display public Unsupported Display Field Value Unsupported FeatureSettings public Unsupported FeatureSettings Field Value Unsupported LineGapOverride public Unsupported LineGapOverride Field Value Unsupported Stretch public Unsupported Stretch Field Value Unsupported Style public Unsupported Style Field Value Unsupported UnicodeRange public Unsupported UnicodeRange Field Value Unsupported Variant public Unsupported Variant Field Value Unsupported VariationSettings public Unsupported VariationSettings Field Value Unsupported Weight public Unsupported Weight Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.FontFaceFeatures.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FontFaceFeatures.html",
    "title": "Class FontFaceFeatures | CSharpToJavaScript",
    "keywords": "Class FontFaceFeatures Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FontFaceFeatures Inheritance object FontFaceFeatures Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.FontFaceLoadStatus.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FontFaceLoadStatus.html",
    "title": "Enum FontFaceLoadStatus | CSharpToJavaScript",
    "keywords": "Enum FontFaceLoadStatus Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum FontFaceLoadStatus Fields Error = 3 Loaded = 2 Loading = 1 Unloaded = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.FontFacePalette.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FontFacePalette.html",
    "title": "Class FontFacePalette | CSharpToJavaScript",
    "keywords": "Class FontFacePalette Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FontFacePalette Inheritance object FontFacePalette Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties this[int] public string this[int i] { get; set; } Parameters i int Property Value string Length public ulong Length { get; } Property Value ulong UsableWithDarkBackground public bool UsableWithDarkBackground { get; } Property Value bool UsableWithLightBackground public bool UsableWithLightBackground { get; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.FontFacePalettes.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FontFacePalettes.html",
    "title": "Class FontFacePalettes | CSharpToJavaScript",
    "keywords": "Class FontFacePalettes Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FontFacePalettes Inheritance object FontFacePalettes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties this[int] public FontFacePalette this[int i] { get; set; } Parameters i int Property Value FontFacePalette Length public ulong Length { get; } Property Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.FontFaceSet.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FontFaceSet.html",
    "title": "Class FontFaceSet | CSharpToJavaScript",
    "keywords": "Class FontFaceSet Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FontFaceSet interface of the CSS Font Loading API manages the loading of font-faces and querying of their download status. [To(\"FirstCharToLowerCase\")] public class FontFaceSet : EventTarget Inheritance object EventTarget FontFaceSet Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A FontFaceSet instance is a Set-like object that can hold an ordered set of FontFace objects. This property is available as Document.Fonts, or self.fonts in web workers. See also on MDN Constructors FontFaceSet() public FontFaceSet() FontFaceSet(List<FontFace>) public FontFaceSet(List<FontFace> initialFaces) Parameters initialFaces List<FontFace> Properties Onloading public EventHandlerNonNull Onloading { get; set; } Property Value EventHandlerNonNull Onloadingdone public EventHandlerNonNull Onloadingdone { get; set; } Property Value EventHandlerNonNull Onloadingerror public EventHandlerNonNull Onloadingerror { get; set; } Property Value EventHandlerNonNull Ready The ready read-only property of the FontFaceSet interface returns a {{jsxref(\"Promise\")}} that resolves to the given FontFaceSet. public Task<FontFaceSet> Ready { get; } Property Value Task<FontFaceSet> A {{jsxref(\"Promise\")}} that resolves to the given FontFaceSet. Remarks The promise will only resolve once the document has completed loading fonts, layout operations are completed, and no further font loads are needed. See also on MDN Status The status read-only property of the FontFaceSet interface returns the loading state of the fonts in the set. public FontFaceSetLoadStatus Status { get; } Property Value FontFaceSetLoadStatus One of: Remarks See also on MDN Methods Add(FontFace) The add() method of the FontFaceSet interface adds a new font to the set. public FontFaceSet Add(FontFace font) Parameters font FontFace Returns FontFaceSet A new FontFaceSet. Remarks See also on MDN Check(Unsupported, Unsupported) The check() method of the FontFaceSet returns true if you can render some text using the given font specification without attempting to use any fonts in this FontFaceSet that are not yet fully loaded. This means you can use the font specification without causing a font swap. public bool Check(Unsupported font, Unsupported text) Parameters font Unsupported text Unsupported Returns bool A Boolean value that is true if rendering text with the given font specification will not attempt to use any fonts in this FontFaceSet that are not yet fully loaded.This means that all fonts in this FontFaceSet that are matched by the given font specification have a status property set to &quot;loaded&quot;.Otherwise, this function returns false. Remarks See also on MDN Clear() The clear() method of the FontFaceSet interface removes all fonts added via this interface. Fonts added with the {{cssxref(\"@font-face\")}} rule are not removed. public GlobalObject.Undefined Clear() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Delete(FontFace) The delete() method of the FontFaceSet interface removes a font from the set. public bool Delete(FontFace font) Parameters font FontFace Returns bool A boolean value which is true if the deletion was successful, and false otherwise. Remarks Font faces that were added to the set using the CSS @font-face rule remain connected to the corresponding CSS, and cannot be deleted. See also on MDN Load(Unsupported, Unsupported) The load() method of the FontFaceSet forces all the fonts given in parameters to be loaded. public Task<List<FontFace>> Load(Unsupported font, Unsupported text) Parameters font Unsupported text Unsupported Returns Task<List<FontFace>> A {{jsxref(\"Promise\")}} fulfilled with an {{jsxref(\"Array\")}} of loaded FontFace objects. The promise is fulfilled when all the fonts are loaded; it is rejected if one of the fonts failed to load. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FontFaceSetLoadEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FontFaceSetLoadEvent.html",
    "title": "Class FontFaceSetLoadEvent | CSharpToJavaScript",
    "keywords": "Class FontFaceSetLoadEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FontFaceSetLoadEvent interface of the CSS Font Loading API represents events fired at a FontFaceSet after it starts loading font faces. [To(\"FirstCharToLowerCase\")] public class FontFaceSetLoadEvent : Event Inheritance object Event FontFaceSetLoadEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Events are fired when font loading starts (loading), loading completes (loadingdone) or there is an error loading one of the fonts (loadingerror). -Document.Fonts -WorkerGlobalScope.Fonts See also on MDN Constructors FontFaceSetLoadEvent() public FontFaceSetLoadEvent() FontFaceSetLoadEvent(Unsupported, FontFaceSetLoadEventInit) The FontFaceSetLoadEvent() constructor creates a new FontFaceSetLoadEvent object which is fired whenever a FontFaceSet loads. public FontFaceSetLoadEvent(Unsupported type, FontFaceSetLoadEventInit eventInitDict) Parameters type Unsupported eventInitDict FontFaceSetLoadEventInit Remarks See also on MDN Properties Fontfaces The fontfaces read-only property of the FontFaceSetLoadEvent interface returns an array of FontFace instances, each of which represents a single usable font. public FontFace[] Fontfaces { get; } Property Value FontFace[] An array of FontFace instance. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FontFaceSetLoadEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FontFaceSetLoadEventInit.html",
    "title": "Class FontFaceSetLoadEventInit | CSharpToJavaScript",
    "keywords": "Class FontFaceSetLoadEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FontFaceSetLoadEventInit : EventInit Inheritance object EventInit FontFaceSetLoadEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Fontfaces public List<FontFace> Fontfaces Field Value List<FontFace>"
  },
  "api/CSharpToJavaScript.APIs.JS.FontFaceSetLoadStatus.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FontFaceSetLoadStatus.html",
    "title": "Enum FontFaceSetLoadStatus | CSharpToJavaScript",
    "keywords": "Enum FontFaceSetLoadStatus Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum FontFaceSetLoadStatus Fields Loaded = 1 Loading = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.FontFaceSource.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FontFaceSource.html",
    "title": "Interface FontFaceSource | CSharpToJavaScript",
    "keywords": "Interface FontFaceSource Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface FontFaceSource Properties Fonts FontFaceSet Fonts { get; } Property Value FontFaceSet"
  },
  "api/CSharpToJavaScript.APIs.JS.FontFaceVariationAxis.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FontFaceVariationAxis.html",
    "title": "Class FontFaceVariationAxis | CSharpToJavaScript",
    "keywords": "Class FontFaceVariationAxis Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FontFaceVariationAxis Inheritance object FontFaceVariationAxis Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AxisTag public string AxisTag { get; } Property Value string DefaultValue public Number DefaultValue { get; } Property Value Number MaximumValue public Number MaximumValue { get; } Property Value Number MinimumValue public Number MinimumValue { get; } Property Value Number Name public string Name { get; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.FontFaceVariations.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FontFaceVariations.html",
    "title": "Class FontFaceVariations | CSharpToJavaScript",
    "keywords": "Class FontFaceVariations Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FontFaceVariations Inheritance object FontFaceVariations Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.FormData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FormData.html",
    "title": "Class FormData | CSharpToJavaScript",
    "keywords": "Class FormData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FormData interface provides a way to construct a set of key/value pairs representing form fields and their values, which can be sent using the Fetch, Send(Union71?) or Navigator.SendBeacon methods. It uses the same format a form would use if the encoding type were set to &quot;multipart/form-data&quot;. [To(\"FirstCharToLowerCase\")] public class FormData Inheritance object FormData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can also pass it directly to the URLSearchParams constructor if you want to generate query parameters in the way a {{HTMLElement(\"form\")}} would do if it were using simple GET submission. An object implementing FormData can directly be used in a {{jsxref(\"Statements/for...of\", \"for...of\")}} structure, instead of 'FormData.Entries': for (const p of myFormData) is equivalent to for (const p of myFormData.entries()). NOTE Note: This feature is available in Web Workers. -Using FormData objects -Form See also on MDN Constructors FormData() public FormData() FormData(HTMLFormElement, HTMLElement?) The FormData() constructor creates a new FormData object. public FormData(HTMLFormElement form, HTMLElement? submitter) Parameters form HTMLFormElement submitter HTMLElement Remarks NOTE Note: This feature is available in Web Workers. -Using FormData objects -Form See also on MDN Properties this[int] public string this[int i] { get; set; } Parameters i int Property Value string Methods Append(string, Blob, string) The append() method of the FormData interface appends a new value onto an existing key inside a FormData object, or adds the key if it does not already exist. public GlobalObject.Undefined Append(string name, Blob blobValue, string filename) Parameters name string blobValue Blob filename string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The difference between Set(string, string) and append() is that if the specified key already exists, set() will overwrite all existing values with the new one, whereas append() will append the new value onto the end of the existing set of values. NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN Append(string, string) The append() method of the FormData interface appends a new value onto an existing key inside a FormData object, or adds the key if it does not already exist. public GlobalObject.Undefined Append(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The difference between Set(string, string) and append() is that if the specified key already exists, set() will overwrite all existing values with the new one, whereas append() will append the new value onto the end of the existing set of values. NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN Delete(string) The delete() method of the FormData interface deletes a key and its value(s) from a FormData object. public GlobalObject.Undefined Delete(string name) Parameters name string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN Get(string) The get() method of the FormData interface returns the first value associated with a given key from within a FormData object. If you expect multiple values and want all of them, use the GetAll(string) method instead. public Union72? Get(string name) Parameters name string Returns Union72? A value whose key matches the specified name. Otherwise, null. Remarks NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN GetAll(string) The getAll() method of the FormData interface returns all the values associated with a given key from within a FormData object. public List<Union72> GetAll(string name) Parameters name string Returns List<Union72> An array of values whose key matches the specified name. Otherwise, an empty list. Remarks NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN Has(string) The has() method of the FormData interface returns whether a FormData object contains a certain key. public bool Has(string name) Parameters name string Returns bool true if a key of FormData matches the specified name. Otherwise, false. Remarks NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN Set(string, Blob, string) The set() method of the FormData interface sets a new value for an existing key inside a FormData object, or adds the key/value if it does not already exist. public GlobalObject.Undefined Set(string name, Blob blobValue, string filename) Parameters name string blobValue Blob filename string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The difference between set() and Append(string, string) is that if the specified key does already exist, set() will overwrite all existing values with the new one, whereas append() will append the new value onto the end of the existing set of values. NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN Set(string, string) The set() method of the FormData interface sets a new value for an existing key inside a FormData object, or adds the key/value if it does not already exist. public GlobalObject.Undefined Set(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The difference between set() and Append(string, string) is that if the specified key does already exist, set() will overwrite all existing values with the new one, whereas append() will append the new value onto the end of the existing set of values. NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FormDataEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FormDataEvent.html",
    "title": "Class FormDataEvent | CSharpToJavaScript",
    "keywords": "Class FormDataEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FormDataEvent interface represents a formdata event — such an event is fired on an HTMLFormElement object after the entry list representing the form's data is constructed. This happens when the form is submitted, but can also be triggered by the invocation of a FormData(HTMLFormElement, HTMLElement?) constructor. [To(\"FirstCharToLowerCase\")] public class FormDataEvent : Event Inheritance object Event FormDataEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This allows a FormData object to be quickly obtained in response to a formdata event firing, rather than needing to put it together yourself when you wish to submit form data via a method like XMLHttpRequest (see Using FormData objects). -XMLHTTPRequest -FormData -Using FormData objects -Form See also on MDN Constructors FormDataEvent() public FormDataEvent() FormDataEvent(string, FormDataEventInit) The FormDataEvent() constructor creates a new FormDataEvent object. public FormDataEvent(string type, FormDataEventInit eventInitDict) Parameters type string eventInitDict FormDataEventInit Remarks -FormDataEvent See also on MDN Properties FormData The formData read-only property of the FormDataEvent interface contains the FormData object representing the data contained in the form when the event was fired. public FormData FormData { get; } Property Value FormData A FormData object. Remarks -XMLHTTPRequest -Using XMLHttpRequest -Using FormData objects -Form See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FormDataEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FormDataEventInit.html",
    "title": "Class FormDataEventInit | CSharpToJavaScript",
    "keywords": "Class FormDataEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FormDataEventInit : EventInit Inheritance object EventInit FormDataEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FormData public required FormData FormData Field Value FormData"
  },
  "api/CSharpToJavaScript.APIs.JS.FragmentResultOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FragmentResultOptions.html",
    "title": "Class FragmentResultOptions | CSharpToJavaScript",
    "keywords": "Class FragmentResultOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FragmentResultOptions Inheritance object FragmentResultOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AutoBlockSize public Number AutoBlockSize Field Value Number BlockSize public Number BlockSize Field Value Number BreakToken public BreakTokenOptions BreakToken Field Value BreakTokenOptions ChildFragments public List<LayoutFragment> ChildFragments Field Value List<LayoutFragment> Data public dynamic Data Field Value dynamic InlineSize public Number InlineSize Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.FrameRequestCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FrameRequestCallback.html",
    "title": "Struct FrameRequestCallback | CSharpToJavaScript",
    "keywords": "Struct FrameRequestCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct FrameRequestCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.FrameType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FrameType.html",
    "title": "Enum FrameType | CSharpToJavaScript",
    "keywords": "Enum FrameType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum FrameType Fields Auxiliary = 0 Nested = 2 None = 3 TopLevel = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.FullscreenNavigationUI.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FullscreenNavigationUI.html",
    "title": "Enum FullscreenNavigationUI | CSharpToJavaScript",
    "keywords": "Enum FullscreenNavigationUI Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum FullscreenNavigationUI Fields Auto = 0 Hide = 2 Show = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.FullscreenOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FullscreenOptions.html",
    "title": "Class FullscreenOptions | CSharpToJavaScript",
    "keywords": "Class FullscreenOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FullscreenOptions Inheritance object FullscreenOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NavigationUI public FullscreenNavigationUI NavigationUI Field Value FullscreenNavigationUI Screen public ScreenDetailed Screen Field Value ScreenDetailed"
  },
  "api/CSharpToJavaScript.APIs.JS.Function.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Function.html",
    "title": "Struct Function | CSharpToJavaScript",
    "keywords": "Struct Function Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct Function Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.FunctionObjectCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FunctionObjectCallback.html",
    "title": "Struct FunctionObjectCallback | CSharpToJavaScript",
    "keywords": "Struct FunctionObjectCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct FunctionObjectCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.FunctionStringCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FunctionStringCallback.html",
    "title": "Struct FunctionStringCallback | CSharpToJavaScript",
    "keywords": "Struct FunctionStringCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct FunctionStringCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.GM.Info.Script.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GM.Info.Script.html",
    "title": "Class GM.Info.Script | CSharpToJavaScript",
    "keywords": "Class GM.Info.Script Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public static class GM.Info.Script Inheritance object GM.Info.Script Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Version [To(\"FirstCharToLowerCase\")] public static string Version { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.GM.Info.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GM.Info.html",
    "title": "Class GM.Info | CSharpToJavaScript",
    "keywords": "Class GM.Info Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public static class GM.Info Inheritance object GM.Info Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GM.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GM.html",
    "title": "Class GM | CSharpToJavaScript",
    "keywords": "Class GM Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class GM Inheritance object GM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GM() public GM() Methods DeleteValue(string) [To(\"FirstCharToLowerCase\")] public static void DeleteValue(string name) Parameters name string GetValue(string) [To(\"FirstCharToLowerCase\")] public static Task<dynamic> GetValue(string name) Parameters name string Returns Task<dynamic> ListValues() [To(\"FirstCharToLowerCase\")] public static Task<List<dynamic>> ListValues() Returns Task<List<dynamic>> OpenInTab(string, bool) [To(\"FirstCharToLowerCase\")] public static void OpenInTab(string url, bool open_in_background = false) Parameters url string open_in_background bool SetValue(string, dynamic) [To(\"FirstCharToLowerCase\")] public static void SetValue(string name, dynamic value) Parameters name string value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.GPU.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPU.html",
    "title": "Class GPU | CSharpToJavaScript",
    "keywords": "Class GPU Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPU interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} is the starting point for using WebGPU. It can be used to return a GPUAdapter from which you can request devices, configure features and limits, and more. [To(\"FirstCharToLowerCase\")] public class GPU Inheritance object GPU Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The GPU object for the current context is accessed via the Navigator.Gpu or WorkerNavigator.Gpu properties. -The WebGPU API See also on MDN Properties WgslLanguageFeatures The wgslLanguageFeatures read-only property of the GPU interface returns a WGSLLanguageFeatures object that reports the WGSL language extensions supported by the WebGPU implementation. public WGSLLanguageFeatures WgslLanguageFeatures { get; } Property Value WGSLLanguageFeatures A WGSLLanguageFeatures object instance. This is a setlike object. Remarks NOTE Note: Not all WGSL language extensions are available to WebGPU in all browsers that support the API. We recommend you thoroughly test any extensions you choose to use. -WebGPU API See also on MDN Methods GetPreferredCanvasFormat() The getPreferredCanvasFormat() method of the GPU interface returns the optimal canvas texture format for displaying 8-bit depth, standard dynamic range content on the current system. public GPUTextureFormat GetPreferredCanvasFormat() Returns GPUTextureFormat A string indicating a canvas texture format. The value can be rgba8unorm or bgra8unorm. Remarks This is commonly used to provide a Configure(GPUCanvasConfiguration) call with the optimal format value for the current system. This is recommended — if you don&apos;t use the preferred format when configuring the canvas context, you may incur additional overhead, such as additional texture copies, depending on the platform. -The WebGPU API See also on MDN RequestAdapter(GPURequestAdapterOptions) The requestAdapter() method of the GPU interface returns a {{jsxref(\"Promise\")}} that fulfills with a GPUAdapter object instance. From this you can request a GPUDevice, adapter info, features, and limits. public Task<GPUAdapter?> RequestAdapter(GPURequestAdapterOptions options) Parameters options GPURequestAdapterOptions Returns Task<GPUAdapter> A {{jsxref(\"Promise\")}} that fulfills with a GPUAdapter object instance if the request is successful.requestAdapter() will resolve to null if an appropriate adapter is not available. Remarks Note that the user agent chooses whether to return an adapter. If so, it chooses according to the provided options. If no options are provided, the device will provide access to the default adapter, which is usually good enough for most purposes. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUAdapter.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUAdapter.html",
    "title": "Class GPUAdapter | CSharpToJavaScript",
    "keywords": "Class GPUAdapter Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUAdapter interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents a GPU adapter. From this you can request a GPUDevice, adapter info, features, and limits. [To(\"FirstCharToLowerCase\")] public class GPUAdapter Inheritance object GPUAdapter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUAdapter object is requested using the RequestAdapter(GPURequestAdapterOptions) method. -The WebGPU API See also on MDN Properties Features The features read-only property of the GPUAdapter interface returns a GPUSupportedFeatures object that describes additional functionality supported by the adapter. public GPUSupportedFeatures Features { get; } Property Value GPUSupportedFeatures A GPUSupportedFeatures object instance. This is a setlike object. Remarks You should note that not all features will be available to WebGPU in all browsers that support it, even if the features are supported by the underlying hardware. This could be due to constraints in the underlying system, browser, or adapter. For example: If you are hoping to take advantage of a specific additional feature in a WebGPU app, thorough testing is advised. -The WebGPU API See also on MDN IsFallbackAdapter The isFallbackAdapter read-only property of the GPUAdapter interface returns true if the adapter is a fallback adapter, and false if not. public bool IsFallbackAdapter { get; } Property Value bool A boolean. Remarks -The WebGPU API See also on MDN Limits The limits read-only property of the GPUAdapter interface returns a GPUSupportedLimits object that describes the limits supported by the adapter. public GPUSupportedLimits Limits { get; } Property Value GPUSupportedLimits A GPUSupportedLimits object instance. Remarks You should note that, rather than reporting the exact limits of each GPU, browsers will likely report different tier values of different limits to reduce the unique information available to drive-by fingerprinting. For example, the tiers of a certain limit might be 2048, 8192, and 32768. If your GPU&apos;s actual limit is 16384, the browser will still report 8192. Given that different browsers will handle this differently and the tier values may change over time, it is hard to provide an accurate account of what limit values to expect — thorough testing is advised. -The WebGPU API See also on MDN Methods RequestAdapterInfo() The requestAdapterInfo() method of the GPUAdapter interface returns a {{jsxref(\"Promise\")}} that fulfills with a GPUAdapterInfo object containing identifying information about an adapter. public Task<GPUAdapterInfo> RequestAdapterInfo() Returns Task<GPUAdapterInfo> A {{jsxref(\"Promise\")}} that fulfills with a GPUAdapterInfo object instance. Remarks The intention behind this method is to allow developers to request specific details about the user&apos;s GPU so that they can preemptively apply workarounds for GPU-specific bugs, or provide different codepaths to better suit different GPU architectures. Providing such information does present a security risk — it could be used for fingerprinting — therefore the information shared is to be kept at a minimum, and different browser vendors are likely to share different information types and granularities. NOTE Note: The specification includes an unmaskHints parameter for requestAdapterInfo(), which is intended to mitigate the security risk mentioned above. Once it is supported, developers will be able to specify the values they really need to know, and users will be given a permission prompt asking them if they are OK to share this information when the method is invoked. Browser vendors are likely to share more useful information if it is guarded by a permissions prompt, as it makes the method a less viable target for fingerprinting. -The WebGPU API See also on MDN RequestDevice(GPUDeviceDescriptor) The requestDevice() method of the GPUAdapter interface returns a {{jsxref(\"Promise\")}} that fulfills with a GPUDevice object, which is the primary interface for communicating with the GPU. public Task<GPUDevice> RequestDevice(GPUDeviceDescriptor descriptor) Parameters descriptor GPUDeviceDescriptor Returns Task<GPUDevice> A {{jsxref(\"Promise\")}} that fulfills with a GPUDevice object instance. Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUAdapterInfo.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUAdapterInfo.html",
    "title": "Class GPUAdapterInfo | CSharpToJavaScript",
    "keywords": "Class GPUAdapterInfo Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUAdapterInfo interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} contains identifying information about a GPUAdapter. [To(\"FirstCharToLowerCase\")] public class GPUAdapterInfo Inheritance object GPUAdapterInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUAdapterInfo object instance is requested using the RequestAdapterInfo() method. -The WebGPU API See also on MDN Properties Architecture The architecture read-only property of the GPUAdapterInfo interface returns the name of the family or class of GPUs the adapter belongs to, or an empty string if it is not available. public string Architecture { get; } Property Value string A string. Remarks -The WebGPU API See also on MDN Description The description read-only property of the GPUAdapterInfo interface returns a human-readable string describing the adapter, or an empty string if it is not available. public string Description { get; } Property Value string A string. Remarks -The WebGPU API See also on MDN Device The device read-only property of the GPUAdapterInfo interface returns a vendor-specific identifier for the adapter, or an empty string if it is not available. public string Device { get; } Property Value string A string. Remarks -The WebGPU API See also on MDN Vendor The vendor read-only property of the GPUAdapterInfo interface returns the name of the adapter vendor, or an empty string if it is not available. public string Vendor { get; } Property Value string A string. Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUAddressMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUAddressMode.html",
    "title": "Enum GPUAddressMode | CSharpToJavaScript",
    "keywords": "Enum GPUAddressMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUAddressMode Fields ClampToEdge = 0 MirrorRepeat = 2 Repeat = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUAutoLayoutMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUAutoLayoutMode.html",
    "title": "Enum GPUAutoLayoutMode | CSharpToJavaScript",
    "keywords": "Enum GPUAutoLayoutMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUAutoLayoutMode Fields Auto = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBindGroup.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBindGroup.html",
    "title": "Class GPUBindGroup | CSharpToJavaScript",
    "keywords": "Class GPUBindGroup Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUBindGroup interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} is based on a GPUBindGroupLayout and defines a set of resources to be bound together in a group and how those resources are used in shader stages. [To(\"FirstCharToLowerCase\")] public class GPUBindGroup Inheritance object GPUBindGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUBindGroup object instance is created using the CreateBindGroup(GPUBindGroupDescriptor) method. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBindGroupDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBindGroupDescriptor.html",
    "title": "Class GPUBindGroupDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUBindGroupDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUBindGroupDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUBindGroupDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Entries public required List<GPUBindGroupEntry> Entries Field Value List<GPUBindGroupEntry> Layout public required GPUBindGroupLayout Layout Field Value GPUBindGroupLayout"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBindGroupEntry.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBindGroupEntry.html",
    "title": "Class GPUBindGroupEntry | CSharpToJavaScript",
    "keywords": "Class GPUBindGroupEntry Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUBindGroupEntry Inheritance object GPUBindGroupEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Binding public required ulong Binding Field Value ulong Resource public required Union97 Resource Field Value Union97"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBindGroupLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBindGroupLayout.html",
    "title": "Class GPUBindGroupLayout | CSharpToJavaScript",
    "keywords": "Class GPUBindGroupLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUBindGroupLayout interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} defines the structure and purpose of related GPU resources such as buffers that will be used in a pipeline, and is used as a template when creating GPUBindGroups. [To(\"FirstCharToLowerCase\")] public class GPUBindGroupLayout Inheritance object GPUBindGroupLayout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUBindGroupLayout object instance is created using the CreateBindGroupLayout(GPUBindGroupLayoutDescriptor) method. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBindGroupLayoutDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBindGroupLayoutDescriptor.html",
    "title": "Class GPUBindGroupLayoutDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUBindGroupLayoutDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUBindGroupLayoutDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUBindGroupLayoutDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Entries public required List<GPUBindGroupLayoutEntry> Entries Field Value List<GPUBindGroupLayoutEntry>"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBindGroupLayoutEntry.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBindGroupLayoutEntry.html",
    "title": "Class GPUBindGroupLayoutEntry | CSharpToJavaScript",
    "keywords": "Class GPUBindGroupLayoutEntry Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUBindGroupLayoutEntry Inheritance object GPUBindGroupLayoutEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Binding public required ulong Binding Field Value ulong Buffer public GPUBufferBindingLayout Buffer Field Value GPUBufferBindingLayout ExternalTexture public GPUExternalTextureBindingLayout ExternalTexture Field Value GPUExternalTextureBindingLayout Sampler public GPUSamplerBindingLayout Sampler Field Value GPUSamplerBindingLayout StorageTexture public GPUStorageTextureBindingLayout StorageTexture Field Value GPUStorageTextureBindingLayout Texture public GPUTextureBindingLayout Texture Field Value GPUTextureBindingLayout Visibility public required ulong Visibility Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBindingCommandsMixin.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBindingCommandsMixin.html",
    "title": "Interface GPUBindingCommandsMixin | CSharpToJavaScript",
    "keywords": "Interface GPUBindingCommandsMixin Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface GPUBindingCommandsMixin Methods SetBindGroup(ulong, GPUBindGroup?, List<ulong>) GlobalObject.Undefined SetBindGroup(ulong index, GPUBindGroup? bindGroup, List<ulong> dynamicOffsets) Parameters index ulong bindGroup GPUBindGroup dynamicOffsets List<ulong> Returns GlobalObject.Undefined SetBindGroup(ulong, GPUBindGroup?, uint, ulong, ulong) GlobalObject.Undefined SetBindGroup(ulong index, GPUBindGroup? bindGroup, uint dynamicOffsetsData, ulong dynamicOffsetsDataStart, ulong dynamicOffsetsDataLength) Parameters index ulong bindGroup GPUBindGroup dynamicOffsetsData uint dynamicOffsetsDataStart ulong dynamicOffsetsDataLength ulong Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBlendComponent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBlendComponent.html",
    "title": "Class GPUBlendComponent | CSharpToJavaScript",
    "keywords": "Class GPUBlendComponent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUBlendComponent Inheritance object GPUBlendComponent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DstFactor public GPUBlendFactor DstFactor Field Value GPUBlendFactor Operation public GPUBlendOperation Operation Field Value GPUBlendOperation SrcFactor public GPUBlendFactor SrcFactor Field Value GPUBlendFactor"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBlendFactor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBlendFactor.html",
    "title": "Enum GPUBlendFactor | CSharpToJavaScript",
    "keywords": "Enum GPUBlendFactor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUBlendFactor Fields Constant = 11 Dst = 6 DstAlpha = 8 One = 1 OneMinusConstant = 12 OneMinusDst = 7 OneMinusDstAlpha = 9 OneMinusSrc = 3 OneMinusSrcAlpha = 5 Src = 2 SrcAlpha = 4 SrcAlphaSaturated = 10 Zero = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBlendOperation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBlendOperation.html",
    "title": "Enum GPUBlendOperation | CSharpToJavaScript",
    "keywords": "Enum GPUBlendOperation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUBlendOperation Fields Add = 0 Max = 4 Min = 3 ReverseSubtract = 2 Subtract = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBlendState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBlendState.html",
    "title": "Class GPUBlendState | CSharpToJavaScript",
    "keywords": "Class GPUBlendState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUBlendState Inheritance object GPUBlendState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alpha public required GPUBlendComponent Alpha Field Value GPUBlendComponent Color public required GPUBlendComponent Color Field Value GPUBlendComponent"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBuffer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBuffer.html",
    "title": "Class GPUBuffer | CSharpToJavaScript",
    "keywords": "Class GPUBuffer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUBuffer interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a block of memory that can be used to store raw data to use in GPU operations. [To(\"FirstCharToLowerCase\")] public class GPUBuffer Inheritance object GPUBuffer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUBuffer object instance is created using the CreateBuffer(GPUBufferDescriptor) method. -The WebGPU API See also on MDN Properties MapState The mapState read-only property of the GPUBuffer interface represents the mapped state of the GPUBuffer. public GPUBufferMapState MapState { get; } Property Value GPUBufferMapState An enumerated value. Possible values are: Remarks -The WebGPU API See also on MDN Size The size read-only property of the GPUBuffer interface represents the length of the GPUBuffer&apos;s memory allocation, in bytes. public ulong Size { get; } Property Value ulong A number. Remarks size is set via the size property in the descriptor object passed into the originating CreateBuffer(GPUBufferDescriptor) call. -The WebGPU API See also on MDN Usage The usage read-only property of the GPUBuffer interface contains the {{glossary(\"bitwise flags\")}} representing the allowed usages of the GPUBuffer. public ulong Usage { get; } Property Value ulong The bitwise flags representing the original usages set when the GPUBuffer was first created. The returned number is the sum of decimal values representing the different flags, as seen in the table below. Bitwise flag Usage description Hex equiv. Decimal equiv. GPUBufferUsage.COPY_SRC The buffer can be used as the source of a copy operation, for example the source argument of a CopyBufferToBuffer(GPUBuffer, ulong, GPUBuffer, ulong, ulong) call. 0x0004 4 GPUBufferUsage.COPY_DST The buffer can be used as the destination of a copy/write operation, for example the destination argument of a CopyTextureToBuffer(GPUImageCopyTexture, GPUImageCopyBuffer, Union105) call. 0x0008 8 GPUBufferUsage.INDEX The buffer can be used as an index buffer, for example as the buffer argument passed to GPURenderPassEncoder.SetIndexBuffer. 0x0010 16 GPUBufferUsage.INDIRECT The buffer can be used to store indirect command arguments, for example as the indirectBuffer argument of a GPURenderPassEncoder.DrawIndirect or DispatchWorkgroupsIndirect(GPUBuffer, ulong) call. 0x0100 256 GPUBufferUsage.MAP_READ The buffer can be mapped for reading, for example when calling MapAsync(ulong, ulong, ulong) with a mode of GPUMapMode.READ. This flag may only be combined with GPUBufferUsage.COPY_DST. 0x0001 1 GPUBufferUsage.MAP_WRITE The buffer can be mapped for writing, for example when calling MapAsync(ulong, ulong, ulong) with a mode of GPUMapMode.WRITE. This flag may only be combined with GPUBufferUsage.COPY_SRC. 0x0002 2 GPUBufferUsage.QUERY_RESOLVE The buffer can be used to capture query results, for example as the destination argument of a ResolveQuerySet(GPUQuerySet, ulong, ulong, GPUBuffer, ulong) call. 0x0200 512 GPUBufferUsage.STORAGE The buffer can be used as a storage buffer, for example as a resource in a bind group entry when creating a GPUBindGroup (via CreateBindGroup(GPUBindGroupDescriptor)), which adheres to a GPUBindGroupLayout entry with a buffer binding layout type of &quot;storage&quot; or &quot;read-only-storage&quot;. 0x0080 128 GPUBufferUsage.UNIFORM The buffer can be used as a uniform buffer, for example as a resource in a bind group entry when creating a GPUBindGroup (via CreateBindGroup(GPUBindGroupDescriptor)), which adheres to a GPUBindGroupLayout entry with a buffer binding layout type of &quot;uniform&quot;. 0x0040 64 GPUBufferUsage.VERTEX The buffer can be used as a vertex buffer, for example as the buffer argument passed to GPURenderPassEncoder.SetVertexBuffer. 0x0020 32 Remarks usage is set via the usage property in the descriptor object passed into the originating CreateBuffer(GPUBufferDescriptor) call. -The WebGPU API See also on MDN Methods Destroy() The destroy() method of the GPUBuffer interface destroys the GPUBuffer. public GlobalObject.Undefined Destroy() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN GetMappedRange(ulong, ulong) The getMappedRange() method of the GPUBuffer interface returns an {{jsxref(\"ArrayBuffer\")}} containing the mapped contents of the GPUBuffer in the specified range. public byte[] GetMappedRange(ulong offset, ulong size) Parameters offset ulong size ulong Returns byte[] An ArrayBuffer. Remarks This can only happen once the GPUBuffer has been successfully mapped with MapAsync(ulong, ulong, ulong) (this can be checked via MapState). While the GPUBuffer is mapped it cannot be used in any GPU commands. When you have finished working with the GPUBuffer values, call Unmap() to unmap it, making it accessible to the GPU again. -The WebGPU API See also on MDN MapAsync(ulong, ulong, ulong) The mapAsync() method of the GPUBuffer interface maps the specified range of the GPUBuffer. It returns a Promise that resolves when the GPUBuffer&apos;s content is ready to be accessed. While the GPUBuffer is mapped it cannot be used in any GPU commands. public Task<GlobalObject.Undefined> MapAsync(ulong mode, ulong offset, ulong size) Parameters mode ulong offset ulong size ulong Returns Task<GlobalObject.Undefined> A Promise that resolves to GlobalObject.Undefined when the GPUBuffer&apos;s content is ready to be accessed. Remarks Once the buffer is successfully mapped (which can be checked via MapState), calls to GetMappedRange(ulong, ulong) will return an {{jsxref(\"ArrayBuffer\")}} containing the GPUBuffer&apos;s current values, to be read and updated by JavaScript as required. When you have finished working with the GPUBuffer values, call Unmap() to unmap it, making it accessible to the GPU again. -The WebGPU API See also on MDN Unmap() The unmap() method of the GPUBuffer interface unmaps the mapped range of the GPUBuffer, making its contents available for use by the GPU again after it has previously been mapped with MapAsync(ulong, ulong, ulong) (the GPU cannot access a mapped GPUBuffer). public GlobalObject.Undefined Unmap() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks When unmap() is called, any {{jsxref(\"ArrayBuffer\")}}s created via GetMappedRange(ulong, ulong) are detached. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBufferBinding.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBufferBinding.html",
    "title": "Class GPUBufferBinding | CSharpToJavaScript",
    "keywords": "Class GPUBufferBinding Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUBufferBinding Inheritance object GPUBufferBinding Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Buffer public required GPUBuffer Buffer Field Value GPUBuffer Offset public ulong Offset Field Value ulong Size public ulong Size Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBufferBindingLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBufferBindingLayout.html",
    "title": "Class GPUBufferBindingLayout | CSharpToJavaScript",
    "keywords": "Class GPUBufferBindingLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUBufferBindingLayout Inheritance object GPUBufferBindingLayout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields HasDynamicOffset public bool HasDynamicOffset Field Value bool MinBindingSize public ulong MinBindingSize Field Value ulong Type public GPUBufferBindingType Type Field Value GPUBufferBindingType"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBufferBindingType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBufferBindingType.html",
    "title": "Enum GPUBufferBindingType | CSharpToJavaScript",
    "keywords": "Enum GPUBufferBindingType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUBufferBindingType Fields ReadOnlyStorage = 2 Storage = 1 Uniform = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBufferDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBufferDescriptor.html",
    "title": "Class GPUBufferDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUBufferDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUBufferDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUBufferDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MappedAtCreation public bool MappedAtCreation Field Value bool Size public required ulong Size Field Value ulong Usage public required ulong Usage Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBufferMapState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBufferMapState.html",
    "title": "Enum GPUBufferMapState | CSharpToJavaScript",
    "keywords": "Enum GPUBufferMapState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The mapState read-only property of the GPUBuffer interface represents the mapped state of the GPUBuffer. public enum GPUBufferMapState Fields Mapped = 2 Pending = 1 Unmapped = 0 Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUBufferUsage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUBufferUsage.html",
    "title": "Class GPUBufferUsage | CSharpToJavaScript",
    "keywords": "Class GPUBufferUsage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The usage read-only property of the GPUBuffer interface contains the {{glossary(\"bitwise flags\")}} representing the allowed usages of the GPUBuffer. [To(\"FirstCharToLowerCase\")] public class GPUBufferUsage Inheritance object GPUBufferUsage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks usage is set via the usage property in the descriptor object passed into the originating CreateBuffer(GPUBufferDescriptor) call. -The WebGPU API See also on MDN Fields COPY_DST public const ulong COPY_DST = 8 Field Value ulong COPY_SRC public const ulong COPY_SRC = 4 Field Value ulong INDEX public const ulong INDEX = 16 Field Value ulong INDIRECT public const ulong INDIRECT = 256 Field Value ulong MAP_READ public const ulong MAP_READ = 1 Field Value ulong MAP_WRITE public const ulong MAP_WRITE = 2 Field Value ulong QUERY_RESOLVE public const ulong QUERY_RESOLVE = 512 Field Value ulong STORAGE public const ulong STORAGE = 128 Field Value ulong UNIFORM public const ulong UNIFORM = 64 Field Value ulong VERTEX public const ulong VERTEX = 32 Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUCanvasAlphaMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUCanvasAlphaMode.html",
    "title": "Enum GPUCanvasAlphaMode | CSharpToJavaScript",
    "keywords": "Enum GPUCanvasAlphaMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUCanvasAlphaMode Fields Opaque = 0 Premultiplied = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUCanvasConfiguration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUCanvasConfiguration.html",
    "title": "Class GPUCanvasConfiguration | CSharpToJavaScript",
    "keywords": "Class GPUCanvasConfiguration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUCanvasConfiguration Inheritance object GPUCanvasConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AlphaMode public GPUCanvasAlphaMode AlphaMode Field Value GPUCanvasAlphaMode ColorSpace public PredefinedColorSpace ColorSpace Field Value PredefinedColorSpace Device public required GPUDevice Device Field Value GPUDevice Format public required GPUTextureFormat Format Field Value GPUTextureFormat Usage public ulong Usage Field Value ulong ViewFormats public List<GPUTextureFormat> ViewFormats Field Value List<GPUTextureFormat>"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUCanvasContext.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUCanvasContext.html",
    "title": "Class GPUCanvasContext | CSharpToJavaScript",
    "keywords": "Class GPUCanvasContext Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUCanvasContext interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents the WebGPU rendering context of a {{htmlelement(\"canvas\")}} element, returned via an GetContext(string, dynamic) call with a contextType of &quot;webgpu&quot;. [To(\"FirstCharToLowerCase\")] public class GPUCanvasContext Inheritance object GPUCanvasContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The WebGPU API See also on MDN Properties Canvas The canvas read-only property of the GPUCanvasContext interface returns a reference to the canvas that the context was created from. public Union101 Canvas { get; } Property Value Union101 An HTMLCanvasElement or OffscreenCanvas object instance. Remarks -The WebGPU API See also on MDN Methods Configure(GPUCanvasConfiguration) The configure() method of the GPUCanvasContext interface configures the context to use for rendering with a given GPUDevice. When called the canvas will initially be cleared to transparent black. public GlobalObject.Undefined Configure(GPUCanvasConfiguration configuration) Parameters configuration GPUCanvasConfiguration Returns GlobalObject.Undefined None (undefined). Remarks -The WebGPU API See also on MDN GetCurrentTexture() The getCurrentTexture() method of the GPUCanvasContext interface returns the next GPUTexture to be composited to the document by the canvas context. public GPUTexture GetCurrentTexture() Returns GPUTexture A GPUTexture object instance. Remarks -The WebGPU API See also on MDN Unconfigure() The unconfigure() method of the GPUCanvasContext interface removes any previously-set context configuration, and destroys any textures returned via GetCurrentTexture() while the canvas context was configured. public GlobalObject.Undefined Unconfigure() Returns GlobalObject.Undefined None (undefined). Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUColorDict.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUColorDict.html",
    "title": "Class GPUColorDict | CSharpToJavaScript",
    "keywords": "Class GPUColorDict Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUColorDict Inheritance object GPUColorDict Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields A public required Number A Field Value Number B public required Number B Field Value Number G public required Number G Field Value Number R public required Number R Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUColorTargetState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUColorTargetState.html",
    "title": "Class GPUColorTargetState | CSharpToJavaScript",
    "keywords": "Class GPUColorTargetState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUColorTargetState Inheritance object GPUColorTargetState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Blend public GPUBlendState Blend Field Value GPUBlendState Format public required GPUTextureFormat Format Field Value GPUTextureFormat WriteMask public ulong WriteMask Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUColorWrite.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUColorWrite.html",
    "title": "Class GPUColorWrite | CSharpToJavaScript",
    "keywords": "Class GPUColorWrite Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUColorWrite Inheritance object GPUColorWrite Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ALL public const ulong ALL = 15 Field Value ulong ALPHA public const ulong ALPHA = 8 Field Value ulong BLUE public const ulong BLUE = 4 Field Value ulong GREEN public const ulong GREEN = 2 Field Value ulong RED public const ulong RED = 1 Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUCommandBuffer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUCommandBuffer.html",
    "title": "Class GPUCommandBuffer | CSharpToJavaScript",
    "keywords": "Class GPUCommandBuffer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUCommandBuffer interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents a pre-recorded list of GPU commands that can be submitted to a GPUQueue for execution. [To(\"FirstCharToLowerCase\")] public class GPUCommandBuffer Inheritance object GPUCommandBuffer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUCommandBuffer is created via the Finish(GPUCommandBufferDescriptor) method; the GPU commands recorded within are submitted for execution by passing the GPUCommandBuffer into the parameter of a Submit(List<GPUCommandBuffer>) call. NOTE Note: Once a GPUCommandBuffer object has been submitted, it cannot be used again. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUCommandBufferDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUCommandBufferDescriptor.html",
    "title": "Class GPUCommandBufferDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUCommandBufferDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUCommandBufferDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUCommandBufferDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUCommandEncoder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUCommandEncoder.html",
    "title": "Class GPUCommandEncoder | CSharpToJavaScript",
    "keywords": "Class GPUCommandEncoder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUCommandEncoder interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a command encoder, used to encode commands to be issued to the GPU. [To(\"FirstCharToLowerCase\")] public class GPUCommandEncoder Inheritance object GPUCommandEncoder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUCommandEncoder object instance is created via the CreateCommandEncoder(GPUCommandEncoderDescriptor) property. -The WebGPU API See also on MDN Methods BeginComputePass(GPUComputePassDescriptor) The beginComputePass() method of the GPUCommandEncoder interface starts encoding a compute pass, returning a GPUComputePassEncoder that can be used to control computation. public GPUComputePassEncoder BeginComputePass(GPUComputePassDescriptor descriptor) Parameters descriptor GPUComputePassDescriptor Returns GPUComputePassEncoder A GPUComputePassEncoder object instance. Remarks -The WebGPU API See also on MDN BeginRenderPass(GPURenderPassDescriptor) The beginRenderPass() method of the GPUCommandEncoder interface starts encoding a render pass, returning a GPURenderPassEncoder that can be used to control rendering. public GPURenderPassEncoder BeginRenderPass(GPURenderPassDescriptor descriptor) Parameters descriptor GPURenderPassDescriptor Returns GPURenderPassEncoder A GPURenderPassEncoder object instance. Remarks -The WebGPU API See also on MDN ClearBuffer(GPUBuffer, ulong, ulong) The clearBuffer() method of the GPUCommandEncoder interface encodes a command that fills a region of a GPUBuffer with zeroes. public GlobalObject.Undefined ClearBuffer(GPUBuffer buffer, ulong offset, ulong size) Parameters buffer GPUBuffer offset ulong size ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN CopyBufferToBuffer(GPUBuffer, ulong, GPUBuffer, ulong, ulong) The copyBufferToBuffer() method of the GPUCommandEncoder interface encodes a command that copies data from one GPUBuffer to another. public GlobalObject.Undefined CopyBufferToBuffer(GPUBuffer source, ulong sourceOffset, GPUBuffer destination, ulong destinationOffset, ulong size) Parameters source GPUBuffer sourceOffset ulong destination GPUBuffer destinationOffset ulong size ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN CopyBufferToTexture(GPUImageCopyBuffer, GPUImageCopyTexture, Union105) The copyBufferToTexture() method of the GPUCommandEncoder interface encodes a command that copies data from a GPUBuffer to a GPUTexture. public GlobalObject.Undefined CopyBufferToTexture(GPUImageCopyBuffer source, GPUImageCopyTexture destination, Union105 copySize) Parameters source GPUImageCopyBuffer destination GPUImageCopyTexture copySize Union105 Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN CopyTextureToBuffer(GPUImageCopyTexture, GPUImageCopyBuffer, Union105) The copyTextureToBuffer() method of the GPUCommandEncoder interface encodes a command that copies data from a GPUTexture to a GPUBuffer. public GlobalObject.Undefined CopyTextureToBuffer(GPUImageCopyTexture source, GPUImageCopyBuffer destination, Union105 copySize) Parameters source GPUImageCopyTexture destination GPUImageCopyBuffer copySize Union105 Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN CopyTextureToTexture(GPUImageCopyTexture, GPUImageCopyTexture, Union105) The copyTextureToTexture() method of the GPUCommandEncoder interface encodes a command that copies data from one GPUTexture to another. public GlobalObject.Undefined CopyTextureToTexture(GPUImageCopyTexture source, GPUImageCopyTexture destination, Union105 copySize) Parameters source GPUImageCopyTexture destination GPUImageCopyTexture copySize Union105 Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN Finish(GPUCommandBufferDescriptor) The finish() method of the GPUCommandEncoder interface completes recording of the command sequence encoded on this GPUCommandEncoder, returning a corresponding GPUCommandBuffer. public GPUCommandBuffer Finish(GPUCommandBufferDescriptor descriptor) Parameters descriptor GPUCommandBufferDescriptor Returns GPUCommandBuffer A GPUCommandBuffer object instance. Remarks -The WebGPU API See also on MDN ResolveQuerySet(GPUQuerySet, ulong, ulong, GPUBuffer, ulong) The resolveQuerySet() method of the GPUCommandEncoder interface encodes a command that resolves a GPUQuerySet, copying the results into a specified GPUBuffer. public GlobalObject.Undefined ResolveQuerySet(GPUQuerySet querySet, ulong firstQuery, ulong queryCount, GPUBuffer destination, ulong destinationOffset) Parameters querySet GPUQuerySet firstQuery ulong queryCount ulong destination GPUBuffer destinationOffset ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN WriteTimestamp(GPUQuerySet, ulong) The writeTimestamp() method of the GPUCommandEncoder interface encodes a command that writes a timestamp into a GPUQuerySet once the previous commands recorded into the same queued GPUCommandBuffer have been executed by the GPU. public GlobalObject.Undefined WriteTimestamp(GPUQuerySet querySet, ulong queryIndex) Parameters querySet GPUQuerySet queryIndex ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: To use timestamp queries, the timestamp-query {{domxref(&quot;GPUSupportedFeatures&quot;, &quot;feature&quot;, &quot;&quot;, \"nocode\")}} must be enabled in the GPUDevice. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUCommandEncoderDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUCommandEncoderDescriptor.html",
    "title": "Class GPUCommandEncoderDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUCommandEncoderDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUCommandEncoderDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUCommandEncoderDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUCommandsMixin.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUCommandsMixin.html",
    "title": "Interface GPUCommandsMixin | CSharpToJavaScript",
    "keywords": "Interface GPUCommandsMixin Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface GPUCommandsMixin"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUCompareFunction.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUCompareFunction.html",
    "title": "Enum GPUCompareFunction | CSharpToJavaScript",
    "keywords": "Enum GPUCompareFunction Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUCompareFunction Fields Always = 7 Equal = 2 Greater = 4 GreaterEqual = 6 Less = 1 LessEqual = 3 Never = 0 NotEqual = 5"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUCompilationInfo.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUCompilationInfo.html",
    "title": "Class GPUCompilationInfo | CSharpToJavaScript",
    "keywords": "Class GPUCompilationInfo Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUCompilationInfo interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents an array of GPUCompilationMessage objects generated by the GPU shader module compiler to help diagnose problems with shader code. [To(\"FirstCharToLowerCase\")] public class GPUCompilationInfo Inheritance object GPUCompilationInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks GPUCompilationInfo is accessed via GetCompilationInfo(). -The WebGPU API See also on MDN Properties Messages The messages read-only property of the GPUCompilationInfo interface is an array of GPUCompilationMessage objects, each one containing the details of an individual shader compilation message. Messages can be informational, warnings, or errors. public GPUCompilationMessage[] Messages { get; } Property Value GPUCompilationMessage[] An array of GPUCompilationMessage objects. Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUCompilationMessage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUCompilationMessage.html",
    "title": "Class GPUCompilationMessage | CSharpToJavaScript",
    "keywords": "Class GPUCompilationMessage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUCompilationMessage interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a single informational, warning, or error message generated by the GPU shader module compiler. [To(\"FirstCharToLowerCase\")] public class GPUCompilationMessage Inheritance object GPUCompilationMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An array of GPUCompilationMessage objects is available in the messages property of the GPUCompilationInfo object accessed via GetCompilationInfo(). -The WebGPU API See also on MDN Properties Length The length read-only property of the GPUCompilationMessage interface is a number representing the length of the substring that the message corresponds to. public ulong Length { get; } Property Value ulong A number.To be precise, length is the number of UTF-16 code units in the shader code substring that the message corresponds to. If the message corresponds to a single point rather than a substring, length will be 0. Remarks -The WebGPU API See also on MDN LineNum The lineNum read-only property of the GPUCompilationMessage interface is a number representing the line number in the shader code that the message corresponds to. public ulong LineNum { get; } Property Value ulong A number.Note that: Remarks -The WebGPU API See also on MDN LinePos The linePos read-only property of the GPUCompilationMessage interface is a number representing the position in the code line that the message corresponds to. This could be an exact point, or the start of the relevant substring. public ulong LinePos { get; } Property Value ulong A number.To be precise, linePos is the number of UTF-16 code units from the beginning of the line to the exact point or start of the relevant substring that the message corresponds to.Note that: Remarks -The WebGPU API See also on MDN Message The message read-only property of the GPUCompilationMessage interface is a string representing human-readable message text. public string Message { get; } Property Value string A string. Remarks -The WebGPU API See also on MDN Offset The offset read-only property of the GPUCompilationMessage interface is a number representing the offset from the start of the shader code to the exact point, or the start of the relevant substring, that the message corresponds to. public ulong Offset { get; } Property Value ulong A number.To be precise, offset is the number of UTF-16 code units from the beginning of the shader code to the exact point or start of the relevant substring that the message corresponds to.If the message does not correspond to a specific code position (perhaps it refers to the whole of the shader code), offset will be 0. Remarks -The WebGPU API See also on MDN Type The type read-only property of the GPUCompilationMessage interface is an enumerated value representing the type of the message. Each type represents a different severity level. public GPUCompilationMessageType Type { get; } Property Value GPUCompilationMessageType A enumerated value. Possible values are: Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUCompilationMessageType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUCompilationMessageType.html",
    "title": "Enum GPUCompilationMessageType | CSharpToJavaScript",
    "keywords": "Enum GPUCompilationMessageType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The type read-only property of the GPUCompilationMessage interface is an enumerated value representing the type of the message. Each type represents a different severity level. public enum GPUCompilationMessageType Fields Error = 0 Info = 2 Warning = 1 Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUComputePassDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUComputePassDescriptor.html",
    "title": "Class GPUComputePassDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUComputePassDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUComputePassDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUComputePassDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TimestampWrites public GPUComputePassTimestampWrites TimestampWrites Field Value GPUComputePassTimestampWrites"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUComputePassEncoder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUComputePassEncoder.html",
    "title": "Class GPUComputePassEncoder | CSharpToJavaScript",
    "keywords": "Class GPUComputePassEncoder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUComputePassEncoder interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} encodes commands related to controlling the compute shader stage, as issued by a GPUComputePipeline. It forms part of the overall encoding activity of a GPUCommandEncoder. [To(\"FirstCharToLowerCase\")] public class GPUComputePassEncoder Inheritance object GPUComputePassEncoder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A compute pipeline contains a single compute stage in which a compute shader takes general data, processes it in parallel across a specified number of workgroups, then returns the result in one or more buffers. A GPUComputePassEncoder object instance is created via the BeginComputePass(GPUComputePassDescriptor) property. -The WebGPU API See also on MDN Methods DispatchWorkgroups(ulong, ulong, ulong) The dispatchWorkgroups() method of the GPUComputePassEncoder interface dispatches a specific grid of workgroups to perform the work being done by the current GPUComputePipeline (i.e. set via SetPipeline(GPUComputePipeline)). public GlobalObject.Undefined DispatchWorkgroups(ulong workgroupCountX, ulong workgroupCountY, ulong workgroupCountZ) Parameters workgroupCountX ulong workgroupCountY ulong workgroupCountZ ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN DispatchWorkgroupsIndirect(GPUBuffer, ulong) The dispatchWorkgroupsIndirect() method of the GPUComputePassEncoder interface dispatches a grid of workgroups, defined by the parameters of a GPUBuffer, to perform the work being done by the current GPUComputePipeline (i.e. set via SetPipeline(GPUComputePipeline)). public GlobalObject.Undefined DispatchWorkgroupsIndirect(GPUBuffer indirectBuffer, ulong indirectOffset) Parameters indirectBuffer GPUBuffer indirectOffset ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN End() The end() method of the GPUComputePassEncoder interface completes recording of the current compute pass command sequence. public GlobalObject.Undefined End() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN SetPipeline(GPUComputePipeline) The setPipeline() method of the GPUComputePassEncoder interface sets the GPUComputePipeline to use for this compute pass. public GlobalObject.Undefined SetPipeline(GPUComputePipeline pipeline) Parameters pipeline GPUComputePipeline Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUComputePassTimestampWrites.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUComputePassTimestampWrites.html",
    "title": "Class GPUComputePassTimestampWrites | CSharpToJavaScript",
    "keywords": "Class GPUComputePassTimestampWrites Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUComputePassTimestampWrites Inheritance object GPUComputePassTimestampWrites Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BeginningOfPassWriteIndex public ulong BeginningOfPassWriteIndex Field Value ulong EndOfPassWriteIndex public ulong EndOfPassWriteIndex Field Value ulong QuerySet public required GPUQuerySet QuerySet Field Value GPUQuerySet"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUComputePipeline.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUComputePipeline.html",
    "title": "Class GPUComputePipeline | CSharpToJavaScript",
    "keywords": "Class GPUComputePipeline Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUComputePipeline interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents a pipeline that controls the compute shader stage and can be used in a GPUComputePassEncoder. [To(\"FirstCharToLowerCase\")] public class GPUComputePipeline Inheritance object GPUComputePipeline Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUComputePipeline object instance can be created using the CreateComputePipeline(GPUComputePipelineDescriptor) or CreateComputePipelineAsync(GPUComputePipelineDescriptor) methods. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUComputePipelineDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUComputePipelineDescriptor.html",
    "title": "Class GPUComputePipelineDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUComputePipelineDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUComputePipelineDescriptor : GPUPipelineDescriptorBase Inheritance object GPUObjectDescriptorBase GPUPipelineDescriptorBase GPUComputePipelineDescriptor Inherited Members GPUPipelineDescriptorBase.Layout GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Compute public required GPUProgrammableStage Compute Field Value GPUProgrammableStage"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUCullMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUCullMode.html",
    "title": "Enum GPUCullMode | CSharpToJavaScript",
    "keywords": "Enum GPUCullMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUCullMode Fields Back = 2 Front = 1 None = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUDebugCommandsMixin.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUDebugCommandsMixin.html",
    "title": "Interface GPUDebugCommandsMixin | CSharpToJavaScript",
    "keywords": "Interface GPUDebugCommandsMixin Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface GPUDebugCommandsMixin Methods InsertDebugMarker(string) GlobalObject.Undefined InsertDebugMarker(string markerLabel) Parameters markerLabel string Returns GlobalObject.Undefined PopDebugGroup() GlobalObject.Undefined PopDebugGroup() Returns GlobalObject.Undefined PushDebugGroup(string) GlobalObject.Undefined PushDebugGroup(string groupLabel) Parameters groupLabel string Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUDepthStencilState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUDepthStencilState.html",
    "title": "Class GPUDepthStencilState | CSharpToJavaScript",
    "keywords": "Class GPUDepthStencilState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUDepthStencilState Inheritance object GPUDepthStencilState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DepthBias public long DepthBias Field Value long DepthBiasClamp public Number DepthBiasClamp Field Value Number DepthBiasSlopeScale public Number DepthBiasSlopeScale Field Value Number DepthCompare public GPUCompareFunction DepthCompare Field Value GPUCompareFunction DepthWriteEnabled public bool DepthWriteEnabled Field Value bool Format public required GPUTextureFormat Format Field Value GPUTextureFormat StencilBack public GPUStencilFaceState StencilBack Field Value GPUStencilFaceState StencilFront public GPUStencilFaceState StencilFront Field Value GPUStencilFaceState StencilReadMask public ulong StencilReadMask Field Value ulong StencilWriteMask public ulong StencilWriteMask Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUDevice.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUDevice.html",
    "title": "Class GPUDevice | CSharpToJavaScript",
    "keywords": "Class GPUDevice Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUDevice interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a logical GPU device. This is the main interface through which the majority of WebGPU functionality is accessed. [To(\"FirstCharToLowerCase\")] public class GPUDevice : EventTarget, GPUObjectBase Inheritance object EventTarget GPUDevice Implements GPUObjectBase Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUDevice object is requested using the RequestDevice(GPUDeviceDescriptor) method. -The WebGPU API See also on MDN Properties Features The features read-only property of the GPUDevice interface returns a GPUSupportedFeatures object that describes additional functionality supported by the device. Only features requested during the creation of the device (i.e. when RequestDevice(GPUDeviceDescriptor) is called) are included. public GPUSupportedFeatures Features { get; } Property Value GPUSupportedFeatures A GPUSupportedFeatures object instance. This is a setlike object. Remarks NOTE Note: Not all features will be available to WebGPU in all browsers that support it, even if the features are supported by the underlying hardware. See Features for more details. -The WebGPU API See also on MDN Limits The limits read-only property of the GPUDevice interface returns a GPUSupportedLimits object that describes the limits supported by the device. All limit values will be included, and the limits requested during the creation of the device (i.e. when RequestDevice(GPUDeviceDescriptor) is called) will be reflected in those values. public GPUSupportedLimits Limits { get; } Property Value GPUSupportedLimits A GPUSupportedLimits object instance. Remarks NOTE Note: Not all limits will be reported as expected, even if they are supported by the underlying hardware. See Limits for more details. -The WebGPU API See also on MDN Lost The lost read-only property of the GPUDevice interface contains a {{jsxref(\"Promise\")}} that remains pending throughout the device's lifetime and resolves with a GPUDeviceLostInfo object when the device is lost. public Task<GPUDeviceLostInfo> Lost { get; } Property Value Task<GPUDeviceLostInfo> A promise that resolves with a GPUDeviceLostInfo object when the device is lost. Remarks RequestDevice(GPUDeviceDescriptor) will never return null, and it will reject only if the request is invalid, i.e. it exceeds the capabilities of the GPUAdapter. If a valid device request can't be fulfilled for some reason however it may resolve to a device that has already been lost. Additionally, devices can be lost at any time after creation for a variety of reasons (such as browser resource management or driver updates), so it's a good idea to always handle lost devices gracefully. Many causes for lost devices are transient, so you should try getting a new device once a previous one has been lost unless the loss was caused by the application intentionally destroying the device (i.e. with Destroy()). Note that any WebGPU resources created with a previous device (buffers, textures, etc.) will need to be re-created with the new one. NOTE Note: Also bear in mind that a GPUAdapter may become unavailable, e.g. if the physical GPU is unplugged from the system or disabled to save power. From then on, the adapter can no longer return valid devices, and will always return already-lost devices. -The WebGPU API See also on MDN Onuncapturederror public EventHandlerNonNull Onuncapturederror { get; set; } Property Value EventHandlerNonNull Queue The queue read-only property of the GPUDevice interface returns the primary GPUQueue for the device. public GPUQueue Queue { get; } Property Value GPUQueue A GPUQueue object instance. Remarks -The WebGPU API See also on MDN Methods CreateBindGroup(GPUBindGroupDescriptor) The createBindGroup() method of the GPUDevice interface creates a GPUBindGroup based on a GPUBindGroupLayout that defines a set of resources to be bound together in a group and how those resources are used in shader stages. public GPUBindGroup CreateBindGroup(GPUBindGroupDescriptor descriptor) Parameters descriptor GPUBindGroupDescriptor Returns GPUBindGroup A GPUBindGroup object instance. Remarks -The WebGPU API See also on MDN CreateBindGroupLayout(GPUBindGroupLayoutDescriptor) The createBindGroupLayout() method of the GPUDevice interface creates a GPUBindGroupLayout that defines the structure and purpose of related GPU resources such as buffers that will be used in a pipeline, and is used as a template when creating GPUBindGroups. public GPUBindGroupLayout CreateBindGroupLayout(GPUBindGroupLayoutDescriptor descriptor) Parameters descriptor GPUBindGroupLayoutDescriptor Returns GPUBindGroupLayout A GPUBindGroupLayout object instance. Remarks -The WebGPU API See also on MDN CreateBuffer(GPUBufferDescriptor) The createBuffer() method of the GPUDevice interface creates a GPUBuffer in which to store raw data to use in GPU operations. public GPUBuffer CreateBuffer(GPUBufferDescriptor descriptor) Parameters descriptor GPUBufferDescriptor Returns GPUBuffer A GPUBuffer object instance. Remarks -The WebGPU API See also on MDN CreateCommandEncoder(GPUCommandEncoderDescriptor) The createCommandEncoder() method of the GPUDevice interface creates a GPUCommandEncoder, used to encode commands to be issued to the GPU. public GPUCommandEncoder CreateCommandEncoder(GPUCommandEncoderDescriptor descriptor) Parameters descriptor GPUCommandEncoderDescriptor Returns GPUCommandEncoder A GPUCommandEncoder object instance. Remarks -The WebGPU API See also on MDN CreateComputePipeline(GPUComputePipelineDescriptor) The createComputePipeline() method of the GPUDevice interface creates a GPUComputePipeline that can control the compute shader stage and be used in a GPUComputePassEncoder. public GPUComputePipeline CreateComputePipeline(GPUComputePipelineDescriptor descriptor) Parameters descriptor GPUComputePipelineDescriptor Returns GPUComputePipeline A GPUComputePipeline object instance. Remarks -The WebGPU API See also on MDN CreateComputePipelineAsync(GPUComputePipelineDescriptor) The createComputePipelineAsync() method of the GPUDevice interface returns a {{jsxref(\"Promise\")}} that fulfills with a GPUComputePipeline, which can control the compute shader stage and be used in a GPUComputePassEncoder, once the pipeline can be used without any stalling. public Task<GPUComputePipeline> CreateComputePipelineAsync(GPUComputePipelineDescriptor descriptor) Parameters descriptor GPUComputePipelineDescriptor Returns Task<GPUComputePipeline> A {{jsxref(\"Promise\")}} that fulfills with a GPUComputePipeline object instance when the created pipeline is ready to be used without additional delay. Remarks NOTE Note: It is generally preferable to use this method over CreateComputePipeline(GPUComputePipelineDescriptor) whenever possible, as it prevents blocking of GPU operation execution on pipeline compilation. -The WebGPU API See also on MDN CreatePipelineLayout(GPUPipelineLayoutDescriptor) The createPipelineLayout() method of the GPUDevice interface creates a GPUPipelineLayout that defines the GPUBindGroupLayouts used by a pipeline. GPUBindGroups used with the pipeline during command encoding must have compatible GPUBindGroupLayouts. public GPUPipelineLayout CreatePipelineLayout(GPUPipelineLayoutDescriptor descriptor) Parameters descriptor GPUPipelineLayoutDescriptor Returns GPUPipelineLayout A GPUPipelineLayout object instance. Remarks -The WebGPU API See also on MDN CreateQuerySet(GPUQuerySetDescriptor) The createQuerySet() method of the GPUDevice interface creates a GPUQuerySet that can be used to record the results of queries on passes, such as occlusion or timestamp queries. public GPUQuerySet CreateQuerySet(GPUQuerySetDescriptor descriptor) Parameters descriptor GPUQuerySetDescriptor Returns GPUQuerySet A GPUQuerySet object instance. Remarks -The WebGPU API See also on MDN CreateRenderBundleEncoder(GPURenderBundleEncoderDescriptor) The createRenderBundleEncoder() method of the GPUDevice interface creates a GPURenderBundleEncoder that can be used to pre-record bundles of commands. These can be reused in GPURenderPassEncoders via the ExecuteBundles(List<GPURenderBundle>) method, as many times as required. public GPURenderBundleEncoder CreateRenderBundleEncoder(GPURenderBundleEncoderDescriptor descriptor) Parameters descriptor GPURenderBundleEncoderDescriptor Returns GPURenderBundleEncoder A GPURenderBundleEncoder object instance. Remarks -The WebGPU API See also on MDN CreateRenderPipeline(GPURenderPipelineDescriptor) The createRenderPipeline() method of the GPUDevice interface creates a GPURenderPipeline that can control the vertex and fragment shader stages and be used in a GPURenderPassEncoder or GPURenderBundleEncoder. public GPURenderPipeline CreateRenderPipeline(GPURenderPipelineDescriptor descriptor) Parameters descriptor GPURenderPipelineDescriptor Returns GPURenderPipeline A GPURenderPipeline object instance. Remarks -The WebGPU API See also on MDN CreateRenderPipelineAsync(GPURenderPipelineDescriptor) The createRenderPipelineAsync() method of the GPUDevice interface returns a {{jsxref(\"Promise\")}} that fulfills with a GPURenderPipeline, which can control the vertex and fragment shader stages and be used in a GPURenderPassEncoder or GPURenderBundleEncoder, once the pipeline can be used without any stalling. public Task<GPURenderPipeline> CreateRenderPipelineAsync(GPURenderPipelineDescriptor descriptor) Parameters descriptor GPURenderPipelineDescriptor Returns Task<GPURenderPipeline> A {{jsxref(\"Promise\")}} that fulfills with a GPURenderPipeline object instance when the created pipeline is ready to be used without additional delay. Remarks NOTE Note: It is generally preferable to use this method over CreateRenderPipeline(GPURenderPipelineDescriptor) whenever possible, as it prevents blocking of GPU operation execution on pipeline compilation. -The WebGPU API See also on MDN CreateSampler(GPUSamplerDescriptor) The createSampler() method of the GPUDevice interface creates a GPUSampler, which controls how shaders transform and filter texture resource data. public GPUSampler CreateSampler(GPUSamplerDescriptor descriptor) Parameters descriptor GPUSamplerDescriptor Returns GPUSampler A GPUSampler object instance. Remarks -The WebGPU API See also on MDN CreateShaderModule(GPUShaderModuleDescriptor) The createShaderModule() method of the GPUDevice interface creates a GPUShaderModule from a string of WGSL source code. public GPUShaderModule CreateShaderModule(GPUShaderModuleDescriptor descriptor) Parameters descriptor GPUShaderModuleDescriptor Returns GPUShaderModule A GPUShaderModule object instance. Remarks -The WebGPU API -The WebGPU Shading Language specification See also on MDN CreateTexture(GPUTextureDescriptor) The createTexture() method of the GPUDevice interface creates a GPUTexture in which to store 1D, 2D, or 3D arrays of data, such as images, to use in GPU rendering operations. public GPUTexture CreateTexture(GPUTextureDescriptor descriptor) Parameters descriptor GPUTextureDescriptor Returns GPUTexture A GPUTexture object instance. Remarks -The WebGPU API See also on MDN Destroy() The destroy() method of the GPUDevice interface destroys the device, preventing further operations on it. public GlobalObject.Undefined Destroy() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Note that: -The WebGPU API See also on MDN ImportExternalTexture(GPUExternalTextureDescriptor) The importExternalTexture() method of the GPUDevice interface takes an HTMLVideoElement as an input and returns a GPUExternalTexture wrapper object containing a snapshot of the video that can be used as a frame in GPU rendering operations. public GPUExternalTexture ImportExternalTexture(GPUExternalTextureDescriptor descriptor) Parameters descriptor GPUExternalTextureDescriptor Returns GPUExternalTexture A GPUExternalTexture object instance. Remarks -The WebGPU API See also on MDN PopErrorScope() The popErrorScope() method of the GPUDevice interface pops an existing GPU error scope from the error scope stack (originally pushed using PushErrorScope(GPUErrorFilter)) and returns a {{jsxref(\"Promise\")}} that resolves to an object describing the first error captured in the scope, or null if no error occurred. public Task<GPUError?> PopErrorScope() Returns Task<GPUError> a Promise that resolves to an object describing the first error captured in the scope. This can be of type:If no error occurred, it resolves to null. Remarks -The WebGPU API See also on MDN PushErrorScope(GPUErrorFilter) The pushErrorScope() method of the GPUDevice interface pushes a new GPU error scope onto the device's error scope stack, allowing you to capture errors of a particular type. public GlobalObject.Undefined PushErrorScope(GPUErrorFilter filter) Parameters filter GPUErrorFilter Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Once you are done capturing errors, you can end capture by invoking PopErrorScope(). This pops the scope from the stack and returns a {{jsxref(\"Promise\")}} that resolves to an object describing the first error captured in the scope, or null if no errors were captured. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUDeviceDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUDeviceDescriptor.html",
    "title": "Class GPUDeviceDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUDeviceDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUDeviceDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUDeviceDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DefaultQueue public GPUQueueDescriptor DefaultQueue Field Value GPUQueueDescriptor RequiredFeatures public List<GPUFeatureName> RequiredFeatures Field Value List<GPUFeatureName> RequiredLimits public Dictionary<string, ulong> RequiredLimits Field Value Dictionary<string, ulong>"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUDeviceLostInfo.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUDeviceLostInfo.html",
    "title": "Class GPUDeviceLostInfo | CSharpToJavaScript",
    "keywords": "Class GPUDeviceLostInfo Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUDeviceLostInfo interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents the object returned when the Lost {{jsxref(\"Promise\")}} resolves. This provides information as to why a device has been lost. [To(\"FirstCharToLowerCase\")] public class GPUDeviceLostInfo Inheritance object GPUDeviceLostInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See the Lost page for more information about \"lost\" state. -The WebGPU API See also on MDN Properties Message The message read-only property of the GPUDeviceLostInfo interface provides a human-readable message that explains why the device was lost. public string Message { get; } Property Value string A string. Remarks -The WebGPU API See also on MDN Reason The reason read-only property of the GPUDeviceLostInfo interface defines the reason the device was lost in a machine-readable way. public GPUDeviceLostReason Reason { get; } Property Value GPUDeviceLostReason An enumerated value. At the moment the only value defined in the spec is &quot;destroyed&quot;, which indicates that the device was destroyed by a call to Destroy().If the device was lost because of an unknown reason not covered in the available enumerated values, reason returns undefined. Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUDeviceLostReason.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUDeviceLostReason.html",
    "title": "Enum GPUDeviceLostReason | CSharpToJavaScript",
    "keywords": "Enum GPUDeviceLostReason Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUDeviceLostReason Fields Destroyed = 1 Unknown = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUError.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUError.html",
    "title": "Class GPUError | CSharpToJavaScript",
    "keywords": "Class GPUError Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUError interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} is the base interface for errors surfaced by PopErrorScope() and the GPUDevice.Uncapturederror_event event. [To(\"FirstCharToLowerCase\")] public class GPUError Inheritance object GPUError Derived GPUInternalError GPUOutOfMemoryError GPUValidationError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The WebGPU API -WebGPU Error Handling best practices See also on MDN Properties Message The message read-only property of the GPUError interface provides a human-readable message that explains why the error ocurred. public string Message { get; } Property Value string A string. Remarks -The WebGPU API -WebGPU Error Handling best practices See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUErrorFilter.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUErrorFilter.html",
    "title": "Enum GPUErrorFilter | CSharpToJavaScript",
    "keywords": "Enum GPUErrorFilter Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUErrorFilter Fields Internal = 2 OutOfMemory = 1 Validation = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUExtent3DDict.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUExtent3DDict.html",
    "title": "Class GPUExtent3DDict | CSharpToJavaScript",
    "keywords": "Class GPUExtent3DDict Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUExtent3DDict Inheritance object GPUExtent3DDict Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DepthOrArrayLayers public ulong DepthOrArrayLayers Field Value ulong Height public ulong Height Field Value ulong Width public required ulong Width Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUExternalTexture.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUExternalTexture.html",
    "title": "Class GPUExternalTexture | CSharpToJavaScript",
    "keywords": "Class GPUExternalTexture Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUExternalTexture interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents a wrapper object containing an HTMLVideoElement snapshot that can be used as a texture in GPU rendering operations. [To(\"FirstCharToLowerCase\")] public class GPUExternalTexture Inheritance object GPUExternalTexture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUExternalTexture object instance is created using ImportExternalTexture(GPUExternalTextureDescriptor). -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUExternalTextureBindingLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUExternalTextureBindingLayout.html",
    "title": "Class GPUExternalTextureBindingLayout | CSharpToJavaScript",
    "keywords": "Class GPUExternalTextureBindingLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUExternalTextureBindingLayout Inheritance object GPUExternalTextureBindingLayout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUExternalTextureDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUExternalTextureDescriptor.html",
    "title": "Class GPUExternalTextureDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUExternalTextureDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUExternalTextureDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUExternalTextureDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ColorSpace public PredefinedColorSpace ColorSpace Field Value PredefinedColorSpace Source public required Union96 Source Field Value Union96"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUFeatureName.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUFeatureName.html",
    "title": "Enum GPUFeatureName | CSharpToJavaScript",
    "keywords": "Enum GPUFeatureName Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUFeatureName Fields Bgra8unormStorage = 9 Depth32floatStencil8 = 1 DepthClipControl = 0 Float32Filterable = 10 IndirectFirstInstance = 6 Rg11b10ufloatRenderable = 8 ShaderF16 = 7 TextureCompressionAstc = 4 TextureCompressionBc = 2 TextureCompressionEtc2 = 3 TimestampQuery = 5"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUFilterMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUFilterMode.html",
    "title": "Enum GPUFilterMode | CSharpToJavaScript",
    "keywords": "Enum GPUFilterMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUFilterMode Fields Linear = 1 Nearest = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUFragmentState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUFragmentState.html",
    "title": "Class GPUFragmentState | CSharpToJavaScript",
    "keywords": "Class GPUFragmentState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUFragmentState : GPUProgrammableStage Inheritance object GPUProgrammableStage GPUFragmentState Inherited Members GPUProgrammableStage.Module GPUProgrammableStage.EntryPoint GPUProgrammableStage.Constants object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Targets public required List<GPUColorTargetState?> Targets Field Value List<GPUColorTargetState>"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUFrontFace.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUFrontFace.html",
    "title": "Enum GPUFrontFace | CSharpToJavaScript",
    "keywords": "Enum GPUFrontFace Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUFrontFace Fields Ccw = 0 Cw = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUImageCopyBuffer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUImageCopyBuffer.html",
    "title": "Class GPUImageCopyBuffer | CSharpToJavaScript",
    "keywords": "Class GPUImageCopyBuffer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUImageCopyBuffer : GPUImageDataLayout Inheritance object GPUImageDataLayout GPUImageCopyBuffer Inherited Members GPUImageDataLayout.Offset GPUImageDataLayout.BytesPerRow GPUImageDataLayout.RowsPerImage object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Buffer public required GPUBuffer Buffer Field Value GPUBuffer"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUImageCopyExternalImage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUImageCopyExternalImage.html",
    "title": "Class GPUImageCopyExternalImage | CSharpToJavaScript",
    "keywords": "Class GPUImageCopyExternalImage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUImageCopyExternalImage Inheritance object GPUImageCopyExternalImage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FlipY public bool FlipY Field Value bool Origin public Union103 Origin Field Value Union103 Source public required Union100 Source Field Value Union100"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUImageCopyTexture.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUImageCopyTexture.html",
    "title": "Class GPUImageCopyTexture | CSharpToJavaScript",
    "keywords": "Class GPUImageCopyTexture Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUImageCopyTexture Inheritance object GPUImageCopyTexture Derived GPUImageCopyTextureTagged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Aspect public GPUTextureAspect Aspect Field Value GPUTextureAspect MipLevel public ulong MipLevel Field Value ulong Origin public Union104 Origin Field Value Union104 Texture public required GPUTexture Texture Field Value GPUTexture"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUImageCopyTextureTagged.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUImageCopyTextureTagged.html",
    "title": "Class GPUImageCopyTextureTagged | CSharpToJavaScript",
    "keywords": "Class GPUImageCopyTextureTagged Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUImageCopyTextureTagged : GPUImageCopyTexture Inheritance object GPUImageCopyTexture GPUImageCopyTextureTagged Inherited Members GPUImageCopyTexture.Texture GPUImageCopyTexture.MipLevel GPUImageCopyTexture.Origin GPUImageCopyTexture.Aspect object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ColorSpace public PredefinedColorSpace ColorSpace Field Value PredefinedColorSpace PremultipliedAlpha public bool PremultipliedAlpha Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUImageDataLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUImageDataLayout.html",
    "title": "Class GPUImageDataLayout | CSharpToJavaScript",
    "keywords": "Class GPUImageDataLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUImageDataLayout Inheritance object GPUImageDataLayout Derived GPUImageCopyBuffer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BytesPerRow public ulong BytesPerRow Field Value ulong Offset public ulong Offset Field Value ulong RowsPerImage public ulong RowsPerImage Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUIndexFormat.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUIndexFormat.html",
    "title": "Enum GPUIndexFormat | CSharpToJavaScript",
    "keywords": "Enum GPUIndexFormat Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUIndexFormat Fields Uint16 = 0 Uint32 = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUInternalError.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUInternalError.html",
    "title": "Class GPUInternalError | CSharpToJavaScript",
    "keywords": "Class GPUInternalError Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUInternalError interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} describes an application error indicating that an operation did not pass the WebGPU API&apos;s validation constraints. [To(\"FirstCharToLowerCase\")] public class GPUInternalError : GPUError Inheritance object GPUError GPUInternalError Inherited Members GPUError.Message object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It represents one of the types of errors surfaced by PopErrorScope() and the GPUDevice.Uncapturederror_event event. Internal errors occur when something happens in the WebGPU implementation that wasn&apos;t caught by validation and wasn&apos;t clearly identifiable as an out-of-memory error. It generally means that an operation your code performed hit a system limit in a way that was difficult to express with WebGPU&apos;s supported limits. The same operation might succeed on a different device. These can only be raised by pipeline creation, usually if the shader is too complex for the device. -The WebGPU API -WebGPU Error Handling best practices See also on MDN Constructors GPUInternalError() public GPUInternalError() GPUInternalError(string) The GPUInternalError() constructor creates a new GPUInternalError object instance. public GPUInternalError(string message) Parameters message string Remarks -The WebGPU API -WebGPU Error Handling best practices See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPULoadOp.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPULoadOp.html",
    "title": "Enum GPULoadOp | CSharpToJavaScript",
    "keywords": "Enum GPULoadOp Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPULoadOp Fields Clear = 1 Load = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUMapMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUMapMode.html",
    "title": "Class GPUMapMode | CSharpToJavaScript",
    "keywords": "Class GPUMapMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUMapMode Inheritance object GPUMapMode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields READ public const ulong READ = 1 Field Value ulong WRITE public const ulong WRITE = 2 Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUMipmapFilterMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUMipmapFilterMode.html",
    "title": "Enum GPUMipmapFilterMode | CSharpToJavaScript",
    "keywords": "Enum GPUMipmapFilterMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUMipmapFilterMode Fields Linear = 1 Nearest = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUMultisampleState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUMultisampleState.html",
    "title": "Class GPUMultisampleState | CSharpToJavaScript",
    "keywords": "Class GPUMultisampleState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUMultisampleState Inheritance object GPUMultisampleState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AlphaToCoverageEnabled public bool AlphaToCoverageEnabled Field Value bool Count public ulong Count Field Value ulong Mask public ulong Mask Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUObjectBase.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUObjectBase.html",
    "title": "Interface GPUObjectBase | CSharpToJavaScript",
    "keywords": "Interface GPUObjectBase Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface GPUObjectBase Properties Label string Label { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUObjectDescriptorBase.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUObjectDescriptorBase.html",
    "title": "Class GPUObjectDescriptorBase | CSharpToJavaScript",
    "keywords": "Class GPUObjectDescriptorBase Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase Derived GPUBindGroupDescriptor GPUBindGroupLayoutDescriptor GPUBufferDescriptor GPUCommandBufferDescriptor GPUCommandEncoderDescriptor GPUComputePassDescriptor GPUDeviceDescriptor GPUExternalTextureDescriptor GPUPipelineDescriptorBase GPUPipelineLayoutDescriptor GPUQuerySetDescriptor GPUQueueDescriptor GPURenderBundleDescriptor GPURenderPassDescriptor GPURenderPassLayout GPUSamplerDescriptor GPUShaderModuleDescriptor GPUTextureDescriptor GPUTextureViewDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Label public string Label Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUOrigin2DDict.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUOrigin2DDict.html",
    "title": "Class GPUOrigin2DDict | CSharpToJavaScript",
    "keywords": "Class GPUOrigin2DDict Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUOrigin2DDict Inheritance object GPUOrigin2DDict Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields X public ulong X Field Value ulong Y public ulong Y Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUOrigin3DDict.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUOrigin3DDict.html",
    "title": "Class GPUOrigin3DDict | CSharpToJavaScript",
    "keywords": "Class GPUOrigin3DDict Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUOrigin3DDict Inheritance object GPUOrigin3DDict Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields X public ulong X Field Value ulong Y public ulong Y Field Value ulong Z public ulong Z Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUOutOfMemoryError.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUOutOfMemoryError.html",
    "title": "Class GPUOutOfMemoryError | CSharpToJavaScript",
    "keywords": "Class GPUOutOfMemoryError Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUOutOfMemoryError interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} describes an out-of-memory (oom) error indicating that there was not enough free memory to complete the requested operation. [To(\"FirstCharToLowerCase\")] public class GPUOutOfMemoryError : GPUError Inheritance object GPUError GPUOutOfMemoryError Inherited Members GPUError.Message object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It represents one of the types of errors surfaced by PopErrorScope() and the GPUDevice.Uncapturederror_event event. Out-of-memory errors should be relatively rare in a well-behaved app but are less predictable than GPUValidationErrors. This is because they are dependent on the device your app is running on as well as other apps that are using GPU resources at the time. -The WebGPU API -WebGPU Error Handling best practices See also on MDN Constructors GPUOutOfMemoryError() public GPUOutOfMemoryError() GPUOutOfMemoryError(string) The GPUOutOfMemoryError() constructor creates a new GPUOutOfMemoryError object instance. public GPUOutOfMemoryError(string message) Parameters message string Remarks -The WebGPU API -WebGPU Error Handling best practices See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUPipelineBase.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUPipelineBase.html",
    "title": "Interface GPUPipelineBase | CSharpToJavaScript",
    "keywords": "Interface GPUPipelineBase Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface GPUPipelineBase Methods GetBindGroupLayout(ulong) GPUBindGroupLayout GetBindGroupLayout(ulong index) Parameters index ulong Returns GPUBindGroupLayout"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUPipelineDescriptorBase.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUPipelineDescriptorBase.html",
    "title": "Class GPUPipelineDescriptorBase | CSharpToJavaScript",
    "keywords": "Class GPUPipelineDescriptorBase Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUPipelineDescriptorBase : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUPipelineDescriptorBase Derived GPUComputePipelineDescriptor GPURenderPipelineDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Layout public required Union99 Layout Field Value Union99"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUPipelineError.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUPipelineError.html",
    "title": "Class GPUPipelineError | CSharpToJavaScript",
    "keywords": "Class GPUPipelineError Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUPipelineError interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} describes a pipeline failure. This is the value received when a {{jsxref(\"Promise\")}} returned by a CreateComputePipelineAsync(GPUComputePipelineDescriptor) or CreateRenderPipelineAsync(GPURenderPipelineDescriptor) call rejects. [To(\"FirstCharToLowerCase\")] public class GPUPipelineError : DOMException Inheritance object DOMException GPUPipelineError Inherited Members DOMException.Name DOMException.Message DOMException.Code DOMException.INDEX_SIZE_ERR DOMException.DOMSTRING_SIZE_ERR DOMException.HIERARCHY_REQUEST_ERR DOMException.WRONG_DOCUMENT_ERR DOMException.INVALID_CHARACTER_ERR DOMException.NO_DATA_ALLOWED_ERR DOMException.NO_MODIFICATION_ALLOWED_ERR DOMException.NOT_FOUND_ERR DOMException.NOT_SUPPORTED_ERR DOMException.INUSE_ATTRIBUTE_ERR DOMException.INVALID_STATE_ERR DOMException.SYNTAX_ERR DOMException.INVALID_MODIFICATION_ERR DOMException.NAMESPACE_ERR DOMException.INVALID_ACCESS_ERR DOMException.VALIDATION_ERR DOMException.TYPE_MISMATCH_ERR DOMException.SECURITY_ERR DOMException.NETWORK_ERR DOMException.ABORT_ERR DOMException.URL_MISMATCH_ERR DOMException.QUOTA_EXCEEDED_ERR DOMException.TIMEOUT_ERR DOMException.INVALID_NODE_TYPE_ERR DOMException.DATA_CLONE_ERR object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The WebGPU API -WebGPU Error Handling best practices See also on MDN Constructors GPUPipelineError() public GPUPipelineError() GPUPipelineError(string, GPUPipelineErrorInit) The GPUPipelineError() constructor creates a new GPUPipelineError object instance. public GPUPipelineError(string message, GPUPipelineErrorInit options) Parameters message string options GPUPipelineErrorInit Remarks -The WebGPU API -WebGPU Error Handling best practices See also on MDN Properties Reason The reason read-only property of the GPUPipelineError interface defines the reason the pipeline creation failed in a machine-readable way. public GPUPipelineErrorReason Reason { get; } Property Value GPUPipelineErrorReason An enumerated value that can be one of: Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUPipelineErrorInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUPipelineErrorInit.html",
    "title": "Class GPUPipelineErrorInit | CSharpToJavaScript",
    "keywords": "Class GPUPipelineErrorInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUPipelineErrorInit Inheritance object GPUPipelineErrorInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Reason public required GPUPipelineErrorReason Reason Field Value GPUPipelineErrorReason"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUPipelineErrorReason.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUPipelineErrorReason.html",
    "title": "Enum GPUPipelineErrorReason | CSharpToJavaScript",
    "keywords": "Enum GPUPipelineErrorReason Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The reason read-only property of the GPUPipelineError interface defines the reason the pipeline creation failed in a machine-readable way. public enum GPUPipelineErrorReason Fields Internal = 1 Validation = 0 Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUPipelineLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUPipelineLayout.html",
    "title": "Class GPUPipelineLayout | CSharpToJavaScript",
    "keywords": "Class GPUPipelineLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUPipelineLayout interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} defines the GPUBindGroupLayouts used by a pipeline. GPUBindGroups used with the pipeline during command encoding must have compatible GPUBindGroupLayouts. [To(\"FirstCharToLowerCase\")] public class GPUPipelineLayout Inheritance object GPUPipelineLayout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUPipelineLayout object instance is created using the CreatePipelineLayout(GPUPipelineLayoutDescriptor) method. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUPipelineLayoutDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUPipelineLayoutDescriptor.html",
    "title": "Class GPUPipelineLayoutDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUPipelineLayoutDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUPipelineLayoutDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUPipelineLayoutDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BindGroupLayouts public required List<GPUBindGroupLayout> BindGroupLayouts Field Value List<GPUBindGroupLayout>"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUPowerPreference.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUPowerPreference.html",
    "title": "Enum GPUPowerPreference | CSharpToJavaScript",
    "keywords": "Enum GPUPowerPreference Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUPowerPreference Fields HighPerformance = 1 LowPower = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUPrimitiveState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUPrimitiveState.html",
    "title": "Class GPUPrimitiveState | CSharpToJavaScript",
    "keywords": "Class GPUPrimitiveState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUPrimitiveState Inheritance object GPUPrimitiveState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CullMode public GPUCullMode CullMode Field Value GPUCullMode FrontFace public GPUFrontFace FrontFace Field Value GPUFrontFace StripIndexFormat public GPUIndexFormat StripIndexFormat Field Value GPUIndexFormat Topology public GPUPrimitiveTopology Topology Field Value GPUPrimitiveTopology UnclippedDepth public bool UnclippedDepth Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUPrimitiveTopology.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUPrimitiveTopology.html",
    "title": "Enum GPUPrimitiveTopology | CSharpToJavaScript",
    "keywords": "Enum GPUPrimitiveTopology Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUPrimitiveTopology Fields LineList = 1 LineStrip = 2 PointList = 0 TriangleList = 3 TriangleStrip = 4"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUProgrammableStage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUProgrammableStage.html",
    "title": "Class GPUProgrammableStage | CSharpToJavaScript",
    "keywords": "Class GPUProgrammableStage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUProgrammableStage Inheritance object GPUProgrammableStage Derived GPUFragmentState GPUVertexState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Constants public Dictionary<string, Number> Constants Field Value Dictionary<string, Number> EntryPoint public required string EntryPoint Field Value string Module public required GPUShaderModule Module Field Value GPUShaderModule"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUQuerySet.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUQuerySet.html",
    "title": "Class GPUQuerySet | CSharpToJavaScript",
    "keywords": "Class GPUQuerySet Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUQuerySet interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} is used to record the results of queries on passes, such as occlusion or timestamp queries. [To(\"FirstCharToLowerCase\")] public class GPUQuerySet Inheritance object GPUQuerySet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: To use timestamp queries, the timestamp-query {{domxref(&quot;GPUSupportedFeatures&quot;, &quot;feature&quot;, &quot;&quot;, \"nocode\")}} must be enabled in the GPUDevice. A GPUQuerySet object instance is created using the CreateQuerySet(GPUQuerySetDescriptor) method. -The WebGPU API See also on MDN Properties Count The count read-only property of the GPUQuerySet interface is a number specifying the number of queries managed by the GPUQuerySet. public ulong Count { get; } Property Value ulong A number. Remarks -The WebGPU API See also on MDN Type The type read-only property of the GPUQuerySet interface is an enumerated value specifying the type of queries managed by the GPUQuerySet. public GPUQueryType Type { get; } Property Value GPUQueryType An enumerated value. Possible values are: Remarks -The WebGPU API See also on MDN Methods Destroy() The destroy() method of the GPUQuerySet interface destroys the GPUQuerySet. public GlobalObject.Undefined Destroy() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUQuerySetDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUQuerySetDescriptor.html",
    "title": "Class GPUQuerySetDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUQuerySetDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUQuerySetDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUQuerySetDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Count public required ulong Count Field Value ulong Type public required GPUQueryType Type Field Value GPUQueryType"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUQueryType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUQueryType.html",
    "title": "Enum GPUQueryType | CSharpToJavaScript",
    "keywords": "Enum GPUQueryType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUQueryType Fields Occlusion = 0 Timestamp = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUQueue.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUQueue.html",
    "title": "Class GPUQueue | CSharpToJavaScript",
    "keywords": "Class GPUQueue Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUQueue interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} controls execution of encoded commands on the GPU. [To(\"FirstCharToLowerCase\")] public class GPUQueue Inheritance object GPUQueue Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A device's primary queue is accessed via the Queue property. -The WebGPU API See also on MDN Methods CopyExternalImageToTexture(GPUImageCopyExternalImage, GPUImageCopyTextureTagged, Union105) The copyExternalImageToTexture() method of the GPUQueue interface copies a snapshot taken from a source image, video, or canvas into a given GPUTexture. public GlobalObject.Undefined CopyExternalImageToTexture(GPUImageCopyExternalImage source, GPUImageCopyTextureTagged destination, Union105 copySize) Parameters source GPUImageCopyExternalImage destination GPUImageCopyTextureTagged copySize Union105 Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Using this function allows the user agent to determine the most efficient way to copy the data over for each source type. -The WebGPU API See also on MDN OnSubmittedWorkDone() The onSubmittedWorkDone() method of the GPUQueue interface returns a {{jsxref(\"Promise\")}} that resolves when all the work submitted to the GPU via this GPUQueue at the point the method is called has been processed. public Task<GlobalObject.Undefined> OnSubmittedWorkDone() Returns Task<GlobalObject.Undefined> A Promise that resolves with GlobalObject.Undefined. Remarks This includes the completion of any MapAsync(ulong, ulong, ulong) calls made on GPUBuffers used in commands submitted to the queue, before onSubmittedWorkDone() is called. Note: In most cases, you do not need to call onSubmittedWorkDown(). You do not need to call it for mapping a buffer. mapAsync guarantees work submitted to the queue before calling mapAsync happens before the mapAsync returns (see WebGPU spec: section 5.2) The two use cases for onSubmittedWorkDone -The WebGPU API See also on MDN Submit(List<GPUCommandBuffer>) The submit() method of the GPUQueue interface schedules the execution of command buffers represented by one or more GPUCommandBuffer objects by the GPU. public GlobalObject.Undefined Submit(List<GPUCommandBuffer> commandBuffers) Parameters commandBuffers List<GPUCommandBuffer> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN WriteBuffer(GPUBuffer, ulong, Union68, ulong, ulong) The writeBuffer() method of the GPUQueue interface writes a provided data source into a given GPUBuffer. public GlobalObject.Undefined WriteBuffer(GPUBuffer buffer, ulong bufferOffset, Union68 data, ulong dataOffset, ulong size) Parameters buffer GPUBuffer bufferOffset ulong data Union68 dataOffset ulong size ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This is a convenience function, which provides an alternative to setting buffer data via buffer mapping and buffer-to-buffer copies. It lets the user agent determine the most efficient way to copy the data over. -The WebGPU API See also on MDN WriteTexture(GPUImageCopyTexture, Union68, GPUImageDataLayout, Union105) The writeTexture() method of the GPUQueue interface writes a provided data source into a given GPUTexture. public GlobalObject.Undefined WriteTexture(GPUImageCopyTexture destination, Union68 data, GPUImageDataLayout dataLayout, Union105 size) Parameters destination GPUImageCopyTexture data Union68 dataLayout GPUImageDataLayout size Union105 Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This is a convenience function, which provides an alternative to setting texture data via buffer mapping and buffer-to-texture copies. It lets the user agent determine the most efficient way to copy the data over. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUQueueDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUQueueDescriptor.html",
    "title": "Class GPUQueueDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUQueueDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUQueueDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUQueueDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GPURenderBundle.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPURenderBundle.html",
    "title": "Class GPURenderBundle | CSharpToJavaScript",
    "keywords": "Class GPURenderBundle Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPURenderBundle interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a container for pre-recorded bundles of commands. [To(\"FirstCharToLowerCase\")] public class GPURenderBundle Inheritance object GPURenderBundle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The command bundles are encoded using a GPURenderBundleEncoder; once the desired commands have been encoded, they are recorded into a GPURenderBundle object instance using the Finish(GPURenderBundleDescriptor) method. These command bundles can then be reused across multiple render passes by passing the GPURenderBundle objects into ExecuteBundles(List<GPURenderBundle>) calls. Reusing pre-recoded commands can significantly improve app performance in situations where JavaScript draw call overhead is a bottleneck. Render bundles are most effective in situations where a batch of objects will be drawn the same way across multiple views or frames, with the only differences being the buffer content being used (such as updated matrix uniforms). A good example is VR rendering. Recording the rendering as a render bundle and then tweaking the view matrix and replaying it for each eye is a more efficient way to issue draw calls for both renderings of the scene. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPURenderBundleDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPURenderBundleDescriptor.html",
    "title": "Class GPURenderBundleDescriptor | CSharpToJavaScript",
    "keywords": "Class GPURenderBundleDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPURenderBundleDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPURenderBundleDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GPURenderBundleEncoder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPURenderBundleEncoder.html",
    "title": "Class GPURenderBundleEncoder | CSharpToJavaScript",
    "keywords": "Class GPURenderBundleEncoder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPURenderBundleEncoder interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} is used to pre-record bundles of commands. [To(\"FirstCharToLowerCase\")] public class GPURenderBundleEncoder Inheritance object GPURenderBundleEncoder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The command bundles are encoded by calling the methods of GPURenderBundleEncoder; once the desired commands have been encoded, they are recorded into a GPURenderBundle object instance using the Finish(GPURenderBundleDescriptor) method. These render bundles can then be reused across multiple render passes by passing the GPURenderBundle objects into ExecuteBundles(List<GPURenderBundle>) calls. In effect, this is like a partial render pass — GPURenderBundleEncoders have all the same functionality available as GPURenderPassEncoders, except that they can't begin and end occlusion queries, and can't set the scissor rect, viewport, blend constant, and stencil reference. The GPURenderBundle will inherit all these values from the GPURenderPassEncoder that executes it. NOTE Note: Currently set vertex buffers, index buffers, bind groups, and pipeline are all cleared prior to executing a render bundle, and once the render bundle has finished executing. Reusing pre-recoded commands can significantly improve app performance in situations where JavaScript draw call overhead is a bottleneck. Render bundles are most effective in situations where a batch of objects will be drawn the same way across multiple views or frames, with the only differences being the buffer content being used (such as updated matrix uniforms). A good example is VR rendering. Recording the rendering as a render bundle and then tweaking the view matrix and replaying it for each eye is a more efficient way to issue draw calls for both renderings of the scene. A GPURenderBundleEncoder object instance is created via the CreateRenderBundleEncoder(GPURenderBundleEncoderDescriptor) property. NOTE Note: The methods of GPURenderBundleEncoder are functionally identical to their equivalents available on GPURenderPassEncoder, except for Finish(GPURenderBundleDescriptor), which is similar in purpose to Finish(GPUCommandBufferDescriptor). -The WebGPU API See also on MDN Methods Finish(GPURenderBundleDescriptor) The finish() method of the GPURenderBundleEncoder interface completes recording of the current render bundle command sequence, returning a GPURenderBundle object that can be passed into a ExecuteBundles(List<GPURenderBundle>) call to execute those commands in a specific render pass. public GPURenderBundle Finish(GPURenderBundleDescriptor descriptor) Parameters descriptor GPURenderBundleDescriptor Returns GPURenderBundle A GPURenderBundle object instance. Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPURenderBundleEncoderDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPURenderBundleEncoderDescriptor.html",
    "title": "Class GPURenderBundleEncoderDescriptor | CSharpToJavaScript",
    "keywords": "Class GPURenderBundleEncoderDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPURenderBundleEncoderDescriptor : GPURenderPassLayout Inheritance object GPUObjectDescriptorBase GPURenderPassLayout GPURenderBundleEncoderDescriptor Inherited Members GPURenderPassLayout.ColorFormats GPURenderPassLayout.DepthStencilFormat GPURenderPassLayout.SampleCount GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DepthReadOnly public bool DepthReadOnly Field Value bool StencilReadOnly public bool StencilReadOnly Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.GPURenderCommandsMixin.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPURenderCommandsMixin.html",
    "title": "Interface GPURenderCommandsMixin | CSharpToJavaScript",
    "keywords": "Interface GPURenderCommandsMixin Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface GPURenderCommandsMixin Methods Draw(ulong, ulong, ulong, ulong) GlobalObject.Undefined Draw(ulong vertexCount, ulong instanceCount, ulong firstVertex, ulong firstInstance) Parameters vertexCount ulong instanceCount ulong firstVertex ulong firstInstance ulong Returns GlobalObject.Undefined DrawIndexed(ulong, ulong, ulong, long, ulong) GlobalObject.Undefined DrawIndexed(ulong indexCount, ulong instanceCount, ulong firstIndex, long baseVertex, ulong firstInstance) Parameters indexCount ulong instanceCount ulong firstIndex ulong baseVertex long firstInstance ulong Returns GlobalObject.Undefined DrawIndexedIndirect(GPUBuffer, ulong) GlobalObject.Undefined DrawIndexedIndirect(GPUBuffer indirectBuffer, ulong indirectOffset) Parameters indirectBuffer GPUBuffer indirectOffset ulong Returns GlobalObject.Undefined DrawIndirect(GPUBuffer, ulong) GlobalObject.Undefined DrawIndirect(GPUBuffer indirectBuffer, ulong indirectOffset) Parameters indirectBuffer GPUBuffer indirectOffset ulong Returns GlobalObject.Undefined SetIndexBuffer(GPUBuffer, GPUIndexFormat, ulong, ulong) GlobalObject.Undefined SetIndexBuffer(GPUBuffer buffer, GPUIndexFormat indexFormat, ulong offset, ulong size) Parameters buffer GPUBuffer indexFormat GPUIndexFormat offset ulong size ulong Returns GlobalObject.Undefined SetPipeline(GPURenderPipeline) GlobalObject.Undefined SetPipeline(GPURenderPipeline pipeline) Parameters pipeline GPURenderPipeline Returns GlobalObject.Undefined SetVertexBuffer(ulong, GPUBuffer?, ulong, ulong) GlobalObject.Undefined SetVertexBuffer(ulong slot, GPUBuffer? buffer, ulong offset, ulong size) Parameters slot ulong buffer GPUBuffer offset ulong size ulong Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.GPURenderPassColorAttachment.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPURenderPassColorAttachment.html",
    "title": "Class GPURenderPassColorAttachment | CSharpToJavaScript",
    "keywords": "Class GPURenderPassColorAttachment Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPURenderPassColorAttachment Inheritance object GPURenderPassColorAttachment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ClearValue public Union102 ClearValue Field Value Union102 DepthSlice public ulong DepthSlice Field Value ulong LoadOp public required GPULoadOp LoadOp Field Value GPULoadOp ResolveTarget public GPUTextureView ResolveTarget Field Value GPUTextureView StoreOp public required GPUStoreOp StoreOp Field Value GPUStoreOp View public required GPUTextureView View Field Value GPUTextureView"
  },
  "api/CSharpToJavaScript.APIs.JS.GPURenderPassDepthStencilAttachment.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPURenderPassDepthStencilAttachment.html",
    "title": "Class GPURenderPassDepthStencilAttachment | CSharpToJavaScript",
    "keywords": "Class GPURenderPassDepthStencilAttachment Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPURenderPassDepthStencilAttachment Inheritance object GPURenderPassDepthStencilAttachment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DepthClearValue public Number DepthClearValue Field Value Number DepthLoadOp public GPULoadOp DepthLoadOp Field Value GPULoadOp DepthReadOnly public bool DepthReadOnly Field Value bool DepthStoreOp public GPUStoreOp DepthStoreOp Field Value GPUStoreOp StencilClearValue public ulong StencilClearValue Field Value ulong StencilLoadOp public GPULoadOp StencilLoadOp Field Value GPULoadOp StencilReadOnly public bool StencilReadOnly Field Value bool StencilStoreOp public GPUStoreOp StencilStoreOp Field Value GPUStoreOp View public required GPUTextureView View Field Value GPUTextureView"
  },
  "api/CSharpToJavaScript.APIs.JS.GPURenderPassDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPURenderPassDescriptor.html",
    "title": "Class GPURenderPassDescriptor | CSharpToJavaScript",
    "keywords": "Class GPURenderPassDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPURenderPassDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPURenderPassDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ColorAttachments public required List<GPURenderPassColorAttachment?> ColorAttachments Field Value List<GPURenderPassColorAttachment> DepthStencilAttachment public GPURenderPassDepthStencilAttachment DepthStencilAttachment Field Value GPURenderPassDepthStencilAttachment MaxDrawCount public ulong MaxDrawCount Field Value ulong OcclusionQuerySet public GPUQuerySet OcclusionQuerySet Field Value GPUQuerySet TimestampWrites public GPURenderPassTimestampWrites TimestampWrites Field Value GPURenderPassTimestampWrites"
  },
  "api/CSharpToJavaScript.APIs.JS.GPURenderPassEncoder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPURenderPassEncoder.html",
    "title": "Class GPURenderPassEncoder | CSharpToJavaScript",
    "keywords": "Class GPURenderPassEncoder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPURenderPassEncoder interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} encodes commands related to controlling the vertex and fragment shader stages, as issued by a GPURenderPipeline. It forms part of the overall encoding activity of a GPUCommandEncoder. [To(\"FirstCharToLowerCase\")] public class GPURenderPassEncoder Inheritance object GPURenderPassEncoder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A render pipeline renders graphics to GPUTexture attachments, typically intended for display in a {{htmlelement(\"canvas\")}} element, but it could also render to textures used for other purposes that never appear onscreen. It has two main stages: A GPURenderPassEncoder object instance is created via the BeginRenderPass(GPURenderPassDescriptor) property. -The WebGPU API See also on MDN Methods BeginOcclusionQuery(ulong) The beginOcclusionQuery() method of the GPURenderPassEncoder interface begins an occlusion query at the specified index of the relevant GPUQuerySet (provided as the value of the occlusionQuerySet descriptor property when invoking BeginRenderPass(GPURenderPassDescriptor) to run the render pass). public GlobalObject.Undefined BeginOcclusionQuery(ulong queryIndex) Parameters queryIndex ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN End() The end() method of the GPURenderPassEncoder interface completes recording of the current render pass command sequence. public GlobalObject.Undefined End() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN EndOcclusionQuery() The endOcclusionQuery() method of the GPURenderPassEncoder interface ends an active occlusion query previously started with BeginOcclusionQuery(ulong). public GlobalObject.Undefined EndOcclusionQuery() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN ExecuteBundles(List<GPURenderBundle>) The executeBundles() method of the GPURenderPassEncoder interface executes commands previously recorded into the referenced GPURenderBundles, as part of this render pass. public GlobalObject.Undefined ExecuteBundles(List<GPURenderBundle> bundles) Parameters bundles List<GPURenderBundle> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: After calling executeBundles() the currently set vertex buffers, index buffers, bind groups, and pipeline are all cleared, even if no bundles are actually executed. -The WebGPU API See also on MDN SetBlendConstant(Union102) The setBlendConstant() method of the GPURenderPassEncoder interface sets the constant blend color and alpha values used with &quot;constant&quot; and &quot;one-minus-constant&quot; blend factors (as set in the descriptor of the CreateRenderPipeline(GPURenderPipelineDescriptor) method, in the blend property). public GlobalObject.Undefined SetBlendConstant(Union102 color) Parameters color Union102 Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN SetScissorRect(ulong, ulong, ulong, ulong) The setScissorRect() method of the GPURenderPassEncoder interface sets the scissor rectangle used during the rasterization stage. After transformation into viewport coordinates any fragments that fall outside the scissor rectangle will be discarded. public GlobalObject.Undefined SetScissorRect(ulong x, ulong y, ulong width, ulong height) Parameters x ulong y ulong width ulong height ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN SetStencilReference(ulong) The setStencilReference() method of the GPURenderPassEncoder interface sets the stencil reference value using during stencil tests with the &quot;replace&quot; stencil operation (as set in the descriptor of the CreateRenderPipeline(GPURenderPipelineDescriptor) method, in the properties defining the various stencil operations). public GlobalObject.Undefined SetStencilReference(ulong reference) Parameters reference ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN SetViewport(Number, Number, Number, Number, Number, Number) The setViewport() method of the GPURenderPassEncoder interface sets the viewport used during the rasterization stage to linearly map from normalized device coordinates to viewport coordinates. public GlobalObject.Undefined SetViewport(Number x, Number y, Number width, Number height, Number minDepth, Number maxDepth) Parameters x Number y Number width Number height Number minDepth Number maxDepth Number Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPURenderPassLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPURenderPassLayout.html",
    "title": "Class GPURenderPassLayout | CSharpToJavaScript",
    "keywords": "Class GPURenderPassLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPURenderPassLayout : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPURenderPassLayout Derived GPURenderBundleEncoderDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ColorFormats public required List<GPUTextureFormat?> ColorFormats Field Value List<GPUTextureFormat?> DepthStencilFormat public GPUTextureFormat DepthStencilFormat Field Value GPUTextureFormat SampleCount public ulong SampleCount Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPURenderPassTimestampWrites.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPURenderPassTimestampWrites.html",
    "title": "Class GPURenderPassTimestampWrites | CSharpToJavaScript",
    "keywords": "Class GPURenderPassTimestampWrites Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPURenderPassTimestampWrites Inheritance object GPURenderPassTimestampWrites Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BeginningOfPassWriteIndex public ulong BeginningOfPassWriteIndex Field Value ulong EndOfPassWriteIndex public ulong EndOfPassWriteIndex Field Value ulong QuerySet public required GPUQuerySet QuerySet Field Value GPUQuerySet"
  },
  "api/CSharpToJavaScript.APIs.JS.GPURenderPipeline.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPURenderPipeline.html",
    "title": "Class GPURenderPipeline | CSharpToJavaScript",
    "keywords": "Class GPURenderPipeline Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPURenderPipeline interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents a pipeline that controls the vertex and fragment shader stages and can be used in a GPURenderPassEncoder or GPURenderBundleEncoder. [To(\"FirstCharToLowerCase\")] public class GPURenderPipeline Inheritance object GPURenderPipeline Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPURenderPipeline object instance can be created using the CreateRenderPipeline(GPURenderPipelineDescriptor) or CreateRenderPipelineAsync(GPURenderPipelineDescriptor) methods. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPURenderPipelineDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPURenderPipelineDescriptor.html",
    "title": "Class GPURenderPipelineDescriptor | CSharpToJavaScript",
    "keywords": "Class GPURenderPipelineDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPURenderPipelineDescriptor : GPUPipelineDescriptorBase Inheritance object GPUObjectDescriptorBase GPUPipelineDescriptorBase GPURenderPipelineDescriptor Inherited Members GPUPipelineDescriptorBase.Layout GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DepthStencil public GPUDepthStencilState DepthStencil Field Value GPUDepthStencilState Fragment public GPUFragmentState Fragment Field Value GPUFragmentState Multisample public GPUMultisampleState Multisample Field Value GPUMultisampleState Primitive public GPUPrimitiveState Primitive Field Value GPUPrimitiveState Vertex public required GPUVertexState Vertex Field Value GPUVertexState"
  },
  "api/CSharpToJavaScript.APIs.JS.GPURequestAdapterOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPURequestAdapterOptions.html",
    "title": "Class GPURequestAdapterOptions | CSharpToJavaScript",
    "keywords": "Class GPURequestAdapterOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPURequestAdapterOptions Inheritance object GPURequestAdapterOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ForceFallbackAdapter public bool ForceFallbackAdapter Field Value bool PowerPreference public GPUPowerPreference PowerPreference Field Value GPUPowerPreference"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUSampler.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUSampler.html",
    "title": "Class GPUSampler | CSharpToJavaScript",
    "keywords": "Class GPUSampler Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUSampler interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents an object that can control how shaders transform and filter texture resource data. [To(\"FirstCharToLowerCase\")] public class GPUSampler Inheritance object GPUSampler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUSampler object instance is created using the CreateSampler(GPUSamplerDescriptor) method. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUSamplerBindingLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUSamplerBindingLayout.html",
    "title": "Class GPUSamplerBindingLayout | CSharpToJavaScript",
    "keywords": "Class GPUSamplerBindingLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUSamplerBindingLayout Inheritance object GPUSamplerBindingLayout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Type public GPUSamplerBindingType Type Field Value GPUSamplerBindingType"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUSamplerBindingType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUSamplerBindingType.html",
    "title": "Enum GPUSamplerBindingType | CSharpToJavaScript",
    "keywords": "Enum GPUSamplerBindingType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUSamplerBindingType Fields Comparison = 2 Filtering = 0 NonFiltering = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUSamplerDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUSamplerDescriptor.html",
    "title": "Class GPUSamplerDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUSamplerDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUSamplerDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUSamplerDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AddressModeU public GPUAddressMode AddressModeU Field Value GPUAddressMode AddressModeV public GPUAddressMode AddressModeV Field Value GPUAddressMode AddressModeW public GPUAddressMode AddressModeW Field Value GPUAddressMode Compare public GPUCompareFunction Compare Field Value GPUCompareFunction LodMaxClamp public Number LodMaxClamp Field Value Number LodMinClamp public Number LodMinClamp Field Value Number MagFilter public GPUFilterMode MagFilter Field Value GPUFilterMode MaxAnisotropy public ushort MaxAnisotropy Field Value ushort MinFilter public GPUFilterMode MinFilter Field Value GPUFilterMode MipmapFilter public GPUMipmapFilterMode MipmapFilter Field Value GPUMipmapFilterMode"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUShaderModule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUShaderModule.html",
    "title": "Class GPUShaderModule | CSharpToJavaScript",
    "keywords": "Class GPUShaderModule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUShaderModule interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents an internal shader module object, a container for WGSL shader code that can be submitted to the GPU for execution by a pipeline. [To(\"FirstCharToLowerCase\")] public class GPUShaderModule Inheritance object GPUShaderModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUShaderModule object instance is created using CreateShaderModule(GPUShaderModuleDescriptor). -The WebGPU API See also on MDN Methods GetCompilationInfo() The getCompilationInfo() method of the GPUShaderModule interface returns a {{jsxref(\"Promise\")}} that fulfills with a GPUCompilationInfo object containing messages generated during the GPUShaderModule&apos;s compilation. public Task<GPUCompilationInfo> GetCompilationInfo() Returns Task<GPUCompilationInfo> A {{jsxref(\"Promise\")}} that fulfills with a GPUCompilationInfo object.GPUCompilationInfo contains a messages property, which is an array of GPUCompilationMessage objects, each one containing the details of an individual compilation message. Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUShaderModuleCompilationHint.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUShaderModuleCompilationHint.html",
    "title": "Class GPUShaderModuleCompilationHint | CSharpToJavaScript",
    "keywords": "Class GPUShaderModuleCompilationHint Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUShaderModuleCompilationHint Inheritance object GPUShaderModuleCompilationHint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields EntryPoint public required string EntryPoint Field Value string Layout public Union98 Layout Field Value Union98"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUShaderModuleDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUShaderModuleDescriptor.html",
    "title": "Class GPUShaderModuleDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUShaderModuleDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUShaderModuleDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUShaderModuleDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Code public required string Code Field Value string CompilationHints public List<GPUShaderModuleCompilationHint> CompilationHints Field Value List<GPUShaderModuleCompilationHint> SourceMap public object SourceMap Field Value object"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUShaderStage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUShaderStage.html",
    "title": "Class GPUShaderStage | CSharpToJavaScript",
    "keywords": "Class GPUShaderStage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUShaderStage Inheritance object GPUShaderStage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields COMPUTE public const ulong COMPUTE = 4 Field Value ulong FRAGMENT public const ulong FRAGMENT = 2 Field Value ulong VERTEX public const ulong VERTEX = 1 Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUStencilFaceState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUStencilFaceState.html",
    "title": "Class GPUStencilFaceState | CSharpToJavaScript",
    "keywords": "Class GPUStencilFaceState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUStencilFaceState Inheritance object GPUStencilFaceState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Compare public GPUCompareFunction Compare Field Value GPUCompareFunction DepthFailOp public GPUStencilOperation DepthFailOp Field Value GPUStencilOperation FailOp public GPUStencilOperation FailOp Field Value GPUStencilOperation PassOp public GPUStencilOperation PassOp Field Value GPUStencilOperation"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUStencilOperation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUStencilOperation.html",
    "title": "Enum GPUStencilOperation | CSharpToJavaScript",
    "keywords": "Enum GPUStencilOperation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUStencilOperation Fields DecrementClamp = 5 DecrementWrap = 7 IncrementClamp = 4 IncrementWrap = 6 Invert = 3 Keep = 0 Replace = 2 Zero = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUStorageTextureAccess.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUStorageTextureAccess.html",
    "title": "Enum GPUStorageTextureAccess | CSharpToJavaScript",
    "keywords": "Enum GPUStorageTextureAccess Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUStorageTextureAccess Fields ReadOnly = 1 ReadWrite = 2 WriteOnly = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUStorageTextureBindingLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUStorageTextureBindingLayout.html",
    "title": "Class GPUStorageTextureBindingLayout | CSharpToJavaScript",
    "keywords": "Class GPUStorageTextureBindingLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUStorageTextureBindingLayout Inheritance object GPUStorageTextureBindingLayout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Access public GPUStorageTextureAccess Access Field Value GPUStorageTextureAccess Format public required GPUTextureFormat Format Field Value GPUTextureFormat ViewDimension public GPUTextureViewDimension ViewDimension Field Value GPUTextureViewDimension"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUStoreOp.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUStoreOp.html",
    "title": "Enum GPUStoreOp | CSharpToJavaScript",
    "keywords": "Enum GPUStoreOp Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUStoreOp Fields Discard = 1 Store = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUSupportedFeatures.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUSupportedFeatures.html",
    "title": "Class GPUSupportedFeatures | CSharpToJavaScript",
    "keywords": "Class GPUSupportedFeatures Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUSupportedFeatures interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} is a Set-like object that describes additional functionality supported by a GPUAdapter. [To(\"FirstCharToLowerCase\")] public class GPUSupportedFeatures Inheritance object GPUSupportedFeatures Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The GPUSupportedFeatures object for the current adapter is accessed via the Features property. You should note that not all features will be available to WebGPU in all browsers that support it, even if the features are supported by the underlying hardware. This could be due to constraints in the underlying system, browser, or adapter. For example: If you are hoping to take advantage of a specific additional feature in a WebGPU app, thorough testing is advised. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUSupportedLimits.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUSupportedLimits.html",
    "title": "Class GPUSupportedLimits | CSharpToJavaScript",
    "keywords": "Class GPUSupportedLimits Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUSupportedLimits interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} describes the limits supported by a GPUAdapter. [To(\"FirstCharToLowerCase\")] public class GPUSupportedLimits Inheritance object GPUSupportedLimits Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The GPUSupportedLimits object for the current adapter is accessed via the Limits property. You should note that, rather than reporting the exact limits of each GPU, browsers will likely report different tier values of different limits to reduce the unique information available to drive-by fingerprinting. For example, the tiers of a certain limit might be 2048, 8192, and 32768. If your GPU&apos;s actual limit is 16384, the browser will still report 8192. Given that different browsers will handle this differently and the tier values may change over time, it is hard to provide an accurate account of what limit values to expect — thorough testing is advised. -The WebGPU API See also on MDN Properties MaxBindGroups public ulong MaxBindGroups { get; } Property Value ulong MaxBindGroupsPlusVertexBuffers public ulong MaxBindGroupsPlusVertexBuffers { get; } Property Value ulong MaxBindingsPerBindGroup public ulong MaxBindingsPerBindGroup { get; } Property Value ulong MaxBufferSize public ulong MaxBufferSize { get; } Property Value ulong MaxColorAttachmentBytesPerSample public ulong MaxColorAttachmentBytesPerSample { get; } Property Value ulong MaxColorAttachments public ulong MaxColorAttachments { get; } Property Value ulong MaxComputeInvocationsPerWorkgroup public ulong MaxComputeInvocationsPerWorkgroup { get; } Property Value ulong MaxComputeWorkgroupSizeX public ulong MaxComputeWorkgroupSizeX { get; } Property Value ulong MaxComputeWorkgroupSizeY public ulong MaxComputeWorkgroupSizeY { get; } Property Value ulong MaxComputeWorkgroupSizeZ public ulong MaxComputeWorkgroupSizeZ { get; } Property Value ulong MaxComputeWorkgroupStorageSize public ulong MaxComputeWorkgroupStorageSize { get; } Property Value ulong MaxComputeWorkgroupsPerDimension public ulong MaxComputeWorkgroupsPerDimension { get; } Property Value ulong MaxDynamicStorageBuffersPerPipelineLayout public ulong MaxDynamicStorageBuffersPerPipelineLayout { get; } Property Value ulong MaxDynamicUniformBuffersPerPipelineLayout public ulong MaxDynamicUniformBuffersPerPipelineLayout { get; } Property Value ulong MaxInterStageShaderComponents public ulong MaxInterStageShaderComponents { get; } Property Value ulong MaxInterStageShaderVariables public ulong MaxInterStageShaderVariables { get; } Property Value ulong MaxSampledTexturesPerShaderStage public ulong MaxSampledTexturesPerShaderStage { get; } Property Value ulong MaxSamplersPerShaderStage public ulong MaxSamplersPerShaderStage { get; } Property Value ulong MaxStorageBufferBindingSize public ulong MaxStorageBufferBindingSize { get; } Property Value ulong MaxStorageBuffersPerShaderStage public ulong MaxStorageBuffersPerShaderStage { get; } Property Value ulong MaxStorageTexturesPerShaderStage public ulong MaxStorageTexturesPerShaderStage { get; } Property Value ulong MaxTextureArrayLayers public ulong MaxTextureArrayLayers { get; } Property Value ulong MaxTextureDimension1D public ulong MaxTextureDimension1D { get; } Property Value ulong MaxTextureDimension2D public ulong MaxTextureDimension2D { get; } Property Value ulong MaxTextureDimension3D public ulong MaxTextureDimension3D { get; } Property Value ulong MaxUniformBufferBindingSize public ulong MaxUniformBufferBindingSize { get; } Property Value ulong MaxUniformBuffersPerShaderStage public ulong MaxUniformBuffersPerShaderStage { get; } Property Value ulong MaxVertexAttributes public ulong MaxVertexAttributes { get; } Property Value ulong MaxVertexBufferArrayStride public ulong MaxVertexBufferArrayStride { get; } Property Value ulong MaxVertexBuffers public ulong MaxVertexBuffers { get; } Property Value ulong MinStorageBufferOffsetAlignment public ulong MinStorageBufferOffsetAlignment { get; } Property Value ulong MinUniformBufferOffsetAlignment public ulong MinUniformBufferOffsetAlignment { get; } Property Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUTexture.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUTexture.html",
    "title": "Class GPUTexture | CSharpToJavaScript",
    "keywords": "Class GPUTexture Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUTexture interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a container used to store 1D, 2D, or 3D arrays of data, such as images, to use in GPU rendering operations. [To(\"FirstCharToLowerCase\")] public class GPUTexture Inheritance object GPUTexture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUTexture object instance is created using the CreateTexture(GPUTextureDescriptor) method. -The WebGPU API See also on MDN Properties DepthOrArrayLayers The depthOrArrayLayers read-only property of the GPUTexture interface represents the depth or layer count of the GPUTexture. public ulong DepthOrArrayLayers { get; } Property Value ulong A number. This represents:In cases where the GPUTexture does not have a depth or layers, the value is 1. Remarks This is set based on the size property in the descriptor object passed into the originating CreateTexture(GPUTextureDescriptor) call. -The WebGPU API See also on MDN Dimension The dimension read-only property of the GPUTexture interface represents the dimension of the set of texels for each GPUTexture subresource. public GPUTextureDimension Dimension { get; } Property Value GPUTextureDimension An enumerated value. Possible values are: Remarks This is set via the dimension property in the descriptor object passed into the originating CreateTexture(GPUTextureDescriptor) call, which defaults to &quot;2d&quot; if omitted. -The WebGPU API See also on MDN Format The format read-only property of the GPUTexture interface represents the format of the GPUTexture. public GPUTextureFormat Format { get; } Property Value GPUTextureFormat An enumerated value. See the Texture formats section of the specification for all the possible values. Remarks This is set via the format property in the descriptor object passed into the originating CreateTexture(GPUTextureDescriptor) call. -The WebGPU API See also on MDN Height The height read-only property of the GPUTexture interface represents the height of the GPUTexture. public ulong Height { get; } Property Value ulong A number. Remarks This is set based on the value of the size property in the descriptor object passed into the originating CreateTexture(GPUTextureDescriptor) call. -The WebGPU API See also on MDN MipLevelCount The mipLevelCount read-only property of the GPUTexture interface represents the number of mip levels of the GPUTexture. public ulong MipLevelCount { get; } Property Value ulong A number. Remarks This is set via the mipLevelCount property in the descriptor object passed into the originating CreateTexture(GPUTextureDescriptor) call. If omitted, this defaults to 1. -The WebGPU API See also on MDN SampleCount The sampleCount read-only property of the GPUTexture interface represents the sample count of the GPUTexture. public ulong SampleCount { get; } Property Value ulong A number. Possible values are: Remarks This is set via the sampleCount property in the descriptor object passed into the originating CreateTexture(GPUTextureDescriptor) call. If omitted, this defaults to 1. -The WebGPU API See also on MDN Usage The usage read-only property of the GPUTexture interface is the {{glossary(\"bitwise flags\")}} representing the allowed usages of the GPUTexture. public ulong Usage { get; } Property Value ulong The bitwise flags representing the original usages set when the GPUTexture was first created. The returned number is the sum of decimal values representing the different flags, as seen in the table below. Usage flag Usage description Hex equiv. Decimal equiv. GPUTextureUsage.COPY_SRC The texture can be used as the source of a copy operation, for example the source argument of a CopyTextureToBuffer(GPUImageCopyTexture, GPUImageCopyBuffer, Union105) call. 0x01 1 GPUTextureUsage.COPY_DST The texture can be used as the destination of a copy/write operation, for example the destination argument of a CopyBufferToTexture(GPUImageCopyBuffer, GPUImageCopyTexture, Union105) call. 0x02 2 GPUBufferUsage.RENDER_ATTACHMENT The texture can be used as a color or depth/stencil attachment in a render pass, for example as the view property of the descriptor object in a BeginRenderPass(GPURenderPassDescriptor) call. 0x10 16 GPUBufferUsage.STORAGE_BINDING The texture can be bound for use as a storage texture in a shader, for example as a resource in a bind group entry when creating a GPUBindGroup (via CreateBindGroup(GPUBindGroupDescriptor)), which adheres to a GPUBindGroupLayout entry with a specified storage texture binding layout. 0x08 8 GPUBufferUsage.TEXTURE_BINDING The texture can be bound for use as a sampled texture in a shader, for example as a resource in a bind group entry when creating a GPUBindGroup (via CreateBindGroup(GPUBindGroupDescriptor)), which adheres to a GPUBindGroupLayout entry with a specified texture binding layout. 0x04 4 Remarks This is set via the usage property in the descriptor object passed into the originating CreateTexture(GPUTextureDescriptor) call. -The WebGPU API See also on MDN Width The width read-only property of the GPUTexture interface represents the width of the GPUTexture. public ulong Width { get; } Property Value ulong A number. Remarks This is set based on the value of the size property in the descriptor object passed into the originating CreateTexture(GPUTextureDescriptor) call. -The WebGPU API See also on MDN Methods CreateView(GPUTextureViewDescriptor) The createView() method of the GPUTexture interface creates a GPUTextureView representing a specific view of the GPUTexture. public GPUTextureView CreateView(GPUTextureViewDescriptor descriptor) Parameters descriptor GPUTextureViewDescriptor Returns GPUTextureView A GPUTextureView object instance. Remarks -The WebGPU API See also on MDN Destroy() The destroy() method of the GPUTexture interface destroys the GPUTexture. public GlobalObject.Undefined Destroy() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUTextureAspect.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUTextureAspect.html",
    "title": "Enum GPUTextureAspect | CSharpToJavaScript",
    "keywords": "Enum GPUTextureAspect Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUTextureAspect Fields All = 0 DepthOnly = 2 StencilOnly = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUTextureBindingLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUTextureBindingLayout.html",
    "title": "Class GPUTextureBindingLayout | CSharpToJavaScript",
    "keywords": "Class GPUTextureBindingLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUTextureBindingLayout Inheritance object GPUTextureBindingLayout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Multisampled public bool Multisampled Field Value bool SampleType public GPUTextureSampleType SampleType Field Value GPUTextureSampleType ViewDimension public GPUTextureViewDimension ViewDimension Field Value GPUTextureViewDimension"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUTextureDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUTextureDescriptor.html",
    "title": "Class GPUTextureDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUTextureDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUTextureDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUTextureDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Dimension public GPUTextureDimension Dimension Field Value GPUTextureDimension Format public required GPUTextureFormat Format Field Value GPUTextureFormat MipLevelCount public ulong MipLevelCount Field Value ulong SampleCount public ulong SampleCount Field Value ulong Size public required Union105 Size Field Value Union105 Usage public required ulong Usage Field Value ulong ViewFormats public List<GPUTextureFormat> ViewFormats Field Value List<GPUTextureFormat>"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUTextureDimension.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUTextureDimension.html",
    "title": "Enum GPUTextureDimension | CSharpToJavaScript",
    "keywords": "Enum GPUTextureDimension Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The dimension read-only property of the GPUTexture interface represents the dimension of the set of texels for each GPUTexture subresource. public enum GPUTextureDimension Fields _1d = 0 _2d = 1 _3d = 2 Remarks This is set via the dimension property in the descriptor object passed into the originating CreateTexture(GPUTextureDescriptor) call, which defaults to &quot;2d&quot; if omitted. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUTextureFormat.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUTextureFormat.html",
    "title": "Enum GPUTextureFormat | CSharpToJavaScript",
    "keywords": "Enum GPUTextureFormat Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The format read-only property of the GPUTexture interface represents the format of the GPUTexture. public enum GPUTextureFormat Fields Astc10x10Unorm = 89 Astc10x10UnormSrgb = 90 Astc10x5Unorm = 83 Astc10x5UnormSrgb = 84 Astc10x6Unorm = 85 Astc10x6UnormSrgb = 86 Astc10x8Unorm = 87 Astc10x8UnormSrgb = 88 Astc12x10Unorm = 91 Astc12x10UnormSrgb = 92 Astc12x12Unorm = 93 Astc12x12UnormSrgb = 94 Astc4x4Unorm = 67 Astc4x4UnormSrgb = 68 Astc5x4Unorm = 69 Astc5x4UnormSrgb = 70 Astc5x5Unorm = 71 Astc5x5UnormSrgb = 72 Astc6x5Unorm = 73 Astc6x5UnormSrgb = 74 Astc6x6Unorm = 75 Astc6x6UnormSrgb = 76 Astc8x5Unorm = 77 Astc8x5UnormSrgb = 78 Astc8x6Unorm = 79 Astc8x6UnormSrgb = 80 Astc8x8Unorm = 81 Astc8x8UnormSrgb = 82 Bc1RgbaUnorm = 43 Bc1RgbaUnormSrgb = 44 Bc2RgbaUnorm = 45 Bc2RgbaUnormSrgb = 46 Bc3RgbaUnorm = 47 Bc3RgbaUnormSrgb = 48 Bc4RSnorm = 50 Bc4RUnorm = 49 Bc5RgSnorm = 52 Bc5RgUnorm = 51 Bc6hRgbFloat = 54 Bc6hRgbUfloat = 53 Bc7RgbaUnorm = 55 Bc7RgbaUnormSrgb = 56 Bgra8unorm = 22 Bgra8unormSrgb = 23 Depth16unorm = 38 Depth24plus = 39 Depth24plusStencil8 = 40 Depth32float = 41 Depth32floatStencil8 = 42 EacR11snorm = 64 EacR11unorm = 63 EacRg11snorm = 66 EacRg11unorm = 65 Etc2Rgb8a1unorm = 59 Etc2Rgb8a1unormSrgb = 60 Etc2Rgb8unorm = 57 Etc2Rgb8unormSrgb = 58 Etc2Rgba8unorm = 61 Etc2Rgba8unormSrgb = 62 R16float = 6 R16sint = 5 R16uint = 4 R32float = 13 R32sint = 12 R32uint = 11 R8sint = 3 R8snorm = 1 R8uint = 2 R8unorm = 0 Rg11b10ufloat = 27 Rg16float = 16 Rg16sint = 15 Rg16uint = 14 Rg32float = 30 Rg32sint = 29 Rg32uint = 28 Rg8sint = 10 Rg8snorm = 8 Rg8uint = 9 Rg8unorm = 7 Rgb10a2uint = 25 Rgb10a2unorm = 26 Rgb9e5ufloat = 24 Rgba16float = 33 Rgba16sint = 32 Rgba16uint = 31 Rgba32float = 36 Rgba32sint = 35 Rgba32uint = 34 Rgba8sint = 21 Rgba8snorm = 19 Rgba8uint = 20 Rgba8unorm = 17 Rgba8unormSrgb = 18 Stencil8 = 37 Remarks This is set via the format property in the descriptor object passed into the originating CreateTexture(GPUTextureDescriptor) call. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUTextureSampleType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUTextureSampleType.html",
    "title": "Enum GPUTextureSampleType | CSharpToJavaScript",
    "keywords": "Enum GPUTextureSampleType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUTextureSampleType Fields Depth = 2 Float = 0 Sint = 3 Uint = 4 UnfilterableFloat = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUTextureUsage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUTextureUsage.html",
    "title": "Class GPUTextureUsage | CSharpToJavaScript",
    "keywords": "Class GPUTextureUsage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The usage read-only property of the GPUTexture interface is the {{glossary(\"bitwise flags\")}} representing the allowed usages of the GPUTexture. [To(\"FirstCharToLowerCase\")] public class GPUTextureUsage Inheritance object GPUTextureUsage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This is set via the usage property in the descriptor object passed into the originating CreateTexture(GPUTextureDescriptor) call. -The WebGPU API See also on MDN Fields COPY_DST public const ulong COPY_DST = 2 Field Value ulong COPY_SRC public const ulong COPY_SRC = 1 Field Value ulong RENDER_ATTACHMENT public const ulong RENDER_ATTACHMENT = 16 Field Value ulong STORAGE_BINDING public const ulong STORAGE_BINDING = 8 Field Value ulong TEXTURE_BINDING public const ulong TEXTURE_BINDING = 4 Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUTextureView.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUTextureView.html",
    "title": "Class GPUTextureView | CSharpToJavaScript",
    "keywords": "Class GPUTextureView Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUTextureView interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents a view into a subset of the texture resources defined by a particular GPUTexture. [To(\"FirstCharToLowerCase\")] public class GPUTextureView Inheritance object GPUTextureView Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A GPUTextureView object instance is created using the CreateView(GPUTextureViewDescriptor) method. -The WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUTextureViewDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUTextureViewDescriptor.html",
    "title": "Class GPUTextureViewDescriptor | CSharpToJavaScript",
    "keywords": "Class GPUTextureViewDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUTextureViewDescriptor : GPUObjectDescriptorBase Inheritance object GPUObjectDescriptorBase GPUTextureViewDescriptor Inherited Members GPUObjectDescriptorBase.Label object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ArrayLayerCount public ulong ArrayLayerCount Field Value ulong Aspect public GPUTextureAspect Aspect Field Value GPUTextureAspect BaseArrayLayer public ulong BaseArrayLayer Field Value ulong BaseMipLevel public ulong BaseMipLevel Field Value ulong Dimension public GPUTextureViewDimension Dimension Field Value GPUTextureViewDimension Format public GPUTextureFormat Format Field Value GPUTextureFormat MipLevelCount public ulong MipLevelCount Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUTextureViewDimension.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUTextureViewDimension.html",
    "title": "Enum GPUTextureViewDimension | CSharpToJavaScript",
    "keywords": "Enum GPUTextureViewDimension Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUTextureViewDimension Fields Cube = 3 CubeArray = 4 _1d = 0 _2d = 1 _2dArray = 2 _3d = 5"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUUncapturedErrorEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUUncapturedErrorEvent.html",
    "title": "Class GPUUncapturedErrorEvent | CSharpToJavaScript",
    "keywords": "Class GPUUncapturedErrorEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUUncapturedErrorEvent interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} is the event object type for the GPUDevice GPUDevice.Uncapturederror_event event, used for telemetry and to report unexpected errors. [To(\"FirstCharToLowerCase\")] public class GPUUncapturedErrorEvent : Event Inheritance object Event GPUUncapturedErrorEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Known error cases should be handled using PushErrorScope(GPUErrorFilter) and PopErrorScope(). -The WebGPU API -WebGPU Error Handling best practices See also on MDN Constructors GPUUncapturedErrorEvent() public GPUUncapturedErrorEvent() GPUUncapturedErrorEvent(string, GPUUncapturedErrorEventInit) The GPUUncapturedErrorEvent() constructor creates a new GPUUncapturedErrorEvent object instance. public GPUUncapturedErrorEvent(string type, GPUUncapturedErrorEventInit gpuUncapturedErrorEventInitDict) Parameters type string gpuUncapturedErrorEventInitDict GPUUncapturedErrorEventInit Remarks -The WebGPU API -WebGPU Error Handling best practices See also on MDN Properties Error The error read-only property of the GPUUncapturedErrorEvent interface is a GPUError object instance providing access to the details of the error. public GPUError Error { get; } Property Value GPUError A GPUError object instance. Remarks -The WebGPU API -WebGPU Error Handling best practices See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUUncapturedErrorEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUUncapturedErrorEventInit.html",
    "title": "Class GPUUncapturedErrorEventInit | CSharpToJavaScript",
    "keywords": "Class GPUUncapturedErrorEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUUncapturedErrorEventInit : EventInit Inheritance object EventInit GPUUncapturedErrorEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Error public required GPUError Error Field Value GPUError"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUValidationError.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUValidationError.html",
    "title": "Class GPUValidationError | CSharpToJavaScript",
    "keywords": "Class GPUValidationError Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GPUValidationError interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} describes an application error indicating that an operation did not pass the WebGPU API&apos;s validation constraints. [To(\"FirstCharToLowerCase\")] public class GPUValidationError : GPUError Inheritance object GPUError GPUValidationError Inherited Members GPUError.Message object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It represents one of the types of errors surfaced by PopErrorScope() and the GPUDevice.Uncapturederror_event event. Validation errors occur whenever invalid inputs are given to a WebGPU call. These are consistent, predictable, and should not occur provided your app is well-formed. They will occur in the same way on every device your code runs on, so once you&apos;ve fixed any errors that show up during development you probably don&apos;t need to observe them directly most of the time. An exception to that rule is if you&apos;re consuming user-supplied assets, shaders, etc., in which case watching for validation errors while loading could be helpful. NOTE Note: We have attempted to provide useful information to help you understand why validation errors are occurring in your WebGPU code in &quot;Validation&quot; sections where appropriate, which list criteria to meet to avoid validation errors. See for example the GPUDevice.createBindGroup() Validation section. -The WebGPU API -WebGPU Error Handling best practices See also on MDN Constructors GPUValidationError() public GPUValidationError() GPUValidationError(string) The GPUValidationError() constructor creates a new GPUValidationError object instance. public GPUValidationError(string message) Parameters message string Remarks -The WebGPU API -WebGPU Error Handling best practices See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUVertexAttribute.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUVertexAttribute.html",
    "title": "Class GPUVertexAttribute | CSharpToJavaScript",
    "keywords": "Class GPUVertexAttribute Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUVertexAttribute Inheritance object GPUVertexAttribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Format public required GPUVertexFormat Format Field Value GPUVertexFormat Offset public required ulong Offset Field Value ulong ShaderLocation public required ulong ShaderLocation Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUVertexBufferLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUVertexBufferLayout.html",
    "title": "Class GPUVertexBufferLayout | CSharpToJavaScript",
    "keywords": "Class GPUVertexBufferLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUVertexBufferLayout Inheritance object GPUVertexBufferLayout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ArrayStride public required ulong ArrayStride Field Value ulong Attributes public required List<GPUVertexAttribute> Attributes Field Value List<GPUVertexAttribute> StepMode public GPUVertexStepMode StepMode Field Value GPUVertexStepMode"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUVertexFormat.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUVertexFormat.html",
    "title": "Enum GPUVertexFormat | CSharpToJavaScript",
    "keywords": "Enum GPUVertexFormat Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUVertexFormat Fields Float16x2 = 16 Float16x4 = 17 Float32 = 18 Float32x2 = 19 Float32x3 = 20 Float32x4 = 21 Sint16x2 = 10 Sint16x4 = 11 Sint32 = 26 Sint32x2 = 27 Sint32x3 = 28 Sint32x4 = 29 Sint8x2 = 2 Sint8x4 = 3 Snorm16x2 = 14 Snorm16x4 = 15 Snorm8x2 = 6 Snorm8x4 = 7 Uint16x2 = 8 Uint16x4 = 9 Uint32 = 22 Uint32x2 = 23 Uint32x3 = 24 Uint32x4 = 25 Uint8x2 = 0 Uint8x4 = 1 Unorm1010102 = 30 Unorm16x2 = 12 Unorm16x4 = 13 Unorm8x2 = 4 Unorm8x4 = 5"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUVertexState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUVertexState.html",
    "title": "Class GPUVertexState | CSharpToJavaScript",
    "keywords": "Class GPUVertexState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GPUVertexState : GPUProgrammableStage Inheritance object GPUProgrammableStage GPUVertexState Inherited Members GPUProgrammableStage.Module GPUProgrammableStage.EntryPoint GPUProgrammableStage.Constants object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Buffers public List<GPUVertexBufferLayout?> Buffers Field Value List<GPUVertexBufferLayout>"
  },
  "api/CSharpToJavaScript.APIs.JS.GPUVertexStepMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GPUVertexStepMode.html",
    "title": "Enum GPUVertexStepMode | CSharpToJavaScript",
    "keywords": "Enum GPUVertexStepMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GPUVertexStepMode Fields Instance = 1 Vertex = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.GainNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GainNode.html",
    "title": "Class GainNode | CSharpToJavaScript",
    "keywords": "Class GainNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GainNode interface represents a change in volume. It is an AudioNode audio-processing module that causes a given gain to be applied to the input data before its propagation to the output. A GainNode always has exactly one input and one output, both with the same number of channels. [To(\"FirstCharToLowerCase\")] public class GainNode : AudioNode Inheritance object EventTarget AudioNode GainNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The gain is a unitless value, changing with time, that is multiplied to each corresponding sample of all input channels. If modified, the new gain is instantly applied, causing unaesthetic 'clicks' in the resulting audio. To prevent this from happening, never change the value directly but use the exponential interpolation methods on the AudioParam interface. The GainNode is increasing the gain of the output. -Using the Web Audio API See also on MDN Constructors GainNode() public GainNode() GainNode(BaseAudioContext, GainOptions) The GainNode() constructor of the Web Audio API creates a new GainNode object which is an AudioNode that represents a change in volume. public GainNode(BaseAudioContext context, GainOptions options) Parameters context BaseAudioContext options GainOptions Remarks See also on MDN Properties Gain The gain property of the GainNode interface is an a-rate AudioParam representing the amount of gain to apply. public AudioParam Gain { get; } Property Value AudioParam An AudioParam. NOTE Note: Though the AudioParam returned is read-only, the value it represents is not. Remarks -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GainOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GainOptions.html",
    "title": "Class GainOptions | CSharpToJavaScript",
    "keywords": "Class GainOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GainOptions : AudioNodeOptions Inheritance object AudioNodeOptions GainOptions Inherited Members AudioNodeOptions.ChannelCount AudioNodeOptions.ChannelCountMode AudioNodeOptions.ChannelInterpretation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Gain public Number Gain Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.GenerateTestReportParameters.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GenerateTestReportParameters.html",
    "title": "Class GenerateTestReportParameters | CSharpToJavaScript",
    "keywords": "Class GenerateTestReportParameters Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GenerateTestReportParameters Inheritance object GenerateTestReportParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Group public string Group Field Value string Message public required string Message Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.GenericTransformStream.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GenericTransformStream.html",
    "title": "Interface GenericTransformStream | CSharpToJavaScript",
    "keywords": "Interface GenericTransformStream Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface GenericTransformStream Properties Readable ReadableStream Readable { get; } Property Value ReadableStream Writable WritableStream Writable { get; } Property Value WritableStream"
  },
  "api/CSharpToJavaScript.APIs.JS.GeolocationReadingValues.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GeolocationReadingValues.html",
    "title": "Class GeolocationReadingValues | CSharpToJavaScript",
    "keywords": "Class GeolocationReadingValues Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GeolocationReadingValues Inheritance object GeolocationReadingValues Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Accuracy public required Number? Accuracy Field Value Number Altitude public required Number? Altitude Field Value Number AltitudeAccuracy public required Number? AltitudeAccuracy Field Value Number Heading public required Number? Heading Field Value Number Latitude public required Number? Latitude Field Value Number Longitude public required Number? Longitude Field Value Number Speed public required Number? Speed Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.GeolocationSensor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GeolocationSensor.html",
    "title": "Class GeolocationSensor | CSharpToJavaScript",
    "keywords": "Class GeolocationSensor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GeolocationSensor : Sensor Inheritance object EventTarget Sensor GeolocationSensor Inherited Members Sensor.Activated Sensor.HasReading Sensor.Timestamp Sensor.Start() Sensor.Stop() Sensor.Onreading Sensor.Onactivate Sensor.Onerror EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GeolocationSensor() public GeolocationSensor() GeolocationSensor(GeolocationSensorOptions) public GeolocationSensor(GeolocationSensorOptions options) Parameters options GeolocationSensorOptions Properties Accuracy public double? Accuracy { get; } Property Value double? Altitude public double? Altitude { get; } Property Value double? AltitudeAccuracy public double? AltitudeAccuracy { get; } Property Value double? Heading public double? Heading { get; } Property Value double? Latitude public double? Latitude { get; } Property Value double? Longitude public double? Longitude { get; } Property Value double? Speed public double? Speed { get; } Property Value double? Methods Read(ReadOptions) public static Task<GeolocationSensorReading> Read(ReadOptions readOptions) Parameters readOptions ReadOptions Returns Task<GeolocationSensorReading>"
  },
  "api/CSharpToJavaScript.APIs.JS.GeolocationSensorOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GeolocationSensorOptions.html",
    "title": "Class GeolocationSensorOptions | CSharpToJavaScript",
    "keywords": "Class GeolocationSensorOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GeolocationSensorOptions : SensorOptions Inheritance object SensorOptions GeolocationSensorOptions Derived ReadOptions Inherited Members SensorOptions.Frequency object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GeolocationSensorReading.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GeolocationSensorReading.html",
    "title": "Class GeolocationSensorReading | CSharpToJavaScript",
    "keywords": "Class GeolocationSensorReading Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GeolocationSensorReading Inheritance object GeolocationSensorReading Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Accuracy public Number? Accuracy Field Value Number Altitude public Number? Altitude Field Value Number AltitudeAccuracy public Number? AltitudeAccuracy Field Value Number Heading public Number? Heading Field Value Number Latitude public Number? Latitude Field Value Number Longitude public Number? Longitude Field Value Number Speed public Number? Speed Field Value Number Timestamp public Unsupported? Timestamp Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.GetNotificationOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GetNotificationOptions.html",
    "title": "Class GetNotificationOptions | CSharpToJavaScript",
    "keywords": "Class GetNotificationOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GetNotificationOptions Inheritance object GetNotificationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Tag public string Tag Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.GetRootNodeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GetRootNodeOptions.html",
    "title": "Class GetRootNodeOptions | CSharpToJavaScript",
    "keywords": "Class GetRootNodeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GetRootNodeOptions Inheritance object GetRootNodeOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Composed public bool Composed Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.Global.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Global.html",
    "title": "Class Global | CSharpToJavaScript",
    "keywords": "Class Global Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class Global Inheritance object Global Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Global() public Global() Global(GlobalDescriptor, dynamic) public Global(GlobalDescriptor descriptor, dynamic v) Parameters descriptor GlobalDescriptor v dynamic Properties Value public dynamic Value { get; set; } Property Value dynamic Methods ValueOf() public dynamic ValueOf() Returns dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.GlobalDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GlobalDescriptor.html",
    "title": "Class GlobalDescriptor | CSharpToJavaScript",
    "keywords": "Class GlobalDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GlobalDescriptor Inheritance object GlobalDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Mutable public bool Mutable Field Value bool Value public required ValueType Value Field Value ValueType"
  },
  "api/CSharpToJavaScript.APIs.JS.GlobalEventHandlers.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GlobalEventHandlers.html",
    "title": "Interface GlobalEventHandlers | CSharpToJavaScript",
    "keywords": "Interface GlobalEventHandlers Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface GlobalEventHandlers Properties Onabort EventHandlerNonNull Onabort { get; set; } Property Value EventHandlerNonNull Onauxclick EventHandlerNonNull Onauxclick { get; set; } Property Value EventHandlerNonNull Onbeforeinput EventHandlerNonNull Onbeforeinput { get; set; } Property Value EventHandlerNonNull Onbeforematch EventHandlerNonNull Onbeforematch { get; set; } Property Value EventHandlerNonNull Onbeforetoggle EventHandlerNonNull Onbeforetoggle { get; set; } Property Value EventHandlerNonNull Onbeforexrselect EventHandlerNonNull Onbeforexrselect { get; set; } Property Value EventHandlerNonNull Onblur EventHandlerNonNull Onblur { get; set; } Property Value EventHandlerNonNull Oncancel EventHandlerNonNull Oncancel { get; set; } Property Value EventHandlerNonNull Oncanplay EventHandlerNonNull Oncanplay { get; set; } Property Value EventHandlerNonNull Oncanplaythrough EventHandlerNonNull Oncanplaythrough { get; set; } Property Value EventHandlerNonNull Onchange EventHandlerNonNull Onchange { get; set; } Property Value EventHandlerNonNull Onclick EventHandlerNonNull Onclick { get; set; } Property Value EventHandlerNonNull Onclose EventHandlerNonNull Onclose { get; set; } Property Value EventHandlerNonNull Oncontextlost EventHandlerNonNull Oncontextlost { get; set; } Property Value EventHandlerNonNull Oncontextmenu EventHandlerNonNull Oncontextmenu { get; set; } Property Value EventHandlerNonNull Oncontextrestored EventHandlerNonNull Oncontextrestored { get; set; } Property Value EventHandlerNonNull Oncopy EventHandlerNonNull Oncopy { get; set; } Property Value EventHandlerNonNull Oncuechange EventHandlerNonNull Oncuechange { get; set; } Property Value EventHandlerNonNull Oncut EventHandlerNonNull Oncut { get; set; } Property Value EventHandlerNonNull Ondblclick EventHandlerNonNull Ondblclick { get; set; } Property Value EventHandlerNonNull Ondrag EventHandlerNonNull Ondrag { get; set; } Property Value EventHandlerNonNull Ondragend EventHandlerNonNull Ondragend { get; set; } Property Value EventHandlerNonNull Ondragenter EventHandlerNonNull Ondragenter { get; set; } Property Value EventHandlerNonNull Ondragleave EventHandlerNonNull Ondragleave { get; set; } Property Value EventHandlerNonNull Ondragover EventHandlerNonNull Ondragover { get; set; } Property Value EventHandlerNonNull Ondragstart EventHandlerNonNull Ondragstart { get; set; } Property Value EventHandlerNonNull Ondrop EventHandlerNonNull Ondrop { get; set; } Property Value EventHandlerNonNull Ondurationchange EventHandlerNonNull Ondurationchange { get; set; } Property Value EventHandlerNonNull Onemptied EventHandlerNonNull Onemptied { get; set; } Property Value EventHandlerNonNull Onended EventHandlerNonNull Onended { get; set; } Property Value EventHandlerNonNull Onerror OnErrorEventHandlerNonNull Onerror { get; set; } Property Value OnErrorEventHandlerNonNull Onfocus EventHandlerNonNull Onfocus { get; set; } Property Value EventHandlerNonNull Onformdata EventHandlerNonNull Onformdata { get; set; } Property Value EventHandlerNonNull Oninput EventHandlerNonNull Oninput { get; set; } Property Value EventHandlerNonNull Oninvalid EventHandlerNonNull Oninvalid { get; set; } Property Value EventHandlerNonNull Onkeydown EventHandlerNonNull Onkeydown { get; set; } Property Value EventHandlerNonNull Onkeypress EventHandlerNonNull Onkeypress { get; set; } Property Value EventHandlerNonNull Onkeyup EventHandlerNonNull Onkeyup { get; set; } Property Value EventHandlerNonNull Onload EventHandlerNonNull Onload { get; set; } Property Value EventHandlerNonNull Onloadeddata EventHandlerNonNull Onloadeddata { get; set; } Property Value EventHandlerNonNull Onloadedmetadata EventHandlerNonNull Onloadedmetadata { get; set; } Property Value EventHandlerNonNull Onloadstart EventHandlerNonNull Onloadstart { get; set; } Property Value EventHandlerNonNull Onmousedown EventHandlerNonNull Onmousedown { get; set; } Property Value EventHandlerNonNull Onmouseenter EventHandlerNonNull Onmouseenter { get; set; } Property Value EventHandlerNonNull Onmouseleave EventHandlerNonNull Onmouseleave { get; set; } Property Value EventHandlerNonNull Onmousemove EventHandlerNonNull Onmousemove { get; set; } Property Value EventHandlerNonNull Onmouseout EventHandlerNonNull Onmouseout { get; set; } Property Value EventHandlerNonNull Onmouseover EventHandlerNonNull Onmouseover { get; set; } Property Value EventHandlerNonNull Onmouseup EventHandlerNonNull Onmouseup { get; set; } Property Value EventHandlerNonNull Onpaste EventHandlerNonNull Onpaste { get; set; } Property Value EventHandlerNonNull Onpause EventHandlerNonNull Onpause { get; set; } Property Value EventHandlerNonNull Onplay EventHandlerNonNull Onplay { get; set; } Property Value EventHandlerNonNull Onplaying EventHandlerNonNull Onplaying { get; set; } Property Value EventHandlerNonNull Onprogress EventHandlerNonNull Onprogress { get; set; } Property Value EventHandlerNonNull Onratechange EventHandlerNonNull Onratechange { get; set; } Property Value EventHandlerNonNull Onreset EventHandlerNonNull Onreset { get; set; } Property Value EventHandlerNonNull Onresize EventHandlerNonNull Onresize { get; set; } Property Value EventHandlerNonNull Onscroll EventHandlerNonNull Onscroll { get; set; } Property Value EventHandlerNonNull Onscrollend EventHandlerNonNull Onscrollend { get; set; } Property Value EventHandlerNonNull Onsecuritypolicyviolation EventHandlerNonNull Onsecuritypolicyviolation { get; set; } Property Value EventHandlerNonNull Onseeked EventHandlerNonNull Onseeked { get; set; } Property Value EventHandlerNonNull Onseeking EventHandlerNonNull Onseeking { get; set; } Property Value EventHandlerNonNull Onselect EventHandlerNonNull Onselect { get; set; } Property Value EventHandlerNonNull Onslotchange EventHandlerNonNull Onslotchange { get; set; } Property Value EventHandlerNonNull Onstalled EventHandlerNonNull Onstalled { get; set; } Property Value EventHandlerNonNull Onsubmit EventHandlerNonNull Onsubmit { get; set; } Property Value EventHandlerNonNull Onsuspend EventHandlerNonNull Onsuspend { get; set; } Property Value EventHandlerNonNull Ontimeupdate EventHandlerNonNull Ontimeupdate { get; set; } Property Value EventHandlerNonNull Ontoggle EventHandlerNonNull Ontoggle { get; set; } Property Value EventHandlerNonNull Onvolumechange EventHandlerNonNull Onvolumechange { get; set; } Property Value EventHandlerNonNull Onwaiting EventHandlerNonNull Onwaiting { get; set; } Property Value EventHandlerNonNull Onwebkitanimationend EventHandlerNonNull Onwebkitanimationend { get; set; } Property Value EventHandlerNonNull Onwebkitanimationiteration EventHandlerNonNull Onwebkitanimationiteration { get; set; } Property Value EventHandlerNonNull Onwebkitanimationstart EventHandlerNonNull Onwebkitanimationstart { get; set; } Property Value EventHandlerNonNull Onwebkittransitionend EventHandlerNonNull Onwebkittransitionend { get; set; } Property Value EventHandlerNonNull Onwheel EventHandlerNonNull Onwheel { get; set; } Property Value EventHandlerNonNull"
  },
  "api/CSharpToJavaScript.APIs.JS.GlobalObject.GlobalThis.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GlobalObject.GlobalThis.html",
    "title": "Class GlobalObject.GlobalThis | CSharpToJavaScript",
    "keywords": "Class GlobalObject.GlobalThis Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GlobalObject.GlobalThis : GlobalObject Inheritance object GlobalObject GlobalObject.GlobalThis Inherited Members GlobalObject.Eval(string) GlobalObject.IsFinite(float) GlobalObject.IsNaN(float) GlobalObject.ParseFloat(string) GlobalObject.ParseInt(string, int?) GlobalObject.DecodeURI(string) GlobalObject.DecodeURIComponent(string) GlobalObject.EncodeURI(string) GlobalObject.EncodeURIComponent(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Console public static console Console { get; } Property Value console Window public static Window Window { get; } Property Value Window Methods Boolean(dynamic) [To(\"Default\")] public static bool Boolean(dynamic value) Parameters value dynamic Returns bool Date() [To(\"Default\")] public static string Date() Returns string Function(dynamic, dynamic?) [To(\"Default\")] public static Function Function(dynamic parameterArgs, dynamic? bodyArg = null) Parameters parameterArgs dynamic bodyArg dynamic Returns Function Number(dynamic) [To(\"Default\")] public static double Number(dynamic value) Parameters value dynamic Returns double Object(dynamic?) [To(\"Default\")] public static Object Object(dynamic? value = null) Parameters value dynamic Returns Object RegExp(string, string?) [To(\"Default\")] public static string RegExp(string pattern, string? flags = null) Parameters pattern string flags string Returns string String(dynamic) [To(\"Default\")] public static string String(dynamic value) Parameters value dynamic Returns string"
  },
  "api/CSharpToJavaScript.APIs.JS.GlobalObject.Infinity.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GlobalObject.Infinity.html",
    "title": "Class GlobalObject.Infinity | CSharpToJavaScript",
    "keywords": "Class GlobalObject.Infinity Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class GlobalObject.Infinity Inheritance object GlobalObject.Infinity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GlobalObject.NaN.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GlobalObject.NaN.html",
    "title": "Class GlobalObject.NaN | CSharpToJavaScript",
    "keywords": "Class GlobalObject.NaN Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class GlobalObject.NaN Inheritance object GlobalObject.NaN Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GlobalObject.Undefined.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GlobalObject.Undefined.html",
    "title": "Class GlobalObject.Undefined | CSharpToJavaScript",
    "keywords": "Class GlobalObject.Undefined Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GlobalObject.Undefined Inheritance object GlobalObject.Undefined Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GlobalObject.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GlobalObject.html",
    "title": "Class GlobalObject | CSharpToJavaScript",
    "keywords": "Class GlobalObject Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GlobalObject Inheritance object GlobalObject Derived GlobalObject.GlobalThis Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DecodeURI(string) [To(\"FirstCharToLowerCase\")] public static string DecodeURI(string encodedURI) Parameters encodedURI string Returns string DecodeURIComponent(string) [To(\"FirstCharToLowerCase\")] public static string DecodeURIComponent(string encodedURIComponent) Parameters encodedURIComponent string Returns string EncodeURI(string) [To(\"FirstCharToLowerCase\")] public static string EncodeURI(string uri) Parameters uri string Returns string EncodeURIComponent(string) [To(\"FirstCharToLowerCase\")] public static string EncodeURIComponent(string uriComponent) Parameters uriComponent string Returns string Eval(string) [To(\"FirstCharToLowerCase\")] public static dynamic Eval(string x) Parameters x string Returns dynamic IsFinite(float) [To(\"FirstCharToLowerCase\")] public static bool IsFinite(float number) Parameters number float Returns bool IsNaN(float) [To(\"FirstCharToLowerCase\")] public static bool IsNaN(float number) Parameters number float Returns bool ParseFloat(string) [To(\"FirstCharToLowerCase\")] public static float ParseFloat(string str) Parameters str string Returns float ParseInt(string, int?) [To(\"FirstCharToLowerCase\")] public static int ParseInt(string str, int? radix = null) Parameters str string radix int? Returns int"
  },
  "api/CSharpToJavaScript.APIs.JS.GravityReadingValues.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GravityReadingValues.html",
    "title": "Class GravityReadingValues | CSharpToJavaScript",
    "keywords": "Class GravityReadingValues Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GravityReadingValues : AccelerometerReadingValues Inheritance object AccelerometerReadingValues GravityReadingValues Inherited Members AccelerometerReadingValues.X AccelerometerReadingValues.Y AccelerometerReadingValues.Z object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GravitySensor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GravitySensor.html",
    "title": "Class GravitySensor | CSharpToJavaScript",
    "keywords": "Class GravitySensor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The GravitySensor interface of the Sensor APIs provides on each reading the gravity applied to the device along all three axes. [To(\"FirstCharToLowerCase\")] public class GravitySensor : Accelerometer Inheritance object EventTarget Sensor Accelerometer GravitySensor Inherited Members Accelerometer.X Accelerometer.Y Accelerometer.Z Sensor.Activated Sensor.HasReading Sensor.Timestamp Sensor.Start() Sensor.Stop() Sensor.Onreading Sensor.Onactivate Sensor.Onerror EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To use this sensor, the user must grant permission to the &apos;accelerometer&apos; device sensor through the Permissions API. In addition, this feature may be blocked by a Permissions Policy set on your server. See also on MDN Constructors GravitySensor() public GravitySensor() GravitySensor(AccelerometerSensorOptions) The GravitySensor() constructor creates a new GravitySensor object which provides on each reading the gravity applied to the device along all three axes. public GravitySensor(AccelerometerSensorOptions options) Parameters options AccelerometerSensorOptions Remarks -'sensor.Reading_event' event See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GroupEffect.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GroupEffect.html",
    "title": "Class GroupEffect | CSharpToJavaScript",
    "keywords": "Class GroupEffect Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GroupEffect Inheritance object GroupEffect Derived SequenceEffect Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GroupEffect() public GroupEffect() GroupEffect(List<AnimationEffect>?, Union91) public GroupEffect(List<AnimationEffect>? children, Union91 timing) Parameters children List<AnimationEffect> timing Union91 Properties Children public AnimationNodeList Children { get; } Property Value AnimationNodeList FirstChild public AnimationEffect? FirstChild { get; } Property Value AnimationEffect LastChild public AnimationEffect? LastChild { get; } Property Value AnimationEffect Methods Append(params AnimationEffect[]) public GlobalObject.Undefined Append(params AnimationEffect[] effects) Parameters effects AnimationEffect[] Returns GlobalObject.Undefined Clone() public GroupEffect Clone() Returns GroupEffect Prepend(params AnimationEffect[]) public GlobalObject.Undefined Prepend(params AnimationEffect[] effects) Parameters effects AnimationEffect[] Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.Gyroscope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Gyroscope.html",
    "title": "Class Gyroscope | CSharpToJavaScript",
    "keywords": "Class Gyroscope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Gyroscope interface of the Sensor APIs provides on each reading the angular velocity of the device along all three axes. [To(\"FirstCharToLowerCase\")] public class Gyroscope : Sensor Inheritance object EventTarget Sensor Gyroscope Inherited Members Sensor.Activated Sensor.HasReading Sensor.Timestamp Sensor.Start() Sensor.Stop() Sensor.Onreading Sensor.Onactivate Sensor.Onerror EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To use this sensor, the user must grant permission to the &apos;gyroscope&apos; device sensor through the Permissions API. In addition, this feature may be blocked by a Permissions Policy set on your server. See also on MDN Constructors Gyroscope() public Gyroscope() Gyroscope(GyroscopeSensorOptions) The Gyroscope() constructor creates a new Gyroscope object which provides on each reading the angular velocity of the device along all three axes. public Gyroscope(GyroscopeSensorOptions sensorOptions) Parameters sensorOptions GyroscopeSensorOptions Remarks -'sensor.Reading_event' event See also on MDN Properties X The x read-only property of the Gyroscope interface returns a number specifying the angular velocity of the device along its x-axis. public Number? X { get; } Property Value Number A 'Number'. Remarks See also on MDN Y The y read-only property of the Gyroscope interface returns a number specifying the angular velocity of the device along its y-axis. public Number? Y { get; } Property Value Number A 'Number'. Remarks See also on MDN Z The z read-only property of the Gyroscope interface returns a number specifying the angular velocity of the device along its z-axis. public Number? Z { get; } Property Value Number A 'Number'. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.GyroscopeLocalCoordinateSystem.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GyroscopeLocalCoordinateSystem.html",
    "title": "Enum GyroscopeLocalCoordinateSystem | CSharpToJavaScript",
    "keywords": "Enum GyroscopeLocalCoordinateSystem Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum GyroscopeLocalCoordinateSystem Fields Device = 0 Screen = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.GyroscopeSensorOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GyroscopeSensorOptions.html",
    "title": "Class GyroscopeSensorOptions | CSharpToJavaScript",
    "keywords": "Class GyroscopeSensorOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GyroscopeSensorOptions : SensorOptions Inheritance object SensorOptions GyroscopeSensorOptions Inherited Members SensorOptions.Frequency object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ReferenceFrame public GyroscopeLocalCoordinateSystem ReferenceFrame Field Value GyroscopeLocalCoordinateSystem"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLAllCollection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLAllCollection.html",
    "title": "Class HTMLAllCollection | CSharpToJavaScript",
    "keywords": "Class HTMLAllCollection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class HTMLAllCollection Inheritance object HTMLAllCollection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Length [To(\"FirstCharToLowerCase\")] public ulong Length { get; } Property Value ulong Methods Item(string) [To(\"FirstCharToLowerCase\")] public Union1? Item(string nameOrIndex) Parameters nameOrIndex string Returns Union1?"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLAnchorElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLAnchorElement.html",
    "title": "Class HTMLAnchorElement | CSharpToJavaScript",
    "keywords": "Class HTMLAnchorElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLAnchorElement interface represents hyperlink elements and provides special properties and methods (beyond those of the regular HTMLElement object interface that they inherit from) for manipulating the layout and presentation of such elements. This interface corresponds to &lt;a&gt; element; not to be confused with &lt;link&gt;, which is represented by HTMLLinkElement) [To(\"Default\")] public class HTMLAnchorElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle, HTMLHyperlinkElementUtils Inheritance object EventTarget Node Element HTMLElement HTMLAnchorElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle HTMLHyperlinkElementUtils Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: a See also on MDN Constructors HTMLAnchorElement() public HTMLAnchorElement() Properties Charset [To(\"FirstCharToLowerCase\")] public string Charset { get; set; } Property Value string Coords [To(\"FirstCharToLowerCase\")] public string Coords { get; set; } Property Value string Download The HTMLAnchorElement.download property is a string indicating that the linked resource is intended to be downloaded rather than displayed in the browser. The value, if any, specifies the default file name for use in labeling the resource in a local file system. If the name is not a valid file name in the underlying OS, the browser will adjust it. [To(\"FirstCharToLowerCase\")] public string Download { get; set; } Property Value string A string. Remarks NOTE Note: This value might not be used for download. This value cannot be used to determine whether the download will occur. See also on MDN Hreflang [To(\"FirstCharToLowerCase\")] public string Hreflang { get; set; } Property Value string Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Ping [To(\"FirstCharToLowerCase\")] public string Ping { get; set; } Property Value string ReferrerPolicy The HTMLAnchorElement.referrerPolicy property reflect the HTML referrerpolicy attribute of the a element defining which referrer is sent when fetching the resource. [To(\"FirstCharToLowerCase\")] public string ReferrerPolicy { get; set; } Property Value string A string; one of the following: Remarks -ReferrerPolicy, ReferrerPolicy, and ReferrerPolicy. See also on MDN Rel The HTMLAnchorElement.rel property reflects the rel attribute. It is a string containing a space-separated list of link types indicating the relationship between the resource represented by the a element and the current document. [To(\"FirstCharToLowerCase\")] public string Rel { get; set; } Property Value string A string. Remarks -The equivalent property on area and link, Rel and Rel. -The very same list but as tokens: RelList See also on MDN RelList The HTMLAnchorElement.relList read-only property reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the {{HTMLElement(\"a\")}} element and the current document. [To(\"FirstCharToLowerCase\")] public DOMTokenList RelList { get; } Property Value DOMTokenList A live DOMTokenList of strings. Remarks The property itself is read-only, meaning you can&apos;t substitute the DOMTokenList with another one, but its contents can still be changed. -The equivalent property on area and link, RelList and RelList. -The very same list but as a space-separated tokens in a string: Rel See also on MDN Rev [To(\"FirstCharToLowerCase\")] public string Rev { get; set; } Property Value string Shape [To(\"FirstCharToLowerCase\")] public string Shape { get; set; } Property Value string Target [To(\"FirstCharToLowerCase\")] public string Target { get; set; } Property Value string Text [To(\"FirstCharToLowerCase\")] public string Text { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLAreaElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLAreaElement.html",
    "title": "Class HTMLAreaElement | CSharpToJavaScript",
    "keywords": "Class HTMLAreaElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLAreaElement interface provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{HtmlElement(\"area\")}} elements. [To(\"Default\")] public class HTMLAreaElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle, HTMLHyperlinkElementUtils Inheritance object EventTarget Node Element HTMLElement HTMLAreaElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle HTMLHyperlinkElementUtils Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: area See also on MDN Constructors HTMLAreaElement() public HTMLAreaElement() Properties Alt [To(\"FirstCharToLowerCase\")] public string Alt { get; set; } Property Value string Coords [To(\"FirstCharToLowerCase\")] public string Coords { get; set; } Property Value string Download [To(\"FirstCharToLowerCase\")] public string Download { get; set; } Property Value string NoHref [To(\"FirstCharToLowerCase\")] public bool NoHref { get; set; } Property Value bool Ping [To(\"FirstCharToLowerCase\")] public string Ping { get; set; } Property Value string ReferrerPolicy The HTMLAreaElement.referrerPolicy property reflect the HTML referrerpolicy attribute of the area element defining which referrer is sent when fetching the resource. [To(\"FirstCharToLowerCase\")] public string ReferrerPolicy { get; set; } Property Value string A string; one of the following: Remarks -ReferrerPolicy, ReferrerPolicy, and ReferrerPolicy. See also on MDN Rel The HTMLAreaElement.rel property reflects the rel attribute. It is a string containing a space-separated list of link types indicating the relationship between the resource represented by the area element and the current document. [To(\"FirstCharToLowerCase\")] public string Rel { get; set; } Property Value string A string. Remarks -The equivalent property on a and link, Rel and Rel. -The very same list but as tokens: RelList See also on MDN RelList The HTMLAreaElement.relList read-only property reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the {{HTMLElement(\"area\")}} element and the current document. [To(\"FirstCharToLowerCase\")] public DOMTokenList RelList { get; } Property Value DOMTokenList A live DOMTokenList of strings. Remarks The property itself is read-only, meaning you can&apos;t substitute the DOMTokenList by another one, but the content of the returned list can be changed. -The equivalent property on a and link, RelList and RelList. -The very same list but as a space-separated tokens in a string: Rel See also on MDN Shape [To(\"FirstCharToLowerCase\")] public string Shape { get; set; } Property Value string Target [To(\"FirstCharToLowerCase\")] public string Target { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLAudioElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLAudioElement.html",
    "title": "Class HTMLAudioElement | CSharpToJavaScript",
    "keywords": "Class HTMLAudioElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLAudioElement interface provides access to the properties of audio elements, as well as methods to manipulate them. [To(\"Default\")] public class HTMLAudioElement : HTMLMediaElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLMediaElement HTMLAudioElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLMediaElement.Error HTMLMediaElement.Src HTMLMediaElement.SrcObject HTMLMediaElement.CurrentSrc HTMLMediaElement.CrossOrigin HTMLMediaElement.NETWORK_EMPTY HTMLMediaElement.NETWORK_IDLE HTMLMediaElement.NETWORK_LOADING HTMLMediaElement.NETWORK_NO_SOURCE HTMLMediaElement.NetworkState HTMLMediaElement.Preload HTMLMediaElement.BufferingThrottled HTMLMediaElement.Load() HTMLMediaElement.CanPlayType(string) HTMLMediaElement.HAVE_NOTHING HTMLMediaElement.HAVE_METADATA HTMLMediaElement.HAVE_CURRENT_DATA HTMLMediaElement.HAVE_FUTURE_DATA HTMLMediaElement.HAVE_ENOUGH_DATA HTMLMediaElement.ReadyState HTMLMediaElement.Seeking HTMLMediaElement.CurrentTime HTMLMediaElement.FastSeek(Number) HTMLMediaElement.Duration HTMLMediaElement.GetStartDate() HTMLMediaElement.Paused HTMLMediaElement.DefaultPlaybackRate HTMLMediaElement.PlaybackRate HTMLMediaElement.PreservesPitch HTMLMediaElement.Played HTMLMediaElement.Seekable HTMLMediaElement.Ended HTMLMediaElement.Autoplay HTMLMediaElement.Loop HTMLMediaElement.Play() HTMLMediaElement.Pause() HTMLMediaElement.Controls HTMLMediaElement.Volume HTMLMediaElement.Muted HTMLMediaElement.DefaultMuted HTMLMediaElement.AudioTracks HTMLMediaElement.VideoTracks HTMLMediaElement.TextTracks HTMLMediaElement.AddTextTrack(TextTrackKind, string, string) HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This element is based on, and inherits properties and methods from, the HTMLMediaElement interface. -Web media technologies -Using audio and video in HTML -HTML element implementing this interface: audio. See also on MDN Constructors HTMLAudioElement() public HTMLAudioElement()"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLBRElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLBRElement.html",
    "title": "Class HTMLBRElement | CSharpToJavaScript",
    "keywords": "Class HTMLBRElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLBRElement interface represents an HTML line break element ({{htmlelement(\"br\")}}). It inherits from HTMLElement. [To(\"Default\")] public class HTMLBRElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLBRElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: br See also on MDN Constructors HTMLBRElement() public HTMLBRElement() Properties Clear [To(\"FirstCharToLowerCase\")] public string Clear { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLBaseElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLBaseElement.html",
    "title": "Class HTMLBaseElement | CSharpToJavaScript",
    "keywords": "Class HTMLBaseElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLBaseElement interface contains the base URI for a document. This object inherits all of the properties and methods as described in the HTMLElement interface. [To(\"Default\")] public class HTMLBaseElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLBaseElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: base See also on MDN Constructors HTMLBaseElement() public HTMLBaseElement() Properties Href [To(\"FirstCharToLowerCase\")] public string Href { get; set; } Property Value string Target [To(\"FirstCharToLowerCase\")] public string Target { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLBodyElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLBodyElement.html",
    "title": "Class HTMLBodyElement | CSharpToJavaScript",
    "keywords": "Class HTMLBodyElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLBodyElement interface provides special properties (beyond those inherited from the regular HTMLElement interface) for manipulating {{HtmlElement(\"body\")}} elements. [To(\"Default\")] public class HTMLBodyElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle, WindowEventHandlers Inheritance object EventTarget Node Element HTMLElement HTMLBodyElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle WindowEventHandlers Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: body See also on MDN Constructors HTMLBodyElement() public HTMLBodyElement() Properties ALink [To(\"FirstCharToLowerCase\")] public string ALink { get; set; } Property Value string Background [To(\"FirstCharToLowerCase\")] public string Background { get; set; } Property Value string BgColor [To(\"FirstCharToLowerCase\")] public string BgColor { get; set; } Property Value string Link [To(\"FirstCharToLowerCase\")] public string Link { get; set; } Property Value string Onorientationchange [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onorientationchange { get; set; } Property Value EventHandlerNonNull Text [To(\"FirstCharToLowerCase\")] public string Text { get; set; } Property Value string VLink [To(\"FirstCharToLowerCase\")] public string VLink { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLButtonElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLButtonElement.html",
    "title": "Class HTMLButtonElement | CSharpToJavaScript",
    "keywords": "Class HTMLButtonElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLButtonElement interface provides properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"button\")}} elements. [To(\"Default\")] public class HTMLButtonElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle, PopoverInvokerElement Inheritance object EventTarget Node Element HTMLElement HTMLButtonElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle PopoverInvokerElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: button See also on MDN Constructors HTMLButtonElement() public HTMLButtonElement() Properties Disabled The HTMLButtonElement.disabled property indicates whether the control is disabled, meaning that it does not accept any clicks. [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool A boolean value. Remarks See also on MDN Form [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement FormAction [To(\"FirstCharToLowerCase\")] public string FormAction { get; set; } Property Value string FormEnctype [To(\"FirstCharToLowerCase\")] public string FormEnctype { get; set; } Property Value string FormMethod [To(\"FirstCharToLowerCase\")] public string FormMethod { get; set; } Property Value string FormNoValidate [To(\"FirstCharToLowerCase\")] public bool FormNoValidate { get; set; } Property Value bool FormTarget [To(\"FirstCharToLowerCase\")] public string FormTarget { get; set; } Property Value string Labels The HTMLButtonElement.labels read-only property returns a NodeList of the {{HTMLElement(\"label\")}} elements associated with the button element. [To(\"FirstCharToLowerCase\")] public NodeList Labels { get; } Property Value NodeList A NodeList containing the &lt;label&gt; elements associated with the &lt;button&gt; element. Remarks See also on MDN Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string ValidationMessage [To(\"FirstCharToLowerCase\")] public string ValidationMessage { get; } Property Value string Validity [To(\"FirstCharToLowerCase\")] public ValidityState Validity { get; } Property Value ValidityState Value [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string WillValidate [To(\"FirstCharToLowerCase\")] public bool WillValidate { get; } Property Value bool Methods CheckValidity() [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool ReportValidity() [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool SetCustomValidity(string) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetCustomValidity(string error) Parameters error string Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLCanvasElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLCanvasElement.html",
    "title": "Class HTMLCanvasElement | CSharpToJavaScript",
    "keywords": "Class HTMLCanvasElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLCanvasElement interface provides properties and methods for manipulating the layout and presentation of canvas elements. The HTMLCanvasElement interface also inherits the properties and methods of the HTMLElement interface. [To(\"Default\")] public class HTMLCanvasElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLCanvasElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: canvas See also on MDN Constructors HTMLCanvasElement() public HTMLCanvasElement() Properties Height The HTMLCanvasElement.height property is a positive integer reflecting the height HTML attribute of the canvas element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of 150 is used. [To(\"FirstCharToLowerCase\")] public ulong Height { get; set; } Property Value ulong A number. Remarks This is one of the two properties, the other being Width, that controls the size of the canvas. -HTMLCanvasElement: Interface used to define the HTMLCanvasElement.height property -Width: Other property used to control the size of the canvas See also on MDN Width The HTMLCanvasElement.width property is a positive integer reflecting the width HTML attribute of the canvas element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of 300 is used. [To(\"FirstCharToLowerCase\")] public ulong Width { get; set; } Property Value ulong A number. Remarks This is one of the two properties, the other being Height, that controls the size of the canvas. -HTMLCanvasElement: Interface used to define the HTMLCanvasElement.width property -Height: Other property used to control the size of the canvas See also on MDN Methods GetContext(string, dynamic) The HTMLCanvasElement.getContext() method returns a drawing context on the canvas, or null if the context identifier is not supported, or the canvas has already been set to a different context mode. [To(\"FirstCharToLowerCase\")] public Union14? GetContext(string contextId, dynamic options) Parameters contextId string options dynamic Returns Union14? A rendering context which is either aIf the contextType doesn&apos;t match a possible drawing context, or differs from the first contextType requested, null is returned. Remarks Later calls to this method on the same canvas element, with the same contextType argument, will always return the same drawing context instance as was returned the first time the method was invoked. It is not possible to get a different drawing context object on a given canvas element. -HTMLCanvasElement: Interface used to define the HTMLCanvasElement.getContext() method -GetContext(OffscreenRenderingContextId, dynamic) -GetContextAttributes(), WebGLRenderingContext.GetContextAttributes -CanvasRenderingContext2D, ImageBitmapRenderingContext, WebGLRenderingContext, WebGL2RenderingContext, GPUCanvasContext: Available rendering contexts -DCI-P3 color space on Wikipedia -sRGB color space on Wikipedia See also on MDN ToBlob(BlobCallback, string, dynamic) The HTMLCanvasElement.toBlob() method creates a Blob object representing the image contained in the canvas. This file may be cached on the disk or stored in memory at the discretion of the user agent. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined ToBlob(BlobCallback callback, string type, dynamic quality) Parameters callback BlobCallback type string quality dynamic Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The desired file format and image quality may be specified. If the file format is not specified, or if the given format is not supported, then the data will be exported as image/png. Browsers are required to support image/png; many will support additional formats including image/jpeg and image/webp. The created image will have a resolution of 96dpi for file formats that support encoding resolution metadata. -Blob See also on MDN ToDataURL(string, dynamic) The HTMLCanvasElement.toDataURL() method returns a data URL containing a representation of the image in the format specified by the type parameter. [To(\"FirstCharToLowerCase\")] public string ToDataURL(string type, dynamic quality) Parameters type string quality dynamic Returns string A string containing the requested data URL.If the height or width of the canvas is 0 or larger than the maximum canvas size, the string &quot;data:,&quot; is returned. Remarks The desired file format and image quality may be specified. If the file format is not specified, or if the given format is not supported, then the data will be exported as image/png. In other words, if the returned value starts with data:image/png for any other requested type, then that format is not supported. Browsers are required to support image/png; many will support additional formats including image/jpeg and image/webp. The created image data will have a resolution of 96dpi for file formats that support encoding resolution metadata. -Data URLs in the HTTP reference. See also on MDN TransferControlToOffscreen() The HTMLCanvasElement.transferControlToOffscreen() method transfers control to an OffscreenCanvas object, either on the main thread or on a worker. [To(\"FirstCharToLowerCase\")] public OffscreenCanvas TransferControlToOffscreen() Returns OffscreenCanvas An OffscreenCanvas object. Remarks -The interface defining this method, HTMLCanvasElement -OffscreenCanvas See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLCollection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLCollection.html",
    "title": "Class HTMLCollection | CSharpToJavaScript",
    "keywords": "Class HTMLCollection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLCollection interface represents a generic collection (array-like object similar to Functions/arguments) of elements (in document order) and offers methods and properties for selecting from the list. [To(\"Default\")] public class HTMLCollection Inheritance object HTMLCollection Derived HTMLFormControlsCollection HTMLOptionsCollection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: This interface is called HTMLCollection for historical reasons (before the modern DOM, collections implementing this interface could only have HTML elements as their items). An HTMLCollection in the HTML DOM is live; it is automatically updated when the underlying document is changed. For this reason it is a good idea to make a copy (e.g., using Array/from) to iterate over if adding, moving, or removing nodes. NOTE Note: This interface was an attempt to create an unmodifiable list and only continues to be supported to not break code that&apos;s already using it. Modern APIs use types that wrap around ECMAScript array types instead, so you can treat them like ECMAScript arrays, and at the same time impose additional semantics on their usage (such as making their items read-only). -NodeList -HTMLFormControlsCollection, HTMLOptionsCollection See also on MDN Properties Length The HTMLCollection.length property returns the number of items in a HTMLCollection. [To(\"FirstCharToLowerCase\")] public ulong Length { get; } Property Value ulong An integer value representing the number of items in a HTMLCollection. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLDListElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLDListElement.html",
    "title": "Class HTMLDListElement | CSharpToJavaScript",
    "keywords": "Class HTMLDListElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLDListElement interface provides special properties (beyond those of the regular HTMLElement interface it also has available to it by inheritance) for manipulating definition list ({{HtmlElement(\"dl\")}}) elements. [To(\"Default\")] public class HTMLDListElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLDListElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: dl See also on MDN Constructors HTMLDListElement() public HTMLDListElement() Properties Compact [To(\"FirstCharToLowerCase\")] public bool Compact { get; set; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLDataElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLDataElement.html",
    "title": "Class HTMLDataElement | CSharpToJavaScript",
    "keywords": "Class HTMLDataElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLDataElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"data\")}} elements. [To(\"Default\")] public class HTMLDataElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLDataElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: data. See also on MDN Constructors HTMLDataElement() public HTMLDataElement() Properties Value The value property of the HTMLDataElement interface returns a string reflecting the value HTML attribute. [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string A string. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLDataListElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLDataListElement.html",
    "title": "Class HTMLDataListElement | CSharpToJavaScript",
    "keywords": "Class HTMLDataListElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLDataListElement interface provides special properties (beyond the HTMLElement object interface it also has available to it by inheritance) to manipulate {{ HTMLElement(\"datalist\") }} elements and their content. [To(\"Default\")] public class HTMLDataListElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLDataListElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: datalist See also on MDN Constructors HTMLDataListElement() public HTMLDataListElement() Properties Options [To(\"FirstCharToLowerCase\")] public HTMLCollection Options { get; } Property Value HTMLCollection"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLDetailsElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLDetailsElement.html",
    "title": "Class HTMLDetailsElement | CSharpToJavaScript",
    "keywords": "Class HTMLDetailsElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLDetailsElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"details\")}} elements. [To(\"Default\")] public class HTMLDetailsElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLDetailsElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: details See also on MDN Constructors HTMLDetailsElement() public HTMLDetailsElement() Properties Open The open property of the HTMLDetailsElement interface is a boolean value reflecting the open HTML attribute, indicating whether the details's contents (not counting the summary) is to be shown to the user. [To(\"FirstCharToLowerCase\")] public bool Open { get; set; } Property Value bool A boolean value.The boolean value represents the state of the open HTML attribute. The value of true means it is set with both the summary and the additional information shown to the user. The false value means it not set, with only the summary shown. Remarks -The details and summary elements See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLDialogElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLDialogElement.html",
    "title": "Class HTMLDialogElement | CSharpToJavaScript",
    "keywords": "Class HTMLDialogElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLDialogElement interface provides methods to manipulate {{HTMLElement(\"dialog\")}} elements. It inherits properties and methods from the HTMLElement interface. [To(\"Default\")] public class HTMLDialogElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLDialogElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: dialog. See also on MDN Constructors HTMLDialogElement() public HTMLDialogElement() Properties Open The open property of the HTMLDialogElement interface is a boolean value reflecting the open HTML attribute, indicating whether the dialog is available for interaction. [To(\"FirstCharToLowerCase\")] public bool Open { get; set; } Property Value bool A boolean value representing the state of the open HTML attribute. true means it is set, and therefore the dialog is shown. false means it not set, and therefore the dialog is not shown.The property is not read only — it is possible to set the value to programmatically show or hide the dialog. Remarks -The HTML element implementing this interface: dialog. See also on MDN ReturnValue The returnValue property of the HTMLDialogElement interface gets or sets the return value for the dialog, usually to indicate which button the user pressed to close it. [To(\"FirstCharToLowerCase\")] public string ReturnValue { get; set; } Property Value string A string representing the returnValue of the dialog. Remarks -The HTML element implementing this interface: dialog. See also on MDN Methods Close(string) The close() method of the HTMLDialogElement interface closes the {{htmlelement(\"dialog\")}}. An optional string may be passed as an argument, updating the returnValue of the dialog. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Close(string returnValue) Parameters returnValue string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The HTML element implementing this interface: dialog. See also on MDN Show() The show() method of the HTMLDialogElement interface displays the dialog modelessly, i.e. still allowing interaction with content outside of the dialog. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Show() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The HTML element implementing this interface: dialog. See also on MDN ShowModal() The showModal() method of the HTMLDialogElement interface displays the dialog as a modal, over the top of any other dialogs that might be present. It displays in the top layer, along with a {{cssxref(&apos;::backdrop&apos;)}} pseudo-element. Interaction outside the dialog is blocked and the content outside it is rendered inert. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined ShowModal() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The HTML element implementing this interface: dialog. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLDirectoryElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLDirectoryElement.html",
    "title": "Class HTMLDirectoryElement | CSharpToJavaScript",
    "keywords": "Class HTMLDirectoryElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class HTMLDirectoryElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLDirectoryElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HTMLDirectoryElement() public HTMLDirectoryElement() Properties Compact [To(\"FirstCharToLowerCase\")] public bool Compact { get; set; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLDivElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLDivElement.html",
    "title": "Class HTMLDivElement | CSharpToJavaScript",
    "keywords": "Class HTMLDivElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLDivElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HtmlElement(\"div\")}} elements. [To(\"Default\")] public class HTMLDivElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLDivElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: div. See also on MDN Constructors HTMLDivElement() public HTMLDivElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLElement.html",
    "title": "Class HTMLElement | CSharpToJavaScript",
    "keywords": "Class HTMLElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll They are grouped by function to help you find what you have in mind easily. An alphabetical list of all elements is provided in the sidebar on every element&apos;s page as well as this one. [To(\"Default\")] public class HTMLElement : Element, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Derived HTMLAnchorElement HTMLAreaElement HTMLBRElement HTMLBaseElement HTMLBodyElement HTMLButtonElement HTMLCanvasElement HTMLDListElement HTMLDataElement HTMLDataListElement HTMLDetailsElement HTMLDialogElement HTMLDirectoryElement HTMLDivElement HTMLEmbedElement HTMLFieldSetElement HTMLFontElement HTMLFormElement HTMLFrameElement HTMLFrameSetElement HTMLHRElement HTMLHeadElement HTMLHeadingElement HTMLHtmlElement HTMLIFrameElement HTMLImageElement HTMLInputElement HTMLLIElement HTMLLabelElement HTMLLegendElement HTMLLinkElement HTMLMapElement HTMLMarqueeElement HTMLMediaElement HTMLMenuElement HTMLMetaElement HTMLMeterElement HTMLModElement HTMLOListElement HTMLObjectElement HTMLOptGroupElement HTMLOptionElement HTMLOutputElement HTMLParagraphElement HTMLParamElement HTMLPictureElement HTMLPreElement HTMLProgressElement HTMLQuoteElement HTMLScriptElement HTMLSelectElement HTMLSlotElement HTMLSourceElement HTMLSpanElement HTMLStyleElement HTMLTableCaptionElement HTMLTableCellElement HTMLTableColElement HTMLTableElement HTMLTableRowElement HTMLTableSectionElement HTMLTemplateElement HTMLTextAreaElement HTMLTimeElement HTMLTitleElement HTMLTrackElement HTMLUListElement HTMLUnknownElement Inherited Members Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: For more information about the basics of HTML elements and attributes, see the section on elements in the Introduction to HTML article. -Element. interface See also on MDN Constructors HTMLElement() public HTMLElement() Properties AccessKey The HTMLElement.accessKey property sets the keystroke which a user can press to jump to a given element. [To(\"FirstCharToLowerCase\")] public string AccessKey { get; set; } Property Value string Remarks NOTE Note: The HTMLElement.accessKey property is seldom used because of its multiple conflicts with already present key bindings in browsers. To work around this, browsers implement accesskey behavior if the keys are pressed with other &quot;qualifying&quot; keys (such as &lt;kbd&gt;Alt&lt;/kbd&gt; + accesskey). -HTML global attribute: accesskey See also on MDN AccessKeyLabel The HTMLElement.accessKeyLabel read-only property returns a string containing the element&apos;s browser-assigned access key (if any); otherwise it returns an empty string. [To(\"FirstCharToLowerCase\")] public string AccessKeyLabel { get; } Property Value string Remarks -AccessKey -The accesskey global attribute. See also on MDN Autocapitalize [To(\"FirstCharToLowerCase\")] public string Autocapitalize { get; set; } Property Value string Dir IMPORTANT Deprecated The &lt;dir&gt; HTML element is used as a container for a directory of files and/or folders, potentially with styles and icons applied by the user agent. Do not use this obsolete element; instead, you should use the {{HTMLElement(\"ul\")}} element for lists, including lists of files. [To(\"FirstCharToLowerCase\")] public string Dir { get; set; } Property Value string Remarks WARNING Warning: Do not use this element. Though present in early HTML specifications, it has been deprecated in HTML 4, and has since been removed entirely. No major browsers support this element. -Other list-related HTML Elements: ol, ul, li, and menu; -CSS properties that may be specially useful to style the &lt;dir&gt; element:-The 'list-style' property, useful to choose the way the ordinal is displayed. -CSS counters, useful to handle complex nested lists. -The 'line-height' property, useful to simulate the deprecated compact attribute. -The 'margin' property, useful to control the indent of the list. See also on MDN Draggable [To(\"FirstCharToLowerCase\")] public bool Draggable { get; set; } Property Value bool Hidden The HTMLElement property hidden reflects the value of the element&apos;s hidden attribute. [To(\"FirstCharToLowerCase\")] public Union6? Hidden { get; set; } Property Value Union6? This attribute may have one of three values:For details on the usage of this attribute, see the page for the hidden HTML attribute that this property reflects. Remarks -hidden attribute -display See also on MDN Inert The HTMLElement property inert reflects the value of the element&apos;s inert attribute. It is a boolean value that, when present, makes the browser &quot;ignore&quot; user input events for the element, including focus events and events from assistive technologies. The browser may also ignore page search and text selection in the element. This can be useful when building UIs such as modals where you would want to &quot;trap&quot; the focus inside the modal when it&apos;s visible. [To(\"FirstCharToLowerCase\")] public bool Inert { get; set; } Property Value bool A Boolean which is true if the element is inert; otherwise, the value is false. Remarks NOTE Note: Do not nest interactive elements or important content within elements with the inert attribute as inert content and their descendants are neither focusable nor perceivable by all users. -Global attribute: inert -dialog -Inert Polyfill -Disabled See also on MDN InnerText The innerText property of the HTMLElement interface represents the rendered text content of a node and its descendants. [To(\"FirstCharToLowerCase\")] public string InnerText { get; set; } Property Value string A string representing the rendered text content of an element.If the element itself is not being rendered (for example, is detached from the document or is hidden from view), the returned value is the same as the TextContent property. WARNING Warning: Setting innerText on a node removes all of the node&apos;s children and replaces them with a single text node with the given string value. Remarks As a getter, it approximates the text the user would get if they highlighted the contents of the element with the cursor and then copied it to the clipboard. As a setter this will replace the element's children with the given value, converting any line breaks into br elements. NOTE Note: innerText is easily confused with TextContent, but there are important differences between the two. Basically, innerText is aware of the rendered appearance of text, while textContent is not. -OuterText -InnerHTML See also on MDN Lang The HTMLElement.lang property gets or sets the base language of an element&apos;s attribute values and text content. [To(\"FirstCharToLowerCase\")] public string Lang { get; set; } Property Value string A string. Remarks The language code returned by this property is defined in {{RFC(5646, \"Tags for Identifying Languages (also known as BCP 47)\")}}. Common examples include &quot;en&quot; for English, &quot;ja&quot; for Japanese, &quot;es&quot; for Spanish and so on. The default value of this attribute is unknown. Note that this attribute, though valid at the individual element level described here, is most often specified for the root element of the document. This also only works with the lang attribute and not with xml:lang. See also on MDN OuterText The outerText property of the HTMLElement interface returns the same value as InnerText. When used as a setter it replaces the whole current node with the given text (this differs from innerText, which replaces the content inside the current node). [To(\"FirstCharToLowerCase\")] public string OuterText { get; set; } Property Value string A string representing the rendered text content of an element and its descendants.If the element itself is not being rendered (for example, is detached from the document or is hidden from view), the returned value is the same as the TextContent property.When used as a setter it replaces the current node with the given text, converting any line breaks into br elements. Remarks See InnerText for more information and examples showing how both properties are used as getters. -InnerText -OuterHTML See also on MDN Popover The popover property of the HTMLElement interface gets and sets an element's popover state via JavaScript (&quot;auto&quot; or &quot;manual&quot;), and can be used for feature detection. [To(\"FirstCharToLowerCase\")] public string? Popover { get; set; } Property Value string An enumerated value; possible values are: Remarks It reflects the value of the popover global HTML attribute. -Popover API See also on MDN Spellcheck [To(\"FirstCharToLowerCase\")] public bool Spellcheck { get; set; } Property Value bool Style [To(\"FirstCharToLowerCase\")] public CSSStyleDeclaration Style { get; } Property Value CSSStyleDeclaration Title The &lt;title&gt; HTML element defines the document's title that is shown in a Browser's title bar or a page's tab. It only contains text; tags within the element are ignored. [To(\"FirstCharToLowerCase\")] public string Title { get; set; } Property Value string Remarks -SVG &lt;title&gt; element See also on MDN Translate [To(\"FirstCharToLowerCase\")] public bool Translate { get; set; } Property Value bool Methods AttachInternals() The HTMLElement.attachInternals() method returns an ElementInternals object. This method allows a custom element to participate in HTML forms. The ElementInternals interface provides utilities for working with these elements in the same way you would work with any standard HTML form element, and also exposes the Accessibility Object Model to the element. [To(\"FirstCharToLowerCase\")] public ElementInternals AttachInternals() Returns ElementInternals An ElementInternals object. Remarks -More capable form controls -Creating custom form controls with ElementInternals See also on MDN Click() The HTMLElement.click() method simulates a mouse click on an element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Click() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks When click() is used with supported elements (such as an input), it fires the element's click event. This event then bubbles up to elements higher in the document tree (or event chain) and fires their click events. -Related event handlers-Element.Click_event -Element.Dblclick_event -Element.Auxclick_event See also on MDN HidePopover() The hidePopover() method of the HTMLElement interface hides a {{domxref(\"Popover_API\", \"popover\", &quot;&quot;, &quot;nocode&quot;)}} element (i.e. one that has a valid popover attribute) by removing it from the top layer and styling it with display: none. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined HidePopover() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks When hidePopover() is called on a showing element with the popover attribute, a HTMLElement/beforetoggle_event event will be fired, followed by the popover being hidden, and then the HTMLElement/toggle_event event firing. If the element is already hidden, an error is thrown. -Popover API See also on MDN ShowPopover() The showPopover() method of the HTMLElement interface shows a {{domxref(\"Popover_API\", \"popover\", &quot;&quot;, &quot;nocode&quot;)}} element (i.e. one that has a valid popover attribute) by adding it to the top layer. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined ShowPopover() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks When showPopover() is called on an element with the popover attribute that is currently hidden, a HTMLElement/beforetoggle_event event will be fired, followed by the popover showing, and then the HTMLElement/toggle_event event firing. If the element is already showing, an error will be thrown. -Popover API See also on MDN TogglePopover(bool) The togglePopover() method of the HTMLElement interface toggles a {{domxref(\"Popover_API\", \"popover\", &quot;&quot;, &quot;nocode&quot;)}} element (i.e. one that has a valid popover attribute) between the hidden and showing states. [To(\"FirstCharToLowerCase\")] public bool TogglePopover(bool force) Parameters force bool Returns bool None (GlobalObject.Undefined). Remarks When togglePopover() is called on an element with the popover attribute: -Popover API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLEmbedElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLEmbedElement.html",
    "title": "Class HTMLEmbedElement | CSharpToJavaScript",
    "keywords": "Class HTMLEmbedElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLEmbedElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"embed\")}} elements. [To(\"Default\")] public class HTMLEmbedElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLEmbedElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: This topic describes the HTMLEmbedElement interface as defined in the standard. It does not address earlier, non-standardized version of the interface. -The HTML element implementing this interface: embed See also on MDN Constructors HTMLEmbedElement() public HTMLEmbedElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Height [To(\"FirstCharToLowerCase\")] public string Height { get; set; } Property Value string Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Src [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string Width [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string Methods GetSVGDocument() [To(\"FirstCharToLowerCase\")] public Document? GetSVGDocument() Returns Document"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLFieldSetElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLFieldSetElement.html",
    "title": "Class HTMLFieldSetElement | CSharpToJavaScript",
    "keywords": "Class HTMLFieldSetElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLFieldSetElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{ HTMLElement(\"fieldset\") }} elements. [To(\"Default\")] public class HTMLFieldSetElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLFieldSetElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: fieldset. See also on MDN Constructors HTMLFieldSetElement() public HTMLFieldSetElement() Properties Disabled [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool Elements [To(\"FirstCharToLowerCase\")] public HTMLCollection Elements { get; } Property Value HTMLCollection Form [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; } Property Value string ValidationMessage [To(\"FirstCharToLowerCase\")] public string ValidationMessage { get; } Property Value string Validity [To(\"FirstCharToLowerCase\")] public ValidityState Validity { get; } Property Value ValidityState WillValidate [To(\"FirstCharToLowerCase\")] public bool WillValidate { get; } Property Value bool Methods CheckValidity() [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool ReportValidity() [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool SetCustomValidity(string) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetCustomValidity(string error) Parameters error string Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLFontElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLFontElement.html",
    "title": "Class HTMLFontElement | CSharpToJavaScript",
    "keywords": "Class HTMLFontElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated Implements the document object model (DOM) representation of the font element. The HTML Font Element font defines the font size, font face and color of text. [To(\"Default\")] public class HTMLFontElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLFontElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: font. See also on MDN Constructors HTMLFontElement() public HTMLFontElement() Properties Color IMPORTANT Deprecated The obsolete HTMLFontElement.color property is a string that reflects the color HTML attribute, containing either a named color or a color specified in the hexadecimal #RRGGBB format. [To(\"FirstCharToLowerCase\")] public string Color { get; set; } Property Value string A string. Remarks The format of the string must follow one of the following HTML microsyntaxes: Microsyntax Description Examples Valid name color string nameOfColor (case insensitive) Green, green, GREEN Valid hex color string in color_value: #RRGGBB #008000 RGB using decimal values rgb(x,x,x) (x in 0-255 range) rgb(0,128,0) -The HTMLFontElement interface it belongs to. See also on MDN Face IMPORTANT Deprecated The obsolete HTMLFontElement.face property is a string that reflects the face HTML attribute, containing a comma-separated list of one or more font names. [To(\"FirstCharToLowerCase\")] public string Face { get; set; } Property Value string A string. Remarks The document text, in the default style, is rendered as the first font face that the client&apos;s browser supports. If no font listed is installed on the local system, the browser typically defaults to the proportional or fixed-width font for that system. The format of the string must follow one of the following HTML microsyntax: Microsyntax Description Examples List of one or more valid font family names A list of font names, that have to be present on the local system courier,verdana -The HTMLFontElement interface it belongs to. See also on MDN Size IMPORTANT Deprecated The obsolete HTMLFontElement.size property is a string that reflects the size HTML attribute. It contains either a font size ranging from 1 to 7 or a number relative to the default value 3, for example -2 or +1. [To(\"FirstCharToLowerCase\")] public string Size { get; set; } Property Value string A string. Remarks The format of the string must follow one of the following HTML microsyntaxes: -The HTMLFontElement interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLFormControlsCollection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLFormControlsCollection.html",
    "title": "Class HTMLFormControlsCollection | CSharpToJavaScript",
    "keywords": "Class HTMLFormControlsCollection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLFormControlsCollection interface represents a collection of HTML form control elements, returned by the HTMLFormElement interface's Elements property. [To(\"Default\")] public class HTMLFormControlsCollection : HTMLCollection Inheritance object HTMLCollection HTMLFormControlsCollection Inherited Members HTMLCollection.Length object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface replaces one method from HTMLCollection, on which it is based. -HTMLCollection, RadioNodeList, HTMLOptionsCollection See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLFormElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLFormElement.html",
    "title": "Class HTMLFormElement | CSharpToJavaScript",
    "keywords": "Class HTMLFormElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLFormElement interface represents a form element in the DOM. It allows access to—and, in some cases, modification of—aspects of the form, as well as access to its component elements. [To(\"Default\")] public class HTMLFormElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLFormElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: form. See also on MDN Constructors HTMLFormElement() public HTMLFormElement() Properties AcceptCharset The HTMLFormElement.acceptCharset property represents a list of the supported character encodings for the given form element. This list can be comma-separated or space-separated. [To(\"FirstCharToLowerCase\")] public string AcceptCharset { get; set; } Property Value string A string. Remarks See also on MDN Action The HTMLFormElement.action property represents the action of the form element. [To(\"FirstCharToLowerCase\")] public string Action { get; set; } Property Value string A string. Remarks The action of a form is the program that is executed on the server when the form is submitted. This property can be retrieved or set. See also on MDN Autocomplete [To(\"FirstCharToLowerCase\")] public string Autocomplete { get; set; } Property Value string Elements The HTMLFormElement property elements returns an HTMLFormControlsCollection listing all the form controls contained in the form element. [To(\"FirstCharToLowerCase\")] public HTMLFormControlsCollection Elements { get; } Property Value HTMLFormControlsCollection An HTMLFormControlsCollection containing all non-image controls in the form. This is a live collection; if form controls are added to or removed from the form, this collection will update to reflect the change.The form controls in the returned collection are in the same order in which they appear in the form by following a preorder, depth-first traversal of the tree. This is called tree order.Only the following elements are returned: Remarks Independently, you can obtain just the number of form controls using the Length property. You can access a particular form control in the returned collection by using either an index or the element&apos;s name or id attributes. Prior to HTML 5, the returned object was an HTMLCollection, on which HTMLFormControlsCollection is based. NOTE Note: Similarly, you can get a list of all of the forms contained within a given document using the document's Forms property. See also on MDN Encoding The HTMLFormElement.encoding property is an alternative name for the Enctype element on the DOM HTMLFormElement object. [To(\"FirstCharToLowerCase\")] public string Encoding { get; set; } Property Value string Remarks See also on MDN Enctype The HTMLFormElement.enctype property is the MIME type of content that is used to submit the form to the server. Possible values are: [To(\"FirstCharToLowerCase\")] public string Enctype { get; set; } Property Value string A string. Remarks This value can be overridden by a formenctype attribute on a button or input element. See also on MDN Length The HTMLFormElement.length read-only property returns the number of controls in the form element. [To(\"FirstCharToLowerCase\")] public ulong Length { get; } Property Value ulong A number. Remarks You can access the list of the form&apos;s controls using the Elements property. This includes both elements that are descendants of the &lt;form&gt; element as well as elements that are made members of the form using their form property. Elements that are considered for this property are: button, fieldset, input (with the exception that any whose type is &quot;image&quot; are omitted for historical reasons), object, output, select, and textarea. See also on MDN Method The HTMLFormElement.method property represents the HTTP method used to submit the {{HtmlElement(\"form\")}}. [To(\"FirstCharToLowerCase\")] public string Method { get; set; } Property Value string A string. Remarks Unless explicitly specified, the default method is &apos;get&apos;. See also on MDN Name The HTMLFormElement.name property represents the name of the current form element as a string. [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string A string. Remarks If your Form element contains an element named name then that element overrides the form.name property, so that you can&apos;t access it. See also on MDN NoValidate [To(\"FirstCharToLowerCase\")] public bool NoValidate { get; set; } Property Value bool Rel [To(\"FirstCharToLowerCase\")] public string Rel { get; set; } Property Value string RelList [To(\"FirstCharToLowerCase\")] public DOMTokenList RelList { get; } Property Value DOMTokenList Target The target property of the HTMLFormElement interface represents the target of the form&apos;s action (i.e., the frame in which to render its output). [To(\"FirstCharToLowerCase\")] public string Target { get; set; } Property Value string A string. Remarks See also on MDN Methods CheckValidity() [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool ReportValidity() The HTMLFormElement.reportValidity() method returns true if the element&apos;s child controls satisfy their validation constraints. When false is returned, cancelable invalid events are fired for each invalid child and validation problems are reported to the user. [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool true or false Remarks See also on MDN RequestSubmit(HTMLElement?) The HTMLFormElement method requestSubmit() requests that the form be submitted using a specific submit button. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined RequestSubmit(HTMLElement? submitter) Parameters submitter HTMLElement Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Reset() The HTMLFormElement.reset() method restores a form element&apos;s default values. This method does the same thing as clicking the form&apos;s &lt;input type=&quot;reset&quot;&gt; control. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Reset() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If a form control (such as a reset button) has a name or id of reset it will mask the form&apos;s reset method. It does not reset other attributes in the input, such as disabled. Note that if SetAttribute(string, string) is called to set the value of a particular attribute, a subsequent call to reset() won&apos;t reset the attribute to its default value, but instead will keep the attribute at whatever value the SetAttribute(string, string) call set it to. See also on MDN Submit() The HTMLFormElement.submit() method submits a given form. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Submit() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method is similar, but not identical to, activating a form&apos;s submit button. When invoking this method directly, however: The RequestSubmit(HTMLElement?) method is identical to activating a form's submit button and does not have these differences. A form control (such as a submit button) with a name or id of submit will mask the form&apos;s submit method. Trying to call myForm.submit(); throws an error &quot;submit is not a function&quot; because in this case submit refers to the form control which has a name or id of submit. input with attribute type=\"submit\" will not be submitted with the form when using HTMLFormElement.submit(), but it would be submitted when you do it with original HTML form submit. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLFrameElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLFrameElement.html",
    "title": "Class HTMLFrameElement | CSharpToJavaScript",
    "keywords": "Class HTMLFrameElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class HTMLFrameElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLFrameElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HTMLFrameElement() public HTMLFrameElement() Properties ContentDocument [To(\"FirstCharToLowerCase\")] public Document? ContentDocument { get; } Property Value Document ContentWindow [To(\"FirstCharToLowerCase\")] public Window? ContentWindow { get; } Property Value Window FrameBorder [To(\"FirstCharToLowerCase\")] public string FrameBorder { get; set; } Property Value string LongDesc [To(\"FirstCharToLowerCase\")] public string LongDesc { get; set; } Property Value string MarginHeight [To(\"FirstCharToLowerCase\")] public string MarginHeight { get; set; } Property Value string MarginWidth [To(\"FirstCharToLowerCase\")] public string MarginWidth { get; set; } Property Value string Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string NoResize [To(\"FirstCharToLowerCase\")] public bool NoResize { get; set; } Property Value bool Scrolling [To(\"FirstCharToLowerCase\")] public string Scrolling { get; set; } Property Value string Src [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLFrameSetElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLFrameSetElement.html",
    "title": "Class HTMLFrameSetElement | CSharpToJavaScript",
    "keywords": "Class HTMLFrameSetElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The HTMLFrameSetElement interface provides special properties (beyond those of the regular HTMLElement interface they also inherit) for manipulating {{HTMLELEment(\"frameset\")}} elements. [To(\"Default\")] public class HTMLFrameSetElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle, WindowEventHandlers Inheritance object EventTarget Node Element HTMLElement HTMLFrameSetElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle WindowEventHandlers Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: frameset -The equivalent of this element outside of frames: HTMLFrameSetElement. See also on MDN Constructors HTMLFrameSetElement() public HTMLFrameSetElement() Properties Cols [To(\"FirstCharToLowerCase\")] public string Cols { get; set; } Property Value string Rows [To(\"FirstCharToLowerCase\")] public string Rows { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLHRElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLHRElement.html",
    "title": "Class HTMLHRElement | CSharpToJavaScript",
    "keywords": "Class HTMLHRElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLHRElement interface provides special properties (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"hr\")}} elements. [To(\"Default\")] public class HTMLHRElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLHRElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: hr See also on MDN Constructors HTMLHRElement() public HTMLHRElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Color [To(\"FirstCharToLowerCase\")] public string Color { get; set; } Property Value string NoShade [To(\"FirstCharToLowerCase\")] public bool NoShade { get; set; } Property Value bool Size [To(\"FirstCharToLowerCase\")] public string Size { get; set; } Property Value string Width [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLHeadElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLHeadElement.html",
    "title": "Class HTMLHeadElement | CSharpToJavaScript",
    "keywords": "Class HTMLHeadElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLHeadElement interface contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the HTMLElement interface. [To(\"Default\")] public class HTMLHeadElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLHeadElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: head See also on MDN Constructors HTMLHeadElement() public HTMLHeadElement()"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLHeadingElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLHeadingElement.html",
    "title": "Class HTMLHeadingElement | CSharpToJavaScript",
    "keywords": "Class HTMLHeadingElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLHeadingElement interface represents the different heading elements, &lt;h1&gt; through &lt;h6&gt;. It inherits methods and properties from the HTMLElement interface. [To(\"Default\")] public class HTMLHeadingElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLHeadingElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: Heading_Elements, Heading_Elements, Heading_Elements, Heading_Elements, Heading_Elements, and Heading_Elements. See also on MDN Constructors HTMLHeadingElement() public HTMLHeadingElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLHtmlElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLHtmlElement.html",
    "title": "Class HTMLHtmlElement | CSharpToJavaScript",
    "keywords": "Class HTMLHtmlElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLHtmlElement interface serves as the root node for a given HTML document. This object inherits the properties and methods described in the HTMLElement interface. [To(\"Default\")] public class HTMLHtmlElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLHtmlElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can retrieve the HTMLHtmlElement object for a given document by reading the value of the DocumentElement property. -HTML element implementing this interface: html. See also on MDN Constructors HTMLHtmlElement() public HTMLHtmlElement() Properties Version IMPORTANT Deprecated NOTE Note: This property has been declared as deprecated by the W3C technical recommendation for HTML 4.01 in favor of use of the DTD for obtaining version information for a document. [To(\"FirstCharToLowerCase\")] public string Version { get; set; } Property Value string Remarks Returns version information about the document type definition (DTD) of a document. While this property is recognized by Mozilla, the return value for this property is always an empty string. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLHyperlinkElementUtils.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLHyperlinkElementUtils.html",
    "title": "Interface HTMLHyperlinkElementUtils | CSharpToJavaScript",
    "keywords": "Interface HTMLHyperlinkElementUtils Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface HTMLHyperlinkElementUtils Properties Hash string Hash { get; set; } Property Value string Host string Host { get; set; } Property Value string Hostname string Hostname { get; set; } Property Value string Href string Href { get; set; } Property Value string Origin string Origin { get; } Property Value string Password string Password { get; set; } Property Value string Pathname string Pathname { get; set; } Property Value string Port string Port { get; set; } Property Value string Protocol string Protocol { get; set; } Property Value string Search string Search { get; set; } Property Value string Username string Username { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLIFrameElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLIFrameElement.html",
    "title": "Class HTMLIFrameElement | CSharpToJavaScript",
    "keywords": "Class HTMLIFrameElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLIFrameElement interface provides special properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of inline frame elements. [To(\"Default\")] public class HTMLIFrameElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLIFrameElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: iframe See also on MDN Constructors HTMLIFrameElement() public HTMLIFrameElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Allow [To(\"FirstCharToLowerCase\")] public string Allow { get; set; } Property Value string AllowFullscreen [To(\"FirstCharToLowerCase\")] public bool AllowFullscreen { get; set; } Property Value bool ContentDocument If the iframe and the iframe&apos;s parent document are Same Origin, returns a Document (that is, the active document in the inline frame&apos;s nested browsing context), else returns null. [To(\"FirstCharToLowerCase\")] public Document? ContentDocument { get; } Property Value Document Remarks See also on MDN ContentWindow The contentWindow property returns the Window object of an HTMLIFrameElement. You can use this Window object to access the iframe&apos;s document and its internal DOM. This attribute is read-only, but its properties can be manipulated like the global Window object. [To(\"FirstCharToLowerCase\")] public Window? ContentWindow { get; } Property Value Window A Window object. Remarks See also on MDN Csp The csp property of the HTMLIFrameElement interface specifies the Content Security Policy that an embedded document must agree to enforce upon itself. [To(\"FirstCharToLowerCase\")] public string Csp { get; set; } Property Value string A content security policy. Remarks See also on MDN FrameBorder [To(\"FirstCharToLowerCase\")] public string FrameBorder { get; set; } Property Value string Height [To(\"FirstCharToLowerCase\")] public string Height { get; set; } Property Value string Loading [To(\"FirstCharToLowerCase\")] public string Loading { get; set; } Property Value string LongDesc [To(\"FirstCharToLowerCase\")] public string LongDesc { get; set; } Property Value string MarginHeight [To(\"FirstCharToLowerCase\")] public string MarginHeight { get; set; } Property Value string MarginWidth [To(\"FirstCharToLowerCase\")] public string MarginWidth { get; set; } Property Value string Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string PermissionsPolicy [To(\"FirstCharToLowerCase\")] public PermissionsPolicy PermissionsPolicy { get; } Property Value PermissionsPolicy ReferrerPolicy The HTMLIFrameElement.referrerPolicy property reflects the HTML referrerpolicy attribute of the iframe element defining which referrer is sent when fetching the resource. [To(\"FirstCharToLowerCase\")] public string ReferrerPolicy { get; set; } Property Value string Remarks -ReferrerPolicy, ReferrerPolicy, and ReferrerPolicy. See also on MDN Sandbox [To(\"FirstCharToLowerCase\")] public DOMTokenList Sandbox { get; } Property Value DOMTokenList Scrolling [To(\"FirstCharToLowerCase\")] public string Scrolling { get; set; } Property Value string Src The HTMLIFrameElement.src property reflects the HTML referrerpolicy attribute of the iframe element defining which referrer is sent when fetching the resource. [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string Remarks -HTMLAnchorElement.Src -HTMLAreaElement.Src -HTMLAreaElement.Src. See also on MDN Srcdoc The srcdoc property of the HTMLIFrameElement specifies the content of the page. [To(\"FirstCharToLowerCase\")] public string Srcdoc { get; set; } Property Value string Remarks See also on MDN Width [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string Methods GetSVGDocument() [To(\"FirstCharToLowerCase\")] public Document? GetSVGDocument() Returns Document"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLImageElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLImageElement.html",
    "title": "Class HTMLImageElement | CSharpToJavaScript",
    "keywords": "Class HTMLImageElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLImageElement interface represents an HTML img element, providing the properties and methods used to manipulate image elements. [To(\"Default\")] public class HTMLImageElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLImageElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: img See also on MDN Constructors HTMLImageElement() public HTMLImageElement() Properties Align IMPORTANT Deprecated The obsolete align property of the HTMLImageElement interface is a string which indicates how to position the image relative to its container. [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string A string specifying one of the following strings which set the alignment mode for the image. Remarks You should instead use the CSS property vertical-align, which does in fact also work on images despite its name. You can also use the float property to float the image to the left or right margin. The align property reflects the HTML align content attribute. See also on MDN Alt The HTMLImageElement property alt provides fallback (alternate) text to display when the image specified by the img element is not loaded. [To(\"FirstCharToLowerCase\")] public string Alt { get; set; } Property Value string A string which contains the alternate text to display when the image is not loaded or for use by assistive devices.The alt attribute is officially mandatory; it&apos;s meant to always be specified. If the image doesn&apos;t require a fallback (such as for an image which is decorative or an advisory icon of minimal importance), you may specify an empty string (&quot;&quot;). For compatibility reasons, browsers generally will accept an image without an alt attribute, but you should try to get into the habit of using it. Remarks This may be the case because of an error, because the user has disabled the loading of images, or because the image hasn&apos;t finished loading yet. Perhaps the most important reason to use the alt property is to support accessibility, as the alt text may be used by screen readers and other assistive technologies to help differently-abled users make full use of your content. It will be read aloud or sent to the touch device, for example, to support visually impaired users. Think of it like this: When choosing alt strings for your images, imagine what you would say when reading the page to someone over the phone without mentioning that there&apos;s an image on the page. The alternate text is displayed in the space the image would occupy and should be able to take the place of the image without altering the meaning of the page. See also on MDN Border IMPORTANT Deprecated The obsolete HTMLImageElement property border specifies the number of pixels thick the border surrounding the image should be. A value of 0, the default, indicates that no border should be drawn. [To(\"FirstCharToLowerCase\")] public string Border { get; set; } Property Value string A string containing an integer value specifying the thickness of the border that should surround the image, in CSS pixels. A value of 0, or an empty string, indicates that there should be no border drawn. The default value of border is 0 Remarks You should not use this property! Instead, you should use CSS to style the border. The border property or its longhand properties to not only set the thickness of the border but to potentially apply a wide variety of other styling options to it. The width, specifically, is controlled using the writing-mode aware border-block-start-width, border-block-end-width, border-inline-start-width, and border-inline-end-width properties. For compatibility (or perhaps other) reasons, you can use the older properties instead (or in addition): border-top-width, border-right-width, border-bottom-width, and border-left-width. See also on MDN Complete The read-only HTMLImageElement interface's complete attribute is a Boolean value which indicates whether or not the image has completely loaded. [To(\"FirstCharToLowerCase\")] public bool Complete { get; } Property Value bool A Boolean value which is true if the image has completely loaded; otherwise, the value is false.The image is considered completely loaded if any of the following are true:It&apos;s worth noting that due to the image potentially being received asynchronously, the value of complete may change while your script is running. Remarks See also on MDN CrossOrigin The HTMLImageElement interface&apos;s crossOrigin attribute is a string which specifies the Cross-Origin Resource Sharing (CORS) setting to use when retrieving the image. [To(\"FirstCharToLowerCase\")] public string? CrossOrigin { get; set; } Property Value string A string of a keyword specifying the CORS mode to use when fetching the image resource. If you don&apos;t specify crossOrigin, the image is fetched without CORS (the fetch no-cors mode).Permitted values are:If crossOrigin is an empty string (&quot;&quot;), the anonymous mode is selected. Remarks See also on MDN CurrentSrc The read-only HTMLImageElement property currentSrc indicates the URL of the image which is currently presented in the img element it represents. [To(\"FirstCharToLowerCase\")] public string CurrentSrc { get; } Property Value string A string indicating the full URL of the image currently visible in the img element represented by the HTMLImageElement. This is useful when you provide multiple image options using the Sizes and/or Srcset properties. currentSrc lets you determine which image from the set of provided images was selected by the browser. Remarks See also on MDN Decoding The decoding property of the HTMLImageElement interface represents a hint given to the browser on how it should decode the image. [To(\"FirstCharToLowerCase\")] public string Decoding { get; set; } Property Value string A string representing the decoding hint. Possible values are: Remarks See also on MDN FetchPriority The fetchPriority property of the HTMLImageElement interface represents a hint given to the browser on how it should prioritize the fetch of the image relative to other images. [To(\"FirstCharToLowerCase\")] public string FetchPriority { get; set; } Property Value string A string representing the priority hint. Possible values are:The fetchPriority property allows you to signal high or low priority image fetches. This can be useful when applied to img elements to signal images that are &quot;important&quot; to the user experience early in the loading process.The effects of the hint on resource loading is browser-specific so make sure to test on multiple browser engines.Use it sparingly for exceptional cases where the browser may not be able to infer the best way to load the image automatically. Over use can result in degrading performance. Remarks See also on MDN Height The height property of the HTMLImageElement interface indicates the height at which the image is drawn, in CSS pixels if the image is being drawn or rendered to any visual medium such as the screen or a printer; otherwise, it&apos;s the natural, pixel density corrected height of the image. [To(\"FirstCharToLowerCase\")] public ulong Height { get; set; } Property Value ulong An integer value indicating the height of the image. The terms in which the height is defined depends on whether the image is being rendered to a visual medium or not. Remarks See also on MDN Hspace IMPORTANT Deprecated The obsolete hspace property of the HTMLImageElement interface specifies the number of pixels of empty space to leave empty on the left and right sides of the img element when laying out the page. [To(\"FirstCharToLowerCase\")] public ulong Hspace { get; set; } Property Value ulong An integer value specifying the width, in pixels, of the horizontal margin to apply to the left and right sides of the image. Remarks This property reflects the HTML hspace attribute. See also on MDN IsMap The HTMLImageElement property isMap is a Boolean value which indicates that the image is to be used by a server-side image map. This may only be used on images located within an a element. [To(\"FirstCharToLowerCase\")] public bool IsMap { get; set; } Property Value bool A Boolean value which is true if the image is being used for a server-side image map; otherwise, the value is false. Remarks NOTE Note: For accessibility reasons, you should generally avoid using server-side image maps, as they require the use of a mouse. Use a client-side image map instead. See also on MDN Loading The HTMLImageElement property loading is a string whose value provides a hint to the user agent on how to handle the loading of the image which is currently outside the window's visual viewport. [To(\"FirstCharToLowerCase\")] public string Loading { get; set; } Property Value string A string providing a hint to the user agent as to how to best schedule the loading of the image to optimize page performance. The possible values are: Remarks This helps to optimize the loading of the document&apos;s contents by postponing loading the image until it&apos;s expected to be needed, rather than immediately during the initial page load. -The img element -Web performance in the MDN Learning Area -Lazy loading in the MDN web performance guide See also on MDN LongDesc IMPORTANT Deprecated The deprecated property longDesc on the HTMLImageElement interface specifies the URL of a text or HTML file which contains a long-form description of the image. This can be used to provide optional added details beyond the short description provided in the title attribute. [To(\"FirstCharToLowerCase\")] public string LongDesc { get; set; } Property Value string A string which may be either an empty string (indicating that no long description is available) or the URL of a file containing a long form description of the image&apos;s contents.For example, if the image is a PNG of a flowchart. The longDesc property could be used to provide an explanation of the flow of control represented by the chart, using only text. This can be used by readers both as an explanation, but also as a substitute for visually-impaired users. Remarks -aria-details See also on MDN Lowsrc [To(\"FirstCharToLowerCase\")] public string Lowsrc { get; set; } Property Value string Name IMPORTANT Deprecated The HTMLImageElement interface&apos;s deprecated name property specifies a name for the element. This has been replaced by the Id property available on all elements. [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string A string providing a name by which the image can be referenced. WARNING Warning: This property is deprecated and is only in the specification still for backward compatibility purposes. Since it functions identically to id, you can and should use it instead. Remarks See also on MDN NaturalHeight The HTMLImageElement interface's naturalHeight property is a read-only value which returns the intrinsic (natural), density-corrected height of the image in CSS pixel. [To(\"FirstCharToLowerCase\")] public ulong NaturalHeight { get; } Property Value ulong An integer value indicating the intrinsic height, in CSS pixels, of the image. This is the height at which the image is naturally drawn when no constraint or specific value is established for the image. This natural height is corrected for the pixel density of the device on which it&apos;s being presented, unlike {{domxref(&quot;HTMLImageElement.height&quot;, &quot;height&quot;)}}.If the intrinsic height is not available—either because the image does not specify an intrinsic height or because the image data is not available in order to obtain this information, naturalHeight returns 0. Remarks This is the height the image is if drawn with nothing constraining its height; if you don&apos;t specify a height for the image, or place the image inside a container that either limits or expressly specifies the image height, it will be rendered this tall. NOTE Note: Most of the time the natural height is the actual height of the image sent by the server. Nevertheless, browsers can modify an image before pushing it to the renderer. For example, Chrome degrades the resolution of images on low-end devices. In such cases, naturalHeight will consider the height of the image modified by such browser interventions as the natural height, and returns this value. See also on MDN NaturalWidth The HTMLImageElement interface's read-only naturalWidth property returns the intrinsic (natural), density-corrected width of the image in {{Glossary(&quot;CSS pixel&quot;, &quot;CSS pixels&quot;)}}. [To(\"FirstCharToLowerCase\")] public ulong NaturalWidth { get; } Property Value ulong An integer value indicating the intrinsic width of the image, in CSS pixels. This is the width at which the image is naturally drawn when no constraint or specific value is established for the image. This natural width is corrected for the pixel density of the device on which it&apos;s being presented, unlike the value of Width.If the intrinsic width is not available—either because the image does not specify an intrinsic width or because the image data is not available in order to obtain this information, naturalWidth returns 0. Remarks This is the width the image is if drawn with nothing constraining its width; if you neither specify a width for the image nor place the image inside a container that limits or expressly specifies the image width, this is the number of CSS pixels wide the image will be. The corresponding NaturalHeight method returns the natural height of the image. NOTE Note: Most of the time the natural width is the actual width of the image sent by the server. Nevertheless, browsers can modify an image before pushing it to the renderer. For example, Chrome degrades the resolution of images on low-end devices. In such cases, naturalWidth will consider the width of the image modified by such browser interventions as the natural width, and returns this value. See also on MDN ReferrerPolicy The HTMLImageElement.referrerPolicy property reflects the HTML referrerpolicy attribute of the img element defining which referrer is sent when fetching the resource. [To(\"FirstCharToLowerCase\")] public string ReferrerPolicy { get; set; } Property Value string A string; one of the following: Remarks -ReferrerPolicy, ReferrerPolicy, and ReferrerPolicy. See also on MDN Sizes The HTMLImageElement property sizes allows you to specify the layout width of the image for each of a list of media conditions. This provides the ability to automatically select among different images—even images of different orientations or aspect ratios—as the document state changes to match different media conditions. [To(\"FirstCharToLowerCase\")] public string Sizes { get; set; } Property Value string A string containing a comma-separated list of source size descriptors followed by an optional fallback size. Each source size descriptor is comprised of a media condition, then at least one whitespace character, then the source size value to use for the image when the media condition evaluates to true. Remarks Each condition is specified using the same conditional format used by media queries. -Media queries -Using media queries -Images in HTML -Responsive images See also on MDN Src The HTMLImageElement property src, which reflects the HTML src attribute, specifies the image to display in the img element. [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string When providing only a single image, rather than a set of images from which the browser selects the best match for the viewport size and display pixel density, the src attribute is a string specifying the URL of the desired image. This can be set either within the HTML itself using the src content attribute, or programmatically by setting the element&apos;s src property.If you use the srcset content attribute to provide multiple image options for different display pixel densities, the URL specified by the src attribute is used in one of two ways:Additionally, if you use src along with both Sizes (or the corresponding sizes content attribute) and srcset in order to choose an image based on the viewport size, the src attribute is only used as a fallback for browsers that don&apos;t support sizes and srcset; otherwise, it&apos;s not used at all. Remarks See also on MDN Srcset The HTMLImageElement property srcset is a string which identifies one or more image candidate strings, separated using commas (,) each specifying image resources to use under given circumstances. [To(\"FirstCharToLowerCase\")] public string Srcset { get; set; } Property Value string A string containing a comma-separated list of one or more image candidate strings to be used when determining which image resource to present inside the img element represented by the HTMLImageElement.Each image candidate string must begin with a valid URL referencing a non-interactive graphic resource. This is followed by whitespace and then a condition descriptor that indicates the circumstances in which the indicated image should be used. Space characters, other than the whitespace separating the URL and the corresponding condition descriptor, are ignored; this includes both leading and trailing space, as well as space before or after each comma.The condition descriptor may take one of two forms:If the condition descriptor is not provided (in other words, the image candidate provides only a URL), the candidate is assigned a default descriptor of &quot;1x&quot;.This string provides versions of an image to be used at the standard pixel density (undescribed, assigned a default of 1x) as well as double that pixel density (2x).When an image element&apos;s srcset contains &quot;x&quot; descriptors, browsers also consider the URL in the Src attribute (if present) as a candidate, and assign it a default descriptor of 1x.This string provides versions of a header image to use when the {{Glossary(&quot;user agent&quot;, &quot;user agent&apos;s&quot;)}} renderer needs an image of width 640px, 960px, or 1024px.Note that if any resource in a srcset is described with a &quot;w&quot; descriptor, all resources within that srcset must also be described with &quot;w&quot; descriptors, and the image element's Src is not considered a candidate. Remarks Each image candidate string contains an image URL and an optional width or pixel density descriptor that indicates the conditions under which that candidate should be used instead of the image specified by the Src property. The srcset property, along with the {{domxref(&quot;HTMLImageElement.sizes&quot;, &quot;sizes&quot;)}} property, are a crucial component in designing responsive websites, as they can be used together to make pages that use appropriate images for the rendering situation. NOTE Note: If the srcset attribute uses width descriptors, the sizes attribute must also be present, or the srcset itself will be ignored. -Images in HTML -Responsive images -Image file type and format guide See also on MDN UseMap The useMap property on the HTMLImageElement interface reflects the value of the HTML usemap attribute, which is a string providing the name of the client-side image map to apply to the image. [To(\"FirstCharToLowerCase\")] public string UseMap { get; set; } Property Value string A string providing the page-local URL (that is, a URL that begins with the hash or pound symbol, &quot;#\") of the map element which defines the image map to apply to the image.You can learn more about client-side image maps in our learning article Add a hitmap on top of an image. Remarks See also on MDN Vspace IMPORTANT Deprecated The obsolete vspace property of the HTMLImageElement interface specifies the number of pixels of empty space to leave empty on the top and bottom of the img element when laying out the page. [To(\"FirstCharToLowerCase\")] public ulong Vspace { get; set; } Property Value ulong An integer value specifying the height, in pixels, of the vertical margin to apply to the top and bottom sides of the image. Remarks See also on MDN Width The width property of the HTMLImageElement interface indicates the width at which an image is drawn in CSS pixel if it's being drawn or rendered to any visual medium such as a screen or printer. Otherwise, it&apos;s the natural, pixel density-corrected width of the image. [To(\"FirstCharToLowerCase\")] public ulong Width { get; set; } Property Value ulong An integer value indicating the width of the image. The way the width is defined depends on whether or not the image is being rendered to a visual medium, such as a screen or printer: Remarks See also on MDN Methods Decode() The decode() method of the HTMLImageElement interface returns a Promise that resolves when the image is decoded and it is safe to append the image to the DOM. [To(\"FirstCharToLowerCase\")] public Task<GlobalObject.Undefined> Decode() Returns Task<GlobalObject.Undefined> A 'Promise' which is resolved once the image data is ready to be used. Remarks This can be used to initiate loading of the image prior to attaching it to an element in the DOM (or adding it to the DOM as a new element), so that the image can be rendered immediately upon being added to the DOM. This, in turn, prevents the rendering of the next frame after adding the image to the DOM from causing a delay while the image loads. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLInputElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLInputElement.html",
    "title": "Class HTMLInputElement | CSharpToJavaScript",
    "keywords": "Class HTMLInputElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLInputElement interface provides special properties and methods for manipulating the options, layout, and presentation of input elements. [To(\"Default\")] public class HTMLInputElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle, PopoverInvokerElement Inheritance object EventTarget Node Element HTMLElement HTMLInputElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle PopoverInvokerElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: input See also on MDN Constructors HTMLInputElement() public HTMLInputElement() Properties Accept [To(\"FirstCharToLowerCase\")] public string Accept { get; set; } Property Value string Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Alt [To(\"FirstCharToLowerCase\")] public string Alt { get; set; } Property Value string Autocomplete [To(\"FirstCharToLowerCase\")] public string Autocomplete { get; set; } Property Value string Checked [To(\"FirstCharToLowerCase\")] public bool Checked { get; set; } Property Value bool DefaultChecked [To(\"FirstCharToLowerCase\")] public bool DefaultChecked { get; set; } Property Value bool DefaultValue [To(\"FirstCharToLowerCase\")] public string DefaultValue { get; set; } Property Value string DirName [To(\"FirstCharToLowerCase\")] public string DirName { get; set; } Property Value string Disabled The HTMLInputElement.disabled property is a boolean value that reflects the disabled HTML attribute, which indicates whether the control is disabled. If it is disabled, it does not accept clicks. A disabled element is unusable and un-clickable. [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool A boolean value. Remarks See also on MDN Files The HTMLInputElement.files property allows you to access the FileList selected with the &lt;input type=&quot;file&quot;&gt; element. [To(\"FirstCharToLowerCase\")] public FileList? Files { get; set; } Property Value FileList A FileList object listing the selected files, if any, or null if the HTMLInputElement is not of type=&quot;file&quot;. Remarks -Files See also on MDN Form [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement FormAction [To(\"FirstCharToLowerCase\")] public string FormAction { get; set; } Property Value string FormEnctype [To(\"FirstCharToLowerCase\")] public string FormEnctype { get; set; } Property Value string FormMethod [To(\"FirstCharToLowerCase\")] public string FormMethod { get; set; } Property Value string FormNoValidate [To(\"FirstCharToLowerCase\")] public bool FormNoValidate { get; set; } Property Value bool FormTarget [To(\"FirstCharToLowerCase\")] public string FormTarget { get; set; } Property Value string Height [To(\"FirstCharToLowerCase\")] public ulong Height { get; set; } Property Value ulong Indeterminate [To(\"FirstCharToLowerCase\")] public bool Indeterminate { get; set; } Property Value bool Labels The HTMLInputElement.labels read-only property returns a NodeList of the {{HTMLElement(\"label\")}} elements associated with the input element, if the element is not hidden. If the element has the type hidden, the property returns null. [To(\"FirstCharToLowerCase\")] public NodeList? Labels { get; } Property Value NodeList A NodeList containing the &lt;label&gt; elements associated with the &lt;input&gt; element. Remarks See also on MDN List [To(\"FirstCharToLowerCase\")] public HTMLDataListElement? List { get; } Property Value HTMLDataListElement Max [To(\"FirstCharToLowerCase\")] public string Max { get; set; } Property Value string MaxLength [To(\"FirstCharToLowerCase\")] public long MaxLength { get; set; } Property Value long Min [To(\"FirstCharToLowerCase\")] public string Min { get; set; } Property Value string MinLength [To(\"FirstCharToLowerCase\")] public long MinLength { get; set; } Property Value long Multiple The HTMLInputElement.multiple property indicates if an input can have more than one value. Firefox currently only supports multiple for &lt;input type=&quot;file&quot;&gt;. [To(\"FirstCharToLowerCase\")] public bool Multiple { get; set; } Property Value bool A boolean value. Remarks -FileList -Bug 523771 - Support &lt;input type=file multiple&gt; See also on MDN Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Pattern [To(\"FirstCharToLowerCase\")] public string Pattern { get; set; } Property Value string Placeholder [To(\"FirstCharToLowerCase\")] public string Placeholder { get; set; } Property Value string ReadOnly [To(\"FirstCharToLowerCase\")] public bool ReadOnly { get; set; } Property Value bool Required [To(\"FirstCharToLowerCase\")] public bool Required { get; set; } Property Value bool SelectionDirection [To(\"FirstCharToLowerCase\")] public string? SelectionDirection { get; set; } Property Value string SelectionEnd [To(\"FirstCharToLowerCase\")] public ulong? SelectionEnd { get; set; } Property Value ulong? SelectionStart [To(\"FirstCharToLowerCase\")] public ulong? SelectionStart { get; set; } Property Value ulong? Size [To(\"FirstCharToLowerCase\")] public ulong Size { get; set; } Property Value ulong Src [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string Step [To(\"FirstCharToLowerCase\")] public string Step { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string UseMap [To(\"FirstCharToLowerCase\")] public string UseMap { get; set; } Property Value string ValidationMessage [To(\"FirstCharToLowerCase\")] public string ValidationMessage { get; } Property Value string Validity [To(\"FirstCharToLowerCase\")] public ValidityState Validity { get; } Property Value ValidityState Value [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string ValueAsDate [To(\"FirstCharToLowerCase\")] public object? ValueAsDate { get; set; } Property Value object ValueAsNumber [To(\"FirstCharToLowerCase\")] public double ValueAsNumber { get; set; } Property Value double Width [To(\"FirstCharToLowerCase\")] public ulong Width { get; set; } Property Value ulong WillValidate [To(\"FirstCharToLowerCase\")] public bool WillValidate { get; } Property Value bool Methods CheckValidity() The HTMLInputElement.checkValidity() method returns a boolean value which indicates validity of the value of the element. If the value is invalid, this method also fires the HTMLInputElement/invalid_event event on the element. [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool Returns true if the value of the element has no validity problems; otherwise returns false. Remarks -reportValidity -Learn: Client-side form validation -Guide: Constraint validation See also on MDN ReportValidity() The reportValidity() method of the 'HTMLInputElement' interface performs the same validity checking steps as the CheckValidity() method. If the value is invalid, this method also fires the HTMLInputElement.Invalid_event event on the element, and (if the event isn't canceled) reports the problem to the user. [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool Returns true if the element&apos;s value has no validity problems; otherwise, returns false. Remarks -checkValidity -Learn: Client-side form validation -Guide: Constraint validation See also on MDN Select() The HTMLInputElement.select() method selects all the text in a textarea element or in an input element that includes a text field. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Select() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -input -textarea -HTMLInputElement -SetSelectionRange(ulong, ulong, string) See also on MDN SetCustomValidity(string) The HTMLInputElement.setCustomValidity() method sets a custom validity message for the element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetCustomValidity(string error) Parameters error string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Learn: Client-side form validation -Guide: Constraint validation -'ValidityState' See also on MDN SetRangeText(string) The HTMLInputElement.setRangeText() method replaces a range of text in an input or textarea element with a new string. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetRangeText(string replacement) Parameters replacement string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -input -textarea -HTMLInputElement -Selection See also on MDN SetRangeText(string, ulong, ulong, SelectionMode) The HTMLInputElement.setRangeText() method replaces a range of text in an input or textarea element with a new string. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetRangeText(string replacement, ulong start, ulong end, SelectionMode selectionMode) Parameters replacement string start ulong end ulong selectionMode SelectionMode Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -input -textarea -HTMLInputElement -Selection See also on MDN SetSelectionRange(ulong, ulong, string) The HTMLInputElement.setSelectionRange() method sets the start and end positions of the current text selection in an input or textarea element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetSelectionRange(ulong start, ulong end, string direction) Parameters start ulong end ulong direction string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Optionally, in newer browser versions, you can specify the direction in which selection should be considered to have occurred. This lets you indicate, for example, that the selection was set by the user clicking and dragging from the end of the selected text toward the beginning. This method updates the HTMLInputElement.selectionStart, selectionEnd, and selectionDirection properties in one call. Note that according to the WHATWG forms spec selectionStart, selectionEnd properties and setSelectionRange method apply only to inputs of types text, search, URL, tel and password. Chrome, starting from version 33, throws an exception while accessing those properties and method on the rest of input types. For example, on input of type number: &quot;Failed to read the &apos;selectionStart&apos; property from &apos;HTMLInputElement&apos;: The input element&apos;s type (&apos;number&apos;) does not support selection&quot;. If you wish to select all text of an input element, you can use the HTMLInputElement.select() method instead. -input -textarea -HTMLInputElement -Selection See also on MDN ShowPicker() The HTMLInputElement.showPicker() method displays the browser picker for an input element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined ShowPicker() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This is the same picker that would normally be displayed when the element is selected, but can be triggered from a button press or other user interaction. Commonly browsers implement it for inputs of these types: &quot;date&quot;, &quot;month&quot;, &quot;week&quot;, &quot;time&quot;, &quot;datetime-local&quot;, &quot;color&quot;, or &quot;file&quot;. It can also be prepopulated with items from a datalist element or autocomplete attribute. More generally, this method should ideally display the picker for any input element on the platform that has a picker. -input -HTMLInputElement -datalist -autocomplete See also on MDN StepDown(long) The HTMLInputElement.stepDown([n]) method decrements the value of a numeric type of input element by the value of the step attribute or up to n multiples of the step attribute if a number is passed as the parameter. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined StepDown(long n) Parameters n long Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The method, when invoked, decrements the value by (step * n), where n defaults to 1 if not specified, and step defaults to the default value for step if not specified. Valid on all numeric, date, and time input types that support the step attribute, including input/date, input/month, input/week, input/time, input/datetime-local, {{HTMLElement(\"input/number\", \"number\")}}, and input/range. Given &lt;input id=&quot;myTime&quot; type=&quot;time&quot; max=&quot;17:00&quot; step=&quot;900&quot; value=&quot;17:00&quot;&gt;, invoking myTime.stepDown(3) will change the value to 16:15, decrementing the time by 3 * 900, or 45 minutes. myTime.stepDown(), with no parameter, would have resulted in 16:45, as n defaults to 1. However, calling stepDown on &lt;input type=&quot;time&quot; max=&quot;17:00&quot; step=&quot;900&quot;&gt; would not set the value to 17:00, as one would expect — and as it does for stepUp when the input is &lt;input type=&quot;time&quot; min=&quot;17:00&quot; step=&quot;900&quot;&gt;. Instead, the first call to stepDown will set the initial value to 23:45 even though the max attribute is set. The second call will set the value to 17:00. And the third call to will set the value to 16:45. The method, when invoked, changes the form control&apos;s value by the value given in the step attribute, multiplied by the parameter, within the constraints set within the form control. The default value for the parameter, if not is passed, is 1. The method will not cause the value to go below the min value set or defy the constraints set by the step attribute. A negative value for n will increment the value, but will not increment beyond the max value. If the value before invoking the stepDown() method is invalid, for example, if it doesn&apos;t match the constraints set by the step attribute, invoking the stepDown() method will return a value that does match the form controls constraints. If the form control is non time, date, or numeric in nature, and therefore does not support the step attribute (see the list of supported input types above), or if the step value is set to any, an InvalidStateError exception is thrown. -input -HTMLInputElement -StepUp(long) -step, min and max attributes See also on MDN StepUp(long) The HTMLInputElement.stepUp() method increments the value of a numeric type of input element by the value of the step attribute, or the default step value if the step attribute is not explicitly set. The method, when invoked, increments the value by (step * n), where n defaults to 1 if not specified, and step defaults to the default value for step if not specified. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined StepUp(long n) Parameters n long Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The method, when invoked, changes the form control&apos;s value by the value given in the step attribute, multiplied by the parameter, within the constraints set on the form control. The default value for the parameter, if no value is passed, is 1. The method will not cause the value to exceed the set max value, or defy the constraints set by the step attribute. If the value before invoking the stepUp() method is invalid—for example, if it doesn&apos;t match the constraints set by the step attribute—invoking the stepUp() method will return a value that does match the form controls constraints. If the form control is non time, date, or numeric in nature, and therefore does not support the step attribute (see the list of supported input types in the table above), or if the step value is set to any, an InvalidStateError exception is thrown. -input -HTMLInputElement -StepDown(long) -step, min and max attributes See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLLIElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLLIElement.html",
    "title": "Class HTMLLIElement | CSharpToJavaScript",
    "keywords": "Class HTMLLIElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLLIElement interface exposes specific properties and methods (beyond those defined by regular HTMLElement interface it also has available to it by inheritance) for manipulating list elements. [To(\"Default\")] public class HTMLLIElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLLIElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: li See also on MDN Constructors HTMLLIElement() public HTMLLIElement() Properties Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string Value [To(\"FirstCharToLowerCase\")] public long Value { get; set; } Property Value long"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLLabelElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLLabelElement.html",
    "title": "Class HTMLLabelElement | CSharpToJavaScript",
    "keywords": "Class HTMLLabelElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLLabelElement interface gives access to properties specific to {{HTMLElement(\"label\")}} elements. It inherits methods and properties from the base HTMLElement interface. [To(\"Default\")] public class HTMLLabelElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLLabelElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: label -form -HTMLFormElement See also on MDN Constructors HTMLLabelElement() public HTMLLabelElement() Properties Control The read-only HTMLLabelElement.control property returns a reference to the control (in the form of an object of type HTMLElement or one of its derivatives) with which the label element is associated, or null if the label isn&apos;t associated with a control. [To(\"FirstCharToLowerCase\")] public HTMLElement? Control { get; } Property Value HTMLElement An HTMLElement derived object representing the control with which the label is associated, or null if the label stands alone. NOTE Note: If this property has a value and HtmlFor has a value, the HtmlFor property must refer to the same control. Remarks -HTMLLabelElement -HTMLElement -label -HTML forms guide See also on MDN Form The read-only HTMLLabelElement.form property returns an HTMLFormElement object which represents the form of which the label's associated control is a part, or null if there is either no associated control, or if that control isn&apos;t in a form. [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement An HTMLFormElement which represents the form with which the label's Control is associated. If Control is null (meaning the label isn&apos;t associated with a control), or if the control isn&apos;t part of a form, this property returns null. Remarks This property is just a shortcut for HTMLLabelElement.control.form. -HTMLLabelElement -HTMLElement -label -HTML forms guide See also on MDN HtmlFor The HTMLLabelElement.htmlFor property reflects the value of the for content property. That means that this script-accessible property is used to set and read the value of the content property for, which is the ID of the label&apos;s associated control element. [To(\"FirstCharToLowerCase\")] public string HtmlFor { get; set; } Property Value string A string which contains the ID string of the element which is associated with the control. NOTE Note: If this property has a value, the Control property must refer to the same control. Remarks -HTMLLabelElement -Control -HTMLElement -label -HTML forms guide See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLLegendElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLLegendElement.html",
    "title": "Class HTMLLegendElement | CSharpToJavaScript",
    "keywords": "Class HTMLLegendElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLLegendElement is an interface allowing to access properties of the {{HTMLElement(\"legend\")}} elements. It inherits properties and methods from the HTMLElement interface. [To(\"Default\")] public class HTMLLegendElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLLegendElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: legend See also on MDN Constructors HTMLLegendElement() public HTMLLegendElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Form [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLLinkElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLLinkElement.html",
    "title": "Class HTMLLinkElement | CSharpToJavaScript",
    "keywords": "Class HTMLLinkElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLLinkElement interface represents reference information for external resources and the relationship of those resources to a document and vice versa (corresponds to &lt;link&gt; element; not to be confused with &lt;a&gt;, which is represented by HTMLAnchorElement). This object inherits all of the properties and methods of the HTMLElement interface. [To(\"Default\")] public class HTMLLinkElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle, LinkStyle Inheritance object EventTarget Node Element HTMLElement HTMLLinkElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle LinkStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: link. See also on MDN Constructors HTMLLinkElement() public HTMLLinkElement() Properties As The as property of the HTMLLinkElement interface returns a string representing the type of content to be preloaded by a link element. [To(\"FirstCharToLowerCase\")] public string As { get; set; } Property Value string A string with the following allowed values: &quot;audio&quot;, &quot;document&quot;, &quot;embed&quot;, &quot;fetch&quot;, &quot;font&quot;, &quot;image&quot;, &quot;object&quot;, &quot;script&quot;, &quot;style&quot;, &quot;track&quot;, &quot;video&quot;, &quot;worker&quot;. Remarks The as property must have a value for link elements when rel=&quot;preload&quot;, or the resource will not be fetched. It may also be applied to link elements where rel=&quot;modulepreload&quot;, but if omitted, will default to script. The property should not be set for other types of link elements, such as rel=&quot;prefetch&quot;. This property reflects the value of the as attribute of the &lt;link&gt; HTML element. See also on MDN Blocking [To(\"FirstCharToLowerCase\")] public DOMTokenList Blocking { get; } Property Value DOMTokenList Charset [To(\"FirstCharToLowerCase\")] public string Charset { get; set; } Property Value string CrossOrigin [To(\"FirstCharToLowerCase\")] public string? CrossOrigin { get; set; } Property Value string Disabled [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool FetchPriority The fetchPriority property of the HTMLLinkElement interface represents a hint given to the browser on how it should prioritize the preload of the given resource relative to other resources of the same type. [To(\"FirstCharToLowerCase\")] public string FetchPriority { get; set; } Property Value string A string representing the priority hint. Possible values are:The fetchPriority property allows you to signal high or low priority preload fetches. This can be useful when applied to link elements to signal preloads that are more or less important to the user experience early in the loading process.The effects of the hint on resource loading is browser-specific so make sure to test on multiple browser engines.Use it sparingly for exceptional cases where the browser may not be able to infer the best way to load the resource automatically. Over use can result in degrading performance. Remarks See also on MDN Href [To(\"FirstCharToLowerCase\")] public string Href { get; set; } Property Value string Hreflang [To(\"FirstCharToLowerCase\")] public string Hreflang { get; set; } Property Value string ImageSizes [To(\"FirstCharToLowerCase\")] public string ImageSizes { get; set; } Property Value string ImageSrcset [To(\"FirstCharToLowerCase\")] public string ImageSrcset { get; set; } Property Value string Integrity [To(\"FirstCharToLowerCase\")] public string Integrity { get; set; } Property Value string Media [To(\"FirstCharToLowerCase\")] public string Media { get; set; } Property Value string ReferrerPolicy The HTMLLinkElement.referrerPolicy property reflects the HTML referrerpolicy attribute of the link element defining which referrer is sent when fetching the resource. [To(\"FirstCharToLowerCase\")] public string ReferrerPolicy { get; set; } Property Value string A string; one of the following: Remarks See the HTTP Referrer-Policy header for details. -HTTP header Referrer-Policy -ReferrerPolicy -ReferrerPolicy -ReferrerPolicy -ReferrerPolicy See also on MDN Rel The HTMLLinkElement.rel property reflects the rel attribute. It is a string containing a space-separated list of link types indicating the relationship between the resource represented by the link element and the current document. [To(\"FirstCharToLowerCase\")] public string Rel { get; set; } Property Value string A string. Remarks The most common use of this attribute is to specify a link to an external style sheet: the property is set to stylesheet, and the href attribute is set to the URL of an external style sheet to format the page. -The equivalent property on a and area, Rel and Rel. -The very same list but as tokens: RelList See also on MDN RelList The HTMLLinkElement.relList read-only property reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the {{HTMLElement(\"link\")}} element and the current document. [To(\"FirstCharToLowerCase\")] public DOMTokenList RelList { get; } Property Value DOMTokenList A live DOMTokenList of strings. Remarks The property itself is read-only, meaning you can not substitute the DOMTokenList by another one, but the content of the returned list can be changed. -The equivalent property on a and area, RelList and RelList. -The very same list but as a space-separated tokens in a string: Rel See also on MDN Rev [To(\"FirstCharToLowerCase\")] public string Rev { get; set; } Property Value string Sizes [To(\"FirstCharToLowerCase\")] public DOMTokenList Sizes { get; } Property Value DOMTokenList Target [To(\"FirstCharToLowerCase\")] public string Target { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLMapElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLMapElement.html",
    "title": "Class HTMLMapElement | CSharpToJavaScript",
    "keywords": "Class HTMLMapElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLMapElement interface provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of map elements. [To(\"Default\")] public class HTMLMapElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLMapElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: map. See also on MDN Constructors HTMLMapElement() public HTMLMapElement() Properties Areas [To(\"FirstCharToLowerCase\")] public HTMLCollection Areas { get; } Property Value HTMLCollection Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLMarqueeElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLMarqueeElement.html",
    "title": "Class HTMLMarqueeElement | CSharpToJavaScript",
    "keywords": "Class HTMLMarqueeElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The HTMLMarqueeElement interface provides methods to manipulate marquee elements. [To(\"Default\")] public class HTMLMarqueeElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLMarqueeElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It inherits properties and methods from the HTMLElement interface. -marquee See also on MDN Constructors HTMLMarqueeElement() public HTMLMarqueeElement() Properties Behavior [To(\"FirstCharToLowerCase\")] public string Behavior { get; set; } Property Value string BgColor [To(\"FirstCharToLowerCase\")] public string BgColor { get; set; } Property Value string Direction [To(\"FirstCharToLowerCase\")] public string Direction { get; set; } Property Value string Height [To(\"FirstCharToLowerCase\")] public string Height { get; set; } Property Value string Hspace [To(\"FirstCharToLowerCase\")] public ulong Hspace { get; set; } Property Value ulong Loop [To(\"FirstCharToLowerCase\")] public long Loop { get; set; } Property Value long ScrollAmount [To(\"FirstCharToLowerCase\")] public ulong ScrollAmount { get; set; } Property Value ulong ScrollDelay [To(\"FirstCharToLowerCase\")] public ulong ScrollDelay { get; set; } Property Value ulong TrueSpeed [To(\"FirstCharToLowerCase\")] public bool TrueSpeed { get; set; } Property Value bool Vspace [To(\"FirstCharToLowerCase\")] public ulong Vspace { get; set; } Property Value ulong Width [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string Methods Start() [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Start() Returns GlobalObject.Undefined Stop() [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Stop() Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLMediaElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLMediaElement.html",
    "title": "Class HTMLMediaElement | CSharpToJavaScript",
    "keywords": "Class HTMLMediaElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLMediaElement interface adds to HTMLElement the properties and methods needed to support basic media-related capabilities that are common to audio and video. [To(\"Default\")] public class HTMLMediaElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLMediaElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Derived HTMLAudioElement HTMLVideoElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The HTMLVideoElement and HTMLAudioElement elements both inherit this interface. See also on MDN Fields HAVE_CURRENT_DATA [To(\"FirstCharToLowerCase\")] public const ushort HAVE_CURRENT_DATA = 2 Field Value ushort HAVE_ENOUGH_DATA [To(\"FirstCharToLowerCase\")] public const ushort HAVE_ENOUGH_DATA = 4 Field Value ushort HAVE_FUTURE_DATA [To(\"FirstCharToLowerCase\")] public const ushort HAVE_FUTURE_DATA = 3 Field Value ushort HAVE_METADATA [To(\"FirstCharToLowerCase\")] public const ushort HAVE_METADATA = 1 Field Value ushort HAVE_NOTHING [To(\"FirstCharToLowerCase\")] public const ushort HAVE_NOTHING = 0 Field Value ushort NETWORK_EMPTY [To(\"FirstCharToLowerCase\")] public const ushort NETWORK_EMPTY = 0 Field Value ushort NETWORK_IDLE [To(\"FirstCharToLowerCase\")] public const ushort NETWORK_IDLE = 1 Field Value ushort NETWORK_LOADING [To(\"FirstCharToLowerCase\")] public const ushort NETWORK_LOADING = 2 Field Value ushort NETWORK_NO_SOURCE [To(\"FirstCharToLowerCase\")] public const ushort NETWORK_NO_SOURCE = 3 Field Value ushort Properties AudioTracks The read-only audioTracks property on HTMLMediaElement objects returns an AudioTrackList object listing all of the AudioTrack objects representing the media element&apos;s audio tracks. [To(\"FirstCharToLowerCase\")] public AudioTrackList AudioTracks { get; } Property Value AudioTrackList An AudioTrackList object representing the list of audio tracks included in the media element. The list of tracks can be accessed using array notation, or using the object's GetTrackById(string) method.Each track is represented by an AudioTrack object which provides information about the track. Remarks The media element may be either an audio element or a video element. The returned list is live; that is, as tracks are added to and removed from the media element, the list&apos;s contents change dynamically. Once you have a reference to the list, you can monitor it for changes to detect when new audio tracks are added or existing ones removed. See AudioTrackList events to learn more about watching for changes to a media element&apos;s track list. -HTMLMediaElement: Interface used to define the HTMLMediaElement.audioTracks property -audio, video -AudioTrack, AudioTrackList See also on MDN Autoplay The HTMLMediaElement.autoplay property reflects the autoplay HTML attribute, indicating whether playback should automatically begin as soon as enough media is available to do so without interruption. [To(\"FirstCharToLowerCase\")] public bool Autoplay { get; set; } Property Value bool A boolean value which is true if the media element will begin playback as soon as enough content has loaded to allow it to do so without interruption. NOTE Note: Some browsers offer users the ability to override autoplay in order to prevent disruptive audio or video from playing without permission or in the background. Do not rely on autoplay actually starting playback and instead use HTMLMediaElement.Play_event event. Remarks A media element whose source is a MediaStream and whose autoplay property is true will begin playback when it becomes active (that is, when MediaStream.Active becomes true). NOTE Note: Sites which automatically play audio (or videos with an audio track) can be an unpleasant experience for users, so it should be avoided when possible. If you must offer autoplay functionality, you should make it opt-in (requiring a user to specifically enable it). However, autoplay can be useful when creating media elements whose source will be set at a later time, under user control. For a much more in-depth look at autoplay, autoplay blocking, and how to respond when autoplay is blocked by the user&apos;s browser, see our article Autoplay guide for media and Web Audio APIs. -HTMLMediaElement: Interface used to define the HTMLMediaElement.autoplay property -audio, video See also on MDN BufferingThrottled [To(\"FirstCharToLowerCase\")] public bool BufferingThrottled { get; } Property Value bool Controls The HTMLMediaElement.controls property reflects the controls HTML attribute, which controls whether user interface controls for playing the media item will be displayed. [To(\"FirstCharToLowerCase\")] public bool Controls { get; set; } Property Value bool A boolean value. A value of true means controls will be displayed. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.controls property See also on MDN CrossOrigin The HTMLMediaElement.crossOrigin property is the CORS setting for this media element. See CORS settings attributes for details. [To(\"FirstCharToLowerCase\")] public string? CrossOrigin { get; set; } Property Value string Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.crossOrigin property See also on MDN CurrentSrc The HTMLMediaElement.currentSrc property contains the absolute URL of the chosen media resource. This could happen, for example, if the web server selects a media file based on the resolution of the user&apos;s display. The value is an empty string if the networkState property is EMPTY. [To(\"FirstCharToLowerCase\")] public string CurrentSrc { get; } Property Value string A string object containing the absolute URL of the chosen media source; this may be an empty string if networkState is EMPTY; otherwise, it will be one of the resources listed by the HTMLSourceElement contained within the media element, or the value or src if no source element is provided. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.currentSrc property See also on MDN CurrentTime The HTMLMediaElement interface's currentTime property specifies the current playback time in seconds. [To(\"FirstCharToLowerCase\")] public Number CurrentTime { get; set; } Property Value Number A double-precision floating-point value indicating the current playback time in seconds.If the media is not yet playing, the value of currentTime indicates the time position within the media at which playback will begin once the Play() method is called.Setting currentTime to a new value seeks the media to the given time, if the media is available.For media without a known duration—such as media being streamed live—it&apos;s possible that the browser may not be able to obtain parts of the media that have expired from the media buffer. Also, media whose timeline doesn&apos;t begin at 0 seconds cannot be seeked to a time before its timeline&apos;s earliest time.The length of the media in seconds can be determined using the Duration property. Remarks Changing the value of currentTime seeks the media to the new time. -HTMLMediaElement: Interface used to define the HTMLMediaElement.currentTime property -FastSeek(Number): Another way to set the time -Duration: The duration of the media in seconds See also on MDN DefaultMuted The HTMLMediaElement.defaultMuted property reflects the muted HTML attribute, which indicates whether the media element's audio output should be muted by default. This property has no dynamic effect. To mute and unmute the audio output, use the Muted property. [To(\"FirstCharToLowerCase\")] public bool DefaultMuted { get; set; } Property Value bool A boolean value. A value of true means that the audio output will be muted by default. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.defaultMuted property -Muted -Volume See also on MDN DefaultPlaybackRate The HTMLMediaElement.defaultPlaybackRate property indicates the default playback rate for the media. [To(\"FirstCharToLowerCase\")] public Number DefaultPlaybackRate { get; set; } Property Value Number A double. 1.0 is &quot;normal speed,&quot; values lower than 1.0 make the media play slower than normal, higher values make it play faster. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.defaultPlaybackRate property See also on MDN Duration The read-only HTMLMediaElement property duration indicates the length of the element&apos;s media in seconds. [To(\"FirstCharToLowerCase\")] public double Duration { get; } Property Value double A double-precision floating-point value indicating the duration of the media in seconds. If no media data is available, the value NaN is returned. If the element&apos;s media doesn&apos;t have a known duration—such as for live media streams—the value of duration is +Infinity. Remarks -Web media technologies -CurrentTime: The current playback position of the media -The audio and video elements See also on MDN Ended The HTMLMediaElement.ended property indicates whether the media element has ended playback. [To(\"FirstCharToLowerCase\")] public bool Ended { get; } Property Value bool A boolean value which is true if the media contained in the element has finished playing.If the source of the media is a MediaStream, this value is true if the value of the stream&apos;s {{domxref(&quot;MediaStream.active&quot;, &quot;active&quot;)}} property is false. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.ended property -MediaStream -MediaStream.Active See also on MDN Error The HTMLMediaElement.error property is the MediaError object for the most recent error, or null if there has not been an error. When an HTMLMediaElement/error_event event is received by the element, you can determine details about what happened by examining this object. [To(\"FirstCharToLowerCase\")] public MediaError? Error { get; } Property Value MediaError A MediaError object describing the most recent error to occur on the media element or null if no errors have occurred. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.error property -audio and video See also on MDN Loop The HTMLMediaElement.loop property reflects the loop HTML attribute, which controls whether the media element should start over when it reaches the end. [To(\"FirstCharToLowerCase\")] public bool Loop { get; set; } Property Value bool A boolean value. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.loop property See also on MDN Muted The HTMLMediaElement.muted property indicates whether the media element is muted. [To(\"FirstCharToLowerCase\")] public bool Muted { get; set; } Property Value bool A boolean value. true means muted and false means not muted. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.muted property -DefaultMuted -Volume See also on MDN NetworkState The HTMLMediaElement.networkState property indicates the current state of the fetching of media over the network. [To(\"FirstCharToLowerCase\")] public ushort NetworkState { get; } Property Value ushort An unsigned short. Possible values are: Constant Value Description NETWORK_EMPTY 0 There is no data yet. Also, readyState is HAVE_NOTHING. NETWORK_IDLE 1 HTMLMediaElement is active and has selected a resource, but is not using the network. NETWORK_LOADING 2 The browser is downloading HTMLMediaElement data. NETWORK_NO_SOURCE 3 No HTMLMediaElement src found. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.networkState property See also on MDN Paused The read-only HTMLMediaElement.paused property tells whether the media element is paused. [To(\"FirstCharToLowerCase\")] public bool Paused { get; } Property Value bool A boolean value. true is paused and false is not paused. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.paused property See also on MDN PlaybackRate The HTMLMediaElement.playbackRate property sets the rate at which the media is being played back. This is used to implement user controls for fast forward, slow motion, and so forth. The normal playback rate is multiplied by this value to obtain the current rate, so a value of 1.0 indicates normal speed. [To(\"FirstCharToLowerCase\")] public Number PlaybackRate { get; set; } Property Value Number A double. 1.0 is &quot;normal speed,&quot; values lower than 1.0 make the media play slower than normal, higher values make it play faster. (Default: 1.0) Remarks If playbackRate is negative, the media is not played backwards. The audio is muted when the fast forward or slow motion is outside a useful range (for example, Gecko mutes the sound outside the range 0.25 to 4.0). The pitch of the audio is corrected by default. You can disable pitch correction using the PreservesPitch property. -HTMLMediaElement: Interface used to define the HTMLMediaElement.playbackRate property See also on MDN Played [To(\"FirstCharToLowerCase\")] public TimeRanges Played { get; } Property Value TimeRanges Preload [To(\"FirstCharToLowerCase\")] public string Preload { get; set; } Property Value string PreservesPitch The HTMLMediaElement.preservesPitch property determines whether or not the browser should adjust the pitch of the audio to compensate for changes to the playback rate made by setting PlaybackRate. [To(\"FirstCharToLowerCase\")] public bool PreservesPitch { get; set; } Property Value bool A boolean value defaulting to true. Remarks -PlaybackRate -Web Audio playbackRate explained See also on MDN ReadyState The HTMLMediaElement.readyState property indicates the readiness state of the media. [To(\"FirstCharToLowerCase\")] public ushort ReadyState { get; } Property Value ushort An unsigned short. Possible values are: Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.readyState property See also on MDN Seekable The seekable read-only property of HTMLMediaElement objects returns a new static normalized TimeRanges object that represents the ranges of the media resource, if any, that the user agent is able to seek to at the time seekable property is accessed. [To(\"FirstCharToLowerCase\")] public TimeRanges Seekable { get; } Property Value TimeRanges A new static normalized TimeRanges object that represents the ranges of the media resource, if any, that the user agent is able to seek to at the time seekable property is accessed. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.seekable property -Media Source API -Media buffering, seeking, and time ranges See also on MDN Seeking [To(\"FirstCharToLowerCase\")] public bool Seeking { get; } Property Value bool Src The HTMLMediaElement.src property reflects the value of the HTML media element&apos;s src attribute, which indicates the URL of a media resource to use in the element. [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string A string object containing the URL of a media resource to use in the element; this property reflects the value of the HTML element&apos;s src attribute. Remarks NOTE Note: The best way to know the URL of the media resource currently in active use in this element is to look at the value of the CurrentSrc attribute, which also takes into account selection of a best or preferred media resource from a list provided in an HTMLSourceElement (which represents a {{HTMLElement(\"source\")}} element). -HTMLMediaElement: Interface used to define the HTMLMediaElement.src property See also on MDN SrcObject The srcObject property of the HTMLMediaElement interface sets or returns the object which serves as the source of the media associated with the HTMLMediaElement. [To(\"FirstCharToLowerCase\")] public Union7? SrcObject { get; set; } Property Value Union7? A 'MediaStream', 'MediaSource', 'Blob', or 'File' object (though see the compatibility table for what is actually supported). Remarks The object can be a MediaStream, a MediaSource, a Blob, or a File (which inherits from Blob). NOTE Note: As of March 2020, only Safari has full support for srcObject, i.e. using MediaSource, MediaStream, Blob, and File objects as values. Other browsers support MediaStream objects; until they catch up, consider falling back to creating a URL with CreateObjectURL(Union53) and assigning it to Src (see below for an example). In addition, as of version 108 Chromium supports attaching a dedicated worker MediaSource object by assigning that object's MediaSourceHandle instance (transferred from the worker) to srcObject. See also on MDN TextTracks The read-only textTracks property on HTMLMediaElement objects returns a TextTrackList object listing all of the TextTrack objects representing the media element&apos;s text tracks, in the same order as in the list of text tracks. [To(\"FirstCharToLowerCase\")] public TextTrackList TextTracks { get; } Property Value TextTrackList A TextTrackList object representing the list of text tracks included in the media element. The list of tracks can be accessed using textTracks[n] to get the n-th text track from the object&apos;s list of text tracks, or using the textTracks.getTrackById() method.Each track is represented by a TextTrack object which provides information about the track. Remarks You can detect when tracks are added to and removed from an &lt;audio&gt; or &lt;video&gt; element using the addtrack and removetrack events. However, these events aren&apos;t sent directly to the media element itself. Instead, they&apos;re sent to the track list object of the HTMLMediaElement that corresponds to the type of track that was added to the element The returned list is live; that is, as tracks are added to and removed from the media element, the list&apos;s contents change dynamically. Once you have a reference to the list, you can monitor it for changes to detect when new text tracks are added or existing ones removed. See TextTrackList events to learn more about watching for changes to a media element&apos;s track list. -HTMLMediaElement: Interface used to define the HTMLMediaElement.textTracks property -audio, video -AudioTrack, AudioTrackList -VideoTrack, VideoTrackList -addtrack, change, removetrack: AudioTrackList events -addtrack, change, removetrack: VideoTrackList events See also on MDN VideoTracks The read-only videoTracks property on HTMLMediaElement objects returns a VideoTrackList object listing all of the VideoTrack objects representing the media element&apos;s video tracks. [To(\"FirstCharToLowerCase\")] public VideoTrackList VideoTracks { get; } Property Value VideoTrackList A VideoTrackList object representing the list of video tracks included in the media element. The list of tracks can be accessed using array notation, or using the object's GetTrackById(string) method.Each track is represented by a VideoTrack object which provides information about the track. Remarks The returned list is live; that is, as tracks are added to and removed from the media element, the list&apos;s contents change dynamically. Once you have a reference to the list, you can monitor it for changes to detect when new video tracks are added or existing ones removed. See VideoTrackList events to learn more about watching for changes to a media element&apos;s track list. -HTMLMediaElement: Interface used to define the HTMLMediaElement.videoTracks property -video -VideoTrack, VideoTrackList See also on MDN Volume The HTMLMediaElement.volume property sets the volume at which the media will be played. [To(\"FirstCharToLowerCase\")] public Number Volume { get; set; } Property Value Number A double values must fall between 0 and 1, where 0 is effectively muted and 1 is the loudest possible value. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.volume property -Muted See also on MDN Methods AddTextTrack(TextTrackKind, string, string) [To(\"FirstCharToLowerCase\")] public TextTrack AddTextTrack(TextTrackKind kind, string label, string language) Parameters kind TextTrackKind label string language string Returns TextTrack CanPlayType(string) The HTMLMediaElement method canPlayType() reports how likely it is that the current browser will be able to play media of a given MIME type. [To(\"FirstCharToLowerCase\")] public CanPlayTypeResult CanPlayType(string type) Parameters type string Returns CanPlayTypeResult A string indicating how likely it is that the media can be played. The string will be one of the following values: Remarks NOTE Note: This feature is not available in Web Workers. -HTMLMediaElement: Interface used to define the HTMLMediaElement.canPlayType() method -MediaCapabilities -Handling media support issues in web content -Media type and format guide -Codecs in common media types See also on MDN FastSeek(Number) The HTMLMediaElement.fastSeek() method quickly seeks the media to the new time with precision tradeoff. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined FastSeek(Number time) Parameters time Number Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: If you need to seek with precision, you should set HTMLMediaElement.currentTime instead. -HTMLMediaElement.currentTime for seeking without precision tradeoff See also on MDN GetStartDate() [To(\"FirstCharToLowerCase\")] public object GetStartDate() Returns object Load() The HTMLMediaElement method load() resets the media element to its initial state and begins the process of selecting a media source and loading the media in preparation for playback to begin at the beginning. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Load() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The amount of media data that is prefetched is determined by the value of the element&apos;s preload attribute. This method is generally only useful when you&apos;ve made dynamic changes to the set of sources available for the media element, either by changing the element&apos;s src attribute or by adding or removing source elements nested within the media element itself. load() will reset the element and rescan the available sources, thereby causing the changes to take effect. See also on MDN Pause() The HTMLMediaElement.pause() method will pause playback of the media, if the media is already in a paused state this method will have no effect. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Pause() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Play() The HTMLMediaElement play() method attempts to begin playback of the media. It returns a Promise which is resolved when playback has been successfully started. [To(\"FirstCharToLowerCase\")] public Task<GlobalObject.Undefined> Play() Returns Task<GlobalObject.Undefined> A Promise which is resolved when playback has been started, or is rejected if for any reason playback cannot be started. NOTE Note: Browsers released before 2019 may not return a value from play(). Remarks Failure to begin playback for any reason, such as permission issues, result in the promise being rejected. -Web media technologies -Learning: Video and audio content -Autoplay guide for media and Web Audio APIs -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLMenuElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLMenuElement.html",
    "title": "Class HTMLMenuElement | CSharpToJavaScript",
    "keywords": "Class HTMLMenuElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLMenuElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"menu\")}} elements. [To(\"Default\")] public class HTMLMenuElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLMenuElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTMLMenuItemElement See also on MDN Constructors HTMLMenuElement() public HTMLMenuElement() Properties Compact [To(\"FirstCharToLowerCase\")] public bool Compact { get; set; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLMetaElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLMetaElement.html",
    "title": "Class HTMLMetaElement | CSharpToJavaScript",
    "keywords": "Class HTMLMetaElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLMetaElement interface contains descriptive metadata about a document provided in HTML as &lt;meta&gt; elements. This interface inherits all of the properties and methods described in the HTMLElement interface. [To(\"Default\")] public class HTMLMetaElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLMetaElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: meta See also on MDN Constructors HTMLMetaElement() public HTMLMetaElement() Properties Content The HTMLMetaElement.content property gets or sets the content attribute of pragma directives and named {{htmlelement(\"meta\")}} data in conjunction with Name or HttpEquiv. For more information, see the content attribute. [To(\"FirstCharToLowerCase\")] public string Content { get; set; } Property Value string A string. Remarks -meta -Name -HttpEquiv -Learn: Metadata in HTML See also on MDN HttpEquiv The HTMLMetaElement.httpEquiv property gets or sets the pragma directive or an HTTP response header name for the Content attribute. For more details on the possible values, see the http-equiv attribute. [To(\"FirstCharToLowerCase\")] public string HttpEquiv { get; set; } Property Value string A string. Remarks -meta See also on MDN Media The HTMLMetaElement.media property enables specifying the media for theme-color metadata. [To(\"FirstCharToLowerCase\")] public string Media { get; set; } Property Value string A string. Remarks The theme-color property enables setting the color of the browser&apos;s toolbar or UI in browsers and operating systems that support this property. The media property enables setting different theme colors for different media values. -meta -Possible values for media queries See also on MDN Name The HTMLMetaElement.name property is used in combination with Content to define the name-value pairs for the metadata of a document. The name attribute defines the metadata name and the content attribute defines the value. [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string A string. Remarks -meta -Possible values for the name attribute See also on MDN Scheme IMPORTANT Deprecated The HTMLMetaElement.scheme property defines the scheme of the value in the Content attribute. The scheme property was created to enable providing additional information to be used to interpret the value of the content property. The scheme property takes as its value a scheme format (i.e. YYYY-MM-DD) or scheme format name (i.e. ISBN), or a URI providing more information regarding the scheme format. The scheme defines the format of the value of the content attribute. The scheme content is interpreted as an extension of the element's Name if a browser or user agent recognizes the scheme. [To(\"FirstCharToLowerCase\")] public string Scheme { get; set; } Property Value string A string. Remarks This property is deprecated and should not be used on new web pages. -meta See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLMeterElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLMeterElement.html",
    "title": "Class HTMLMeterElement | CSharpToJavaScript",
    "keywords": "Class HTMLMeterElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class HTMLMeterElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLMeterElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: meter See also on MDN Constructors HTMLMeterElement() public HTMLMeterElement() Properties High [To(\"FirstCharToLowerCase\")] public Number High { get; set; } Property Value Number Labels The HTMLMeterElement.labels read-only property returns a NodeList of the {{HTMLElement(\"label\")}} elements associated with the meter element. [To(\"FirstCharToLowerCase\")] public NodeList Labels { get; } Property Value NodeList A NodeList containing the &lt;label&gt; elements associated with the &lt;meter&gt; element. Remarks See also on MDN Low [To(\"FirstCharToLowerCase\")] public Number Low { get; set; } Property Value Number Max [To(\"FirstCharToLowerCase\")] public Number Max { get; set; } Property Value Number Min [To(\"FirstCharToLowerCase\")] public Number Min { get; set; } Property Value Number Optimum [To(\"FirstCharToLowerCase\")] public Number Optimum { get; set; } Property Value Number Value [To(\"FirstCharToLowerCase\")] public Number Value { get; set; } Property Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLModElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLModElement.html",
    "title": "Class HTMLModElement | CSharpToJavaScript",
    "keywords": "Class HTMLModElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLModElement interface provides special properties (beyond the regular methods and properties available through the HTMLElement interface they also have available to them by inheritance) for manipulating modification elements, that is {{HTMLElement(\"del\")}} and {{HTMLElement(\"ins\")}}. [To(\"Default\")] public class HTMLModElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLModElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML elements implementing this interface: ins, del. See also on MDN Constructors HTMLModElement() public HTMLModElement() Properties Cite [To(\"FirstCharToLowerCase\")] public string Cite { get; set; } Property Value string DateTime [To(\"FirstCharToLowerCase\")] public string DateTime { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLOListElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLOListElement.html",
    "title": "Class HTMLOListElement | CSharpToJavaScript",
    "keywords": "Class HTMLOListElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLOListElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating ordered list elements. [To(\"Default\")] public class HTMLOListElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLOListElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: ol. See also on MDN Constructors HTMLOListElement() public HTMLOListElement() Properties Compact [To(\"FirstCharToLowerCase\")] public bool Compact { get; set; } Property Value bool Reversed [To(\"FirstCharToLowerCase\")] public bool Reversed { get; set; } Property Value bool Start [To(\"FirstCharToLowerCase\")] public long Start { get; set; } Property Value long Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLObjectElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLObjectElement.html",
    "title": "Class HTMLObjectElement | CSharpToJavaScript",
    "keywords": "Class HTMLObjectElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLObjectElement interface provides special properties and methods (beyond those on the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{HTMLElement(\"object\")}} element, representing external resources. [To(\"Default\")] public class HTMLObjectElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLObjectElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: object See also on MDN Constructors HTMLObjectElement() public HTMLObjectElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Archive [To(\"FirstCharToLowerCase\")] public string Archive { get; set; } Property Value string Border [To(\"FirstCharToLowerCase\")] public string Border { get; set; } Property Value string Code [To(\"FirstCharToLowerCase\")] public string Code { get; set; } Property Value string CodeBase [To(\"FirstCharToLowerCase\")] public string CodeBase { get; set; } Property Value string CodeType [To(\"FirstCharToLowerCase\")] public string CodeType { get; set; } Property Value string ContentDocument The contentDocument read-only property of the HTMLObjectElement interface Returns a Document representing the active document of the object element&apos;s nested browsing context, if any; otherwise null. [To(\"FirstCharToLowerCase\")] public Document? ContentDocument { get; } Property Value Document A 'Document'. Remarks See also on MDN ContentWindow The contentWindow read-only property of the HTMLObjectElement interface returns a {{glossary(\"WindowProxy\")}} representing the window proxy of the object element&apos;s nested browsing context, if any; otherwise null. [To(\"FirstCharToLowerCase\")] public Window? ContentWindow { get; } Property Value Window A 'Window', or null if there are none. Remarks See also on MDN Data The data property of the HTMLObjectElement interface returns a string that reflects the data HTML attribute, specifying the address of a resource&apos;s data. [To(\"FirstCharToLowerCase\")] public string Data { get; set; } Property Value string A string. Remarks See also on MDN Declare [To(\"FirstCharToLowerCase\")] public bool Declare { get; set; } Property Value bool Form The form read-only property of the HTMLObjectElement interface returns a HTMLFormElement representing the object element&apos;s form owner, or null if there isn&apos;t one. [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement A 'HTMLFormElement'. Remarks See also on MDN Height The height property of the HTMLObjectElement interface Returns a string that reflects the height HTML attribute, specifying the displayed height of the resource in CSS pixels. [To(\"FirstCharToLowerCase\")] public string Height { get; set; } Property Value string A string. Remarks See also on MDN Hspace [To(\"FirstCharToLowerCase\")] public ulong Hspace { get; set; } Property Value ulong Name The name property of the HTMLObjectElement interface returns a string that reflects the name HTML attribute, specifying the name of the browsing context. [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string A string. Remarks See also on MDN Standby [To(\"FirstCharToLowerCase\")] public string Standby { get; set; } Property Value string Type The type property of the HTMLObjectElement interface returns a string that reflects the type HTML attribute, specifying the MIME type of the resource. [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string A string. Remarks See also on MDN UseMap The useMap property of the HTMLObjectElement interface returns a string that reflects the usemap HTML attribute, specifying a map element to use. [To(\"FirstCharToLowerCase\")] public string UseMap { get; set; } Property Value string A string. Remarks See also on MDN ValidationMessage The validationMessage read-only property of the HTMLObjectElement interface returns a string representing a localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (willValidate is false), or it satisfies its constraints. [To(\"FirstCharToLowerCase\")] public string ValidationMessage { get; } Property Value string A string. Remarks See also on MDN Validity The validity read-only property of the HTMLObjectElement interface returns a ValidityState with the validity states that this element is in. [To(\"FirstCharToLowerCase\")] public ValidityState Validity { get; } Property Value ValidityState A ValidityState object. Remarks See also on MDN Vspace [To(\"FirstCharToLowerCase\")] public ulong Vspace { get; set; } Property Value ulong Width The width property of the HTMLObjectElement interface returns a string that reflects the width HTML attribute, specifying the displayed width of the resource in CSS pixels. [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string A string. Remarks See also on MDN WillValidate The willValidate read-only property of the HTMLObjectElement interface returns a boolean value that indicates whether the element is a candidate for constraint validation. Always false for HTMLObjectElement objects. [To(\"FirstCharToLowerCase\")] public bool WillValidate { get; } Property Value bool A boolean value. Remarks See also on MDN Methods CheckValidity() The checkValidity() method of the HTMLObjectElement interface returns a boolean value that always is true, because object objects are never candidates for constraint validation. [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool true Remarks See also on MDN GetSVGDocument() [To(\"FirstCharToLowerCase\")] public Document? GetSVGDocument() Returns Document ReportValidity() [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool SetCustomValidity(string) The setCustomValidity() method of the HTMLObjectElement interface sets a custom validity message for the element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetCustomValidity(string error) Parameters error string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -'validityState' -'validityState.ValueMissing' -'validityState.TypeMismatch' -'validityState.PatternMismatch' -'validityState.TooLong' -'validityState.TooShort' -'validityState.RangeUnderflow' -'validityState.RangeOverflow' -'validityState.StepMismatch' -'validityState.Valid' -'validityState.CustomError' See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLOptGroupElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLOptGroupElement.html",
    "title": "Class HTMLOptGroupElement | CSharpToJavaScript",
    "keywords": "Class HTMLOptGroupElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLOptGroupElement interface provides special properties and methods (beyond the regular HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of {{HTMLElement(\"optgroup\")}} elements. [To(\"Default\")] public class HTMLOptGroupElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLOptGroupElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: optgroup. See also on MDN Constructors HTMLOptGroupElement() public HTMLOptGroupElement() Properties Disabled [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool Label [To(\"FirstCharToLowerCase\")] public string Label { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLOptionElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLOptionElement.html",
    "title": "Class HTMLOptionElement | CSharpToJavaScript",
    "keywords": "Class HTMLOptionElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLOptionElement interface represents {{HTMLElement(\"option\")}} elements and inherits all properties and methods of the HTMLElement interface. [To(\"Default\")] public class HTMLOptionElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLOptionElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: option. -The HTMLOptionsCollection interface. See also on MDN Constructors HTMLOptionElement() public HTMLOptionElement() Properties DefaultSelected [To(\"FirstCharToLowerCase\")] public bool DefaultSelected { get; set; } Property Value bool Disabled [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool Form [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement Index [To(\"FirstCharToLowerCase\")] public long Index { get; } Property Value long Label [To(\"FirstCharToLowerCase\")] public string Label { get; set; } Property Value string Selected [To(\"FirstCharToLowerCase\")] public bool Selected { get; set; } Property Value bool Text [To(\"FirstCharToLowerCase\")] public string Text { get; set; } Property Value string Value [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLOptionsCollection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLOptionsCollection.html",
    "title": "Class HTMLOptionsCollection | CSharpToJavaScript",
    "keywords": "Class HTMLOptionsCollection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLOptionsCollection interface represents a collection of &lt;option&gt; HTML elements (in document order) and offers methods and properties for selecting from the list as well as optionally altering its items. This object is returned only by the options property of select. [To(\"Default\")] public class HTMLOptionsCollection : HTMLCollection Inheritance object HTMLCollection HTMLOptionsCollection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTMLCollection See also on MDN Properties Length [To(\"FirstCharToLowerCase\")] public ulong Length { get; set; } Property Value ulong SelectedIndex [To(\"FirstCharToLowerCase\")] public long SelectedIndex { get; set; } Property Value long Methods Add(Union3, Union4?) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Add(Union3 element, Union4? before) Parameters element Union3 before Union4? Returns GlobalObject.Undefined Remove(long) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Remove(long index) Parameters index long Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLOrSVGElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLOrSVGElement.html",
    "title": "Interface HTMLOrSVGElement | CSharpToJavaScript",
    "keywords": "Interface HTMLOrSVGElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface HTMLOrSVGElement Properties Autofocus bool Autofocus { get; set; } Property Value bool Dataset string Dataset { get; } Property Value string Nonce string Nonce { get; set; } Property Value string TabIndex long TabIndex { get; set; } Property Value long Methods Blur() GlobalObject.Undefined Blur() Returns GlobalObject.Undefined Focus(FocusOptions) GlobalObject.Undefined Focus(FocusOptions options) Parameters options FocusOptions Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLOutputElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLOutputElement.html",
    "title": "Class HTMLOutputElement | CSharpToJavaScript",
    "keywords": "Class HTMLOutputElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLOutputElement interface provides properties and methods (beyond those inherited from HTMLElement) for manipulating the layout and presentation of {{HTMLElement(\"output\")}} elements. [To(\"Default\")] public class HTMLOutputElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLOutputElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: output. See also on MDN Constructors HTMLOutputElement() public HTMLOutputElement() Properties DefaultValue [To(\"FirstCharToLowerCase\")] public string DefaultValue { get; set; } Property Value string Form [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement HtmlFor [To(\"FirstCharToLowerCase\")] public DOMTokenList HtmlFor { get; } Property Value DOMTokenList Labels The HTMLOutputElement.labels read-only property returns a NodeList of the {{HTMLElement(\"label\")}} elements associated with the output element. [To(\"FirstCharToLowerCase\")] public NodeList Labels { get; } Property Value NodeList A NodeList containing the &lt;label&gt; elements associated with the &lt;output&gt; element. Remarks See also on MDN Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; } Property Value string ValidationMessage [To(\"FirstCharToLowerCase\")] public string ValidationMessage { get; } Property Value string Validity [To(\"FirstCharToLowerCase\")] public ValidityState Validity { get; } Property Value ValidityState Value [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string WillValidate [To(\"FirstCharToLowerCase\")] public bool WillValidate { get; } Property Value bool Methods CheckValidity() [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool ReportValidity() [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool SetCustomValidity(string) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetCustomValidity(string error) Parameters error string Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLParagraphElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLParagraphElement.html",
    "title": "Class HTMLParagraphElement | CSharpToJavaScript",
    "keywords": "Class HTMLParagraphElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLParagraphElement interface provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating {{HTMLElement(\"p\")}} elements. [To(\"Default\")] public class HTMLParagraphElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLParagraphElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: p. See also on MDN Constructors HTMLParagraphElement() public HTMLParagraphElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLParamElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLParamElement.html",
    "title": "Class HTMLParamElement | CSharpToJavaScript",
    "keywords": "Class HTMLParamElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The HTMLParamElement interface provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating {{HTMLElement(\"param\")}} elements, representing a pair of a key and a value that acts as a parameter for an {{HTMLElement(\"object\")}} element. [To(\"Default\")] public class HTMLParamElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLParamElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: param. See also on MDN Constructors HTMLParamElement() public HTMLParamElement() Properties Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string Value [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string ValueType [To(\"FirstCharToLowerCase\")] public string ValueType { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLPictureElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLPictureElement.html",
    "title": "Class HTMLPictureElement | CSharpToJavaScript",
    "keywords": "Class HTMLPictureElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLPictureElement interface represents a picture HTML element. It doesn't implement specific properties or methods. [To(\"Default\")] public class HTMLPictureElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLPictureElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The picture HTML element that implements it. -The HTMLImageElement and HTMLSourceElement interfaces, often used in conjunction with a {{HTMLElement(\"picture\")}} element. See also on MDN Constructors HTMLPictureElement() public HTMLPictureElement()"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLPreElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLPreElement.html",
    "title": "Class HTMLPreElement | CSharpToJavaScript",
    "keywords": "Class HTMLPreElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLPreElement interface exposes specific properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating a block of preformatted text ({{HtmlElement(\"pre\")}}). [To(\"Default\")] public class HTMLPreElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLPreElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: pre See also on MDN Constructors HTMLPreElement() public HTMLPreElement() Properties Width [To(\"FirstCharToLowerCase\")] public long Width { get; set; } Property Value long"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLProgressElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLProgressElement.html",
    "title": "Class HTMLProgressElement | CSharpToJavaScript",
    "keywords": "Class HTMLProgressElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLProgressElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{HTMLElement(\"progress\")}} elements. [To(\"Default\")] public class HTMLProgressElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLProgressElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: progress See also on MDN Constructors HTMLProgressElement() public HTMLProgressElement() Properties Labels The HTMLProgressElement.labels read-only property returns a NodeList of the {{HTMLElement(\"label\")}} elements associated with the progress element. [To(\"FirstCharToLowerCase\")] public NodeList Labels { get; } Property Value NodeList A NodeList containing the &lt;label&gt; elements associated with the &lt;progress&gt; element. Remarks See also on MDN Max [To(\"FirstCharToLowerCase\")] public Number Max { get; set; } Property Value Number Position [To(\"FirstCharToLowerCase\")] public Number Position { get; } Property Value Number Value [To(\"FirstCharToLowerCase\")] public Number Value { get; set; } Property Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLQuoteElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLQuoteElement.html",
    "title": "Class HTMLQuoteElement | CSharpToJavaScript",
    "keywords": "Class HTMLQuoteElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLQuoteElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating quoting elements, like {{HTMLElement(\"blockquote\")}} and {{HTMLElement(\"q\")}}, but not the {{HTMLElement(\"cite\")}} element. [To(\"Default\")] public class HTMLQuoteElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLQuoteElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML elements implementing this interface: blockquote and q, but not cite. See also on MDN Constructors HTMLQuoteElement() public HTMLQuoteElement() Properties Cite [To(\"FirstCharToLowerCase\")] public string Cite { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLScriptElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLScriptElement.html",
    "title": "Class HTMLScriptElement | CSharpToJavaScript",
    "keywords": "Class HTMLScriptElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll JavaScript files should be served with the application/javascript MIME type, but browsers are lenient and block them only if the script is served with an image type (image/), video type (video/), audio type (audio/*), or text/csv. If the script is blocked, its element receives an Element/error_event event; otherwise, it receives a Window/load_event event. [To(\"Default\")] public class HTMLScriptElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLScriptElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML script element -HTML noscript element -CurrentScript -Web Workers (code snippets similar to scripts but executed in another global context) See also on MDN Constructors HTMLScriptElement() public HTMLScriptElement() Properties Async [To(\"FirstCharToLowerCase\")] public bool Async { get; set; } Property Value bool Blocking [To(\"FirstCharToLowerCase\")] public DOMTokenList Blocking { get; } Property Value DOMTokenList Charset [To(\"FirstCharToLowerCase\")] public string Charset { get; set; } Property Value string CrossOrigin [To(\"FirstCharToLowerCase\")] public string? CrossOrigin { get; set; } Property Value string Defer [To(\"FirstCharToLowerCase\")] public bool Defer { get; set; } Property Value bool Event [To(\"FirstCharToLowerCase\")] public string Event { get; set; } Property Value string FetchPriority [To(\"FirstCharToLowerCase\")] public string FetchPriority { get; set; } Property Value string HtmlFor [To(\"FirstCharToLowerCase\")] public string HtmlFor { get; set; } Property Value string Integrity [To(\"FirstCharToLowerCase\")] public string Integrity { get; set; } Property Value string NoModule [To(\"FirstCharToLowerCase\")] public bool NoModule { get; set; } Property Value bool ReferrerPolicy The referrerPolicy property of the HTMLScriptElement interface reflects the HTML referrerpolicy of the script element and fetches made by that script, defining which referrer is sent when fetching the resource. [To(\"FirstCharToLowerCase\")] public string ReferrerPolicy { get; set; } Property Value string A string; one of the following: NOTE Note: An empty string value (&quot;&quot;) is both the default value, and a fallback value if referrerpolicy is not supported. If referrerpolicy is not explicitly specified on the &lt;script&gt; element, it will adopt a higher-level referrer policy, i.e. one set on the whole document or domain. If a higher-level policy is not available, the empty string is treated as being equivalent to no-referrer-when-downgrade. Remarks -ReferrerPolicy See also on MDN Src [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string Text [To(\"FirstCharToLowerCase\")] public string Text { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string Methods Supports(string) [To(\"FirstCharToLowerCase\")] public static bool Supports(string type) Parameters type string Returns bool"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLSelectElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLSelectElement.html",
    "title": "Class HTMLSelectElement | CSharpToJavaScript",
    "keywords": "Class HTMLSelectElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLSelectElement interface represents a {{HTMLElement(\"select\")}} HTML Element. These elements also share all of the properties and methods of other HTML elements via the HTMLElement interface. [To(\"Default\")] public class HTMLSelectElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLSelectElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The select HTML element, which implements this interface. See also on MDN Constructors HTMLSelectElement() public HTMLSelectElement() Properties Autocomplete [To(\"FirstCharToLowerCase\")] public string Autocomplete { get; set; } Property Value string Disabled The HTMLSelectElement.disabled property is a boolean value that reflects the disabled HTML attribute, which indicates whether the control is disabled. If it is disabled, it does not accept clicks. A disabled element is unusable and un-clickable. [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool A boolean value. Remarks See also on MDN Form The HTMLSelectElement.form read-only property returns a HTMLFormElement representing the form that this element is associated with. If the element is not associated with a form element, then it returns null. [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement A HTMLFormElement. Remarks See also on MDN Labels The HTMLSelectElement.labels read-only property returns a NodeList of the {{HTMLElement(\"label\")}} elements associated with the select element. [To(\"FirstCharToLowerCase\")] public NodeList Labels { get; } Property Value NodeList A NodeList containing the &lt;label&gt; elements associated with the &lt;select&gt; element. Remarks See also on MDN Length [To(\"FirstCharToLowerCase\")] public ulong Length { get; set; } Property Value ulong Multiple [To(\"FirstCharToLowerCase\")] public bool Multiple { get; set; } Property Value bool Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Options The HTMLSelectElement.options read-only property returns a HTMLOptionsCollection of the {{HTMLElement(\"option\")}} elements contained by the select element. [To(\"FirstCharToLowerCase\")] public HTMLOptionsCollection Options { get; } Property Value HTMLOptionsCollection A HTMLOptionsCollection containing the &lt;option&gt; elements contained by the &lt;select&gt; element. Remarks See also on MDN Required [To(\"FirstCharToLowerCase\")] public bool Required { get; set; } Property Value bool SelectedIndex The HTMLSelectElement.selectedIndex property is a long that reflects the index of the first or last selected option element, depending on the value of multiple. The value -1 indicates that no element is selected. [To(\"FirstCharToLowerCase\")] public long SelectedIndex { get; set; } Property Value long A number. Remarks See also on MDN SelectedOptions The read-only HTMLSelectElement property selectedOptions contains a list of the option elements contained within the select element that are currently selected. The list of selected options is an HTMLCollection object with one entry per currently selected option. [To(\"FirstCharToLowerCase\")] public HTMLCollection SelectedOptions { get; } Property Value HTMLCollection An HTMLCollection which lists every currently selected HTMLOptionElement which is either a child of the HTMLSelectElement or of an HTMLOptGroupElement within the &lt;select&gt; element.In other words, any option contained within the &lt;select&gt; element may be part of the results, but option groups are not included in the list.If no options are currently selected, the collection is empty and returns a Length of 0. Remarks An option is considered selected if it has an Selected attribute. -Drop-down controls See also on MDN Size [To(\"FirstCharToLowerCase\")] public ulong Size { get; set; } Property Value ulong Type The HTMLSelectElement.type read-only property returns the form control&apos;s type. [To(\"FirstCharToLowerCase\")] public string Type { get; } Property Value string One of the following: Remarks -The select HTML element, implementing this interface. See also on MDN ValidationMessage [To(\"FirstCharToLowerCase\")] public string ValidationMessage { get; } Property Value string Validity [To(\"FirstCharToLowerCase\")] public ValidityState Validity { get; } Property Value ValidityState Value [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string WillValidate [To(\"FirstCharToLowerCase\")] public bool WillValidate { get; } Property Value bool Methods Add(Union11, Union12?) The HTMLSelectElement.add() method adds an element to the collection of option elements for this select element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Add(Union11 element, Union12? before) Parameters element Union11 before Union12? Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN CheckValidity() The HTMLSelectElement.checkValidity() method checks whether the element has any constraints and whether it satisfies them. If the element fails its constraints, the browser fires a cancelable HTMLSelectElement/invalid_event event at the element, and then returns false. [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool None (GlobalObject.Undefined). Remarks -Form validation See also on MDN NamedItem(string) The HTMLSelectElement.namedItem() method returns the HTMLOptionElement corresponding to the HTMLOptionElement whose name or id match the specified name, or null if no option matches. [To(\"FirstCharToLowerCase\")] public HTMLOptionElement? NamedItem(string name) Parameters name string Returns HTMLOptionElement Remarks In JavaScript, using selectElt.namedItem(&apos;value&apos;) is equivalent to selectElt.options.namedItem(&apos;value&apos;). -HTMLSelectElement that implements it. See also on MDN Remove() The HTMLSelectElement.remove() method removes the element at the specified index from the options collection for this select element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Remove() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Element.Remove, the method that gets called when remove is called without arguments on a HTMLSelectElement. -HTMLSelectElement that implements it. See also on MDN Remove(long) The HTMLSelectElement.remove() method removes the element at the specified index from the options collection for this select element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Remove(long index) Parameters index long Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Element.Remove, the method that gets called when remove is called without arguments on a HTMLSelectElement. -HTMLSelectElement that implements it. See also on MDN ReportValidity() [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool SetCustomValidity(string) The HTMLSelectElement.setCustomValidity() method sets the custom validity message for the selection element to the specified message. Use the empty string to indicate that the element does not have a custom validity error. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetCustomValidity(string error) Parameters error string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Form validation. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLSlotElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLSlotElement.html",
    "title": "Class HTMLSlotElement | CSharpToJavaScript",
    "keywords": "Class HTMLSlotElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLSlotElement interface of the Shadow DOM API enables access to the name and assigned nodes of an HTML slot element. [To(\"Default\")] public class HTMLSlotElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLSlotElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors HTMLSlotElement() public HTMLSlotElement() Properties Name The name property of the HTMLSlotElement interface returns or sets the slot name. A slot is a placeholder inside a web component that users can fill with their own markup. [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string A string. Remarks See also on MDN Methods Assign(params Union13[]) The assign() method of the HTMLSlotElement interface sets the slot's manually assigned nodes to an ordered set of slottables. The manually assigned nodes set is initially empty until nodes are assigned using assign(). [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Assign(params Union13[] nodes) Parameters nodes Union13[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: you cannot mix manually (imperative) and named (declarative, automatic) slot assignments. Therefore, for this method to work, the shadow tree needs to have been created with the slotAssignment: &quot;manual&quot; option. -AttachShadow(ShadowRootInit) See also on MDN AssignedElements(AssignedNodesOptions) The assignedElements() method of the HTMLSlotElement interface returns a sequence of the elements assigned to this slot (and no other nodes). [To(\"FirstCharToLowerCase\")] public List<Element> AssignedElements(AssignedNodesOptions options) Parameters options AssignedNodesOptions Returns List<Element> An array of elements. Remarks If the flatten option is set to true, it returns a sequence of both the elements assigned to this slot, as well as the elements assigned to any other slots that are descendants of this slot. If no assigned elements are found, it returns the slot&apos;s fallback content. See also on MDN AssignedNodes(AssignedNodesOptions) The assignedNodes() method of the HTMLSlotElement interface returns a sequence of the nodes assigned to this slot. [To(\"FirstCharToLowerCase\")] public List<Node> AssignedNodes(AssignedNodesOptions options) Parameters options AssignedNodesOptions Returns List<Node> An array of nodes. Remarks If the flatten option is set to true, it returns a sequence of both the nodes assigned to this slot, as well as the nodes assigned to any other slots that are descendants of this slot. If no assigned nodes are found, it returns the slot&apos;s fallback content. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLSourceElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLSourceElement.html",
    "title": "Class HTMLSourceElement | CSharpToJavaScript",
    "keywords": "Class HTMLSourceElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLSourceElement interface provides special properties (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating {{htmlelement(\"source\")}} elements. [To(\"Default\")] public class HTMLSourceElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLSourceElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: source. -The HTML DOM APIs of the elements that can contain a {{HTMLElement(\"source\")}} element: HTMLVideoElement, HTMLAudioElement, HTMLPictureElement. See also on MDN Constructors HTMLSourceElement() public HTMLSourceElement() Properties Height [To(\"FirstCharToLowerCase\")] public ulong Height { get; set; } Property Value ulong Media [To(\"FirstCharToLowerCase\")] public string Media { get; set; } Property Value string Sizes [To(\"FirstCharToLowerCase\")] public string Sizes { get; set; } Property Value string Src [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string Srcset [To(\"FirstCharToLowerCase\")] public string Srcset { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string Width [To(\"FirstCharToLowerCase\")] public ulong Width { get; set; } Property Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLSpanElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLSpanElement.html",
    "title": "Class HTMLSpanElement | CSharpToJavaScript",
    "keywords": "Class HTMLSpanElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLSpanElement interface represents a {{HTMLElement(\"span\")}} element and derives from the HTMLElement interface, but without implementing any additional properties or methods. [To(\"Default\")] public class HTMLSpanElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLSpanElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: span. See also on MDN Constructors HTMLSpanElement() public HTMLSpanElement()"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLStyleElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLStyleElement.html",
    "title": "Class HTMLStyleElement | CSharpToJavaScript",
    "keywords": "Class HTMLStyleElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLStyleElement interface represents a {{HTMLElement(\"style\")}} element. It inherits properties and methods from its parent, HTMLElement. [To(\"Default\")] public class HTMLStyleElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle, LinkStyle Inheritance object EventTarget Node Element HTMLElement HTMLStyleElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle LinkStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface doesn&apos;t allow to manipulate the CSS it contains (in most case). To manipulate CSS, see Using dynamic styling information for an overview of the objects used to manipulate specified CSS properties using the DOM. -The HTML element implementing this interface: style. -Using dynamic styling information to see how to manipulate CSS. See also on MDN Constructors HTMLStyleElement() public HTMLStyleElement() Properties Blocking [To(\"FirstCharToLowerCase\")] public DOMTokenList Blocking { get; } Property Value DOMTokenList Disabled The HTMLStyleElement.disabled property can be used to get and set whether the stylesheet is disabled (true) or not (false). [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool Returns true if the stylesheet is disabled, or there is no associated stylesheet; otherwise false. The value is false by default (if there is an associated stylesheet).The property can be used to enable or disable an associated stylesheet. Setting the property to true when there is no associated stylesheet has no effect. Remarks Note that there is no corresponding disabled attribute on the HTML &lt;style&gt; element. -SVGStyleElement.Disabled See also on MDN Media The HTMLStyleElement.media property specifies the intended destination medium for style information. [To(\"FirstCharToLowerCase\")] public string Media { get; set; } Property Value string A string describing a single medium or a comma-separated list. Remarks See also on MDN Type IMPORTANT Deprecated The HTMLStyleElement.type property returns the type of the current style. The value mirrors the HTML &lt;style&gt; element&apos;s type attribute. [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string The permitted values are an empty string or a case-insensitive match for &quot;text/css&quot;. Remarks Authors should not use this property or rely on the value. -SVGStyleElement.Type See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTableCaptionElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTableCaptionElement.html",
    "title": "Class HTMLTableCaptionElement | CSharpToJavaScript",
    "keywords": "Class HTMLTableCaptionElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTableCaptionElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating table {{HTMLElement(\"caption\")}} elements. [To(\"Default\")] public class HTMLTableCaptionElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLTableCaptionElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: caption. See also on MDN Constructors HTMLTableCaptionElement() public HTMLTableCaptionElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTableCellElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTableCellElement.html",
    "title": "Class HTMLTableCellElement | CSharpToJavaScript",
    "keywords": "Class HTMLTableCellElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTableCellElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of table cells, either header cells ({{HTMLElement(\"th\")}})) or data cells ({{HTMLElement(\"td\")}}), in an HTML document. [To(\"Default\")] public class HTMLTableCellElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLTableCellElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML elements implementing this interface: th and td. See also on MDN Constructors HTMLTableCellElement() public HTMLTableCellElement() Properties Abbr [To(\"FirstCharToLowerCase\")] public string Abbr { get; set; } Property Value string Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Axis [To(\"FirstCharToLowerCase\")] public string Axis { get; set; } Property Value string BgColor [To(\"FirstCharToLowerCase\")] public string BgColor { get; set; } Property Value string CellIndex [To(\"FirstCharToLowerCase\")] public long CellIndex { get; } Property Value long Ch [To(\"FirstCharToLowerCase\")] public string Ch { get; set; } Property Value string ChOff [To(\"FirstCharToLowerCase\")] public string ChOff { get; set; } Property Value string ColSpan [To(\"FirstCharToLowerCase\")] public ulong ColSpan { get; set; } Property Value ulong Headers [To(\"FirstCharToLowerCase\")] public string Headers { get; set; } Property Value string Height [To(\"FirstCharToLowerCase\")] public string Height { get; set; } Property Value string NoWrap [To(\"FirstCharToLowerCase\")] public bool NoWrap { get; set; } Property Value bool RowSpan [To(\"FirstCharToLowerCase\")] public ulong RowSpan { get; set; } Property Value ulong Scope [To(\"FirstCharToLowerCase\")] public string Scope { get; set; } Property Value string VAlign [To(\"FirstCharToLowerCase\")] public string VAlign { get; set; } Property Value string Width [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTableColElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTableColElement.html",
    "title": "Class HTMLTableColElement | CSharpToJavaScript",
    "keywords": "Class HTMLTableColElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTableColElement interface provides properties for manipulating single or grouped table column elements. [To(\"Default\")] public class HTMLTableColElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLTableColElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: col and colgroup. See also on MDN Constructors HTMLTableColElement() public HTMLTableColElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Ch [To(\"FirstCharToLowerCase\")] public string Ch { get; set; } Property Value string ChOff [To(\"FirstCharToLowerCase\")] public string ChOff { get; set; } Property Value string Span [To(\"FirstCharToLowerCase\")] public ulong Span { get; set; } Property Value ulong VAlign [To(\"FirstCharToLowerCase\")] public string VAlign { get; set; } Property Value string Width [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTableElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTableElement.html",
    "title": "Class HTMLTableElement | CSharpToJavaScript",
    "keywords": "Class HTMLTableElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTableElement interface provides special properties and methods (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating the layout and presentation of tables in an HTML document. [To(\"Default\")] public class HTMLTableElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLTableElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: table. See also on MDN Constructors HTMLTableElement() public HTMLTableElement() Properties Align IMPORTANT Deprecated The HTMLTableElement.align property represents the alignment of the table. [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string One of the following string values: Remarks See also on MDN BgColor IMPORTANT Deprecated The bgcolor property of the HTMLTableElement represents the background color of the table. [To(\"FirstCharToLowerCase\")] public string BgColor { get; set; } Property Value string A string representing a color value. Remarks NOTE Note: Do not use this attribute anymore. Instead, use the CSS background-color property by modifying the element's style attribute or using a style rule. -background-color See also on MDN Border IMPORTANT Deprecated The HTMLTableElement.border property represents the border width of the table element. [To(\"FirstCharToLowerCase\")] public string Border { get; set; } Property Value string A string representing the width of the border in pixels. Remarks See also on MDN Caption The HTMLTableElement.caption property represents the table caption. If no caption element is associated with the table, this property is null. [To(\"FirstCharToLowerCase\")] public HTMLTableCaptionElement? Caption { get; set; } Property Value HTMLTableCaptionElement A string. Remarks -The interface implementing this property: HTMLTableElement. See also on MDN CellPadding IMPORTANT Deprecated The HTMLTableElement.cellPadding property represents the padding around the individual cells of the table. [To(\"FirstCharToLowerCase\")] public string CellPadding { get; set; } Property Value string A string representing pixels (e.g. &quot;10&quot;) or a percentage value (e.g. &quot;10%&quot;). Remarks See also on MDN CellSpacing IMPORTANT Deprecated While you should instead use the CSS {{cssxref(\"border-spacing\")}} property, the obsolete HTMLTableElement interface&apos;s cellSpacing property represents the spacing around the individual th and td elements representing a table&apos;s cells. Any two cells are separated by the sum of the cellSpacing of each of the two cells. [To(\"FirstCharToLowerCase\")] public string CellSpacing { get; set; } Property Value string A string which is either a number of pixels (such as &quot;10&quot;) or a percentage value (like &quot;10%&quot;). Remarks See also on MDN Frame IMPORTANT Deprecated The HTMLTableElement interface's frame property is a string that indicates which of the table&apos;s exterior borders should be drawn. [To(\"FirstCharToLowerCase\")] public string Frame { get; set; } Property Value string One of the following: Remarks See also on MDN Rows The read-only HTMLTableElement property rows returns a live HTMLCollection of all the rows in the table, including the rows contained within any thead, tfoot, and tbody elements. [To(\"FirstCharToLowerCase\")] public HTMLCollection Rows { get; } Property Value HTMLCollection An HTMLCollection providing a live-updating list of the HTMLTableRowElement objects representing all of the {{HTMLElement(\"tr\")}} elements contained in the table. This provides quick access to all of the table rows, without having to manually search for them. Remarks Although the property itself is read-only, the returned object is live and allows the modification of its content. See also on MDN Rules IMPORTANT Deprecated The HTMLTableElement.rules property indicates which cell borders to render in the table. [To(\"FirstCharToLowerCase\")] public string Rules { get; set; } Property Value string One of the following: Remarks See also on MDN Summary IMPORTANT Deprecated The HTMLTableElement.summary property represents the table description. [To(\"FirstCharToLowerCase\")] public string Summary { get; set; } Property Value string A string. Remarks See also on MDN TBodies The HTMLTableElement.tBodies read-only property returns a live HTMLCollection of the bodies in a {{htmlElement(\"table\")}}. [To(\"FirstCharToLowerCase\")] public HTMLCollection TBodies { get; } Property Value HTMLCollection A live HTMLCollection. Remarks Although the property is read-only, the returned object is live and allows the modification of its content. The collection returned includes implicit tbody elements. For example: The HTML DOM generated from the above HTML will have a tbody element even though the tags are not included in the source HTML. -HTMLCollection -tbody See also on MDN TFoot The HTMLTableElement.tFoot property represents the tfoot element of a table. Its value will be null if there is no such element. [To(\"FirstCharToLowerCase\")] public HTMLTableSectionElement? TFoot { get; set; } Property Value HTMLTableSectionElement A tfoot element or null. Remarks -The interface implementing this property: HTMLTableElement. See also on MDN THead The HTMLTableElement.tHead represents the thead element of a table. Its value will be null if there is no such element. [To(\"FirstCharToLowerCase\")] public HTMLTableSectionElement? THead { get; set; } Property Value HTMLTableSectionElement A HTMLTableSectionElement. Remarks -The interface implementing this property: HTMLTableElement. See also on MDN Width IMPORTANT Deprecated The HTMLTableElement.width property represents the desired width of the table. [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string A string representing the width in number of pixels or as a percentage value. Remarks See also on MDN Methods CreateCaption() The HTMLTableElement.createCaption() method returns the caption element associated with a given table. If no &lt;caption&gt; element exists on the table, this method creates it, and then returns it. [To(\"FirstCharToLowerCase\")] public HTMLTableCaptionElement CreateCaption() Returns HTMLTableCaptionElement HTMLTableCaptionElement Remarks NOTE Note: If no caption exists, createCaption() inserts a new caption directly into the table. The caption does not need to be added separately as would be the case if CreateElement(string, string) had been used to create the new &lt;caption&gt; element. See also on MDN CreateTBody() The createTBody() method of HTMLTableElement objects creates and returns a new tbody element associated with a given table. [To(\"FirstCharToLowerCase\")] public HTMLTableSectionElement CreateTBody() Returns HTMLTableSectionElement HTMLTableSectionElement Remarks NOTE Note: Unlike CreateTHead() and CreateTFoot(), createTBody() systematically creates a new &lt;tbody&gt; element, even if the table already contains one or more bodies. If so, the new one is inserted after the existing ones. See also on MDN CreateTFoot() The createTFoot() method of HTMLTableElement objects returns the {{HTMLElement(\"tfoot\")}} element associated with a given table. If no footer exists in the table, this method creates it, and then returns it. [To(\"FirstCharToLowerCase\")] public HTMLTableSectionElement CreateTFoot() Returns HTMLTableSectionElement HTMLTableSectionElement Remarks NOTE Note: If no footer exists, createTFoot() inserts a new footer directly into the table. The footer does not need to be added separately as would be the case if CreateElement(string, string) had been used to create the new &lt;tfoot&gt; element. See also on MDN CreateTHead() The createTHead() method of HTMLTableElement objects returns the {{HTMLElement(\"thead\")}} element associated with a given table. If no header exists in the table, this method creates it, and then returns it. [To(\"FirstCharToLowerCase\")] public HTMLTableSectionElement CreateTHead() Returns HTMLTableSectionElement HTMLTableSectionElement Remarks NOTE Note: If no header exists, createTHead() inserts a new header directly into the table. The header does not need to be added separately as would be the case if CreateElement(string, string) had been used to create the new &lt;thead&gt; element. See also on MDN DeleteCaption() The HTMLTableElement.deleteCaption() method removes the caption element from a given table. If there is no &lt;caption&gt; element associated with the table, this method does nothing. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined DeleteCaption() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN DeleteRow(long) The HTMLTableElement.deleteRow() method removes a specific row (tr) from a given table. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined DeleteRow(long index) Parameters index long Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN DeleteTFoot() The HTMLTableElement.deleteTFoot() method removes the tfoot element from a given table. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined DeleteTFoot() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN DeleteTHead() The HTMLTableElement.deleteTHead() removes the thead element from a given table. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined DeleteTHead() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN InsertRow(long) The HTMLTableElement.insertRow() method inserts a new row (tr) in a given table, and returns a reference to the new row. [To(\"FirstCharToLowerCase\")] public HTMLTableRowElement InsertRow(long index) Parameters index long Returns HTMLTableRowElement An HTMLTableRowElement that references the new row. Remarks If a table has multiple tbody elements, by default, the new row is inserted into the last &lt;tbody&gt;. To insert the row into a specific &lt;tbody&gt;: NOTE Note: insertRow() inserts the row directly into the table. The row does not need to be appended separately as would be the case if CreateElement(string, string) had been used to create the new &lt;tr&gt; element. -InsertCell(long) -The HTML element representing rows: HTMLTableRowElement See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTableRowElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTableRowElement.html",
    "title": "Class HTMLTableRowElement | CSharpToJavaScript",
    "keywords": "Class HTMLTableRowElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTableRowElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table. [To(\"Default\")] public class HTMLTableRowElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLTableRowElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: tr. See also on MDN Constructors HTMLTableRowElement() public HTMLTableRowElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string BgColor [To(\"FirstCharToLowerCase\")] public string BgColor { get; set; } Property Value string Cells [To(\"FirstCharToLowerCase\")] public HTMLCollection Cells { get; } Property Value HTMLCollection Ch [To(\"FirstCharToLowerCase\")] public string Ch { get; set; } Property Value string ChOff [To(\"FirstCharToLowerCase\")] public string ChOff { get; set; } Property Value string RowIndex The HTMLTableRowElement.rowIndex read-only property represents the position of a row in relation to the whole table. [To(\"FirstCharToLowerCase\")] public long RowIndex { get; } Property Value long Returns the index of the row, or -1 if the row is not part of a table. Remarks Even when the thead, tbody, and tfoot elements are out of order in the HTML, browsers render the table in the right order. Therefore the rows count from &lt;thead&gt; to &lt;tbody&gt;, from &lt;tbody&gt; to &lt;tfoot&gt;. See also on MDN SectionRowIndex [To(\"FirstCharToLowerCase\")] public long SectionRowIndex { get; } Property Value long VAlign [To(\"FirstCharToLowerCase\")] public string VAlign { get; set; } Property Value string Methods DeleteCell(long) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined DeleteCell(long index) Parameters index long Returns GlobalObject.Undefined InsertCell(long) The HTMLTableRowElement.insertCell() method inserts a new cell (td) into a table row (tr) and returns a reference to the cell. [To(\"FirstCharToLowerCase\")] public HTMLTableCellElement InsertCell(long index) Parameters index long Returns HTMLTableCellElement An HTMLTableCellElement that references the new cell. Remarks NOTE Note: insertCell() inserts the cell directly into the row. The cell does not need to be appended separately with AppendChild(Node) as would be the case if CreateElement(string, string) had been used to create the new &lt;td&gt; element. You can not use insertCell() to create a new &lt;th&gt; element though. -InsertRow(long) -The HTML element representing cells: HTMLTableCellElement See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTableSectionElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTableSectionElement.html",
    "title": "Class HTMLTableSectionElement | CSharpToJavaScript",
    "keywords": "Class HTMLTableSectionElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTableSectionElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies ({{HTMLElement(\"thead\")}}, {{HTMLElement(\"tfoot\")}}, and {{HTMLElement(\"tbody\")}}, respectively) in an HTML table. [To(\"Default\")] public class HTMLTableSectionElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLTableSectionElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML elements implementing this interface: tfoot, thead, and tbody. See also on MDN Constructors HTMLTableSectionElement() public HTMLTableSectionElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Ch [To(\"FirstCharToLowerCase\")] public string Ch { get; set; } Property Value string ChOff [To(\"FirstCharToLowerCase\")] public string ChOff { get; set; } Property Value string Rows [To(\"FirstCharToLowerCase\")] public HTMLCollection Rows { get; } Property Value HTMLCollection VAlign [To(\"FirstCharToLowerCase\")] public string VAlign { get; set; } Property Value string Methods DeleteRow(long) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined DeleteRow(long index) Parameters index long Returns GlobalObject.Undefined InsertRow(long) [To(\"FirstCharToLowerCase\")] public HTMLTableRowElement InsertRow(long index) Parameters index long Returns HTMLTableRowElement"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTemplateElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTemplateElement.html",
    "title": "Class HTMLTemplateElement | CSharpToJavaScript",
    "keywords": "Class HTMLTemplateElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTemplateElement interface enables access to the contents of an HTML template element. [To(\"Default\")] public class HTMLTemplateElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLTemplateElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors HTMLTemplateElement() public HTMLTemplateElement() Properties Content The HTMLTemplateElement.content property returns a &lt;template&gt; element&apos;s template contents (a DocumentFragment). [To(\"FirstCharToLowerCase\")] public DocumentFragment Content { get; } Property Value DocumentFragment A DocumentFragment. Remarks -HTMLTemplateElement See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTextAreaElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTextAreaElement.html",
    "title": "Class HTMLTextAreaElement | CSharpToJavaScript",
    "keywords": "Class HTMLTextAreaElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTextAreaElement interface provides special properties and methods for manipulating the layout and presentation of textarea elements. [To(\"Default\")] public class HTMLTextAreaElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLTextAreaElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors HTMLTextAreaElement() public HTMLTextAreaElement() Properties Autocomplete [To(\"FirstCharToLowerCase\")] public string Autocomplete { get; set; } Property Value string Cols [To(\"FirstCharToLowerCase\")] public ulong Cols { get; set; } Property Value ulong DefaultValue [To(\"FirstCharToLowerCase\")] public string DefaultValue { get; set; } Property Value string DirName [To(\"FirstCharToLowerCase\")] public string DirName { get; set; } Property Value string Disabled [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool Form [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement Labels The HTMLTextAreaElement.labels read-only property returns a NodeList of the {{HTMLElement(\"label\")}} elements associated with the textArea element. [To(\"FirstCharToLowerCase\")] public NodeList Labels { get; } Property Value NodeList A NodeList containing the &lt;label&gt; elements associated with the &lt;textArea&gt; element. Remarks See also on MDN MaxLength [To(\"FirstCharToLowerCase\")] public long MaxLength { get; set; } Property Value long MinLength [To(\"FirstCharToLowerCase\")] public long MinLength { get; set; } Property Value long Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Placeholder [To(\"FirstCharToLowerCase\")] public string Placeholder { get; set; } Property Value string ReadOnly [To(\"FirstCharToLowerCase\")] public bool ReadOnly { get; set; } Property Value bool Required [To(\"FirstCharToLowerCase\")] public bool Required { get; set; } Property Value bool Rows [To(\"FirstCharToLowerCase\")] public ulong Rows { get; set; } Property Value ulong SelectionDirection [To(\"FirstCharToLowerCase\")] public string SelectionDirection { get; set; } Property Value string SelectionEnd [To(\"FirstCharToLowerCase\")] public ulong SelectionEnd { get; set; } Property Value ulong SelectionStart [To(\"FirstCharToLowerCase\")] public ulong SelectionStart { get; set; } Property Value ulong TextLength [To(\"FirstCharToLowerCase\")] public ulong TextLength { get; } Property Value ulong Type [To(\"FirstCharToLowerCase\")] public string Type { get; } Property Value string ValidationMessage [To(\"FirstCharToLowerCase\")] public string ValidationMessage { get; } Property Value string Validity [To(\"FirstCharToLowerCase\")] public ValidityState Validity { get; } Property Value ValidityState Value [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string WillValidate [To(\"FirstCharToLowerCase\")] public bool WillValidate { get; } Property Value bool Wrap [To(\"FirstCharToLowerCase\")] public string Wrap { get; set; } Property Value string Methods CheckValidity() [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool ReportValidity() [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool Select() [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Select() Returns GlobalObject.Undefined SetCustomValidity(string) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetCustomValidity(string error) Parameters error string Returns GlobalObject.Undefined SetRangeText(string) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetRangeText(string replacement) Parameters replacement string Returns GlobalObject.Undefined SetRangeText(string, ulong, ulong, SelectionMode) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetRangeText(string replacement, ulong start, ulong end, SelectionMode selectionMode) Parameters replacement string start ulong end ulong selectionMode SelectionMode Returns GlobalObject.Undefined SetSelectionRange(ulong, ulong, string) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetSelectionRange(ulong start, ulong end, string direction) Parameters start ulong end ulong direction string Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTimeElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTimeElement.html",
    "title": "Class HTMLTimeElement | CSharpToJavaScript",
    "keywords": "Class HTMLTimeElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTimeElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"time\")}} elements. [To(\"Default\")] public class HTMLTimeElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLTimeElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: time. See also on MDN Constructors HTMLTimeElement() public HTMLTimeElement() Properties DateTime The HTMLTimeElement.dateTime property is a string that reflects the datetime HTML attribute, containing a machine-readable form of the element&apos;s date and time value. [To(\"FirstCharToLowerCase\")] public string DateTime { get; set; } Property Value string A string. Remarks The format of the string must follow one of the following HTML microsyntaxes: -The HTMLTimeElement interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTitleElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTitleElement.html",
    "title": "Class HTMLTitleElement | CSharpToJavaScript",
    "keywords": "Class HTMLTitleElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTitleElement interface is implemented by a document's {{ HTMLElement( \"title\" )}}. This element inherits all of the properties and methods of the HTMLElement interface. [To(\"Default\")] public class HTMLTitleElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLTitleElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: title. See also on MDN Constructors HTMLTitleElement() public HTMLTitleElement() Properties Text [To(\"FirstCharToLowerCase\")] public string Text { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTrackElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTrackElement.html",
    "title": "Class HTMLTrackElement | CSharpToJavaScript",
    "keywords": "Class HTMLTrackElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTrackElement interface represents an HTML {{HTMLElement(\"track\")}} element within the DOM. This element can be used as a child of either {{HTMLElement(\"audio\")}} or {{HTMLElement(\"video\")}} to specify a text track containing information such as closed captions or subtitles. [To(\"Default\")] public class HTMLTrackElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLTrackElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: track. See also on MDN Constructors HTMLTrackElement() public HTMLTrackElement() Fields ERROR [To(\"FirstCharToLowerCase\")] public const ushort ERROR = 3 Field Value ushort LOADED [To(\"FirstCharToLowerCase\")] public const ushort LOADED = 2 Field Value ushort LOADING [To(\"FirstCharToLowerCase\")] public const ushort LOADING = 1 Field Value ushort NONE [To(\"FirstCharToLowerCase\")] public const ushort NONE = 0 Field Value ushort Properties Default [To(\"FirstCharToLowerCase\")] public bool Default { get; set; } Property Value bool Kind [To(\"FirstCharToLowerCase\")] public string Kind { get; set; } Property Value string Label [To(\"FirstCharToLowerCase\")] public string Label { get; set; } Property Value string ReadyState [To(\"FirstCharToLowerCase\")] public ushort ReadyState { get; } Property Value ushort Src The HTMLTrackElement.src property reflects the value of the track element's src attribute, which indicates the URL of the text track&apos;s data. [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string A string object containing the URL of the text track data. Remarks -HTMLTrackElement: Interface used to define the HTMLTrackElement.src property -track See also on MDN Srclang [To(\"FirstCharToLowerCase\")] public string Srclang { get; set; } Property Value string Track [To(\"FirstCharToLowerCase\")] public TextTrack Track { get; } Property Value TextTrack"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLUListElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLUListElement.html",
    "title": "Class HTMLUListElement | CSharpToJavaScript",
    "keywords": "Class HTMLUListElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLUListElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating unordered list ({{HTMLElement(\"ul\")}}) elements. [To(\"Default\")] public class HTMLUListElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLUListElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: ul. See also on MDN Constructors HTMLUListElement() public HTMLUListElement() Properties Compact [To(\"FirstCharToLowerCase\")] public bool Compact { get; set; } Property Value bool Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLUnknownElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLUnknownElement.html",
    "title": "Class HTMLUnknownElement | CSharpToJavaScript",
    "keywords": "Class HTMLUnknownElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLUnknownElement interface represents an invalid HTML element and derives from the HTMLElement interface, but without implementing any additional properties or methods. [To(\"Default\")] public class HTMLUnknownElement : HTMLElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLUnknownElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLVideoElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLVideoElement.html",
    "title": "Class HTMLVideoElement | CSharpToJavaScript",
    "keywords": "Class HTMLVideoElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The list of supported media formats varies from one browser to the other. You should either provide your video in a single format that all the relevant browsers supports, or provide multiple video sources in enough different formats that all the browsers you need to support are covered. [To(\"Default\")] public class HTMLVideoElement : HTMLMediaElement, GlobalEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle Inheritance object EventTarget Node Element HTMLElement HTMLMediaElement HTMLVideoElement Implements GlobalEventHandlers ElementContentEditable HTMLOrSVGElement ElementCSSInlineStyle Inherited Members HTMLMediaElement.Error HTMLMediaElement.Src HTMLMediaElement.SrcObject HTMLMediaElement.CurrentSrc HTMLMediaElement.CrossOrigin HTMLMediaElement.NETWORK_EMPTY HTMLMediaElement.NETWORK_IDLE HTMLMediaElement.NETWORK_LOADING HTMLMediaElement.NETWORK_NO_SOURCE HTMLMediaElement.NetworkState HTMLMediaElement.Preload HTMLMediaElement.BufferingThrottled HTMLMediaElement.Load() HTMLMediaElement.CanPlayType(string) HTMLMediaElement.HAVE_NOTHING HTMLMediaElement.HAVE_METADATA HTMLMediaElement.HAVE_CURRENT_DATA HTMLMediaElement.HAVE_FUTURE_DATA HTMLMediaElement.HAVE_ENOUGH_DATA HTMLMediaElement.ReadyState HTMLMediaElement.Seeking HTMLMediaElement.CurrentTime HTMLMediaElement.FastSeek(Number) HTMLMediaElement.Duration HTMLMediaElement.GetStartDate() HTMLMediaElement.Paused HTMLMediaElement.DefaultPlaybackRate HTMLMediaElement.PlaybackRate HTMLMediaElement.PreservesPitch HTMLMediaElement.Played HTMLMediaElement.Seekable HTMLMediaElement.Ended HTMLMediaElement.Autoplay HTMLMediaElement.Loop HTMLMediaElement.Play() HTMLMediaElement.Pause() HTMLMediaElement.Controls HTMLMediaElement.Volume HTMLMediaElement.Muted HTMLMediaElement.DefaultMuted HTMLMediaElement.AudioTracks HTMLMediaElement.VideoTracks HTMLMediaElement.TextTracks HTMLMediaElement.AddTextTrack(TextTrackKind, string, string) HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.ShowPopover() HTMLElement.HidePopover() HTMLElement.TogglePopover(bool) HTMLElement.Popover HTMLElement.Style Element.Pseudo(Unsupported) Element.Part Element.GetSpatialNavigationContainer() Element.FocusableAreas(FocusableAreasOption) Element.SpatialNavigationSearch(SpatialNavigationDirection, SpatialNavigationSearchOptions) Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.InnerHTML Element.OuterHTML Element.InsertAdjacentHTML(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Element.Uiactions Element.Uitrigger Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: video. -Supported media formats See also on MDN Constructors HTMLVideoElement() public HTMLVideoElement() Properties DisablePictureInPicture The HTMLVideoElement disablePictureInPicture property reflects the HTML attribute indicating whether the user agent should suggest the picture-in-picture feature to users, or request it automatically. [To(\"FirstCharToLowerCase\")] public bool DisablePictureInPicture { get; set; } Property Value bool A boolean value that is true if the user agent should suggest that feature to users. Remarks See also on MDN Height [To(\"FirstCharToLowerCase\")] public ulong Height { get; set; } Property Value ulong Onenterpictureinpicture [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onenterpictureinpicture { get; set; } Property Value EventHandlerNonNull Onleavepictureinpicture [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onleavepictureinpicture { get; set; } Property Value EventHandlerNonNull PlaysInline [To(\"FirstCharToLowerCase\")] public bool PlaysInline { get; set; } Property Value bool Poster [To(\"FirstCharToLowerCase\")] public string Poster { get; set; } Property Value string VideoHeight The HTMLVideoElement interface's read-only videoHeight property indicates the intrinsic height of the video, expressed in CSS pixels. In simple terms, this is the height of the media in its natural size. [To(\"FirstCharToLowerCase\")] public ulong VideoHeight { get; } Property Value ulong An integer value specifying the intrinsic height of the video in CSS pixels. If the element's ReadyState is HTMLMediaElement.HAVE_NOTHING, then the value of this property is 0, because neither video nor poster frame size information is yet available. Remarks See also on MDN VideoWidth The HTMLVideoElement interface's read-only videoWidth property indicates the intrinsic width of the video, expressed in CSS pixels. In simple terms, this is the width of the media in its natural size. [To(\"FirstCharToLowerCase\")] public ulong VideoWidth { get; } Property Value ulong An integer value specifying the intrinsic width of the video in CSS pixels. If the element's ReadyState is HTMLMediaElement.HAVE_NOTHING, then the value of this property is 0, because neither video nor poster frame size information is yet available. Remarks See HTMLVideoElement.videoHeight &gt; About intrinsic width and height for more details. See also on MDN Width [To(\"FirstCharToLowerCase\")] public ulong Width { get; set; } Property Value ulong Methods RequestPictureInPicture() The HTMLVideoElement method requestPictureInPicture() issues an asynchronous request to display the video in picture-in-picture mode. [To(\"FirstCharToLowerCase\")] public Task<PictureInPictureWindow> RequestPictureInPicture() Returns Task<PictureInPictureWindow> A {{jsxref(\"Promise\")}} that will resolve to a PictureInPictureWindow object that can be used to listen when a user will resize that floating window. Remarks It&apos;s not guaranteed that the video will be put into picture-in-picture. If permission to enter that mode is granted, the returned Promise will resolve and the video will receive a {{domxref(&quot;HTMLVideoElement.enterpictureinpicture_event&quot;, &quot;enterpictureinpicture&quot;)}} event to let it know that it&apos;s now in picture-in-picture. -The video element -DisablePictureInPicture -PictureInPictureEnabled -ExitPictureInPicture() -Document.PictureInPictureElement -:picture-in-picture See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HardwareAcceleration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HardwareAcceleration.html",
    "title": "Enum HardwareAcceleration | CSharpToJavaScript",
    "keywords": "Enum HardwareAcceleration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum HardwareAcceleration Fields NoPreference = 0 PreferHardware = 1 PreferSoftware = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.HashChangeEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HashChangeEvent.html",
    "title": "Class HashChangeEvent | CSharpToJavaScript",
    "keywords": "Class HashChangeEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HashChangeEvent interface represents events that fire when the fragment identifier of the URL has changed. [To(\"FirstCharToLowerCase\")] public class HashChangeEvent : Event Inheritance object Event HashChangeEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The fragment identifier is the part of the URL that follows (and includes) the # symbol. See also on MDN Constructors HashChangeEvent() public HashChangeEvent() HashChangeEvent(string, HashChangeEventInit) The HashChangeEvent() constructor creates a new HashChangeEvent object, that is used by the Window/hashchange_event event fired at the Window object when the fragment of the URL changes. public HashChangeEvent(string type, HashChangeEventInit eventInitDict) Parameters type string eventInitDict HashChangeEventInit Remarks NOTE Note: A web developer doesn't typically need to call this constructor, as the browser creates these objects itself when firing Window/hashchange_event events. -Window/hashchange_event event See also on MDN Properties NewURL The newURL read-only property of the HashChangeEvent interface returns the new URL to which the window is navigating. public string NewURL { get; } Property Value string A string. Remarks See also on MDN OldURL The oldURL read-only property of the HashChangeEvent interface returns the previous URL from which the window was navigated. public string OldURL { get; } Property Value string A string. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HashChangeEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HashChangeEventInit.html",
    "title": "Class HashChangeEventInit | CSharpToJavaScript",
    "keywords": "Class HashChangeEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class HashChangeEventInit : EventInit Inheritance object EventInit HashChangeEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NewURL public string NewURL Field Value string OldURL public string OldURL Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HdrMetadataType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HdrMetadataType.html",
    "title": "Enum HdrMetadataType | CSharpToJavaScript",
    "keywords": "Enum HdrMetadataType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum HdrMetadataType Fields SmpteSt2086 = 0 SmpteSt209410 = 1 SmpteSt209440 = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.Headers.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Headers.html",
    "title": "Class Headers | CSharpToJavaScript",
    "keywords": "Class Headers Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Headers interface of the Fetch API allows you to perform various actions on HTTP request and response headers. These actions include retrieving, setting, adding to, and removing headers from the list of the request&apos;s headers. [To(\"FirstCharToLowerCase\")] public class Headers Inheritance object Headers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs. You can add to this using methods like Append(string, string) (see Examples.) In all methods of this interface, header names are matched by case-insensitive byte sequence. For security reasons, some headers can only be controlled by the user agent. These headers include the Forbidden_header_name and Forbidden_response_header_name. A Headers object also has an associated guard, which takes a value of immutable, request, request-no-cors, response, or none. This affects whether the Set(string, string), Delete(string), and Append(string, string) methods will mutate the header. For more information see {{Glossary(\"Guard\")}}. You can retrieve a Headers object via the Headers and Headers properties, and create a new Headers object using the Headers(Union56) constructor. An object implementing Headers can directly be used in a {{jsxref(\"Statements/for...of\", \"for...of\")}} structure, instead of 'Headers.Entries': for (const p of myHeaders) is equivalent to for (const p of myHeaders.entries()). NOTE Note: you can find out more about the available headers by reading our HTTP headers reference. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Constructors Headers() public Headers() Headers(Union56) The Headers() constructor creates a new Headers object. public Headers(Union56 init) Parameters init Union56 Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Properties this[int] public string this[int i] { get; set; } Parameters i int Property Value string Methods Append(string, string) The append() method of the Headers interface appends a new value onto an existing header inside a Headers object, or adds the header if it does not already exist. public GlobalObject.Undefined Append(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The difference between Set(string, string) and append() is that if the specified header already exists and accepts multiple values, set() will overwrite the existing value with the new one, whereas append() will append the new value onto the end of the set of values. For security reasons, some headers can only be controlled by the user agent. These headers include the Forbidden_header_name and Forbidden_response_header_name. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Delete(string) The delete() method of the Headers interface deletes a header from the current Headers object. public GlobalObject.Undefined Delete(string name) Parameters name string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method throws a TypeError for the following reasons: For security reasons, some headers can only be controlled by the user agent. These headers include the Forbidden_header_name and Forbidden_response_header_name. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Get(string) The get() method of the Headers interface returns a byte string of all the values of a header within a Headers object with a given name. If the requested header doesn&apos;t exist in the Headers object, it returns null. public string? Get(string name) Parameters name string Returns string A String sequence representing the values of the retrieved header or null if this header is not set. Remarks For security reasons, some headers can only be controlled by the user agent. These headers include the Forbidden_header_name and Forbidden_response_header_name. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN GetSetCookie() The getSetCookie() method of the Headers interface returns an array containing the values of all {{httpheader(\"Set-Cookie\")}} headers associated with a response. This allows Headers objects to handle having multiple Set-Cookie headers, which wasn&apos;t possible prior to its implementation. public List<string> GetSetCookie() Returns List<string> An array of strings representing the values of all the different Set-Cookie headers associated with a response.If no Set-Cookie headers are set, the method will return an empty array ([ ]). Remarks This method is intended for use on server environments (for example Node.js). Browsers block frontend JavaScript code from accessing the Set-Cookie header, as required by the Fetch spec, which defines Set-Cookie as a forbidden response-header name that must be filtered out from any response exposed to frontend code. -HTTP -Set-Cookie See also on MDN Has(string) The has() method of the Headers interface returns a boolean stating whether a Headers object contains a certain header. public bool Has(string name) Parameters name string Returns bool A boolean value. Remarks For security reasons, some headers can only be controlled by the user agent. These headers include the Forbidden_header_name and Forbidden_response_header_name. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Set(string, string) The set() method of the Headers interface sets a new value for an existing header inside a Headers object, or adds the header if it does not already exist. public GlobalObject.Undefined Set(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The difference between set() and Append(string, string) is that if the specified header already exists and accepts multiple values, set() overwrites the existing value with the new one, whereas Append(string, string) appends the new value to the end of the set of values. For security reasons, some headers can only be controller by the user agent. These headers include the Forbidden_header_name and Forbidden_response_header_name. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Highlight.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Highlight.html",
    "title": "Class Highlight | CSharpToJavaScript",
    "keywords": "Class Highlight Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Highlight interface of the CSS Custom Highlight API is used to represent a collection of Range instances to be styled using the API. [To(\"FirstCharToLowerCase\")] public class Highlight Inheritance object Highlight Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To style arbitrary ranges in a page, instantiate a new Highlight object, add one or more Range objects to it, and register it using the HighlightRegistry. A Highlight instance is a Set-like object that can hold one or more Range objects. -{{domxref(&quot;css_custom_highlight_api&quot;, &quot;The CSS Custom Highlight API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -CSS Custom Highlight API: The Future of Highlighting Text Ranges on the Web See also on MDN Constructors Highlight() public Highlight() Highlight(params AbstractRange[]) The Highlight() constructor returns a newly created Highlight object which can hold a collection of Range objects to be styled using the {{domxref(\"css_custom_highlight_api\", \"CSS Custom Highlight API\", &quot;&quot;, &quot;nocode&quot;)}}. public Highlight(params AbstractRange[] initialRanges) Parameters initialRanges AbstractRange[] Remarks -{{domxref(&quot;css_custom_highlight_api&quot;, &quot;The CSS Custom Highlight API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -CSS Custom Highlight API: The Future of Highlighting Text Ranges on the Web See also on MDN Properties Priority It is possible to create Range objects that overlap in a document. public long Priority { get; set; } Property Value long An integer. Remarks When overlapping ranges are used by multiple different Highlight objects, and when those highlights are styled using {{cssxref(\"::highlight&quot;)}} pseudo-elements, this may lead to conflicting styles. If two text ranges overlap and are both highlighted using the {{domxref(&quot;css_custom_highlight_api&quot;, &quot;CSS Custom Highlight API&quot;, &quot;&quot;, &quot;nocode&quot;)}}, and if they&apos;re both styled using the color CSS property, the browser needs to decide which color should be used for styling the text in the overlapping part. By default, all highlights have the same priority and the browser chooses the most recently registered highlight to style the overlapping parts. The priority property of the Highlight interface is a {{jsxref(\"Number\")}} used to change this default behavior and determine which highlight's styles should be used to resolve style conflicts in overlapping parts. Note that all the styles of a highlight are applied and the browser only needs to resolve conflicts when the same CSS properties are used by multiple overlapping highlights. The highlight style conflict resolution also does not depend on the order in which the {{cssxref(&quot;::highlight&quot;)}} pseudo-elements rules appear in the source, or whether or not CSS properties are marked as !important. -{{domxref(&quot;css_custom_highlight_api&quot;, &quot;The CSS Custom Highlight API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -CSS Custom Highlight API: The Future of Highlighting Text Ranges on the Web See also on MDN Type The type property of the Highlight interface is an enumerated {{jsxref(\"String\")}} used to specify the meaning of the highlight. This allows assistive technologies, such as screen readers, to include this meaning when exposing the highlight to users. public HighlightType Type { get; set; } Property Value HighlightType The possible values of the type enumerated value are: Remarks By default, a highlight object will have its type set to highlight, but you can change it to spelling-error or grammar-error. -{{domxref(&quot;css_custom_highlight_api&quot;, &quot;The CSS Custom Highlight API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -CSS Custom Highlight API: The Future of Highlighting Text Ranges on the Web See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HighlightRegistry.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HighlightRegistry.html",
    "title": "Class HighlightRegistry | CSharpToJavaScript",
    "keywords": "Class HighlightRegistry Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HighlightRegistry interface of the CSS Custom Highlight API is used to register Highlight objects to be styled using the API. It is accessed via Highlights. [To(\"FirstCharToLowerCase\")] public class HighlightRegistry Inheritance object HighlightRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A HighlightRegistry instance is a Map-like object, in which each key is the name string for a custom highlight, and the corresponding value is the associated Highlight object. -{{domxref(&quot;css_custom_highlight_api&quot;, &quot;The CSS Custom Highlight API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -CSS Custom Highlight API: The Future of Highlighting Text Ranges on the Web See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HighlightType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HighlightType.html",
    "title": "Enum HighlightType | CSharpToJavaScript",
    "keywords": "Enum HighlightType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The type property of the Highlight interface is an enumerated {{jsxref(\"String\")}} used to specify the meaning of the highlight. This allows assistive technologies, such as screen readers, to include this meaning when exposing the highlight to users. public enum HighlightType Fields GrammarError = 2 Highlight = 0 SpellingError = 1 Remarks By default, a highlight object will have its type set to highlight, but you can change it to spelling-error or grammar-error. -{{domxref(&quot;css_custom_highlight_api&quot;, &quot;The CSS Custom Highlight API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -CSS Custom Highlight API: The Future of Highlighting Text Ranges on the Web See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.History.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.History.html",
    "title": "Class History | CSharpToJavaScript",
    "keywords": "Class History Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The History interface allows manipulation of the browser session history, that is the pages visited in the tab or frame that the current page is loaded in. [To(\"FirstCharToLowerCase\")] public class History Inheritance object History Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks There is only one instance of history (It is a singleton.) accessible via the global object History. NOTE Note: This interface is only available on the main thread (Window). It cannot be accessed in Worker or Worklet contexts. -History global object See also on MDN Properties Length The History.length read-only property returns an integer representing the number of elements in the session history, including the currently loaded page. public ulong Length { get; } Property Value ulong A number. Remarks For example, for a page loaded in a new tab this property returns 1. -The History interface it belongs to. See also on MDN ScrollRestoration The scrollRestoration property of History interface allows web applications to explicitly set default scroll restoration behavior on history navigation. public ScrollRestoration ScrollRestoration { get; set; } Property Value ScrollRestoration One of the following: Remarks See also on MDN State The History.state property returns a value representing the state at the top of the history stack. This is a way to look at the state without having to wait for a Window/popstate_event event. public dynamic State { get; } Property Value dynamic The state at the top of the history stack. The value is null until the PushState(dynamic, string, string?) or ReplaceState(dynamic, string, string?) method is used. Remarks -Working with the History API -History.pushState() -History.replaceState() -PopStateEvent.state See also on MDN Methods Back() The History.back() method causes the browser to move back one page in the session history. public GlobalObject.Undefined Back() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks It has the same effect as calling Go(long). If there is no previous page, this method call does nothing. This method is asynchronous. Add a listener for the Window/popstate_event event in order to determine when the navigation has completed. -History -Working with the History API See also on MDN Forward() The History.forward() method causes the browser to move forward one page in the session history. It has the same effect as calling Go(long). public GlobalObject.Undefined Forward() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method is {{glossary(\"asynchronous\")}}. Add a listener for the Window/popstate_event event in order to determine when the navigation has completed. -History -Window/popstate_event -Working with the History API See also on MDN Go(long) The History.go() method loads a specific page from the session history. You can use it to move forwards and backwards through the history depending on the value of a parameter. public GlobalObject.Undefined Go(long delta) Parameters delta long Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method is asynchronous. Add a listener for the Window/popstate_event event in order to determine when the navigation has completed. -History -Back() -Forward() -Window/popstate_event event -Working with the History API See also on MDN PushState(dynamic, string, string?) In an HTML document, the history.pushState() method adds an entry to the browser&apos;s session history stack. public GlobalObject.Undefined PushState(dynamic data, string unused, string? url) Parameters data dynamic unused string url string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method is {{glossary(\"asynchronous\")}}. Add a listener for the Window/popstate_event event in order to determine when the navigation has completed. The state parameter will be available in it. -Working with the History API -Window: popstate event See also on MDN ReplaceState(dynamic, string, string?) The History.replaceState() method modifies the current history entry, replacing it with the state object and URL passed in the method parameters. This method is particularly useful when you want to update the state object or URL of the current history entry in response to some user action. public GlobalObject.Undefined ReplaceState(dynamic data, string unused, string? url) Parameters data dynamic unused string url string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method is {{glossary(\"asynchronous\")}}. Add a listener for the Window/popstate_event event in order to determine when the navigation has completed. The state parameter will be available in it. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBCursor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBCursor.html",
    "title": "Class IDBCursor | CSharpToJavaScript",
    "keywords": "Class IDBCursor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll NOTE Note: Not to be confused with IDBCursorWithValue which is just an IDBCursor interface with an additional value property. [To(\"FirstCharToLowerCase\")] public class IDBCursor Inheritance object IDBCursor Derived IDBCursorWithValue Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The IDBCursor interface of the IndexedDB API represents a cursor for traversing or iterating over multiple records in a database. The cursor has a source that indicates which index or object store it is iterating over. It has a position within the range, and moves in a direction that is increasing or decreasing in the order of record keys. The cursor enables an application to asynchronously process all the records in the cursor&apos;s range. You can have an unlimited number of cursors at the same time. You always get the same IDBCursor object representing a given cursor. Operations are performed on the underlying index or object store. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (view example live). See also on MDN Properties Direction The direction read-only property of the IDBCursor interface is a string that returns the direction of traversal of the cursor (set using OpenCursor(dynamic, IDBCursorDirection) for example). See the Values section below for possible values. public IDBCursorDirection Direction { get; } Property Value IDBCursorDirection A string indicating the direction in which the cursor is traversing the data. Possible values are: Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Key The key read-only property of the IDBCursor interface returns the key for the record at the cursor's position. If the cursor is outside its range, this is set to undefined. The cursor&apos;s key can be any data type. public dynamic Key { get; } Property Value dynamic A value of any type. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN PrimaryKey The primaryKey read-only property of the IDBCursor interface returns the cursor's current effective key. If the cursor is currently being iterated or has iterated outside its range, this is set to undefined. The cursor&apos;s primary key can be any data type. public dynamic PrimaryKey { get; } Property Value dynamic A value of any data type. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Request The request read-only property of the IDBCursor interface returns the IDBRequest used to obtain the cursor. public IDBRequest Request { get; } Property Value IDBRequest An IDBRequest object instance. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Source The source read-only property of the IDBCursor interface returns the IDBObjectStore or IDBIndex that the cursor is iterating over. This function never returns null or throws an exception, even if the cursor is currently being iterated, has iterated past its end, or its transaction is not active. public Union77 Source { get; } Property Value Union77 The IDBObjectStore or IDBIndex that the cursor is iterating over. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Methods Advance(ulong) The advance() method of the IDBCursor interface sets the number of times a cursor should move its position forward. public GlobalObject.Undefined Advance(ulong count) Parameters count ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Continue(dynamic) The continue() method of the IDBCursor interface advances the cursor to the next position along its direction, to the item whose key matches the optional key parameter. If no key is specified, the cursor advances to the immediate next position, based on its direction. public GlobalObject.Undefined Continue(dynamic key) Parameters key dynamic Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN ContinuePrimaryKey(dynamic, dynamic) The continuePrimaryKey() method of the IDBCursor interface advances the cursor to the item whose key matches the key parameter as well as whose primary key matches the primary key parameter. public GlobalObject.Undefined ContinuePrimaryKey(dynamic key, dynamic primaryKey) Parameters key dynamic primaryKey dynamic Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks A typical use case, is to resume the iteration where a previous cursor has been closed, without having to compare the keys one by one. Calling this method more than once before new cursor data has been loaded - for example, calling continuePrimaryKey() twice from the same onsuccess handler - results in an InvalidStateError being thrown on the second call because the cursor&apos;s got value flag has been unset. This method is only valid for cursors coming from an index. Using it for cursors coming from an object store will throw an error. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Delete() The delete() method of the IDBCursor interface returns an IDBRequest object, and, in a separate thread, deletes the record at the cursor&apos;s position, without changing the cursor&apos;s position. Once the record is deleted, the cursor&apos;s value is set to null. public IDBRequest Delete() Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is undefined. Remarks Be aware that you can&apos;t call delete() (or Update(dynamic)) on cursors obtained from OpenKeyCursor(dynamic, IDBCursorDirection). For such needs, you have to use OpenCursor(dynamic, IDBCursorDirection) instead. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Update(dynamic) The update() method of the IDBCursor interface returns an IDBRequest object, and, in a separate thread, updates the value at the current position of the cursor in the object store. If the cursor points to a record that has just been deleted, a new record is created. public IDBRequest Update(dynamic value) Parameters value dynamic Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is the key for the updated record. Remarks Be aware that you can&apos;t call update() (or Delete()) on cursors obtained from OpenKeyCursor(dynamic, IDBCursorDirection). For such needs, you have to use OpenCursor(dynamic, IDBCursorDirection) instead. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBCursorDirection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBCursorDirection.html",
    "title": "Enum IDBCursorDirection | CSharpToJavaScript",
    "keywords": "Enum IDBCursorDirection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The direction read-only property of the IDBCursor interface is a string that returns the direction of traversal of the cursor (set using OpenCursor(dynamic, IDBCursorDirection) for example). See the Values section below for possible values. public enum IDBCursorDirection Fields Next = 0 Nextunique = 1 Prev = 2 Prevunique = 3 Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBCursorWithValue.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBCursorWithValue.html",
    "title": "Class IDBCursorWithValue | CSharpToJavaScript",
    "keywords": "Class IDBCursorWithValue Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The IDBCursorWithValue interface of the IndexedDB API represents a cursor for traversing or iterating over multiple records in a database. It is the same as the IDBCursor, except that it includes the value property. [To(\"FirstCharToLowerCase\")] public class IDBCursorWithValue : IDBCursor Inheritance object IDBCursor IDBCursorWithValue Inherited Members IDBCursor.Source IDBCursor.Direction IDBCursor.Key IDBCursor.PrimaryKey IDBCursor.Request IDBCursor.Advance(ulong) IDBCursor.Continue(dynamic) IDBCursor.ContinuePrimaryKey(dynamic, dynamic) IDBCursor.Update(dynamic) IDBCursor.Delete() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The cursor has a source that indicates which index or object store it is iterating over. It has a position within the range, and moves in a direction that is increasing or decreasing in the order of record keys. The cursor enables an application to asynchronously process all the records in the cursor&apos;s range. You can have an unlimited number of cursors at the same time. You always get the same IDBCursorWithValue object representing a given cursor. Operations are performed on the underlying index or object store. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Properties Value The value read-only property of the IDBCursorWithValue interface returns the value of the current cursor, whatever that is. public dynamic Value { get; } Property Value dynamic The value of the current cursor. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBDatabase.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBDatabase.html",
    "title": "Class IDBDatabase | CSharpToJavaScript",
    "keywords": "Class IDBDatabase Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The IDBDatabase interface of the IndexedDB API provides a connection to a database; you can use an IDBDatabase object to open a transaction on your database then create, manipulate, and delete objects (data) in that database. The interface provides the only way to get and manage versions of the database. [To(\"FirstCharToLowerCase\")] public class IDBDatabase : EventTarget Inheritance object EventTarget IDBDatabase Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers NOTE Note: Everything you do in IndexedDB always happens in the context of a transaction, representing interactions with data in the database. All objects in IndexedDB — including object stores, indexes, and cursors — are tied to a particular transaction. Thus, you cannot execute commands, access data, or open anything outside of a transaction. -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Properties Name The name read-only property of the IDBDatabase interface is a string that contains the name of the connected database. public string Name { get; } Property Value string A string containing the name of the connected database. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN ObjectStoreNames The objectStoreNames read-only property of the IDBDatabase interface is a DOMStringList containing a list of the names of the object stores currently in the connected database. public string ObjectStoreNames { get; } Property Value string A DOMStringList containing a list of the names of the object stores currently in the connected database. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Onabort public EventHandlerNonNull Onabort { get; set; } Property Value EventHandlerNonNull Onclose public EventHandlerNonNull Onclose { get; set; } Property Value EventHandlerNonNull Onerror public EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull Onversionchange public EventHandlerNonNull Onversionchange { get; set; } Property Value EventHandlerNonNull Version The version property of the IDBDatabase interface is a 64-bit integer that contains the version of the connected database. When a database is first created, this attribute is an empty string. public ulong Version { get; } Property Value ulong An integer containing the version of the connected database. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Methods Close() The close() method of the IDBDatabase interface returns immediately and closes the connection in a separate thread. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The connection is not actually closed until all transactions created using this connection are complete. No new transactions can be created for this connection once this method is called. Methods that create transactions throw an exception if a closing operation is pending. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN CreateObjectStore(string, IDBObjectStoreParameters) The createObjectStore() method of the IDBDatabase interface creates and returns a new IDBObjectStore. public IDBObjectStore CreateObjectStore(string name, IDBObjectStoreParameters options) Parameters name string options IDBObjectStoreParameters Returns IDBObjectStore A new IDBObjectStore. Remarks The method takes the name of the store as well as a parameter object that lets you define important optional properties. You can use the property to uniquely identify individual objects in the store. As the property is an identifier, it should be unique to every object, and every object should have that property. This method can be called only within a versionchange transaction. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN DeleteObjectStore(string) The deleteObjectStore() method of the IDBDatabase interface destroys the object store with the given name in the connected database, along with any indexes that reference it. public GlobalObject.Undefined DeleteObjectStore(string name) Parameters name string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks As with CreateObjectStore(string, IDBObjectStoreParameters), this method can be called only within a versionchange transaction. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Transaction(Union74, IDBTransactionMode, IDBTransactionOptions) The transaction method of the IDBDatabase interface immediately returns a transaction object (IDBTransaction) containing the ObjectStore(string) method, which you can use to access your object store. public IDBTransaction Transaction(Union74 storeNames, IDBTransactionMode mode, IDBTransactionOptions options) Parameters storeNames Union74 mode IDBTransactionMode options IDBTransactionOptions Returns IDBTransaction An IDBTransaction object. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBDatabaseInfo.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBDatabaseInfo.html",
    "title": "Class IDBDatabaseInfo | CSharpToJavaScript",
    "keywords": "Class IDBDatabaseInfo Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class IDBDatabaseInfo Inheritance object IDBDatabaseInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Name public string Name Field Value string Version public ulong Version Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBFactory.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBFactory.html",
    "title": "Class IDBFactory | CSharpToJavaScript",
    "keywords": "Class IDBFactory Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The IDBFactory interface of the IndexedDB API lets applications asynchronously access the indexed databases. The object that implements the interface is window.indexedDB. You open — that is, create and access — and delete a database with this object, and not directly with IDBFactory. [To(\"FirstCharToLowerCase\")] public class IDBFactory Inheritance object IDBFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Methods Cmp(dynamic, dynamic) The cmp() method of the IDBFactory interface compares two values as keys to determine equality and ordering for IndexedDB operations, such as storing and iterating. public Number Cmp(dynamic first, dynamic second) Parameters first dynamic second dynamic Returns Number An integer that indicates the result of the comparison; the table below lists the possible values and their meanings: Returned value Description -1 1st key is less than the 2nd key 0 1st key is equal to the 2nd key 1 1st key is greater than the 2nd key Remarks AvailableInWorkers NOTE Note: Do not use this method for comparing arbitrary JavaScript values, because many JavaScript values are either not valid IndexedDB keys (booleans and objects, for example) or are treated as equivalent IndexedDB keys (for example, since IndexedDB ignores arrays with non-numeric properties and treats them as empty arrays, so any non-numeric arrays are treated as equivalent). This throws an exception if either of the values is not a valid key. -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Databases() The databases method of the IDBFactory interface returns a list representing all the available databases, including their names and versions. public Task<List<IDBDatabaseInfo>> Databases() Returns Task<List<IDBDatabaseInfo>> A promise that resolves either to an error or a list of dictionaries, each with two elements, name and version: Remarks AvailableInWorkers NOTE Note: This method is introduced in a draft of a specifications and browser compatibility is limited. -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN DeleteDatabase(string) The deleteDatabase() method of the IDBFactory interface requests the deletion of a database. The method returns an IDBOpenDBRequest object immediately, and performs the deletion operation asynchronously. public IDBOpenDBRequest DeleteDatabase(string name) Parameters name string Returns IDBOpenDBRequest A IDBOpenDBRequest on which subsequent events related to this request are fired.If the operation is successful, the value of the request's Result property is null. Remarks If the database is successfully deleted, then a success event is fired on the request object returned from this method, with its result set to undefined. If an error occurs while the database is being deleted, then an error event is fired on the request object that is returned from this method. When deleteDatabase() is called, any other open connections to this particular database will get a versionchange event. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Open(string, ulong) The open() method of the IDBFactory interface requests opening a connection to a database. public IDBOpenDBRequest Open(string name, ulong version) Parameters name string version ulong Returns IDBOpenDBRequest A IDBOpenDBRequest object on which subsequent events related to this request are fired.If the operation is successful, the value of the request's Result property is a IDBDatabase object representing the connection to the database. Remarks The method returns an IDBOpenDBRequest object immediately, and performs the open operation asynchronously. If the operation is successful, a success event is fired on the request object that is returned from this method, with its result attribute set to the new IDBDatabase object for the connection. May trigger upgradeneeded, blocked or versionchange events. AvailableInWorkers -Using IndexedDB -Browser storage quotas and eviction criteria. -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBIndex.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBIndex.html",
    "title": "Class IDBIndex | CSharpToJavaScript",
    "keywords": "Class IDBIndex Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IDBIndex interface of the IndexedDB API provides asynchronous access to an index in a database. An index is a kind of object store for looking up records in another object store, called the referenced object store. You use this interface to retrieve data. [To(\"FirstCharToLowerCase\")] public class IDBIndex Inheritance object IDBIndex Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can retrieve records in an object store through the primary key or by using an index. An index lets you look up records in an object store using properties of the values in the object stores records other than the primary key The index is a persistent key-value storage where the value part of its records is the key part of a record in the referenced object store. The records in an index are automatically populated whenever records in the referenced object store are inserted, updated, or deleted. Each record in an index can point to only one record in its referenced object store, but several indexes can reference the same object store. When the object store changes, all indexes that refers to the object store are automatically updated. You can grab a set of keys within a range. To learn more, see IDBKeyRange. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Properties KeyPath The keyPath property of the IDBIndex interface returns the key path of the current index. If null, this index is not auto-populated. public dynamic KeyPath { get; } Property Value dynamic Any data type that can be used as a key path. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN MultiEntry The multiEntry read-only property of the IDBIndex interface returns a boolean value that affects how the index behaves when the result of evaluating the index&apos;s key path yields an array. public bool MultiEntry { get; } Property Value bool A boolean value: Value Effect true There is one record in the index for each item in an array of keys. false There is one record for each key that is an array. Remarks This is decided when the index is created, using the CreateIndex(string, Union76, IDBIndexParameters) method. This method takes an optional options parameter whose multiEntry property is set to true/false. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Name The name property of the IDBIndex interface contains a string which names the index. public string Name { get; set; } Property Value string A string specifying a name for the index. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN ObjectStore The objectStore property of the IDBIndex interface returns the name of the object store referenced by the current index. public IDBObjectStore ObjectStore { get; } Property Value IDBObjectStore An IDBObjectStore. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Unique The unique read-only property returns a boolean that states whether the index allows duplicate keys. public bool Unique { get; } Property Value bool A boolean value: Value Effect true The current index does not allow duplicate values for a key. false The current index allows duplicate key values. Remarks This is decided when the index is created, using the CreateIndex(string, Union76, IDBIndexParameters) method. This method takes an optional parameter, unique, which if set to true means that the index will not be able to accept duplicate entries. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Methods Count(dynamic) The count() method of the IDBIndex interface returns an IDBRequest object, and in a separate thread, returns the number of records within a key range. public IDBRequest Count(dynamic query) Parameters query dynamic Returns IDBRequest A IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is the number of records that match the given key or key range. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Get(dynamic) The get() method of the IDBIndex interface returns an IDBRequest object, and, in a separate thread, finds either the value in the referenced object store that corresponds to the given key or the first corresponding value, if key is set to an IDBKeyRange. public IDBRequest Get(dynamic query) Parameters query dynamic Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is the value of the first record matching the given key or key range. Remarks If a value is found, then a structured clone of it is created and set as the result of the request object: this returns the record the key is associated with. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN GetAll(dynamic, ulong) The getAll() method of the IDBIndex interface retrieves all objects that are inside the index. public IDBRequest GetAll(dynamic query, ulong count) Parameters query dynamic count ulong Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is an {{jsxref(\"Array\")}} of the values of all records matching the given query, up to the value of count, if count was supplied. Remarks There is a performance cost associated with looking at the value property of a cursor, because the object is created lazily. To use a feature like getAll(), the browser has to create all the objects at once. If you are just interested in looking at each of the keys, for instance, it is more efficient to use a cursor. If you are trying to get an array of all the objects in an object store, though, you should use getAll(). -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN GetAllKeys(dynamic, ulong) The getAllKeys() method of the IDBIndex interface asynchronously retrieves the primary keys of all objects inside the index, setting them as the result of the request object. public IDBRequest GetAllKeys(dynamic query, ulong count) Parameters query dynamic count ulong Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is an {{jsxref(\"Array\")}} of the keys for all records matching the given query, up to the value of count, if count was supplied. Remarks -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN GetKey(dynamic) The getKey() method of the IDBIndex interface returns an IDBRequest object, and, in a separate thread, finds either the primary key that corresponds to the given key in this index or the first corresponding primary key, if key is set to an IDBKeyRange. public IDBRequest GetKey(dynamic query) Parameters query dynamic Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is the key for the first record matching the given key or key range. Remarks If a primary key is found, it is set as the result of the request object. Note that this doesn't return the whole record as Get(dynamic) does. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN OpenCursor(dynamic, IDBCursorDirection) The openCursor() method of the IDBIndex interface returns an IDBRequest object, and, in a separate thread, creates a cursor over the specified key range. public IDBRequest OpenCursor(dynamic query, IDBCursorDirection direction) Parameters query dynamic direction IDBCursorDirection Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is: Remarks The method sets the position of the cursor to the appropriate record, based on the specified direction. If the key range is not specified or is null, then the range includes all the records. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN OpenKeyCursor(dynamic, IDBCursorDirection) The openKeyCursor() method of the IDBIndex interface returns an IDBRequest object, and, in a separate thread, creates a cursor over the specified key range, as arranged by this index. public IDBRequest OpenKeyCursor(dynamic query, IDBCursorDirection direction) Parameters query dynamic direction IDBCursorDirection Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is: Remarks The method sets the position of the cursor to the appropriate key, based on the specified direction. If the key range is not specified or is null, then the range includes all the keys. NOTE Note: Cursors returned by openKeyCursor() do not make the referenced value available as IDBIndex.openCursor does. This makes obtaining a list of keys much more efficient. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBIndexParameters.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBIndexParameters.html",
    "title": "Class IDBIndexParameters | CSharpToJavaScript",
    "keywords": "Class IDBIndexParameters Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class IDBIndexParameters Inheritance object IDBIndexParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MultiEntry public bool MultiEntry Field Value bool Unique public bool Unique Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBKeyRange.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBKeyRange.html",
    "title": "Class IDBKeyRange | CSharpToJavaScript",
    "keywords": "Class IDBKeyRange Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The IDBKeyRange interface of the IndexedDB API represents a continuous interval over some data type that is used for keys. Records can be retrieved from IDBObjectStore and IDBIndex objects using keys or a range of keys. You can limit the range using lower and upper bounds. For example, you can iterate over all values of a key in the value range A–Z. [To(\"FirstCharToLowerCase\")] public class IDBKeyRange Inheritance object IDBKeyRange Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A key range can be a single value or a range with upper and lower bounds or endpoints. If the key range has both upper and lower bounds, then it is bounded; if it has no bounds, it is unbounded. A bounded key range can either be open (the endpoints are excluded) or closed (the endpoints are included). To retrieve all keys within a certain range, you can use the following code constructs: Range Code All keys ≥ x LowerBound(dynamic, bool) (x) All keys &gt; x LowerBound(dynamic, bool) (x, true) All keys ≤ y UpperBound(dynamic, bool) (y) All keys &lt; y UpperBound(dynamic, bool) (y, true) All keys ≥ x && ≤ y Bound(dynamic, dynamic, bool, bool) (x, y) All keys &gt; x &&&lt; y Bound(dynamic, dynamic, bool, bool) (x, y, true, true) All keys &gt; x && ≤ y Bound(dynamic, dynamic, bool, bool) (x, y, true, false) All keys ≥ x &&&lt; y Bound(dynamic, dynamic, bool, bool) (x, y, false, true) The key = z Only(dynamic) (z) A key is in a key range if the following conditions are true: AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Properties Lower The lower read-only property of the IDBKeyRange interface returns the lower bound of the key range. public dynamic Lower { get; } Property Value dynamic The lower bound of the key range (can be any type.) Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN LowerOpen The lowerOpen read-only property of the IDBKeyRange interface returns a boolean indicating whether the lower-bound value is included in the key range. public bool LowerOpen { get; } Property Value bool A boolean value: Value Indication true The lower-bound value is not included in the key range. false The lower-bound value is included in the key range. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Upper The upper read-only property of the IDBKeyRange interface returns the upper bound of the key range. public dynamic Upper { get; } Property Value dynamic The upper bound of the key range (can be any type.) Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN UpperOpen The upperOpen read-only property of the IDBKeyRange interface returns a boolean indicating whether the upper-bound value is included in the key range. public bool UpperOpen { get; } Property Value bool A boolean value: Value Indication true The upper-bound value is not included in the key range. false The upper-bound value is included in the key range. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Methods Bound(dynamic, dynamic, bool, bool) public static IDBKeyRange Bound(dynamic lower, dynamic upper, bool lowerOpen, bool upperOpen) Parameters lower dynamic upper dynamic lowerOpen bool upperOpen bool Returns IDBKeyRange Includes(dynamic) The includes() method of the IDBKeyRange interface returns a boolean indicating whether a specified key is inside the key range. public bool Includes(dynamic key) Parameters key dynamic Returns bool A boolean value. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN LowerBound(dynamic, bool) public static IDBKeyRange LowerBound(dynamic lower, bool open) Parameters lower dynamic open bool Returns IDBKeyRange Only(dynamic) public static IDBKeyRange Only(dynamic value) Parameters value dynamic Returns IDBKeyRange UpperBound(dynamic, bool) public static IDBKeyRange UpperBound(dynamic upper, bool open) Parameters upper dynamic open bool Returns IDBKeyRange"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBObjectStore.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBObjectStore.html",
    "title": "Class IDBObjectStore | CSharpToJavaScript",
    "keywords": "Class IDBObjectStore Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The IDBObjectStore interface of the IndexedDB API represents an object store in a database. Records within an object store are sorted according to their keys. This sorting enables fast insertion, look-up, and ordered retrieval. [To(\"FirstCharToLowerCase\")] public class IDBObjectStore Inheritance object IDBObjectStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Properties AutoIncrement The autoIncrement read-only property of the IDBObjectStore interface returns the value of the auto increment flag for this object store. public bool AutoIncrement { get; } Property Value bool A boolean value: Value Meaning true The object store auto increments. false The object store does not auto increment. Remarks Note that every object store has its own separate auto increment counter. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN IndexNames The indexNames read-only property of the IDBObjectStore interface returns a list of the names of indexes on objects in this object store. public string IndexNames { get; } Property Value string A DOMStringList. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN KeyPath The keyPath read-only property of the IDBObjectStore interface returns the key path of this object store. public dynamic KeyPath { get; } Property Value dynamic Any value type. Remarks If this property is null, the application must provide a key for each modification operation. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Name The name property of the IDBObjectStore interface indicates the name of this object store. public string Name { get; set; } Property Value string A string containing the object store&apos;s name. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Transaction The transaction read-only property of the IDBObjectStore interface returns the transaction object to which this object store belongs. public IDBTransaction Transaction { get; } Property Value IDBTransaction An IDBTransaction object. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Methods Add(dynamic, dynamic) The add() method of the IDBObjectStore interface returns an IDBRequest object, and, in a separate thread, creates a structured clone of the value, and stores the cloned value in the object store. This is for adding new records to an object store. public IDBRequest Add(dynamic value, dynamic key) Parameters value dynamic key dynamic Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is the key for the new record. Remarks To determine if the add operation has completed successfully, listen for the transaction&apos;s complete event in addition to the IDBObjectStore.add request&apos;s success event, because the transaction may still fail after the success event fires. In other words, the success event is only triggered when the transaction has been successfully queued. The add method is an insert only method. If a record already exists in the object store with the key parameter as its key, then an error ConstraintError event is fired on the returned request object. For updating existing records, you should use the Put(dynamic, dynamic) method instead. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Clear() The clear() method of the IDBObjectStore interface creates and immediately returns an IDBRequest object, and clears this object store in a separate thread. This is for deleting all the current data out of an object store. public IDBRequest Clear() Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is undefined. Remarks Clearing an object store consists of removing all records from the object store and removing all records in indexes that reference the object store. To remove only some of the records in a store, use Delete(dynamic) passing a key or IDBKeyRange. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Count(dynamic) The count() method of the IDBObjectStore interface returns an IDBRequest object, and, in a separate thread, returns the total number of records that match the provided key or IDBKeyRange. If no arguments are provided, it returns the total number of records in the store. public IDBRequest Count(dynamic query) Parameters query dynamic Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is the number of records that match the given query. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN CreateIndex(string, Union76, IDBIndexParameters) The createIndex() method of the IDBObjectStore interface creates and returns a new IDBIndex object in the connected database. It creates a new field/column defining a new data point for each database record to contain. public IDBIndex CreateIndex(string name, Union76 keyPath, IDBIndexParameters options) Parameters name string keyPath Union76 options IDBIndexParameters Returns IDBIndex An IDBIndex object: the newly created index. Remarks Bear in mind that IndexedDB indexes can contain any JavaScript data type; IndexedDB uses the structured clone algorithm to serialize stored objects, which allows for storage of simple and complex objects. Note that this method must be called only from a VersionChange transaction mode callback. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Delete(dynamic) The delete() method of the IDBObjectStore interface returns an IDBRequest object, and, in a separate thread, deletes the specified record or records. public IDBRequest Delete(dynamic query) Parameters query dynamic Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is undefined. Remarks Either a key or an IDBKeyRange can be passed, allowing one or multiple records to be deleted from a store. To delete all records in a store, use Clear(). Bear in mind that if you are using a IDBCursor, you can use the Delete() method to more efficiently delete the current record — without having to explicitly look up the record&apos;s key. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN DeleteIndex(string) The deleteIndex() method of the IDBObjectStore interface destroys the index with the specified name in the connected database, used during a version upgrade. public GlobalObject.Undefined DeleteIndex(string name) Parameters name string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Note that this method must be called only from a VersionChange transaction mode callback. Note that this method synchronously modifies the IndexNames property. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Get(dynamic) The get() method of the IDBObjectStore interface returns an IDBRequest object, and, in a separate thread, returns the object selected by the specified key. This is for retrieving specific records from an object store. public IDBRequest Get(dynamic query) Parameters query dynamic Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is the value of the first record matching the given key or key range. Remarks If a value is successfully found, then a structured clone of it is created and set as the result of the request object. NOTE Note: This method produces the same result for: a) a record that doesn&apos;t exist in the database and b) a record that has an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and no cursor if it does not. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN GetAll(dynamic, ulong) The getAll() method of the IDBObjectStore interface returns an IDBRequest object containing all objects in the object store matching the specified parameter or all objects in the store if no parameters are given. public IDBRequest GetAll(dynamic query, ulong count) Parameters query dynamic count ulong Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is an {{jsxref(\"Array\")}} of the values of all records matching the given query, up to the value of count, if count was supplied. Remarks If a value is successfully found, then a structured clone of it is created and set as the result of the request object. This method produces the same result for: To tell these situations apart, you either call -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN GetAllKeys(dynamic, ulong) The getAllKeys() method of the IDBObjectStore interface returns an IDBRequest object retrieves record keys for all objects in the object store matching the specified parameter or all objects in the store if no parameters are given. public IDBRequest GetAllKeys(dynamic query, ulong count) Parameters query dynamic count ulong Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is an {{jsxref(\"Array\")}} of the keys for all records matching the given query, up to the value of count, if count was supplied. Remarks If a value is successfully found, then a structured clone of it is created and set as the result of the request object. This method produces the same result for: To tell these situations apart, you need to call the OpenCursor(dynamic, IDBCursorDirection) method with the same key. That method provides a cursor if the record exists, and no cursor if it does not. -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN GetKey(dynamic) The getKey() method of the IDBObjectStore interface returns an IDBRequest object, and, in a separate thread, returns the key selected by the specified query. This is for retrieving specific records from an object store. public IDBRequest GetKey(dynamic query) Parameters query dynamic Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is the key for the first record matching the given key or key range. Remarks If a key is successfully found, then a structured clone of it is created and set as the result of the request object. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Index(string) The index() method of the IDBObjectStore interface opens a named index in the current object store, after which it can be used to, for example, return a series of records sorted by that index using a cursor. public IDBIndex Index(string name) Parameters name string Returns IDBIndex An IDBIndex object for accessing the index. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN OpenCursor(dynamic, IDBCursorDirection) The openCursor() method of the IDBObjectStore interface returns an IDBRequest object, and, in a separate thread, returns a new IDBCursorWithValue object. Used for iterating through an object store with a cursor. public IDBRequest OpenCursor(dynamic query, IDBCursorDirection direction) Parameters query dynamic direction IDBCursorDirection Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is: Remarks To determine if the add operation has completed successfully, listen for the results&apos;s success event. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN OpenKeyCursor(dynamic, IDBCursorDirection) The openKeyCursor() method of the IDBObjectStore interface returns an IDBRequest object whose result will be set to an IDBCursor that can be used to iterate through matching results. Used for iterating through the keys of an object store with a cursor. public IDBRequest OpenKeyCursor(dynamic query, IDBCursorDirection direction) Parameters query dynamic direction IDBCursorDirection Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is: Remarks To determine if the add operation has completed successfully, listen for the results&apos;s success event. -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Put(dynamic, dynamic) The put() method of the IDBObjectStore interface updates a given record in a database, or inserts a new record if the given item does not already exist. public IDBRequest Put(dynamic value, dynamic key) Parameters value dynamic key dynamic Returns IDBRequest An IDBRequest object on which subsequent events related to this operation are fired.If the operation is successful, the value of the request's Result property is the key for the new or updated record. Remarks It returns an IDBRequest object, and, in a separate thread, creates a structured clone of the value and stores the cloned value in the object store. This is for adding new records, or updating existing records in an object store when the transaction&apos;s mode is readwrite. If the record is successfully stored, then a success event is fired on the returned request object with the result set to the key for the stored record, and the transaction set to the transaction in which this object store is opened. The put method is an update or insert method. See the Add(dynamic, dynamic) method for an insert only method. Bear in mind that if you have a IDBCursor to the record you want to update, updating it with Update(dynamic) is preferable to using Put(dynamic, dynamic). Doing so makes it clear that an existing record will be updated, instead of a new record being inserted. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBObjectStoreParameters.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBObjectStoreParameters.html",
    "title": "Class IDBObjectStoreParameters | CSharpToJavaScript",
    "keywords": "Class IDBObjectStoreParameters Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class IDBObjectStoreParameters Inheritance object IDBObjectStoreParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AutoIncrement public bool AutoIncrement Field Value bool KeyPath public Union75? KeyPath Field Value Union75?"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBOpenDBRequest.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBOpenDBRequest.html",
    "title": "Class IDBOpenDBRequest | CSharpToJavaScript",
    "keywords": "Class IDBOpenDBRequest Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The IDBOpenDBRequest interface of the IndexedDB API provides access to the results of requests to open or delete databases (performed using Open(string, ulong) and DeleteDatabase(string)), using specific event handler attributes. [To(\"FirstCharToLowerCase\")] public class IDBOpenDBRequest : IDBRequest Inheritance object EventTarget IDBRequest IDBOpenDBRequest Inherited Members IDBRequest.Result IDBRequest.Error IDBRequest.Source IDBRequest.Transaction IDBRequest.ReadyState IDBRequest.Onsuccess IDBRequest.Onerror EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Properties Onblocked public EventHandlerNonNull Onblocked { get; set; } Property Value EventHandlerNonNull Onupgradeneeded public EventHandlerNonNull Onupgradeneeded { get; set; } Property Value EventHandlerNonNull"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBRequest.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBRequest.html",
    "title": "Class IDBRequest | CSharpToJavaScript",
    "keywords": "Class IDBRequest Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The IDBRequest interface of the IndexedDB API provides access to results of asynchronous requests to databases and database objects using event handler attributes. Each reading and writing operation on a database is done using a request. [To(\"FirstCharToLowerCase\")] public class IDBRequest : EventTarget Inheritance object EventTarget IDBRequest Derived IDBOpenDBRequest Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The request object does not initially contain any information about the result of the operation, but once information becomes available, an event is fired on the request, and the information becomes available through the properties of the IDBRequest instance. All asynchronous operations immediately return an IDBRequest instance. Each request has a readyState that is set to the &apos;pending&apos; state; this changes to &apos;done&apos; when the request is completed or fails. When the state is set to done, every request returns a result and an error, and an event is fired on the request. When the state is still pending, any attempt to access the result or error raises an InvalidStateError exception. In plain words, all asynchronous methods return a request object. If the request has been completed successfully, the result is made available through the result property and an event indicating success is fired at the request (IDBRequest.Success_event). If an error occurs while performing the operation, the exception is made available through the error property and an error event is fired (IDBRequest.Error_event). The interface IDBOpenDBRequest is derived from IDBRequest. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Properties Error The error read-only property of the IDBRequest interface returns the error in the event of an unsuccessful request. public DOMException? Error { get; } Property Value DOMException A DOMException or null if there is no error. The following error names are returned in the exception object:In addition to the error codes sent to the IDBRequest object, asynchronous operations can also raise exceptions. The list describes problems that could occur when the request is being executed, but you might also encounter other problems when the request is being made. For example, if the result is accessed while the request is not completed, the InvalidStateError exception is thrown. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Onerror public EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull Onsuccess public EventHandlerNonNull Onsuccess { get; set; } Property Value EventHandlerNonNull ReadyState The readyState read-only property of the IDBRequest interface returns the state of the request. public IDBRequestReadyState ReadyState { get; } Property Value IDBRequestReadyState One of the following strings: Remarks Every request starts in the pending state. The state changes to done when the request completes successfully or when an error occurs. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Result The result read-only property of the IDBRequest interface returns the result of the request. If the request is not completed, the result is not available and an InvalidStateError exception is thrown. public dynamic Result { get; } Property Value dynamic any Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Source The source read-only property of the IDBRequest interface returns the source of the request, such as an Index or an object store. If no source exists (such as when calling Open(string, ulong)), it returns null. public Union73? Source { get; } Property Value Union73? An object representing the source of the request, such as an IDBIndex, IDBObjectStore or IDBCursor. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Transaction The transaction read-only property of the IDBRequest interface returns the transaction for the request, that is, the transaction the request is being made inside. public IDBTransaction? Transaction { get; } Property Value IDBTransaction An IDBTransaction. Remarks This property can be null for requests not made within transactions, such as for requests returned from Open(string, ulong) — in this case you&apos;re just connecting to a database, so there is no transaction to return. If a version upgrade is needed when opening a database then during the IDBOpenDBRequest.Upgradeneeded_event event handler the transaction property will be an IDBTransaction with Mode equal to &quot;versionchange&quot;, and can be used to access existing object stores and indexes, or abort the upgrade. Following the upgrade, the transaction property will again be null. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBRequestReadyState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBRequestReadyState.html",
    "title": "Enum IDBRequestReadyState | CSharpToJavaScript",
    "keywords": "Enum IDBRequestReadyState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The readyState read-only property of the IDBRequest interface returns the state of the request. public enum IDBRequestReadyState Fields Done = 1 Pending = 0 Remarks Every request starts in the pending state. The state changes to done when the request completes successfully or when an error occurs. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBTransaction.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBTransaction.html",
    "title": "Class IDBTransaction | CSharpToJavaScript",
    "keywords": "Class IDBTransaction Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The IDBTransaction interface of the IndexedDB API provides a static, asynchronous transaction on a database using event handler attributes. All reading and writing of data is done within transactions. You use IDBDatabase to start transactions, IDBTransaction to set the mode of the transaction (e.g. is it readonly or readwrite), and you access an IDBObjectStore to make a request. You can also use an IDBTransaction object to abort transactions. [To(\"FirstCharToLowerCase\")] public class IDBTransaction : EventTarget Inheritance object EventTarget IDBTransaction Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers Transactions are started when the transaction is created, not when the first request is placed; for example consider this: After the code is executed the object store should contain the value &quot;2&quot;, since trans2 should run after trans1. -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Properties Db The db read-only property of the IDBTransaction interface returns the database connection with which this transaction is associated. public IDBDatabase Db { get; } Property Value IDBDatabase An IDBDatabase object. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Durability The durability read-only property of the IDBTransaction interface returns the durability hint the transaction was created with. This is a hint to the user agent of whether to prioritize performance or durability when committing the transaction. public IDBTransactionDurability Durability { get; } Property Value IDBTransactionDurability Any of the following literal 'String': Remarks The value of this property is defined in the options parameter when creating a transaction using Transaction(Union74, IDBTransactionMode, IDBTransactionOptions). See also on MDN Error The IDBTransaction.error property of the IDBTransaction interface returns the type of error when there is an unsuccessful transaction. public DOMException? Error { get; } Property Value DOMException A DOMException containing the relevant error, or null if there are none.It can be a reference to the same error as the request object that raised it, or a transaction failure (for example QuotaExceededError).This property is null if the transaction is not finished, or is finished and was successfully committed. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Mode The mode read-only property of the IDBTransaction interface returns the current mode for accessing the data in the object stores in the scope of the transaction (i.e. is the mode to be read-only, or do you want to write to the object stores?) The default value is readonly. public IDBTransactionMode Mode { get; } Property Value IDBTransactionMode An object defining the mode for isolating access to data in the current object stores: A string defining the mode for isolating access to data in the current object stores. The following values are available: Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN ObjectStoreNames The objectStoreNames read-only property of the IDBTransaction interface returns a DOMStringList of names of IDBObjectStore objects. public string ObjectStoreNames { get; } Property Value string A DOMStringList of names of IDBObjectStore objects. Remarks -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Onabort public EventHandlerNonNull Onabort { get; set; } Property Value EventHandlerNonNull Oncomplete public EventHandlerNonNull Oncomplete { get; set; } Property Value EventHandlerNonNull Onerror public EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull Methods Abort() The abort() method of the IDBTransaction interface rolls back all the changes to objects in the database associated with this transaction. public GlobalObject.Undefined Abort() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks All pending IDBRequest objects created during this transaction have their Error attribute set to an AbortError DOMException. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Commit() The commit() method of the IDBTransaction interface commits the transaction if it is called on an active transaction. public GlobalObject.Undefined Commit() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Note that commit() doesn&apos;t normally have to be called — a transaction will automatically commit when all outstanding requests have been satisfied and no new requests have been made. commit() can be used to start the commit process without waiting for events from outstanding requests to be dispatched. If it is called on a transaction that is not active, it throws an InvalidStateError DOMException. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN ObjectStore(string) The objectStore() method of the IDBTransaction interface returns an object store that has already been added to the scope of this transaction. public IDBObjectStore ObjectStore(string name) Parameters name string Returns IDBObjectStore An IDBObjectStore object for accessing an object store. Remarks Every call to this method on the same transaction object, with the same name, returns the same IDBObjectStore instance. If this method is called on a different transaction object, a different IDBObjectStore instance is returned. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBTransactionDurability.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBTransactionDurability.html",
    "title": "Enum IDBTransactionDurability | CSharpToJavaScript",
    "keywords": "Enum IDBTransactionDurability Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The durability read-only property of the IDBTransaction interface returns the durability hint the transaction was created with. This is a hint to the user agent of whether to prioritize performance or durability when committing the transaction. public enum IDBTransactionDurability Fields Default = 0 Relaxed = 2 Strict = 1 Remarks The value of this property is defined in the options parameter when creating a transaction using Transaction(Union74, IDBTransactionMode, IDBTransactionOptions). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBTransactionMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBTransactionMode.html",
    "title": "Enum IDBTransactionMode | CSharpToJavaScript",
    "keywords": "Enum IDBTransactionMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The mode read-only property of the IDBTransaction interface returns the current mode for accessing the data in the object stores in the scope of the transaction (i.e. is the mode to be read-only, or do you want to write to the object stores?) The default value is readonly. public enum IDBTransactionMode Fields Readonly = 0 Readwrite = 1 Versionchange = 2 Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBTransactionOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBTransactionOptions.html",
    "title": "Class IDBTransactionOptions | CSharpToJavaScript",
    "keywords": "Class IDBTransactionOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class IDBTransactionOptions Inheritance object IDBTransactionOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Durability public IDBTransactionDurability Durability Field Value IDBTransactionDurability"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBVersionChangeEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBVersionChangeEvent.html",
    "title": "Class IDBVersionChangeEvent | CSharpToJavaScript",
    "keywords": "Class IDBVersionChangeEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The IDBVersionChangeEvent interface of the IndexedDB API indicates that the version of the database has changed, as the result of an IDBOpenDBRequest.Upgradeneeded_event event handler function. [To(\"FirstCharToLowerCase\")] public class IDBVersionChangeEvent : Event Inheritance object Event IDBVersionChangeEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN Constructors IDBVersionChangeEvent() public IDBVersionChangeEvent() IDBVersionChangeEvent(string, IDBVersionChangeEventInit) The IDBVersionChangeEvent() constructor creates a new IDBVersionChangeEvent object, which is used to represent when a version of the database has changed, as a result of the 'IDBOpenDBRequest.Upgradeneeded_event' event handler. public IDBVersionChangeEvent(string type, IDBVersionChangeEventInit eventInitDict) Parameters type string eventInitDict IDBVersionChangeEventInit Remarks See also on MDN Properties NewVersion The newVersion read-only property of the IDBVersionChangeEvent interface returns the new version number of the database. public ulong? NewVersion { get; } Property Value ulong? A number that is a 64-bit integer or null if the database is being deleted. Remarks AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN OldVersion The oldVersion read-only property of the IDBVersionChangeEvent interface returns the old version number of the database. public ulong OldVersion { get; } Property Value ulong A number containing a 64-bit integer. Remarks When the opened database doesn&apos;t exist yet, the value of oldVersion is 0. AvailableInWorkers -Using IndexedDB -Starting transactions: IDBDatabase -Using transactions: IDBTransaction -Setting a range of keys: IDBKeyRange -Retrieving and making changes to your data: IDBObjectStore -Using cursors: IDBCursor -Reference example: To-do Notifications (View the example live). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IDBVersionChangeEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IDBVersionChangeEventInit.html",
    "title": "Class IDBVersionChangeEventInit | CSharpToJavaScript",
    "keywords": "Class IDBVersionChangeEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class IDBVersionChangeEventInit : EventInit Inheritance object EventInit IDBVersionChangeEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NewVersion public ulong? NewVersion Field Value ulong? OldVersion public ulong OldVersion Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.IIRFilterNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IIRFilterNode.html",
    "title": "Class IIRFilterNode | CSharpToJavaScript",
    "keywords": "Class IIRFilterNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The IIRFilterNode interface of the Web Audio API is a AudioNode processor which implements a general infinite impulse response (IIR) filter; this type of filter can be used to implement tone control devices and graphic equalizers as well. It lets the parameters of the filter response be specified, so that it can be tuned as needed. [To(\"FirstCharToLowerCase\")] public class IIRFilterNode : AudioNode Inheritance object EventTarget AudioNode IIRFilterNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Typically, it's best to use the BiquadFilterNode interface to implement higher-order filters. There are several reasons why: However, if you need to create an odd-ordered IIR filter, you&apos;ll need to use IIRFilterNode. You may also find this interface useful if you don&apos;t need automation, or for other reasons. NOTE Note: Once the node has been created, you can&apos;t change its coefficients. IIRFilterNodes have a tail-time reference; they continue to output non-silent audio with zero input. As an IIR filter, the non-zero input continues forever, but this can be limited after some finite time in practice, when the output has approached zero closely enough. The actual time that takes depends on the filter coefficients provided. -Using the Web Audio API -AudioNode -BiquadFilterNode See also on MDN Constructors IIRFilterNode() public IIRFilterNode() IIRFilterNode(BaseAudioContext, IIRFilterOptions) The IIRFilterNode() constructor of the Web Audio API creates a new IIRFilterNode object which an AudioNode processor which implements a general infinite impulse response filter. public IIRFilterNode(BaseAudioContext context, IIRFilterOptions options) Parameters context BaseAudioContext options IIRFilterOptions Remarks See also on MDN Methods GetFrequencyResponse(float, float, float) The getFrequencyResponse() method of the IIRFilterNode interface takes the current filtering algorithm&apos;s settings and calculates the frequency response for frequencies specified in a specified array of frequencies. public GlobalObject.Undefined GetFrequencyResponse(float frequencyHz, float magResponse, float phaseResponse) Parameters frequencyHz float magResponse float phaseResponse float Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The two output arrays, magResponseOutput and phaseResponseOutput, must be created before calling this method; they must be the same size as the array of input frequency values (frequencyArray). -Using the Web Audio API -IIRFilterNode -AudioNode See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IIRFilterOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IIRFilterOptions.html",
    "title": "Class IIRFilterOptions | CSharpToJavaScript",
    "keywords": "Class IIRFilterOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class IIRFilterOptions : AudioNodeOptions Inheritance object AudioNodeOptions IIRFilterOptions Inherited Members AudioNodeOptions.ChannelCount AudioNodeOptions.ChannelCountMode AudioNodeOptions.ChannelInterpretation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Feedback public required List<Number> Feedback Field Value List<Number> Feedforward public required List<Number> Feedforward Field Value List<Number>"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageBitmap.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageBitmap.html",
    "title": "Class ImageBitmap | CSharpToJavaScript",
    "keywords": "Class ImageBitmap Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ImageBitmap interface represents a bitmap image which can be drawn to a {{HTMLElement(\"canvas\")}} without undue latency. It can be created from a variety of source objects using the CreateImageBitmap factory method. ImageBitmap provides an asynchronous and resource efficient pathway to prepare textures for rendering in WebGL. [To(\"FirstCharToLowerCase\")] public class ImageBitmap Inheritance object ImageBitmap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks ImageBitmap is a transferable object. -CreateImageBitmap -CanvasRenderingContext2D.DrawImage -WebGLRenderingContext.TexImage2D -TransferToImageBitmap() See also on MDN Properties Height The read-only ImageBitmap.height property returns the ImageBitmap object's height in CSS pixels. public ulong Height { get; } Property Value ulong Remarks See also on MDN Width The read-only ImageBitmap.width property returns the ImageBitmap object's width in CSS pixels. public ulong Width { get; } Property Value ulong Remarks See also on MDN Methods Close() The ImageBitmap.close() method disposes of all graphical resources associated with an ImageBitmap. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The interface defining this method, ImageBitmap. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageBitmapOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageBitmapOptions.html",
    "title": "Class ImageBitmapOptions | CSharpToJavaScript",
    "keywords": "Class ImageBitmapOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ImageBitmapOptions Inheritance object ImageBitmapOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ColorSpaceConversion public ColorSpaceConversion ColorSpaceConversion Field Value ColorSpaceConversion ImageOrientation public ImageOrientation ImageOrientation Field Value ImageOrientation PremultiplyAlpha public PremultiplyAlpha PremultiplyAlpha Field Value PremultiplyAlpha ResizeHeight public ulong ResizeHeight Field Value ulong ResizeQuality public ResizeQuality ResizeQuality Field Value ResizeQuality ResizeWidth public ulong ResizeWidth Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageBitmapRenderingContext.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageBitmapRenderingContext.html",
    "title": "Class ImageBitmapRenderingContext | CSharpToJavaScript",
    "keywords": "Class ImageBitmapRenderingContext Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ImageBitmapRenderingContext interface is a canvas rendering context that provides the functionality to replace the canvas's contents with the given ImageBitmap. Its context id (the first argument to GetContext(string, dynamic) or GetContext(OffscreenRenderingContextId, dynamic)) is &quot;bitmaprenderer&quot;. [To(\"FirstCharToLowerCase\")] public class ImageBitmapRenderingContext Inheritance object ImageBitmapRenderingContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface is available in both the window and the worker context. -OffscreenCanvas See also on MDN Properties Canvas public Union22 Canvas { get; } Property Value Union22 Methods TransferFromImageBitmap(ImageBitmap?) The ImageBitmapRenderingContext.transferFromImageBitmap() method displays the given ImageBitmap in the canvas associated with this rendering context. The ownership of the ImageBitmap is transferred to the canvas as well. public GlobalObject.Undefined TransferFromImageBitmap(ImageBitmap? bitmap) Parameters bitmap ImageBitmap Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method was previously named transferImageBitmap(), but was renamed in a spec change. The old name is being kept as an alias to avoid code breakage. -The interface defining this method, ImageBitmapRenderingContext -OffscreenCanvas -TransferToImageBitmap() See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageBitmapRenderingContextSettings.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageBitmapRenderingContextSettings.html",
    "title": "Class ImageBitmapRenderingContextSettings | CSharpToJavaScript",
    "keywords": "Class ImageBitmapRenderingContextSettings Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ImageBitmapRenderingContextSettings Inheritance object ImageBitmapRenderingContextSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alpha public bool Alpha Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageCapture.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageCapture.html",
    "title": "Class ImageCapture | CSharpToJavaScript",
    "keywords": "Class ImageCapture Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ImageCapture interface of the MediaStream Image Capture API provides methods to enable the capture of images or photos from a camera or other photographic device. It provides an interface for capturing images from a photographic device referenced through a valid MediaStreamTrack. [To(\"FirstCharToLowerCase\")] public class ImageCapture Inheritance object ImageCapture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors ImageCapture() public ImageCapture() ImageCapture(Unsupported) The ImageCapture() constructor creates a new ImageCapture object. public ImageCapture(Unsupported videoTrack) Parameters videoTrack Unsupported Remarks See also on MDN Properties Track The track read-only property of the ImageCapture interface returns a reference to the MediaStreamTrack passed to the ImageCapture(Unsupported) constructor. public Unsupported Track { get; } Property Value Unsupported A MediaStreamTrack object. Remarks See also on MDN Methods GetPhotoCapabilities() The getPhotoCapabilities() method of the ImageCapture interface returns a {{jsxref(\"Promise\")}} that resolves with an object containing the ranges of available configuration options. public Task<PhotoCapabilities> GetPhotoCapabilities() Returns Task<PhotoCapabilities> A Promise that resolves with an object containing the following properties: Remarks See also on MDN GetPhotoSettings() The getPhotoSettings() method of the ImageCapture interface returns a {{jsxref(\"Promise\")}} that resolves with an object containing the current photo configuration settings. public Task<PhotoSettings> GetPhotoSettings() Returns Task<PhotoSettings> A Promise that resolves with an object containing the following properties: Remarks See also on MDN GrabFrame() The grabFrame() method of the ImageCapture interface takes a snapshot of the live video in a MediaStreamTrack and returns a {{jsxref(\"Promise\")}} that resolves with a ImageBitmap containing the snapshot. public Task<ImageBitmap> GrabFrame() Returns Task<ImageBitmap> A {{jsxref(\"Promise\")}} that resolves to an ImageBitmap object. Remarks See also on MDN TakePhoto(PhotoSettings) The takePhoto() method of the ImageCapture interface takes a single exposure using the video capture device sourcing a MediaStreamTrack and returns a {{jsxref(\"Promise\")}} that resolves with a Blob containing the data. public Task<Blob> TakePhoto(PhotoSettings photoSettings) Parameters photoSettings PhotoSettings Returns Task<Blob> A {{jsxref(\"Promise\")}} that resolves with a Blob. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageData.html",
    "title": "Class ImageData | CSharpToJavaScript",
    "keywords": "Class ImageData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ImageData interface represents the underlying pixel data of an area of a canvas element. [To(\"FirstCharToLowerCase\")] public class ImageData Inheritance object ImageData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It is created using the ImageData(ulong, ulong, ImageDataSettings) constructor or creator methods on the CanvasRenderingContext2D object associated with a canvas: CanvasRenderingContext2D.CreateImageData and CanvasRenderingContext2D.GetImageData. It can also be used to set a part of the canvas by using CanvasRenderingContext2D.PutImageData. AvailableInWorkers -CanvasRenderingContext2D -The {{HTMLElement(\"canvas\")}} element and its associated interface, HTMLCanvasElement. See also on MDN Constructors ImageData() public ImageData() ImageData(Unsupported, ulong, ulong, ImageDataSettings) The ImageData() constructor returns a newly instantiated 'ImageData' object built from the typed array given and having the specified width and height. public ImageData(Unsupported data, ulong sw, ulong sh, ImageDataSettings settings) Parameters data Unsupported sw ulong sh ulong settings ImageDataSettings Remarks This constructor is the preferred way of creating such an object in a 'Worker'. -CanvasRenderingContext2D.CreateImageData, the creator method that can be used outside workers. See also on MDN ImageData(ulong, ulong, ImageDataSettings) The ImageData() constructor returns a newly instantiated 'ImageData' object built from the typed array given and having the specified width and height. public ImageData(ulong sw, ulong sh, ImageDataSettings settings) Parameters sw ulong sh ulong settings ImageDataSettings Remarks This constructor is the preferred way of creating such an object in a 'Worker'. -CanvasRenderingContext2D.CreateImageData, the creator method that can be used outside workers. See also on MDN Properties ColorSpace The read-only ImageData.colorSpace property is a string indicating the color space of the image data. public PredefinedColorSpace ColorSpace { get; } Property Value PredefinedColorSpace This property can have the following values: Remarks The color space can be set during ImageData initialization using either the ImageData() constructor or the createImageData() method. -CanvasRenderingContext2D.createImageData() -CanvasRenderingContext2D.getImageData() -colorSpace setting in canvas.getContext() -Setting WebGL color spaces:-WebGLRenderingContext.drawingBufferColorSpace -WebGLRenderingContext.unpackColorSpace See also on MDN Data The readonly ImageData.data property returns a {{jsxref(\"Uint8ClampedArray\")}} that contains the ImageData object's pixel data. Data is stored as a one-dimensional array in the RGBA order, with integer values between 0 and 255 (inclusive). public Unsupported Data { get; } Property Value Unsupported A Uint8ClampedArray. Remarks -Height -Width -ImageData -CanvasRenderingContext2D.CreateImageData -CanvasRenderingContext2D.PutImageData -Pixel manipulation with canvas See also on MDN Height The readonly ImageData.height property returns the number of rows in the ImageData object. public ulong Height { get; } Property Value ulong A number. Remarks -Width -ImageData See also on MDN Width The readonly ImageData.width property returns the number of pixels per row in the ImageData object. public ulong Width { get; } Property Value ulong A number. Remarks -Height -ImageData See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageDataSettings.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageDataSettings.html",
    "title": "Class ImageDataSettings | CSharpToJavaScript",
    "keywords": "Class ImageDataSettings Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ImageDataSettings Inheritance object ImageDataSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ColorSpace public PredefinedColorSpace ColorSpace Field Value PredefinedColorSpace"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageDecodeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageDecodeOptions.html",
    "title": "Class ImageDecodeOptions | CSharpToJavaScript",
    "keywords": "Class ImageDecodeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ImageDecodeOptions Inheritance object ImageDecodeOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CompleteFramesOnly public bool CompleteFramesOnly Field Value bool FrameIndex public ulong FrameIndex Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageDecodeResult.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageDecodeResult.html",
    "title": "Class ImageDecodeResult | CSharpToJavaScript",
    "keywords": "Class ImageDecodeResult Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ImageDecodeResult Inheritance object ImageDecodeResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Complete public required bool Complete Field Value bool Image public required VideoFrame Image Field Value VideoFrame"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageDecoder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageDecoder.html",
    "title": "Class ImageDecoder | CSharpToJavaScript",
    "keywords": "Class ImageDecoder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ImageDecoder interface of the 'WebCodecs API' provides a way to unpack and decode encoded image data. [To(\"FirstCharToLowerCase\")] public class ImageDecoder Inheritance object ImageDecoder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors ImageDecoder() public ImageDecoder() ImageDecoder(ImageDecoderInit) The ImageDecoder() constructor creates a new ImageDecoder object which unpacks and decodes image data. public ImageDecoder(ImageDecoderInit init) Parameters init ImageDecoderInit Remarks See also on MDN Properties Complete The complete read-only property of the ImageDecoder interface returns true if encoded data has completed buffering. public bool Complete { get; } Property Value bool A Boolean, true if buffering is complete. Remarks See also on MDN Completed The completed read-only property of the ImageDecoder interface returns a promise that resolves once encoded data has finished buffering. public Task<GlobalObject.Undefined> Completed { get; } Property Value Task<GlobalObject.Undefined> A {{jsxref(\"Promise\")}} that resolves with {{jsxref(\"undefined\")}} once Complete is true. Remarks See also on MDN Tracks The tracks read-only property of the ImageDecoder interface returns a list of the tracks in the encoded image data. public ImageTrackList Tracks { get; } Property Value ImageTrackList An ImageTrackList. Remarks See also on MDN Type The type read-only property of the ImageDecoder interface reflects the MIME type configured during construction. public string Type { get; } Property Value string A string containing the configured MIME type. Remarks See also on MDN Methods Close() The close() method of the ImageDecoder interface ends all pending work and releases system resources. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Decode(ImageDecodeOptions) The decode() method of the ImageDecoder interface enqueues a control message to decode the frame of an image. public Task<ImageDecodeResult> Decode(ImageDecodeOptions options) Parameters options ImageDecodeOptions Returns Task<ImageDecodeResult> A Promise that resolves with an object containing the following members: Remarks See also on MDN IsTypeSupported(string) public static Task<bool> IsTypeSupported(string type) Parameters type string Returns Task<bool> Reset() The reset() method of the ImageDecoder interface aborts all pending decode() operations; rejecting all pending promises. All other state will be unchanged. Class methods can continue to be invoked after reset(). E.g., calling decode() after reset() is permitted. public GlobalObject.Undefined Reset() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageDecoderInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageDecoderInit.html",
    "title": "Class ImageDecoderInit | CSharpToJavaScript",
    "keywords": "Class ImageDecoderInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ImageDecoderInit Inheritance object ImageDecoderInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ColorSpaceConversion public ColorSpaceConversion ColorSpaceConversion Field Value ColorSpaceConversion Data public required Union95 Data Field Value Union95 DesiredHeight public ulong DesiredHeight Field Value ulong DesiredWidth public ulong DesiredWidth Field Value ulong PreferAnimation public bool PreferAnimation Field Value bool Transfer public List<byte[]> Transfer Field Value List<byte[]> Type public required string Type Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageEncodeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageEncodeOptions.html",
    "title": "Class ImageEncodeOptions | CSharpToJavaScript",
    "keywords": "Class ImageEncodeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ImageEncodeOptions Inheritance object ImageEncodeOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Quality public double Quality Field Value double Type public string Type Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageOrientation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageOrientation.html",
    "title": "Enum ImageOrientation | CSharpToJavaScript",
    "keywords": "Enum ImageOrientation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ImageOrientation Fields FlipY = 1 FromImage = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageSmoothingQuality.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageSmoothingQuality.html",
    "title": "Enum ImageSmoothingQuality | CSharpToJavaScript",
    "keywords": "Enum ImageSmoothingQuality Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ImageSmoothingQuality Fields High = 2 Low = 0 Medium = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageTrack.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageTrack.html",
    "title": "Class ImageTrack | CSharpToJavaScript",
    "keywords": "Class ImageTrack Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ImageTrack interface of the 'WebCodecs API' represents an individual image track. [To(\"FirstCharToLowerCase\")] public class ImageTrack Inheritance object ImageTrack Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Animated The animated property of the ImageTrack interface returns true if the track is animated and therefore has multiple frames. public bool Animated { get; } Property Value bool A Boolean, if true this is an animated track. Remarks See also on MDN FrameCount The frameCount property of the ImageTrack interface returns the number of frames in the track. public ulong FrameCount { get; } Property Value ulong An integer. Remarks See also on MDN RepetitionCount The repetitionCount property of the ImageTrack interface returns the number of repetitions of this track. public float RepetitionCount { get; } Property Value float An integer. Remarks See also on MDN Selected The selected property of the ImageTrack interface returns true if the track is selected for decoding. public bool Selected { get; set; } Property Value bool A Boolean, if true the track is selected for decoding. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageTrackList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageTrackList.html",
    "title": "Class ImageTrackList | CSharpToJavaScript",
    "keywords": "Class ImageTrackList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ImageTrackList interface of the 'WebCodecs API' represents a list of image tracks. [To(\"FirstCharToLowerCase\")] public class ImageTrackList Inheritance object ImageTrackList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Length The length property of the ImageTrackList interface returns the length of the ImageTrackList. public ulong Length { get; } Property Value ulong An integer. Remarks See also on MDN Ready The ready property of the ImageTrackList interface returns a {{jsxref(\"Promise\")}} that resolves when the ImageTrackList is populated with ImageTrack. public Task<GlobalObject.Undefined> Ready { get; } Property Value Task<GlobalObject.Undefined> A Promise that resolves with GlobalObject.Undefined. Remarks See also on MDN SelectedIndex The selectedIndex property of the ImageTrackList interface returns the index of the selected track. public long SelectedIndex { get; } Property Value long An integer. Remarks See also on MDN SelectedTrack The selectedTrack property of the ImageTrackList interface returns an ImageTrack object representing the currently selected track. public ImageTrack? SelectedTrack { get; } Property Value ImageTrack An ImageTrack object. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ImportExportKind.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImportExportKind.html",
    "title": "Enum ImportExportKind | CSharpToJavaScript",
    "keywords": "Enum ImportExportKind Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ImportExportKind Fields Function = 0 Global = 3 Memory = 2 Table = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.InputEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.InputEvent.html",
    "title": "Class InputEvent | CSharpToJavaScript",
    "keywords": "Class InputEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The InputEvent interface represents an event notifying the user of editable content changes. [To(\"FirstCharToLowerCase\")] public class InputEvent : UIEvent Inheritance object Event UIEvent InputEvent Inherited Members UIEvent.View UIEvent.Detail UIEvent.InitUIEvent(string, bool, bool, Window, long) UIEvent.Which Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -beforeinput event -input event See also on MDN Constructors InputEvent() public InputEvent() InputEvent(string, InputEventInit) The InputEvent() constructor creates a new InputEvent object. public InputEvent(string type, InputEventInit eventInitDict) Parameters type string eventInitDict InputEventInit Remarks -InputEvent, the interface of the objects it constructs. See also on MDN Properties Data The data read-only property of the InputEvent interface returns a string with inserted characters. This may be an empty string if the change doesn&apos;t insert text, such as when characters are deleted. public string? Data { get; } Property Value string A string. Remarks See also on MDN InputType The inputType read-only property of the InputEvent interface returns the type of change made to editable content. Possible changes include for example inserting, deleting, and formatting text. public string InputType { get; } Property Value string A string containing the type of input that was made. There are many possible values, such as insertText, deleteContentBackward, insertFromPaste, and formatBold. For a complete list of the available input types, see the Attributes section of the Input Events Level 1 spec. Remarks See also on MDN IsComposing The InputEvent.isComposing read-only property returns a boolean value indicating if the event is fired after Element/compositionstart_event and before Element/compositionend_event. public bool IsComposing { get; } Property Value bool A boolean. Remarks -Element/compositionstart_event and Element/compositionend_event -InputEvent See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.InputEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.InputEventInit.html",
    "title": "Class InputEventInit | CSharpToJavaScript",
    "keywords": "Class InputEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class InputEventInit : UIEventInit Inheritance object EventInit UIEventInit InputEventInit Inherited Members UIEventInit.View UIEventInit.Detail UIEventInit.Which EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Data public string? Data Field Value string InputType public string InputType Field Value string IsComposing public bool IsComposing Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.Instance.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Instance.html",
    "title": "Class Instance | CSharpToJavaScript",
    "keywords": "Class Instance Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class Instance Inheritance object Instance Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Instance() public Instance() Instance(Module, object) public Instance(Module module, object importObject) Parameters module Module importObject object Properties Exports public object Exports { get; } Property Value object"
  },
  "api/CSharpToJavaScript.APIs.JS.IntersectionObserver.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IntersectionObserver.html",
    "title": "Class IntersectionObserver | CSharpToJavaScript",
    "keywords": "Class IntersectionObserver Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The IntersectionObserver interface of the Intersection Observer API provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's 'viewport'. The ancestor element or viewport is referred to as the root. [To(\"FirstCharToLowerCase\")] public class IntersectionObserver Inheritance object IntersectionObserver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks When an IntersectionObserver is created, it&apos;s configured to watch for given ratios of visibility within the root. The configuration cannot be changed once the IntersectionObserver is created, so a given observer object is only useful for watching for specific changes in degree of visibility; however, you can watch multiple target elements with the same observer. -'MutationObserver' -'PerformanceObserver' -'ResizeObserver' See also on MDN Constructors IntersectionObserver() public IntersectionObserver() IntersectionObserver(IntersectionObserverCallback, IntersectionObserverInit) The IntersectionObserver() constructor creates and returns a new IntersectionObserver object. public IntersectionObserver(IntersectionObserverCallback callback, IntersectionObserverInit options) Parameters callback IntersectionObserverCallback options IntersectionObserverInit Remarks The rootMargin, if specified, is checked to ensure it&apos;s syntactically correct. If not specified, or an empty string, the default is 0px 0px 0px 0px. The thresholds, if specified, are checked to ensure that they&apos;re all in the range 0.0 and 1.0 inclusive, and the threshold list is sorted in ascending numeric order. If the threshold list is empty, it&apos;s set to the array [0.0]. See also on MDN Properties Root The IntersectionObserver interface's read-only root property identifies the Element or Document whose bounds are treated as the {{Glossary(\"bounding box\")}} of the viewport for the element which is the observer's target. public Union78? Root { get; } Property Value Union78? A Element or Document object whose bounding box is used as the bounds of the viewport for the purposes of determining how much of the target element is visible. The intersection of this bounding rectangle, offset by any margins specified in the options passed to the IntersectionObserver(IntersectionObserverCallback, IntersectionObserverInit) constructor, the target element&apos;s bounds, minus the bounds of every element or other object which overlaps the target element, is considered to be the visible area of the target element.If root is null, then the owning document is used as the root, and the bounds its viewport (that is, the visible area of the document) are used as the root bounds. Remarks If the root is null, then the bounds of the actual document viewport are used. -Timing element visibility with the Intersection Observer API See also on MDN RootMargin The IntersectionObserver interface's read-only rootMargin property is a string with syntax similar to that of the CSS margin property. Each side of the rectangle represented by rootMargin is added to the corresponding side in the Root element's {{Glossary(\"bounding box\")}} before the intersection test is performed. This lets you, for example, adjust the bounds outward so that the target element is considered 100% visible even if a certain number of pixels worth of width or height is clipped away, or treat the target as partially hidden if an edge is too close to the edge of the root&apos;s bounding box. public string RootMargin { get; } Property Value string A string, formatted similarly to the CSS margin property's value, which contains offsets for one or more sides of the root&apos;s bounding box. These offsets are added to the corresponding values in the root&apos;s bounding box before the intersection between the resulting rectangle and the target element&apos;s bounds.The string returned by this property may not match the one specified when the IntersectionObserver was instantiated. The browser is permitted to alter the valuesIf rootMargin isn&apos;t specified when the object was instantiated, it defaults to the string &quot;0px 0px 0px 0px&quot;, meaning that the intersection will be computed between the root element&apos;s unmodified bounds rectangle and the target&apos;s bounds. How intersections are calculated describes how the rootMargin is used in more detail. Remarks See how intersections are calculated for a more in-depth look at the root margin and how it works with the root&apos;s bounding box. See also on MDN ScrollMargin public string ScrollMargin { get; } Property Value string Thresholds The IntersectionObserver interface's read-only thresholds property returns the list of intersection thresholds that was specified when the observer was instantiated with IntersectionObserver(IntersectionObserverCallback, IntersectionObserverInit). If only one threshold ratio was provided when instantiating the object, this will be an array containing that single value. public Number[] Thresholds { get; } Property Value Number[] An array of intersection thresholds, originally specified using the threshold property when instantiating the observer. If only one observer was specified, without being in an array, this value is a one-entry array containing that threshold. Regardless of the order your original threshold array was in, this one is always sorted in numerically increasing order.If no threshold option was included when IntersectionObserver() was used to instantiate the observer, the value of thresholds is [0]. NOTE Note: Although the options object you can specify when creating an IntersectionObserver has a field named IntersectionObserver.Threshold, this property is called thresholds. Confusing? Yes. If you accidentally use thresholds as the name of the field in your options, the thresholds array will wind up being [0.0], which is likely not what you expect. Debugging chaos may ensue. Remarks See the Intersection Observer page to learn how thresholds work. See also on MDN Methods Disconnect() The IntersectionObserver method disconnect() stops watching all of its target elements for visibility changes. public GlobalObject.Undefined Disconnect() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Observe(Element) -Unobserve(Element) See also on MDN Observe(Element) The IntersectionObserver method observe() adds an element to the set of target elements being watched by the IntersectionObserver. One observer has one set of thresholds and one root, but can watch multiple target elements for visibility changes in keeping with those. public GlobalObject.Undefined Observe(Element target) Parameters target Element Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks To stop observing the element, call Unobserve(Element). When the visibility of the specified element crosses over one of the observer&apos;s visibility thresholds (as listed in Thresholds), the observer&apos;s callback is executed with an array of IntersectionObserverEntry objects representing the intersection changes which occurred. Note that this design allows multiple elements&apos; intersection changes to be processed by a single call to the callback. NOTE Note: the observer callback will always fire the first render cycle after observe() is called, even if the observed element has not yet moved with respect to the viewport. This means that, for example, an element that is outside the viewport when observe() is called on it will result in the callback being immediately called with at least one entry with intersecting set to false. An element inside the viewport will result in the callback being immediately called with at least one entry with intersecting set to true. -Unobserve(Element) See also on MDN TakeRecords() The IntersectionObserver method takeRecords() returns an array of IntersectionObserverEntry objects, one for each targeted element which has experienced an intersection change since the last time the intersections were checked, either explicitly through a call to this method or implicitly by an automatic call to the observer&apos;s callback. public List<IntersectionObserverEntry> TakeRecords() Returns List<IntersectionObserverEntry> An array of IntersectionObserverEntry objects, one for each target element whose intersection with the root has changed since the last time the intersections were checked. Remarks NOTE Note: If you use the callback to monitor these changes, you don&apos;t need to call this method. Calling this method clears the pending intersection list, so the callback will not be run. -Intersection Observer API See also on MDN Unobserve(Element) The IntersectionObserver method unobserve() instructs the IntersectionObserver to stop observing the specified target element. public GlobalObject.Undefined Unobserve(Element target) Parameters target Element Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Intersection Observer API -Observe(Element) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IntersectionObserverCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IntersectionObserverCallback.html",
    "title": "Struct IntersectionObserverCallback | CSharpToJavaScript",
    "keywords": "Struct IntersectionObserverCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct IntersectionObserverCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.IntersectionObserverEntry.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IntersectionObserverEntry.html",
    "title": "Class IntersectionObserverEntry | CSharpToJavaScript",
    "keywords": "Class IntersectionObserverEntry Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The IntersectionObserverEntry interface of the Intersection Observer API describes the intersection between the target element and its root container at a specific moment of transition. [To(\"FirstCharToLowerCase\")] public class IntersectionObserverEntry Inheritance object IntersectionObserverEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Instances of IntersectionObserverEntry are delivered to an IntersectionObserver callback in its entries parameter; otherwise, these objects can only be obtained by calling TakeRecords(). See also on MDN Constructors IntersectionObserverEntry() public IntersectionObserverEntry() IntersectionObserverEntry(IntersectionObserverEntryInit) public IntersectionObserverEntry(IntersectionObserverEntryInit intersectionObserverEntryInit) Parameters intersectionObserverEntryInit IntersectionObserverEntryInit Properties BoundingClientRect The IntersectionObserverEntry interface's read-only boundingClientRect property returns a DOMRectReadOnly which in essence describes a rectangle describing the smallest rectangle that contains the entire target element. public DOMRectReadOnly BoundingClientRect { get; } Property Value DOMRectReadOnly A DOMRectReadOnly which describes the smallest rectangle that contains every part of the target element whose intersection change is being described. This value is obtained using the same algorithm as Element.GetBoundingClientRect, so refer to that article for details on precisely what is done to obtain this rectangle and what is and is not included within its bounds.In the general case, however, it&apos;s safe to think of this as the bounds rectangle of the target element. Remarks See also on MDN IntersectionRatio The IntersectionObserverEntry interface's read-only intersectionRatio property tells you how much of the target element is currently visible within the root&apos;s intersection ratio, as a value between 0.0 and 1.0. public Number IntersectionRatio { get; } Property Value Number A number between 0.0 and 1.0 which indicates how much of the target element is actually visible within the root&apos;s intersection rectangle. More precisely, this value is the ratio of the area of the intersection rectangle (IntersectionRect) to the area of the target&apos;s bounds rectangle (BoundingClientRect).If the area of the target&apos;s bounds rectangle is zero, the returned value is 1 if IsIntersecting is true or 0 if not. Remarks See also on MDN IntersectionRect The IntersectionObserverEntry interface's read-only intersectionRect property is a DOMRectReadOnly object which describes the smallest rectangle that contains the entire portion of the target element which is currently visible within the intersection root. public DOMRectReadOnly IntersectionRect { get; } Property Value DOMRectReadOnly A DOMRectReadOnly which describes the part of the target element that's currently visible within the root&apos;s intersection rectangle.This rectangle is computed by taking the intersection of IntersectionObserverEntry with each of the Target's ancestors' clip rectangles, with the exception of the intersection Root itself. Remarks See also on MDN IsIntersecting The IntersectionObserverEntry interface's read-only isIntersecting property is a Boolean value which is true if the target element intersects with the intersection observer&apos;s root. If this is true, then, the IntersectionObserverEntry describes a transition into a state of intersection; if it&apos;s false, then you know the transition is from intersecting to not-intersecting. public bool IsIntersecting { get; } Property Value bool A Boolean value which indicates whether the Target element has transitioned into a state of intersection (true) or out of a state of intersection (false). Remarks See also on MDN RootBounds The IntersectionObserverEntry interface's read-only rootBounds property is a DOMRectReadOnly corresponding to the Target's root intersection rectangle, offset by the RootMargin if one is specified. public DOMRectReadOnly? RootBounds { get; } Property Value DOMRectReadOnly A DOMRectReadOnly which describes the root intersection rectangle. For roots which are the Document's viewport, this rectangle is the bounds rectangle of the entire document. Otherwise, it&apos;s the bounds of the root element.This rectangle is offset by the values in RootMargin. Remarks See also on MDN Target The IntersectionObserverEntry interface's read-only target property indicates which targeted Element has changed its amount of intersection with the intersection root. public Element Target { get; } Property Value Element The IntersectionObserverEntry&apos;s target property specifies which Element previously targeted by calling Observe(Element) experienced a change in intersection with the root. Remarks See also on MDN Time The IntersectionObserverEntry interface's read-only time property is a DOMHighResTimeStamp that indicates the time at which the intersection change occurred relative to the time at which the document was created. public Unsupported Time { get; } Property Value Unsupported A DOMHighResTimeStamp which indicates the time at which the Target element experienced the intersection change described by the IntersectionObserverEntry. The time is specified in milliseconds since the creation of the containing document. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.IntersectionObserverEntryInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IntersectionObserverEntryInit.html",
    "title": "Class IntersectionObserverEntryInit | CSharpToJavaScript",
    "keywords": "Class IntersectionObserverEntryInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class IntersectionObserverEntryInit Inheritance object IntersectionObserverEntryInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BoundingClientRect public required DOMRectInit BoundingClientRect Field Value DOMRectInit IntersectionRatio public required Number IntersectionRatio Field Value Number IntersectionRect public required DOMRectInit IntersectionRect Field Value DOMRectInit IsIntersecting public required bool IsIntersecting Field Value bool RootBounds public required DOMRectInit? RootBounds Field Value DOMRectInit Target public required Element Target Field Value Element Time public required Unsupported Time Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.IntersectionObserverInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IntersectionObserverInit.html",
    "title": "Class IntersectionObserverInit | CSharpToJavaScript",
    "keywords": "Class IntersectionObserverInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class IntersectionObserverInit Inheritance object IntersectionObserverInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Root public Union79? Root Field Value Union79? RootMargin public string RootMargin Field Value string ScrollMargin public string ScrollMargin Field Value string Threshold public Union80 Threshold Field Value Union80"
  },
  "api/CSharpToJavaScript.APIs.JS.IntrinsicSizes.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IntrinsicSizes.html",
    "title": "Class IntrinsicSizes | CSharpToJavaScript",
    "keywords": "Class IntrinsicSizes Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class IntrinsicSizes Inheritance object IntrinsicSizes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MaxContentSize public Number MaxContentSize { get; } Property Value Number MinContentSize public Number MinContentSize { get; } Property Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.IntrinsicSizesRequest.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IntrinsicSizesRequest.html",
    "title": "Class IntrinsicSizesRequest | CSharpToJavaScript",
    "keywords": "Class IntrinsicSizesRequest Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class IntrinsicSizesRequest Inheritance object IntrinsicSizesRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.IntrinsicSizesResultOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IntrinsicSizesResultOptions.html",
    "title": "Class IntrinsicSizesResultOptions | CSharpToJavaScript",
    "keywords": "Class IntrinsicSizesResultOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class IntrinsicSizesResultOptions Inheritance object IntrinsicSizesResultOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MaxContentSize public Number MaxContentSize Field Value Number MinContentSize public Number MinContentSize Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.IterationCompositeOperation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.IterationCompositeOperation.html",
    "title": "Enum IterationCompositeOperation | CSharpToJavaScript",
    "keywords": "Enum IterationCompositeOperation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum IterationCompositeOperation Fields Accumulate = 1 Replace = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.KeySystemTrackConfiguration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.KeySystemTrackConfiguration.html",
    "title": "Class KeySystemTrackConfiguration | CSharpToJavaScript",
    "keywords": "Class KeySystemTrackConfiguration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class KeySystemTrackConfiguration Inheritance object KeySystemTrackConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields EncryptionScheme public string? EncryptionScheme Field Value string Robustness public string Robustness Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.KeyboardEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.KeyboardEvent.html",
    "title": "Class KeyboardEvent | CSharpToJavaScript",
    "keywords": "Class KeyboardEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll KeyboardEvent objects describe a user interaction with the keyboard; each event describes a single interaction between the user and a key (or combination of a key with modifier keys) on the keyboard. The event type (Element/keydown_event, Element/keypress_event, or Element/keyup_event) identifies what kind of keyboard activity occurred. [To(\"FirstCharToLowerCase\")] public class KeyboardEvent : UIEvent Inheritance object Event UIEvent KeyboardEvent Inherited Members UIEvent.View UIEvent.Detail UIEvent.InitUIEvent(string, bool, bool, Window, long) UIEvent.Which Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: KeyboardEvent events just indicate what interaction the user had with a key on the keyboard at a low level, providing no contextual meaning to that interaction. When you need to handle text input, use the HTMLElement/input_event event instead. Keyboard events may not be fired if the user is using an alternate means of entering text, such as a handwriting system on a tablet or graphics tablet. -Code. -Key. -GetModifierState(string) See also on MDN Constructors KeyboardEvent() public KeyboardEvent() KeyboardEvent(string, KeyboardEventInit) The KeyboardEvent() constructor creates a new KeyboardEvent object. public KeyboardEvent(string type, KeyboardEventInit eventInitDict) Parameters type string eventInitDict KeyboardEventInit Remarks -KeyboardEvent, the interface of the objects it constructs. See also on MDN Fields DOM_KEY_LOCATION_LEFT public const ulong DOM_KEY_LOCATION_LEFT = 1 Field Value ulong DOM_KEY_LOCATION_NUMPAD public const ulong DOM_KEY_LOCATION_NUMPAD = 3 Field Value ulong DOM_KEY_LOCATION_RIGHT public const ulong DOM_KEY_LOCATION_RIGHT = 2 Field Value ulong DOM_KEY_LOCATION_STANDARD public const ulong DOM_KEY_LOCATION_STANDARD = 0 Field Value ulong Properties AltKey The KeyboardEvent.altKey read-only property is a boolean value that indicates if the &lt;kbd&gt;alt&lt;/kbd&gt; key (&lt;kbd&gt;Option&lt;/kbd&gt; or &lt;kbd&gt;⌥&lt;/kbd&gt; on macOS) was pressed (true) or not (false) when the event occurred. public bool AltKey { get; } Property Value bool A boolean value. Remarks -KeyboardEvent See also on MDN CharCode IMPORTANT Deprecated The charCode read-only property of the KeyboardEvent interface returns the Unicode value of a character key pressed during a Element/keypress_event event. public ulong CharCode { get; } Property Value ulong A number that represents the Unicode value of the character key that was pressed. Remarks WARNING Warning: Do not use this property, as it is deprecated. Instead, get the Unicode value of the character using the Key property. See also on MDN Code The KeyboardEvent.code property represents a physical key on the keyboard (as opposed to the character generated by pressing the key). In other words, this property returns a value that isn&apos;t altered by keyboard layout or the state of the modifier keys. public string Code { get; } Property Value string The code values for Windows, Linux, and macOS are listed on the KeyboardEvent: code values page. Remarks If the input device isn&apos;t a physical keyboard, but is instead a virtual keyboard or accessibility device, the returned value will be set by the browser to match as closely as possible to what would happen with a physical keyboard, to maximize compatibility between physical and virtual input devices. This property is useful when you want to handle keys based on their physical positions on the input device rather than the characters associated with those keys; this is especially common when writing code to handle input for games that simulate a gamepad-like environment using keys on the keyboard. Be aware, however, that you can&apos;t use the value reported by KeyboardEvent.code to determine the character generated by the keystroke, because the keycode&apos;s name may not match the actual character that&apos;s printed on the key or that&apos;s generated by the computer when the key is pressed. For example, the code returned is &quot;KeyQ&quot; for the &lt;kbd&gt;Q&lt;/kbd&gt; key on a QWERTY layout keyboard, but the same code value also represents the &lt;kbd&gt;&apos;&lt;/kbd&gt; key on Dvorak keyboards and the &lt;kbd&gt;A&lt;/kbd&gt; key on AZERTY keyboards. That makes it impossible to use the value of code to determine what the name of the key is to users if they&apos;re not using an anticipated keyboard layout. To determine what character corresponds with the key event, use the Key property instead. See also on MDN CtrlKey The KeyboardEvent.ctrlKey read-only property returns a boolean value that indicates if the &lt;kbd&gt;control&lt;/kbd&gt; key was pressed (true) or not (false) when the event occurred. public bool CtrlKey { get; } Property Value bool A boolean value. Remarks -KeyboardEvent See also on MDN IsComposing The KeyboardEvent.isComposing read-only property returns a boolean value indicating if the event is fired within a composition session, i.e. after Element/compositionstart_event and before Element/compositionend_event. public bool IsComposing { get; } Property Value bool A boolean. Remarks -Element/compositionstart_event and Element/compositionend_event -KeyboardEvent See also on MDN Key The KeyboardEvent interface's key read-only property returns the value of the key pressed by the user, taking into consideration the state of modifier keys such as &lt;kbd&gt;Shift&lt;/kbd&gt; as well as the keyboard locale and layout. public string Key { get; } Property Value string A string.Its value is determined as follows: Callout:See a full list of key values. Remarks See also on MDN KeyCode IMPORTANT Deprecated The deprecated KeyboardEvent.keyCode read-only property represents a system and implementation dependent numerical code identifying the unmodified value of the pressed key. public ulong KeyCode { get; } Property Value ulong Remarks This is usually the decimal ASCII ({{RFC(20)}}) or Windows 1252 code corresponding to the key. If the key can't be identified, this value is 0. You should avoid using this if possible; it's been deprecated for some time. Instead, you should use Code, if it's implemented. Unfortunately, some browsers still don't have it, so you'll have to be careful to make sure you use one which is supported on all target browsers. NOTE Note: Web developers shouldn&apos;t use the keyCode attribute for printable characters when handling keydown and keyup events. As described above, the keyCode attribute is not useful for printable characters, especially those input with the &lt;kbd&gt;Shift&lt;/kbd&gt; or &lt;kbd&gt;Alt&lt;/kbd&gt; key pressed. When implementing a shortcut key handler, the Element/keypress_event event is usually better (at least when Gecko is the runtime in use). See also on MDN Location The KeyboardEvent.location read-only property returns an unsigned long representing the location of the key on the keyboard or other input device. public ulong Location { get; } Property Value ulong A number. Remarks Possible values are: -KeyboardEvent See also on MDN MetaKey The KeyboardEvent.metaKey read-only property returning a boolean value that indicates if the &lt;kbd&gt;Meta&lt;/kbd&gt; key was pressed (true) or not (false) when the event occurred. Some operating systems may intercept the key so it is never detected. public bool MetaKey { get; } Property Value bool A boolean value. Remarks NOTE Note: On Macintosh keyboards, this is the &lt;kbd&gt;⌘ Command&lt;/kbd&gt; key. WARNING Warning: At least as of Firefox 48, the &lt;kbd&gt;⊞ Windows&lt;/kbd&gt; key is no longer considered the &quot;Meta&quot; key. KeyboardEvent.metaKey is false when the &lt;kbd&gt;⊞ Windows&lt;/kbd&gt; key is pressed. -KeyboardEvent See also on MDN Repeat The repeat read-only property of the KeyboardEvent interface returns a boolean value that is true if the given key is being held down such that it is automatically repeating. public bool Repeat { get; } Property Value bool A boolean value. Remarks See also on MDN ShiftKey The KeyboardEvent.shiftKey read-only property is a boolean value that indicates if the &lt;kbd&gt;shift&lt;/kbd&gt; key was pressed (true) or not (false) when the event occurred. public bool ShiftKey { get; } Property Value bool A boolean value. Remarks -KeyboardEvent See also on MDN Methods GetModifierState(string) The KeyboardEvent.getModifierState() method returns the current state of the specified modifier key: true if the modifier is active (that is the modifier key is pressed or locked), otherwise, false. public bool GetModifierState(string keyArg) Parameters keyArg string Returns bool A boolean. Remarks -The KeyboardEvent this method belongs to. -GetModifierState(string) See also on MDN InitKeyboardEvent(string, bool, bool, Window?, string, ulong, bool, bool, bool, bool) IMPORTANT Deprecated The KeyboardEvent.initKeyboardEvent() method initializes the attributes of a keyboard event object. This method was introduced in draft of DOM Level 3 Events, but deprecated in newer draft. Gecko won&apos;t support this feature since implementing this method as experimental broke existing web apps (see Firefox bug 999645). Web applications should use constructor instead of this if it&apos;s available. public GlobalObject.Undefined InitKeyboardEvent(string typeArg, bool bubblesArg, bool cancelableArg, Window? viewArg, string keyArg, ulong locationArg, bool ctrlKey, bool altKey, bool shiftKey, bool metaKey) Parameters typeArg string bubblesArg bool cancelableArg bool viewArg Window keyArg string locationArg ulong ctrlKey bool altKey bool shiftKey bool metaKey bool Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.KeyboardEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.KeyboardEventInit.html",
    "title": "Class KeyboardEventInit | CSharpToJavaScript",
    "keywords": "Class KeyboardEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class KeyboardEventInit : EventModifierInit Inheritance object EventInit UIEventInit EventModifierInit KeyboardEventInit Inherited Members EventModifierInit.CtrlKey EventModifierInit.ShiftKey EventModifierInit.AltKey EventModifierInit.MetaKey EventModifierInit.ModifierAltGraph EventModifierInit.ModifierCapsLock EventModifierInit.ModifierFn EventModifierInit.ModifierFnLock EventModifierInit.ModifierHyper EventModifierInit.ModifierNumLock EventModifierInit.ModifierScrollLock EventModifierInit.ModifierSuper EventModifierInit.ModifierSymbol EventModifierInit.ModifierSymbolLock UIEventInit.View UIEventInit.Detail UIEventInit.Which EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CharCode public ulong CharCode Field Value ulong Code public string Code Field Value string IsComposing public bool IsComposing Field Value bool Key public string Key Field Value string KeyCode public ulong KeyCode Field Value ulong Location public ulong Location Field Value ulong Repeat public bool Repeat Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.KeyframeEffect.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.KeyframeEffect.html",
    "title": "Class KeyframeEffect | CSharpToJavaScript",
    "keywords": "Class KeyframeEffect Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The KeyframeEffect interface of the Web Animations API lets us create sets of animatable properties and values, called keyframes. These can then be played using the Animation() constructor. [To(\"FirstCharToLowerCase\")] public class KeyframeEffect Inheritance object KeyframeEffect Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Web Animations API -Animation See also on MDN Properties IterationComposite The iterationComposite property of a KeyframeEffect resolves how the animation's property value changes accumulate or override each other upon each of the animation's iterations. public IterationCompositeOperation IterationComposite { get; set; } Property Value IterationCompositeOperation One of the following: Remarks -Web Animations API -Property of both KeyframeEffect objects. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.KeyframeEffectOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.KeyframeEffectOptions.html",
    "title": "Class KeyframeEffectOptions | CSharpToJavaScript",
    "keywords": "Class KeyframeEffectOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class KeyframeEffectOptions Inheritance object KeyframeEffectOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IterationComposite public IterationCompositeOperation IterationComposite Field Value IterationCompositeOperation"
  },
  "api/CSharpToJavaScript.APIs.JS.LargestContentfulPaint.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LargestContentfulPaint.html",
    "title": "Class LargestContentfulPaint | CSharpToJavaScript",
    "keywords": "Class LargestContentfulPaint Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The LargestContentfulPaint interface provides timing information about the largest image or text paint before user input on a web page. [To(\"FirstCharToLowerCase\")] public class LargestContentfulPaint Inheritance object LargestContentfulPaint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Largest Contentful Paint -First contentful paint -First paint See also on MDN Properties Element The element read-only property of the LargestContentfulPaint interface returns an object representing the Element that is the largest contentful paint. public Element? Element { get; } Property Value Element An Element. Remarks See also on MDN Id The id read-only property of the LargestContentfulPaint interface returns the ID of the element that is the largest contentful paint. public string Id { get; } Property Value string A string containing the ID of the element, or the empty string if there is no such ID. Remarks See also on MDN LoadTime The loadTime read-only property of the LargestContentfulPaint interface returns the time that the element was loaded. public Unsupported LoadTime { get; } Property Value Unsupported A DOMHighResTimeStamp representing the time in milliseconds that the element was loaded. Remarks See also on MDN RenderTime The renderTime read-only property of the LargestContentfulPaint interface represents the time that the element was rendered to the screen. public Unsupported RenderTime { get; } Property Value Unsupported The renderTime property can have the following values: Remarks See also on MDN Size The size read-only property of the LargestContentfulPaint interface returns the intrinsic size of the element that is the largest contentful paint. public ulong Size { get; } Property Value ulong An integer representing the width times height of the element. Remarks The size of the element is the width times height of the DOMRectReadOnly that this element creates on the screen. See also on MDN Url The url read-only property of the LargestContentfulPaint interface returns the request URL of the element, if the element is an image. public string Url { get; } Property Value string A string containing a URL. Remarks See also on MDN Methods ToJSON() The toJSON() method of the LargestContentfulPaint interface is a {{Glossary(\"Serialization\",\"serializer\")}}; it returns a JSON representation of the LargestContentfulPaint object. public object ToJSON() Returns object A {{jsxref(\"JSON\")}} object that is the serialization of the LargestContentfulPaint object.The JSON doesn't contain the Element property because it is of type Element, which doesn't provide a toJSON() operation. Remarks -JSON See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.LatencyMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LatencyMode.html",
    "title": "Enum LatencyMode | CSharpToJavaScript",
    "keywords": "Enum LatencyMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum LatencyMode Fields Quality = 0 Realtime = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.LayoutChild.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LayoutChild.html",
    "title": "Class LayoutChild | CSharpToJavaScript",
    "keywords": "Class LayoutChild Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class LayoutChild Inheritance object LayoutChild Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties StyleMap public Unsupported StyleMap { get; } Property Value Unsupported Methods IntrinsicSizes() public IntrinsicSizesRequest IntrinsicSizes() Returns IntrinsicSizesRequest LayoutNextFragment(LayoutConstraints, ChildBreakToken) public LayoutFragmentRequest LayoutNextFragment(LayoutConstraints constraints, ChildBreakToken breakToken) Parameters constraints LayoutConstraints breakToken ChildBreakToken Returns LayoutFragmentRequest"
  },
  "api/CSharpToJavaScript.APIs.JS.LayoutConstraints.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LayoutConstraints.html",
    "title": "Class LayoutConstraints | CSharpToJavaScript",
    "keywords": "Class LayoutConstraints Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class LayoutConstraints Inheritance object LayoutConstraints Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LayoutConstraints() public LayoutConstraints() LayoutConstraints(LayoutConstraintsOptions) public LayoutConstraints(LayoutConstraintsOptions options) Parameters options LayoutConstraintsOptions Properties AvailableBlockSize public Number AvailableBlockSize { get; } Property Value Number AvailableInlineSize public Number AvailableInlineSize { get; } Property Value Number BlockFragmentationOffset public Number? BlockFragmentationOffset { get; } Property Value Number BlockFragmentationType public BlockFragmentationType BlockFragmentationType { get; } Property Value BlockFragmentationType Data public dynamic Data { get; } Property Value dynamic FixedBlockSize public Number? FixedBlockSize { get; } Property Value Number FixedInlineSize public Number? FixedInlineSize { get; } Property Value Number PercentageBlockSize public Number PercentageBlockSize { get; } Property Value Number PercentageInlineSize public Number PercentageInlineSize { get; } Property Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.LayoutConstraintsOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LayoutConstraintsOptions.html",
    "title": "Class LayoutConstraintsOptions | CSharpToJavaScript",
    "keywords": "Class LayoutConstraintsOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class LayoutConstraintsOptions Inheritance object LayoutConstraintsOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AvailableBlockSize public Number AvailableBlockSize Field Value Number AvailableInlineSize public Number AvailableInlineSize Field Value Number BlockFragmentationOffset public Number BlockFragmentationOffset Field Value Number BlockFragmentationType public BlockFragmentationType BlockFragmentationType Field Value BlockFragmentationType Data public dynamic Data Field Value dynamic FixedBlockSize public Number FixedBlockSize Field Value Number FixedInlineSize public Number FixedInlineSize Field Value Number PercentageBlockSize public Number PercentageBlockSize Field Value Number PercentageInlineSize public Number PercentageInlineSize Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.LayoutEdgeSizes.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LayoutEdgeSizes.html",
    "title": "Class LayoutEdgeSizes | CSharpToJavaScript",
    "keywords": "Class LayoutEdgeSizes Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class LayoutEdgeSizes Inheritance object LayoutEdgeSizes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Block public Number Block { get; } Property Value Number BlockEnd public Number BlockEnd { get; } Property Value Number BlockStart public Number BlockStart { get; } Property Value Number Inline public Number Inline { get; } Property Value Number InlineEnd public Number InlineEnd { get; } Property Value Number InlineStart public Number InlineStart { get; } Property Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.LayoutEdges.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LayoutEdges.html",
    "title": "Class LayoutEdges | CSharpToJavaScript",
    "keywords": "Class LayoutEdges Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class LayoutEdges Inheritance object LayoutEdges Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties All public LayoutEdgeSizes All { get; } Property Value LayoutEdgeSizes Border public LayoutEdgeSizes Border { get; } Property Value LayoutEdgeSizes Padding public LayoutEdgeSizes Padding { get; } Property Value LayoutEdgeSizes Scrollbar public LayoutEdgeSizes Scrollbar { get; } Property Value LayoutEdgeSizes"
  },
  "api/CSharpToJavaScript.APIs.JS.LayoutFragment.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LayoutFragment.html",
    "title": "Class LayoutFragment | CSharpToJavaScript",
    "keywords": "Class LayoutFragment Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class LayoutFragment Inheritance object LayoutFragment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BlockOffset public Number BlockOffset { get; set; } Property Value Number BlockSize public Number BlockSize { get; } Property Value Number BreakToken public ChildBreakToken? BreakToken { get; } Property Value ChildBreakToken Data public dynamic Data { get; } Property Value dynamic InlineOffset public Number InlineOffset { get; set; } Property Value Number InlineSize public Number InlineSize { get; } Property Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.LayoutFragmentRequest.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LayoutFragmentRequest.html",
    "title": "Class LayoutFragmentRequest | CSharpToJavaScript",
    "keywords": "Class LayoutFragmentRequest Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class LayoutFragmentRequest Inheritance object LayoutFragmentRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.LayoutOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LayoutOptions.html",
    "title": "Class LayoutOptions | CSharpToJavaScript",
    "keywords": "Class LayoutOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class LayoutOptions Inheritance object LayoutOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ChildDisplay public ChildDisplayType ChildDisplay Field Value ChildDisplayType Sizing public LayoutSizingMode Sizing Field Value LayoutSizingMode"
  },
  "api/CSharpToJavaScript.APIs.JS.LayoutSizingMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LayoutSizingMode.html",
    "title": "Enum LayoutSizingMode | CSharpToJavaScript",
    "keywords": "Enum LayoutSizingMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum LayoutSizingMode Fields BlockLike = 0 Manual = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.LayoutWorkletGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LayoutWorkletGlobalScope.html",
    "title": "Class LayoutWorkletGlobalScope | CSharpToJavaScript",
    "keywords": "Class LayoutWorkletGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class LayoutWorkletGlobalScope : WorkletGlobalScope Inheritance object WorkletGlobalScope LayoutWorkletGlobalScope Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterLayout(string, VoidFunction) public GlobalObject.Undefined RegisterLayout(string name, VoidFunction layoutCtor) Parameters name string layoutCtor VoidFunction Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.LineAlignSetting.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LineAlignSetting.html",
    "title": "Enum LineAlignSetting | CSharpToJavaScript",
    "keywords": "Enum LineAlignSetting Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum LineAlignSetting Fields Center = 1 End = 2 Start = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.LinearAccelerationReadingValues.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LinearAccelerationReadingValues.html",
    "title": "Class LinearAccelerationReadingValues | CSharpToJavaScript",
    "keywords": "Class LinearAccelerationReadingValues Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class LinearAccelerationReadingValues : AccelerometerReadingValues Inheritance object AccelerometerReadingValues LinearAccelerationReadingValues Inherited Members AccelerometerReadingValues.X AccelerometerReadingValues.Y AccelerometerReadingValues.Z object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.LinearAccelerationSensor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LinearAccelerationSensor.html",
    "title": "Class LinearAccelerationSensor | CSharpToJavaScript",
    "keywords": "Class LinearAccelerationSensor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The LinearAccelerationSensor interface of the Sensor APIs provides on each reading the acceleration applied to the device along all three axes, but without the contribution of gravity. [To(\"FirstCharToLowerCase\")] public class LinearAccelerationSensor : Accelerometer Inheritance object EventTarget Sensor Accelerometer LinearAccelerationSensor Inherited Members Accelerometer.X Accelerometer.Y Accelerometer.Z Sensor.Activated Sensor.HasReading Sensor.Timestamp Sensor.Start() Sensor.Stop() Sensor.Onreading Sensor.Onactivate Sensor.Onerror EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To use this sensor, the user must grant permission to the &apos;accelerometer&apos; device sensor through the Permissions API. In addition, this feature may be blocked by a Permissions Policy set on your server. See also on MDN Constructors LinearAccelerationSensor() public LinearAccelerationSensor() LinearAccelerationSensor(AccelerometerSensorOptions) The LinearAccelerationSensor() constructor creates a new LinearAccelerationSensor object which provides on each reading the acceleration applied to the device along all three axes, but without the contribution of gravity. public LinearAccelerationSensor(AccelerometerSensorOptions options) Parameters options AccelerometerSensorOptions Remarks -'sensor.Reading_event' event See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.LinkError.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LinkError.html",
    "title": "Class LinkError | CSharpToJavaScript",
    "keywords": "Class LinkError Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class LinkError Inheritance object LinkError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.LinkStyle.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LinkStyle.html",
    "title": "Interface LinkStyle | CSharpToJavaScript",
    "keywords": "Interface LinkStyle Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface LinkStyle Properties Sheet CSSStyleSheet? Sheet { get; } Property Value CSSStyleSheet"
  },
  "api/CSharpToJavaScript.APIs.JS.Location.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Location.html",
    "title": "Class Location | CSharpToJavaScript",
    "keywords": "Class Location Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Location interface represents the location (URL) of the object it is linked to. Changes done on it are reflected on the object it relates to. Both the Document and Window interface have such a linked Location, accessible via Location and Location respectively. [To(\"FirstCharToLowerCase\")] public class Location Inheritance object Location Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Two Location properties: Location and Location. -URL manipulation interfaces: URL and URLSearchParams. See also on MDN Properties AncestorOrigins The ancestorOrigins read-only property of the Location interface is a static DOMStringList containing, in reverse order, the origins of all ancestor browsing contexts of the document associated with the given Location object. public string AncestorOrigins { get; } Property Value string A DOMStringList. Remarks You can use location.ancestorOrigins in the script for a document to determine, for example, whenever the document is being framed by a site which you don&apos;t expect it to be framed by. You can also use it to vary the behavior of the document based on what site or list of sites is framing it. See also on MDN Hash The hash property of the Location interface returns a string containing a &apos;#&apos; followed by the fragment identifier of the URL — the ID on the page that the URL is trying to target. public string Hash { get; set; } Property Value string A string. Remarks The fragment is not URL decoded. If the URL does not have a fragment identifier, this property contains an empty string, &quot;&quot;. See also on MDN Host The host property of the Location interface is a string containing the host, that is the hostname, and then, if the port of the URL is nonempty, a &apos;:&apos;, and the port of the URL. public string Host { get; set; } Property Value string A string. Remarks See also on MDN Hostname The hostname property of the Location interface is a string containing the domain of the URL. public string Hostname { get; set; } Property Value string A string. Remarks See also on MDN Href The href property of the Location interface is a stringifier that returns a string containing the whole URL, and allows the href to be updated. public string Href { get; set; } Property Value string A string. Remarks Setting the value of href navigates to the provided URL. If you want redirection, use Location/replace. The difference from setting the href property value is that when using the location.replace() method, after navigating to the given URL, the current page will not be saved in session history — meaning the user won&apos;t be able to use the back button to navigate to it. See also on MDN Origin The origin read-only property of the Location interface is a string containing the Unicode serialization of the origin of the represented URL. public string Origin { get; } Property Value string A string. Remarks That is: AvailableInWorkers See also on MDN Pathname The pathname property of the Location interface is a string containing the path of the URL for the location. If there is no path, pathname will be empty: otherwise, pathname contains an initial &apos;/&apos; followed by the path of the URL, not including the query string or fragment. public string Pathname { get; set; } Property Value string A string. Remarks See also on MDN Port The port property of the Location interface is a string containing the port number of the URL. If the URL does not contain an explicit port number, it will be set to &apos;&apos;. public string Port { get; set; } Property Value string A string. Remarks See also on MDN Protocol The protocol property of the Location interface is a string representing the protocol scheme of the URL, including the final &apos;:&apos;. public string Protocol { get; set; } Property Value string A string. Remarks See also on MDN Search The search property of the Location interface is a search string, also called a query string; that is, a string containing a &apos;?&apos; followed by the parameters of the URL. public string Search { get; set; } Property Value string A string. Remarks Modern browsers provide URLSearchParams and URL.searchParams to make it easy to parse out the parameters from the querystring. See also on MDN Methods Assign(string) The Location.assign() method causes the window to load and display the document at the URL specified. After the navigation occurs, the user can navigate back to the page that called Location.assign() by pressing the &quot;back&quot; button. public GlobalObject.Undefined Assign(string url) Parameters url string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If the assignment can&apos;t happen because of a security violation, a DOMException of the SECURITY_ERROR type is thrown. This happens if the origin of the script calling the method is different from the origin of the page originally described by the Location object, mostly when the script is hosted on a different domain. If the provided URL is not valid, a DOMException of the SYNTAX_ERROR type is thrown. -The Location interface it belongs to. -Similar methods: Replace(string) and Reload(). See also on MDN Reload() The location.reload() method reloads the current URL, like the Refresh button. public GlobalObject.Undefined Reload() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The reload may be blocked and a SECURITY_ERROR DOMException thrown. This happens if the origin of the script calling location.reload() differs from the origin of the page that owns the Location object. See Same-origin policy for more information. -The Location interface it belongs to. -Similar methods: Assign(string) and Replace(string). See also on MDN Replace(string) The replace() method of the Location interface replaces the current resource with the one at the provided URL. The difference from the Assign(string) method is that after using replace() the current page will not be saved in session History, meaning the user won't be able to use the back button to navigate to it. public GlobalObject.Undefined Replace(string url) Parameters url string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If the assignment can&apos;t happen because of a security violation, a DOMException of the SECURITY_ERROR type is thrown. This happens if the origin of the script calling the method is different from the origin of the page originally described by the Location object, mostly when the script is hosted on a different domain. If the provided URL is not valid, a DOMException of the SYNTAX_ERROR type is thrown. -The Location interface it belongs to. -Similar methods: Assign(string) and Reload(). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Lock.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Lock.html",
    "title": "Class Lock | CSharpToJavaScript",
    "keywords": "Class Lock Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Lock interface of the Web Locks API provides the name and mode of a lock. This may be a newly requested lock that is received in the callback to 'LockManager.Request', or a record of an active or queued lock returned by 'LockManager.Query'. [To(\"FirstCharToLowerCase\")] public class Lock Inheritance object Lock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Mode The mode read-only property of the Lock interface returns the access mode passed to 'LockManager.Request' when the lock was requested. The mode is either &quot;exclusive&quot; (the default) or &quot;shared&quot;. public LockMode Mode { get; } Property Value LockMode One of &quot;exclusive&quot; or &quot;shared&quot;. Remarks See also on MDN Name The name read-only property of the Lock interface returns the name passed to 'LockManager.Request' selected when the lock was requested. public string Name { get; } Property Value string A string. Remarks The name of a lock is passed by script when the lock is requested. The name is selected by the developer to represent an abstract resource for which use is being coordinated across multiple tabs, workers, or other code within the origin. For example, if only one tab of a web application should be synchronizing network resources with an offline database, it could use a lock name such as &quot;net_db_sync&quot;. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.LockGrantedCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LockGrantedCallback.html",
    "title": "Struct LockGrantedCallback | CSharpToJavaScript",
    "keywords": "Struct LockGrantedCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct LockGrantedCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.LockInfo.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LockInfo.html",
    "title": "Class LockInfo | CSharpToJavaScript",
    "keywords": "Class LockInfo Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class LockInfo Inheritance object LockInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ClientId public string ClientId Field Value string Mode public LockMode Mode Field Value LockMode Name public string Name Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.LockManager.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LockManager.html",
    "title": "Class LockManager | CSharpToJavaScript",
    "keywords": "Class LockManager Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The LockManager interface of the Web Locks API provides methods for requesting a new 'Lock' object and querying for an existing Lock object. To get an instance of LockManager, call 'navigator.Locks'. [To(\"FirstCharToLowerCase\")] public class LockManager Inheritance object LockManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Methods Query() The query() method of the LockManager interface returns a {{jsxref('Promise')}} that resolves with an object containing information about held and pending locks. public Task<LockManagerSnapshot> Query() Returns Task<LockManagerSnapshot> A {{jsxref('Promise')}} that resolves with an object containing a snapshot of the LockManager state. The object has the following properties: Remarks See also on MDN Request(string, LockGrantedCallback) The request() method of the LockManager interface requests a 'Lock' object with parameters specifying its name and characteristics. The requested Lock is passed to a callback, while the function itself returns a 'Promise' that resolves with 'undefined'. public Task<dynamic> Request(string name, LockGrantedCallback callback) Parameters name string callback LockGrantedCallback Returns Task<dynamic> A 'Promise' that resolves (or rejects) with the result of the callback after the lock is released, or rejects if the request is aborted. Remarks The mode property of the options parameter may be either &quot;exclusive&quot; or &quot;shared&quot;. Request an &quot;exclusive&quot; lock when it should only be held by one code instance at a time. This applies to code in both tabs and workers. Use this to represent mutually exclusive access to a resource. When an &quot;exclusive&quot; lock for a given name is held, no other lock with the same name can be held. Request a &quot;shared&quot; lock when multiple instances of the code can share access to a resource. When a &quot;shared&quot; lock for a given name is held, other &quot;shared&quot; locks for the same name can be granted, but no &quot;exclusive&quot; locks with that name can be held or granted. This shared/exclusive lock pattern is common in database transaction architecture, for example to allow multiple simultaneous readers (each requests a &quot;shared&quot; lock) but only one writer (a single &quot;exclusive&quot; lock). This is known as the readers-writer pattern. In the IndexedDB API, this is exposed as &quot;readonly&quot; and &quot;readwrite&quot; transactions which have the same semantics. See also on MDN Request(string, LockOptions, LockGrantedCallback) The request() method of the LockManager interface requests a 'Lock' object with parameters specifying its name and characteristics. The requested Lock is passed to a callback, while the function itself returns a 'Promise' that resolves with 'undefined'. public Task<dynamic> Request(string name, LockOptions options, LockGrantedCallback callback) Parameters name string options LockOptions callback LockGrantedCallback Returns Task<dynamic> A 'Promise' that resolves (or rejects) with the result of the callback after the lock is released, or rejects if the request is aborted. Remarks The mode property of the options parameter may be either &quot;exclusive&quot; or &quot;shared&quot;. Request an &quot;exclusive&quot; lock when it should only be held by one code instance at a time. This applies to code in both tabs and workers. Use this to represent mutually exclusive access to a resource. When an &quot;exclusive&quot; lock for a given name is held, no other lock with the same name can be held. Request a &quot;shared&quot; lock when multiple instances of the code can share access to a resource. When a &quot;shared&quot; lock for a given name is held, other &quot;shared&quot; locks for the same name can be granted, but no &quot;exclusive&quot; locks with that name can be held or granted. This shared/exclusive lock pattern is common in database transaction architecture, for example to allow multiple simultaneous readers (each requests a &quot;shared&quot; lock) but only one writer (a single &quot;exclusive&quot; lock). This is known as the readers-writer pattern. In the IndexedDB API, this is exposed as &quot;readonly&quot; and &quot;readwrite&quot; transactions which have the same semantics. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.LockManagerSnapshot.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LockManagerSnapshot.html",
    "title": "Class LockManagerSnapshot | CSharpToJavaScript",
    "keywords": "Class LockManagerSnapshot Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class LockManagerSnapshot Inheritance object LockManagerSnapshot Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Held public List<LockInfo> Held Field Value List<LockInfo> Pending public List<LockInfo> Pending Field Value List<LockInfo>"
  },
  "api/CSharpToJavaScript.APIs.JS.LockMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LockMode.html",
    "title": "Enum LockMode | CSharpToJavaScript",
    "keywords": "Enum LockMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The mode read-only property of the Lock interface returns the access mode passed to 'LockManager.Request' when the lock was requested. The mode is either &quot;exclusive&quot; (the default) or &quot;shared&quot;. public enum LockMode Fields Exclusive = 1 Shared = 0 Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.LockOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.LockOptions.html",
    "title": "Class LockOptions | CSharpToJavaScript",
    "keywords": "Class LockOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class LockOptions Inheritance object LockOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IfAvailable public bool IfAvailable Field Value bool Mode public LockMode Mode Field Value LockMode Signal public AbortSignal Signal Field Value AbortSignal Steal public bool Steal Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDIAccess.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDIAccess.html",
    "title": "Class MIDIAccess | CSharpToJavaScript",
    "keywords": "Class MIDIAccess Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MIDIAccess interface of the Web MIDI API provides methods for listing MIDI input and output devices, and obtaining access to those devices. [To(\"FirstCharToLowerCase\")] public class MIDIAccess : EventTarget Inheritance object EventTarget MIDIAccess Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Inputs The inputs read-only property of the MIDIAccess interface provides access to any available MIDI input ports. public MIDIInputMap Inputs { get; } Property Value MIDIInputMap A MIDIInputMap instance. Remarks See also on MDN Onstatechange public EventHandlerNonNull Onstatechange { get; set; } Property Value EventHandlerNonNull Outputs The outputs read-only property of the MIDIAccess interface provides access to any available MIDI output ports. public MIDIOutputMap Outputs { get; } Property Value MIDIOutputMap A MIDIOutputMap instance. Remarks See also on MDN SysexEnabled The sysexEnabled read-only property of the MIDIAccess interface indicates whether system exclusive support is enabled on the current MIDIAccess instance. public bool SysexEnabled { get; } Property Value bool A boolean value. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDIConnectionEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDIConnectionEvent.html",
    "title": "Class MIDIConnectionEvent | CSharpToJavaScript",
    "keywords": "Class MIDIConnectionEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MIDIConnectionEvent interface of the Web MIDI API is the event passed to the MIDIAccess.Statechange_event event of the MIDIAccess interface and the MIDIPort.Statechange_event event of the MIDIPort interface. This occurs any time a new port becomes available, or when a previously available port becomes unavailable. For example, this event is fired whenever a MIDI device is either plugged in to or unplugged from a computer. [To(\"FirstCharToLowerCase\")] public class MIDIConnectionEvent : Event Inheritance object Event MIDIConnectionEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors MIDIConnectionEvent() public MIDIConnectionEvent() MIDIConnectionEvent(string, MIDIConnectionEventInit) The MIDIConnectionEvent() constructor creates a new MIDIConnectionEvent object. Typically this constructor is not used as events are created when a new port becomes available, and the object is passed to the MIDIAccess.Statechange_event event. public MIDIConnectionEvent(string type, MIDIConnectionEventInit eventInitDict) Parameters type string eventInitDict MIDIConnectionEventInit Remarks See also on MDN Properties Port The port read-only property of the MIDIConnectionEvent interface returns the port that has been disconnected or connected. public MIDIPort Port { get; } Property Value MIDIPort A MIDIPort object. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDIConnectionEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDIConnectionEventInit.html",
    "title": "Class MIDIConnectionEventInit | CSharpToJavaScript",
    "keywords": "Class MIDIConnectionEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MIDIConnectionEventInit : EventInit Inheritance object EventInit MIDIConnectionEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Port public MIDIPort Port Field Value MIDIPort"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDIInput.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDIInput.html",
    "title": "Class MIDIInput | CSharpToJavaScript",
    "keywords": "Class MIDIInput Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MIDIInput interface of the Web MIDI API receives messages from a MIDI input port. [To(\"FirstCharToLowerCase\")] public class MIDIInput : MIDIPort Inheritance object EventTarget MIDIPort MIDIInput Inherited Members MIDIPort.Id MIDIPort.Manufacturer MIDIPort.Name MIDIPort.Type MIDIPort.Version MIDIPort.State MIDIPort.Connection MIDIPort.Onstatechange MIDIPort.Open() MIDIPort.Close() EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Onmidimessage public EventHandlerNonNull Onmidimessage { get; set; } Property Value EventHandlerNonNull"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDIInputMap.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDIInputMap.html",
    "title": "Class MIDIInputMap | CSharpToJavaScript",
    "keywords": "Class MIDIInputMap Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MIDIInputMap read-only interface of the Web MIDI API provides the set of MIDI input ports that are currently available. [To(\"FirstCharToLowerCase\")] public class MIDIInputMap Inheritance object MIDIInputMap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A MIDIInputMap instance is a read-only Map-like object, in which each key is the ID string for MIDI input, and the associated value is the corresponding MIDIInput object. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDIMessageEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDIMessageEvent.html",
    "title": "Class MIDIMessageEvent | CSharpToJavaScript",
    "keywords": "Class MIDIMessageEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MIDIMessageEvent interface of the Web MIDI API represents the event passed to the MIDIInput.Midimessage_event event of the MIDIInput interface. A midimessage event is fired every time a MIDI message is sent from a device represented by a MIDIInput, for example when a MIDI keyboard key is pressed, a knob is tweaked, or a slider is moved. [To(\"FirstCharToLowerCase\")] public class MIDIMessageEvent : Event Inheritance object Event MIDIMessageEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors MIDIMessageEvent() public MIDIMessageEvent() MIDIMessageEvent(string, MIDIMessageEventInit) The MIDIMessageEvent() constructor creates a new MIDIMessageEvent object. Typically this constructor is not used as events are created when a MIDIInput finishes receiving one or more MIDI messages. public MIDIMessageEvent(string type, MIDIMessageEventInit eventInitDict) Parameters type string eventInitDict MIDIMessageEventInit Remarks See also on MDN Properties Data The data read-only property of the MIDIMessageEvent interface returns the MIDI data bytes of a single MIDI message. public byte Data { get; } Property Value byte A Uint8Array. Remarks See also on MDN ReceivedTime public Number ReceivedTime { get; } Property Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDIMessageEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDIMessageEventInit.html",
    "title": "Class MIDIMessageEventInit | CSharpToJavaScript",
    "keywords": "Class MIDIMessageEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MIDIMessageEventInit : EventInit Inheritance object EventInit MIDIMessageEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Data public byte Data Field Value byte ReceivedTime public Number ReceivedTime Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDIOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDIOptions.html",
    "title": "Class MIDIOptions | CSharpToJavaScript",
    "keywords": "Class MIDIOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MIDIOptions Inheritance object MIDIOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Sysex public bool Sysex Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDIOutput.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDIOutput.html",
    "title": "Class MIDIOutput | CSharpToJavaScript",
    "keywords": "Class MIDIOutput Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MIDIOutput interface of the 'Web MIDI API' provides methods to add messages to the queue of an output device, and to clear the queue of messages. [To(\"FirstCharToLowerCase\")] public class MIDIOutput : MIDIPort Inheritance object EventTarget MIDIPort MIDIOutput Inherited Members MIDIPort.Id MIDIPort.Manufacturer MIDIPort.Name MIDIPort.Type MIDIPort.Version MIDIPort.State MIDIPort.Connection MIDIPort.Onstatechange MIDIPort.Open() MIDIPort.Close() EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Methods Clear() The clear() method of the MIDIOutput interface clears the queue of messages being sent to the output device. public GlobalObject.Undefined Clear() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Send(List<byte>, Number) The send() method of the MIDIOutput interface queues messages for the corresponding MIDI port. The message can be sent immediately, or with an optional timestamp to delay sending. public GlobalObject.Undefined Send(List<byte> data, Number timestamp) Parameters data List<byte> timestamp Number Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDIOutputMap.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDIOutputMap.html",
    "title": "Class MIDIOutputMap | CSharpToJavaScript",
    "keywords": "Class MIDIOutputMap Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MIDIOutputMap read-only interface of the Web MIDI API provides the set of MIDI output ports that are currently available. [To(\"FirstCharToLowerCase\")] public class MIDIOutputMap Inheritance object MIDIOutputMap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A MIDIOutputMap instance is a read-only Map-like object, in which each key is the ID string for MIDI output, and the associated value is the corresponding MIDIOutput object. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDIPort.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDIPort.html",
    "title": "Class MIDIPort | CSharpToJavaScript",
    "keywords": "Class MIDIPort Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MIDIPort interface of the 'Web MIDI API' represents a MIDI input or output port. [To(\"FirstCharToLowerCase\")] public class MIDIPort : EventTarget Inheritance object EventTarget MIDIPort Derived MIDIInput MIDIOutput Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A MIDIPort instance is created when a new MIDI device is connected. Therefore it has no constructor. See also on MDN Properties Connection The connection property of the MIDIPort interface returns the connection state of the port. public MIDIPortConnectionState Connection { get; } Property Value MIDIPortConnectionState Returns a string containing the connection state of the port, one of: Remarks See also on MDN Id The id read-only property of the MIDIPort interface returns the unique ID of the port. public string Id { get; } Property Value string A string containing an ID for the port. Remarks See also on MDN Manufacturer The manufacturer read-only property of the MIDIPort interface returns the manufacturer of the port. public string? Manufacturer { get; } Property Value string A string containing the manufacturer of the port. Remarks See also on MDN Name The name read-only property of the MIDIPort interface returns the system name of the port. public string? Name { get; } Property Value string A string containing the system name of the port. Remarks See also on MDN Onstatechange public EventHandlerNonNull Onstatechange { get; set; } Property Value EventHandlerNonNull State The state read-only property of the MIDIPort interface returns the state of the port. public MIDIPortDeviceState State { get; } Property Value MIDIPortDeviceState A string containing the state of the port, one of: Remarks See also on MDN Type The type read-only property of the MIDIPort interface returns the type of the port, indicating whether this is an input or output MIDI port. public MIDIPortType Type { get; } Property Value MIDIPortType A string containing the type of the port, one of: Remarks See also on MDN Version The version read-only property of the MIDIPort interface returns the version of the port. public string? Version { get; } Property Value string A string containing the version of the port. Remarks See also on MDN Methods Close() The close() method of the MIDIPort interface makes the access to the MIDI device connected to this MIDIPort unavailable. public Task<MIDIPort> Close() Returns Task<MIDIPort> Returns a Promise which resolves once the port has been closed. Remarks If the port is successfully closed a new MIDIConnectionEvent is queued to the Onstatechange and Onstatechange event handlers, and the Connection property is changed to &quot;closed&quot;. See also on MDN Open() The open() method of the MIDIPort interface makes the MIDI device connected to this MIDIPort explicitly available. public Task<MIDIPort> Open() Returns Task<MIDIPort> A Promise which resolves once access to the port has been successfully obtained. Remarks If the port is successfully opened a new MIDIConnectionEvent is queued to the Onstatechange and Onstatechange event handlers, and the Connection property is changed to &quot;open&quot;. If the port is already open when this method is called, then the promise will resolve successfully. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDIPortConnectionState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDIPortConnectionState.html",
    "title": "Enum MIDIPortConnectionState | CSharpToJavaScript",
    "keywords": "Enum MIDIPortConnectionState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MIDIPortConnectionState Fields Closed = 1 Open = 0 Pending = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDIPortDeviceState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDIPortDeviceState.html",
    "title": "Enum MIDIPortDeviceState | CSharpToJavaScript",
    "keywords": "Enum MIDIPortDeviceState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MIDIPortDeviceState Fields Connected = 1 Disconnected = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDIPortType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDIPortType.html",
    "title": "Enum MIDIPortType | CSharpToJavaScript",
    "keywords": "Enum MIDIPortType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The type read-only property of the MIDIPort interface returns the type of the port, indicating whether this is an input or output MIDI port. public enum MIDIPortType Fields Input = 0 Output = 1 Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MIDISuccessCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MIDISuccessCallback.html",
    "title": "Struct MIDISuccessCallback | CSharpToJavaScript",
    "keywords": "Struct MIDISuccessCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct MIDISuccessCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.ML.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ML.html",
    "title": "Class ML | CSharpToJavaScript",
    "keywords": "Class ML Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ML Inheritance object ML Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateContext(GPUDevice) public Task<MLContext> CreateContext(GPUDevice gpuDevice) Parameters gpuDevice GPUDevice Returns Task<MLContext> CreateContext(MLContextOptions) public Task<MLContext> CreateContext(MLContextOptions options) Parameters options MLContextOptions Returns Task<MLContext> CreateContextSync(GPUDevice) public MLContext CreateContextSync(GPUDevice gpuDevice) Parameters gpuDevice GPUDevice Returns MLContext CreateContextSync(MLContextOptions) public MLContext CreateContextSync(MLContextOptions options) Parameters options MLContextOptions Returns MLContext"
  },
  "api/CSharpToJavaScript.APIs.JS.MLActivation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLActivation.html",
    "title": "Class MLActivation | CSharpToJavaScript",
    "keywords": "Class MLActivation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLActivation Inheritance object MLActivation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.MLAutoPad.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLAutoPad.html",
    "title": "Enum MLAutoPad | CSharpToJavaScript",
    "keywords": "Enum MLAutoPad Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MLAutoPad Fields Explicit = 0 SameLower = 2 SameUpper = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.MLBatchNormalizationOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLBatchNormalizationOptions.html",
    "title": "Class MLBatchNormalizationOptions | CSharpToJavaScript",
    "keywords": "Class MLBatchNormalizationOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLBatchNormalizationOptions Inheritance object MLBatchNormalizationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Activation public MLActivation Activation Field Value MLActivation Axis public ulong Axis Field Value ulong Bias public MLOperand Bias Field Value MLOperand Epsilon public Number Epsilon Field Value Number Scale public MLOperand Scale Field Value MLOperand"
  },
  "api/CSharpToJavaScript.APIs.JS.MLBufferResourceView.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLBufferResourceView.html",
    "title": "Class MLBufferResourceView | CSharpToJavaScript",
    "keywords": "Class MLBufferResourceView Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLBufferResourceView Inheritance object MLBufferResourceView Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Offset public ulong Offset Field Value ulong Resource public required GPUBuffer Resource Field Value GPUBuffer Size public ulong Size Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.MLClampOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLClampOptions.html",
    "title": "Class MLClampOptions | CSharpToJavaScript",
    "keywords": "Class MLClampOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLClampOptions Inheritance object MLClampOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MaxValue public Number MaxValue Field Value Number MinValue public Number MinValue Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.MLCommandEncoder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLCommandEncoder.html",
    "title": "Class MLCommandEncoder | CSharpToJavaScript",
    "keywords": "Class MLCommandEncoder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLCommandEncoder Inheritance object MLCommandEncoder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Dispatch(MLGraph, Dictionary<string, Unsupported>, Dictionary<string, Unsupported>) public GlobalObject.Undefined Dispatch(MLGraph graph, Dictionary<string, Unsupported> inputs, Dictionary<string, Unsupported> outputs) Parameters graph MLGraph inputs Dictionary<string, Unsupported> outputs Dictionary<string, Unsupported> Returns GlobalObject.Undefined Finish(GPUCommandBufferDescriptor) public GPUCommandBuffer Finish(GPUCommandBufferDescriptor descriptor) Parameters descriptor GPUCommandBufferDescriptor Returns GPUCommandBuffer InitializeGraph(MLGraph) public GlobalObject.Undefined InitializeGraph(MLGraph graph) Parameters graph MLGraph Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.MLComputeResult.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLComputeResult.html",
    "title": "Class MLComputeResult | CSharpToJavaScript",
    "keywords": "Class MLComputeResult Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLComputeResult Inheritance object MLComputeResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Inputs public Dictionary<string, Unsupported> Inputs Field Value Dictionary<string, Unsupported> Outputs public Dictionary<string, Unsupported> Outputs Field Value Dictionary<string, Unsupported>"
  },
  "api/CSharpToJavaScript.APIs.JS.MLContext.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLContext.html",
    "title": "Class MLContext | CSharpToJavaScript",
    "keywords": "Class MLContext Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLContext Inheritance object MLContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Compute(MLGraph, Dictionary<string, Unsupported>, Dictionary<string, Unsupported>) public Task<MLComputeResult> Compute(MLGraph graph, Dictionary<string, Unsupported> inputs, Dictionary<string, Unsupported> outputs) Parameters graph MLGraph inputs Dictionary<string, Unsupported> outputs Dictionary<string, Unsupported> Returns Task<MLComputeResult> ComputeSync(MLGraph, Dictionary<string, Unsupported>, Dictionary<string, Unsupported>) public GlobalObject.Undefined ComputeSync(MLGraph graph, Dictionary<string, Unsupported> inputs, Dictionary<string, Unsupported> outputs) Parameters graph MLGraph inputs Dictionary<string, Unsupported> outputs Dictionary<string, Unsupported> Returns GlobalObject.Undefined CreateCommandEncoder() public MLCommandEncoder CreateCommandEncoder() Returns MLCommandEncoder"
  },
  "api/CSharpToJavaScript.APIs.JS.MLContextOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLContextOptions.html",
    "title": "Class MLContextOptions | CSharpToJavaScript",
    "keywords": "Class MLContextOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLContextOptions Inheritance object MLContextOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DeviceType public MLDeviceType DeviceType Field Value MLDeviceType PowerPreference public MLPowerPreference PowerPreference Field Value MLPowerPreference"
  },
  "api/CSharpToJavaScript.APIs.JS.MLConv2dFilterOperandLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLConv2dFilterOperandLayout.html",
    "title": "Enum MLConv2dFilterOperandLayout | CSharpToJavaScript",
    "keywords": "Enum MLConv2dFilterOperandLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MLConv2dFilterOperandLayout Fields Hwio = 1 Ihwo = 3 Ohwi = 2 Oihw = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.MLConv2dOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLConv2dOptions.html",
    "title": "Class MLConv2dOptions | CSharpToJavaScript",
    "keywords": "Class MLConv2dOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLConv2dOptions Inheritance object MLConv2dOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Activation public MLActivation Activation Field Value MLActivation AutoPad public MLAutoPad AutoPad Field Value MLAutoPad Bias public MLOperand Bias Field Value MLOperand Dilations public List<ulong> Dilations Field Value List<ulong> FilterLayout public MLConv2dFilterOperandLayout FilterLayout Field Value MLConv2dFilterOperandLayout Groups public ulong Groups Field Value ulong InputLayout public MLInputOperandLayout InputLayout Field Value MLInputOperandLayout Padding public List<ulong> Padding Field Value List<ulong> Strides public List<ulong> Strides Field Value List<ulong>"
  },
  "api/CSharpToJavaScript.APIs.JS.MLConvTranspose2dFilterOperandLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLConvTranspose2dFilterOperandLayout.html",
    "title": "Enum MLConvTranspose2dFilterOperandLayout | CSharpToJavaScript",
    "keywords": "Enum MLConvTranspose2dFilterOperandLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MLConvTranspose2dFilterOperandLayout Fields Hwoi = 1 Iohw = 0 Ohwi = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.MLConvTranspose2dOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLConvTranspose2dOptions.html",
    "title": "Class MLConvTranspose2dOptions | CSharpToJavaScript",
    "keywords": "Class MLConvTranspose2dOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLConvTranspose2dOptions Inheritance object MLConvTranspose2dOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Activation public MLActivation Activation Field Value MLActivation AutoPad public MLAutoPad AutoPad Field Value MLAutoPad Bias public MLOperand Bias Field Value MLOperand Dilations public List<ulong> Dilations Field Value List<ulong> FilterLayout public MLConvTranspose2dFilterOperandLayout FilterLayout Field Value MLConvTranspose2dFilterOperandLayout Groups public ulong Groups Field Value ulong InputLayout public MLInputOperandLayout InputLayout Field Value MLInputOperandLayout OutputPadding public List<ulong> OutputPadding Field Value List<ulong> OutputSizes public List<ulong> OutputSizes Field Value List<ulong> Padding public List<ulong> Padding Field Value List<ulong> Strides public List<ulong> Strides Field Value List<ulong>"
  },
  "api/CSharpToJavaScript.APIs.JS.MLDeviceType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLDeviceType.html",
    "title": "Enum MLDeviceType | CSharpToJavaScript",
    "keywords": "Enum MLDeviceType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MLDeviceType Fields Cpu = 0 Gpu = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.MLEluOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLEluOptions.html",
    "title": "Class MLEluOptions | CSharpToJavaScript",
    "keywords": "Class MLEluOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLEluOptions Inheritance object MLEluOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alpha public Number Alpha Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.MLGemmOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLGemmOptions.html",
    "title": "Class MLGemmOptions | CSharpToJavaScript",
    "keywords": "Class MLGemmOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLGemmOptions Inheritance object MLGemmOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ATranspose public bool ATranspose Field Value bool Alpha public Number Alpha Field Value Number BTranspose public bool BTranspose Field Value bool Beta public Number Beta Field Value Number C public MLOperand C Field Value MLOperand"
  },
  "api/CSharpToJavaScript.APIs.JS.MLGraph.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLGraph.html",
    "title": "Class MLGraph | CSharpToJavaScript",
    "keywords": "Class MLGraph Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLGraph Inheritance object MLGraph Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.MLGraphBuilder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLGraphBuilder.html",
    "title": "Class MLGraphBuilder | CSharpToJavaScript",
    "keywords": "Class MLGraphBuilder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLGraphBuilder Inheritance object MLGraphBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MLGraphBuilder() public MLGraphBuilder() MLGraphBuilder(MLContext) public MLGraphBuilder(MLContext context) Parameters context MLContext Methods Abs(MLOperand) public MLOperand Abs(MLOperand input) Parameters input MLOperand Returns MLOperand Add(MLOperand, MLOperand) public MLOperand Add(MLOperand a, MLOperand b) Parameters a MLOperand b MLOperand Returns MLOperand AveragePool2d(MLOperand, MLPool2dOptions) public MLOperand AveragePool2d(MLOperand input, MLPool2dOptions options) Parameters input MLOperand options MLPool2dOptions Returns MLOperand BatchNormalization(MLOperand, MLOperand, MLOperand, MLBatchNormalizationOptions) public MLOperand BatchNormalization(MLOperand input, MLOperand mean, MLOperand variance, MLBatchNormalizationOptions options) Parameters input MLOperand mean MLOperand variance MLOperand options MLBatchNormalizationOptions Returns MLOperand Build(Dictionary<string, MLOperand>) public Task<MLGraph> Build(Dictionary<string, MLOperand> outputs) Parameters outputs Dictionary<string, MLOperand> Returns Task<MLGraph> BuildSync(Dictionary<string, MLOperand>) public MLGraph BuildSync(Dictionary<string, MLOperand> outputs) Parameters outputs Dictionary<string, MLOperand> Returns MLGraph Ceil(MLOperand) public MLOperand Ceil(MLOperand input) Parameters input MLOperand Returns MLOperand Clamp(MLClampOptions) public MLActivation Clamp(MLClampOptions options) Parameters options MLClampOptions Returns MLActivation Clamp(MLOperand, MLClampOptions) public MLOperand Clamp(MLOperand operand, MLClampOptions options) Parameters operand MLOperand options MLClampOptions Returns MLOperand Concat(List<MLOperand>, ulong) public MLOperand Concat(List<MLOperand> inputs, ulong axis) Parameters inputs List<MLOperand> axis ulong Returns MLOperand Constant(MLOperandDescriptor, Union107) public MLOperand Constant(MLOperandDescriptor descriptor, Union107 bufferView) Parameters descriptor MLOperandDescriptor bufferView Union107 Returns MLOperand Constant(Number, MLOperandType) public MLOperand Constant(Number value, MLOperandType type) Parameters value Number type MLOperandType Returns MLOperand Conv2d(MLOperand, MLOperand, MLConv2dOptions) public MLOperand Conv2d(MLOperand input, MLOperand filter, MLConv2dOptions options) Parameters input MLOperand filter MLOperand options MLConv2dOptions Returns MLOperand ConvTranspose2d(MLOperand, MLOperand, MLConvTranspose2dOptions) public MLOperand ConvTranspose2d(MLOperand input, MLOperand filter, MLConvTranspose2dOptions options) Parameters input MLOperand filter MLOperand options MLConvTranspose2dOptions Returns MLOperand Cos(MLOperand) public MLOperand Cos(MLOperand input) Parameters input MLOperand Returns MLOperand Div(MLOperand, MLOperand) public MLOperand Div(MLOperand a, MLOperand b) Parameters a MLOperand b MLOperand Returns MLOperand Elu(MLEluOptions) public MLActivation Elu(MLEluOptions options) Parameters options MLEluOptions Returns MLActivation Elu(MLOperand, MLEluOptions) public MLOperand Elu(MLOperand input, MLEluOptions options) Parameters input MLOperand options MLEluOptions Returns MLOperand Exp(MLOperand) public MLOperand Exp(MLOperand input) Parameters input MLOperand Returns MLOperand Floor(MLOperand) public MLOperand Floor(MLOperand input) Parameters input MLOperand Returns MLOperand Gemm(MLOperand, MLOperand, MLGemmOptions) public MLOperand Gemm(MLOperand a, MLOperand b, MLGemmOptions options) Parameters a MLOperand b MLOperand options MLGemmOptions Returns MLOperand Gru(MLOperand, MLOperand, MLOperand, ulong, ulong, MLGruOptions) public List<MLOperand> Gru(MLOperand input, MLOperand weight, MLOperand recurrentWeight, ulong steps, ulong hiddenSize, MLGruOptions options) Parameters input MLOperand weight MLOperand recurrentWeight MLOperand steps ulong hiddenSize ulong options MLGruOptions Returns List<MLOperand> GruCell(MLOperand, MLOperand, MLOperand, MLOperand, ulong, MLGruCellOptions) public MLOperand GruCell(MLOperand input, MLOperand weight, MLOperand recurrentWeight, MLOperand hiddenState, ulong hiddenSize, MLGruCellOptions options) Parameters input MLOperand weight MLOperand recurrentWeight MLOperand hiddenState MLOperand hiddenSize ulong options MLGruCellOptions Returns MLOperand HardSigmoid(MLHardSigmoidOptions) public MLActivation HardSigmoid(MLHardSigmoidOptions options) Parameters options MLHardSigmoidOptions Returns MLActivation HardSigmoid(MLOperand, MLHardSigmoidOptions) public MLOperand HardSigmoid(MLOperand input, MLHardSigmoidOptions options) Parameters input MLOperand options MLHardSigmoidOptions Returns MLOperand HardSwish() public MLActivation HardSwish() Returns MLActivation HardSwish(MLOperand) public MLOperand HardSwish(MLOperand input) Parameters input MLOperand Returns MLOperand Input(string, MLOperandDescriptor) public MLOperand Input(string name, MLOperandDescriptor descriptor) Parameters name string descriptor MLOperandDescriptor Returns MLOperand InstanceNormalization(MLOperand, MLInstanceNormalizationOptions) public MLOperand InstanceNormalization(MLOperand input, MLInstanceNormalizationOptions options) Parameters input MLOperand options MLInstanceNormalizationOptions Returns MLOperand L2Pool2d(MLOperand, MLPool2dOptions) public MLOperand L2Pool2d(MLOperand input, MLPool2dOptions options) Parameters input MLOperand options MLPool2dOptions Returns MLOperand LeakyRelu(MLLeakyReluOptions) public MLActivation LeakyRelu(MLLeakyReluOptions options) Parameters options MLLeakyReluOptions Returns MLActivation LeakyRelu(MLOperand, MLLeakyReluOptions) public MLOperand LeakyRelu(MLOperand input, MLLeakyReluOptions options) Parameters input MLOperand options MLLeakyReluOptions Returns MLOperand Linear(MLLinearOptions) public MLActivation Linear(MLLinearOptions options) Parameters options MLLinearOptions Returns MLActivation Linear(MLOperand, MLLinearOptions) public MLOperand Linear(MLOperand input, MLLinearOptions options) Parameters input MLOperand options MLLinearOptions Returns MLOperand Log(MLOperand) public MLOperand Log(MLOperand input) Parameters input MLOperand Returns MLOperand Lstm(MLOperand, MLOperand, MLOperand, ulong, ulong, MLLstmOptions) public List<MLOperand> Lstm(MLOperand input, MLOperand weight, MLOperand recurrentWeight, ulong steps, ulong hiddenSize, MLLstmOptions options) Parameters input MLOperand weight MLOperand recurrentWeight MLOperand steps ulong hiddenSize ulong options MLLstmOptions Returns List<MLOperand> LstmCell(MLOperand, MLOperand, MLOperand, MLOperand, MLOperand, ulong, MLLstmCellOptions) public List<MLOperand> LstmCell(MLOperand input, MLOperand weight, MLOperand recurrentWeight, MLOperand hiddenState, MLOperand cellState, ulong hiddenSize, MLLstmCellOptions options) Parameters input MLOperand weight MLOperand recurrentWeight MLOperand hiddenState MLOperand cellState MLOperand hiddenSize ulong options MLLstmCellOptions Returns List<MLOperand> Matmul(MLOperand, MLOperand) public MLOperand Matmul(MLOperand a, MLOperand b) Parameters a MLOperand b MLOperand Returns MLOperand Max(MLOperand, MLOperand) public MLOperand Max(MLOperand a, MLOperand b) Parameters a MLOperand b MLOperand Returns MLOperand MaxPool2d(MLOperand, MLPool2dOptions) public MLOperand MaxPool2d(MLOperand input, MLPool2dOptions options) Parameters input MLOperand options MLPool2dOptions Returns MLOperand Min(MLOperand, MLOperand) public MLOperand Min(MLOperand a, MLOperand b) Parameters a MLOperand b MLOperand Returns MLOperand Mul(MLOperand, MLOperand) public MLOperand Mul(MLOperand a, MLOperand b) Parameters a MLOperand b MLOperand Returns MLOperand Neg(MLOperand) public MLOperand Neg(MLOperand input) Parameters input MLOperand Returns MLOperand Pad(MLOperand, List<ulong>, List<ulong>, MLPadOptions) public MLOperand Pad(MLOperand input, List<ulong> beginningPadding, List<ulong> endingPadding, MLPadOptions options) Parameters input MLOperand beginningPadding List<ulong> endingPadding List<ulong> options MLPadOptions Returns MLOperand Pow(MLOperand, MLOperand) public MLOperand Pow(MLOperand a, MLOperand b) Parameters a MLOperand b MLOperand Returns MLOperand Prelu(MLOperand, MLOperand) public MLOperand Prelu(MLOperand input, MLOperand slope) Parameters input MLOperand slope MLOperand Returns MLOperand ReduceL1(MLOperand, MLReduceOptions) public MLOperand ReduceL1(MLOperand input, MLReduceOptions options) Parameters input MLOperand options MLReduceOptions Returns MLOperand ReduceL2(MLOperand, MLReduceOptions) public MLOperand ReduceL2(MLOperand input, MLReduceOptions options) Parameters input MLOperand options MLReduceOptions Returns MLOperand ReduceLogSum(MLOperand, MLReduceOptions) public MLOperand ReduceLogSum(MLOperand input, MLReduceOptions options) Parameters input MLOperand options MLReduceOptions Returns MLOperand ReduceLogSumExp(MLOperand, MLReduceOptions) public MLOperand ReduceLogSumExp(MLOperand input, MLReduceOptions options) Parameters input MLOperand options MLReduceOptions Returns MLOperand ReduceMax(MLOperand, MLReduceOptions) public MLOperand ReduceMax(MLOperand input, MLReduceOptions options) Parameters input MLOperand options MLReduceOptions Returns MLOperand ReduceMean(MLOperand, MLReduceOptions) public MLOperand ReduceMean(MLOperand input, MLReduceOptions options) Parameters input MLOperand options MLReduceOptions Returns MLOperand ReduceMin(MLOperand, MLReduceOptions) public MLOperand ReduceMin(MLOperand input, MLReduceOptions options) Parameters input MLOperand options MLReduceOptions Returns MLOperand ReduceProduct(MLOperand, MLReduceOptions) public MLOperand ReduceProduct(MLOperand input, MLReduceOptions options) Parameters input MLOperand options MLReduceOptions Returns MLOperand ReduceSum(MLOperand, MLReduceOptions) public MLOperand ReduceSum(MLOperand input, MLReduceOptions options) Parameters input MLOperand options MLReduceOptions Returns MLOperand ReduceSumSquare(MLOperand, MLReduceOptions) public MLOperand ReduceSumSquare(MLOperand input, MLReduceOptions options) Parameters input MLOperand options MLReduceOptions Returns MLOperand Relu() public MLActivation Relu() Returns MLActivation Relu(MLOperand) public MLOperand Relu(MLOperand input) Parameters input MLOperand Returns MLOperand Resample2d(MLOperand, MLResample2dOptions) public MLOperand Resample2d(MLOperand input, MLResample2dOptions options) Parameters input MLOperand options MLResample2dOptions Returns MLOperand Reshape(MLOperand, List<ulong?>) public MLOperand Reshape(MLOperand input, List<ulong?> newShape) Parameters input MLOperand newShape List<ulong?> Returns MLOperand Sigmoid() public MLActivation Sigmoid() Returns MLActivation Sigmoid(MLOperand) public MLOperand Sigmoid(MLOperand input) Parameters input MLOperand Returns MLOperand Sin(MLOperand) public MLOperand Sin(MLOperand input) Parameters input MLOperand Returns MLOperand Slice(MLOperand, List<ulong>, List<ulong>) public MLOperand Slice(MLOperand input, List<ulong> starts, List<ulong> sizes) Parameters input MLOperand starts List<ulong> sizes List<ulong> Returns MLOperand Softmax() public MLActivation Softmax() Returns MLActivation Softmax(MLOperand) public MLOperand Softmax(MLOperand input) Parameters input MLOperand Returns MLOperand Softplus(MLOperand, MLSoftplusOptions) public MLOperand Softplus(MLOperand input, MLSoftplusOptions options) Parameters input MLOperand options MLSoftplusOptions Returns MLOperand Softplus(MLSoftplusOptions) public MLActivation Softplus(MLSoftplusOptions options) Parameters options MLSoftplusOptions Returns MLActivation Softsign() public MLActivation Softsign() Returns MLActivation Softsign(MLOperand) public MLOperand Softsign(MLOperand input) Parameters input MLOperand Returns MLOperand Split(MLOperand, Union108, MLSplitOptions) public List<MLOperand> Split(MLOperand input, Union108 splits, MLSplitOptions options) Parameters input MLOperand splits Union108 options MLSplitOptions Returns List<MLOperand> Squeeze(MLOperand, MLSqueezeOptions) public MLOperand Squeeze(MLOperand input, MLSqueezeOptions options) Parameters input MLOperand options MLSqueezeOptions Returns MLOperand Sub(MLOperand, MLOperand) public MLOperand Sub(MLOperand a, MLOperand b) Parameters a MLOperand b MLOperand Returns MLOperand Tan(MLOperand) public MLOperand Tan(MLOperand input) Parameters input MLOperand Returns MLOperand Tanh() public MLActivation Tanh() Returns MLActivation Tanh(MLOperand) public MLOperand Tanh(MLOperand input) Parameters input MLOperand Returns MLOperand Transpose(MLOperand, MLTransposeOptions) public MLOperand Transpose(MLOperand input, MLTransposeOptions options) Parameters input MLOperand options MLTransposeOptions Returns MLOperand"
  },
  "api/CSharpToJavaScript.APIs.JS.MLGruCellOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLGruCellOptions.html",
    "title": "Class MLGruCellOptions | CSharpToJavaScript",
    "keywords": "Class MLGruCellOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLGruCellOptions Inheritance object MLGruCellOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Activations public List<MLActivation> Activations Field Value List<MLActivation> Bias public MLOperand Bias Field Value MLOperand Layout public MLGruWeightLayout Layout Field Value MLGruWeightLayout RecurrentBias public MLOperand RecurrentBias Field Value MLOperand ResetAfter public bool ResetAfter Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.MLGruOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLGruOptions.html",
    "title": "Class MLGruOptions | CSharpToJavaScript",
    "keywords": "Class MLGruOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLGruOptions Inheritance object MLGruOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Activations public List<MLActivation> Activations Field Value List<MLActivation> Bias public MLOperand Bias Field Value MLOperand Direction public MLRecurrentNetworkDirection Direction Field Value MLRecurrentNetworkDirection InitialHiddenState public MLOperand InitialHiddenState Field Value MLOperand Layout public MLGruWeightLayout Layout Field Value MLGruWeightLayout RecurrentBias public MLOperand RecurrentBias Field Value MLOperand ResetAfter public bool ResetAfter Field Value bool ReturnSequence public bool ReturnSequence Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.MLGruWeightLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLGruWeightLayout.html",
    "title": "Enum MLGruWeightLayout | CSharpToJavaScript",
    "keywords": "Enum MLGruWeightLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MLGruWeightLayout Fields Rzn = 1 Zrn = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.MLHardSigmoidOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLHardSigmoidOptions.html",
    "title": "Class MLHardSigmoidOptions | CSharpToJavaScript",
    "keywords": "Class MLHardSigmoidOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLHardSigmoidOptions Inheritance object MLHardSigmoidOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alpha public Number Alpha Field Value Number Beta public Number Beta Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.MLInputOperandLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLInputOperandLayout.html",
    "title": "Enum MLInputOperandLayout | CSharpToJavaScript",
    "keywords": "Enum MLInputOperandLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MLInputOperandLayout Fields Nchw = 0 Nhwc = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.MLInstanceNormalizationOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLInstanceNormalizationOptions.html",
    "title": "Class MLInstanceNormalizationOptions | CSharpToJavaScript",
    "keywords": "Class MLInstanceNormalizationOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLInstanceNormalizationOptions Inheritance object MLInstanceNormalizationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Bias public MLOperand Bias Field Value MLOperand Epsilon public Number Epsilon Field Value Number Layout public MLInputOperandLayout Layout Field Value MLInputOperandLayout Scale public MLOperand Scale Field Value MLOperand"
  },
  "api/CSharpToJavaScript.APIs.JS.MLInterpolationMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLInterpolationMode.html",
    "title": "Enum MLInterpolationMode | CSharpToJavaScript",
    "keywords": "Enum MLInterpolationMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MLInterpolationMode Fields Linear = 1 NearestNeighbor = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.MLLeakyReluOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLLeakyReluOptions.html",
    "title": "Class MLLeakyReluOptions | CSharpToJavaScript",
    "keywords": "Class MLLeakyReluOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLLeakyReluOptions Inheritance object MLLeakyReluOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alpha public Number Alpha Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.MLLinearOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLLinearOptions.html",
    "title": "Class MLLinearOptions | CSharpToJavaScript",
    "keywords": "Class MLLinearOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLLinearOptions Inheritance object MLLinearOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alpha public Number Alpha Field Value Number Beta public Number Beta Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.MLLstmCellOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLLstmCellOptions.html",
    "title": "Class MLLstmCellOptions | CSharpToJavaScript",
    "keywords": "Class MLLstmCellOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLLstmCellOptions Inheritance object MLLstmCellOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Activations public List<MLActivation> Activations Field Value List<MLActivation> Bias public MLOperand Bias Field Value MLOperand Layout public MLLstmWeightLayout Layout Field Value MLLstmWeightLayout PeepholeWeight public MLOperand PeepholeWeight Field Value MLOperand RecurrentBias public MLOperand RecurrentBias Field Value MLOperand"
  },
  "api/CSharpToJavaScript.APIs.JS.MLLstmOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLLstmOptions.html",
    "title": "Class MLLstmOptions | CSharpToJavaScript",
    "keywords": "Class MLLstmOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLLstmOptions Inheritance object MLLstmOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Activations public List<MLActivation> Activations Field Value List<MLActivation> Bias public MLOperand Bias Field Value MLOperand Direction public MLRecurrentNetworkDirection Direction Field Value MLRecurrentNetworkDirection InitialCellState public MLOperand InitialCellState Field Value MLOperand InitialHiddenState public MLOperand InitialHiddenState Field Value MLOperand Layout public MLLstmWeightLayout Layout Field Value MLLstmWeightLayout PeepholeWeight public MLOperand PeepholeWeight Field Value MLOperand RecurrentBias public MLOperand RecurrentBias Field Value MLOperand ReturnSequence public bool ReturnSequence Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.MLLstmWeightLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLLstmWeightLayout.html",
    "title": "Enum MLLstmWeightLayout | CSharpToJavaScript",
    "keywords": "Enum MLLstmWeightLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MLLstmWeightLayout Fields Ifgo = 1 Iofg = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.MLOperand.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLOperand.html",
    "title": "Class MLOperand | CSharpToJavaScript",
    "keywords": "Class MLOperand Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLOperand Inheritance object MLOperand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.MLOperandDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLOperandDescriptor.html",
    "title": "Class MLOperandDescriptor | CSharpToJavaScript",
    "keywords": "Class MLOperandDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLOperandDescriptor Inheritance object MLOperandDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Dimensions public List<ulong> Dimensions Field Value List<ulong> Type public required MLOperandType Type Field Value MLOperandType"
  },
  "api/CSharpToJavaScript.APIs.JS.MLOperandType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLOperandType.html",
    "title": "Enum MLOperandType | CSharpToJavaScript",
    "keywords": "Enum MLOperandType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MLOperandType Fields Float16 = 1 Float32 = 0 Int32 = 2 Int8 = 4 Uint32 = 3 Uint8 = 5"
  },
  "api/CSharpToJavaScript.APIs.JS.MLPadOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLPadOptions.html",
    "title": "Class MLPadOptions | CSharpToJavaScript",
    "keywords": "Class MLPadOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLPadOptions Inheritance object MLPadOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Mode public MLPaddingMode Mode Field Value MLPaddingMode Value public Number Value Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.MLPaddingMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLPaddingMode.html",
    "title": "Enum MLPaddingMode | CSharpToJavaScript",
    "keywords": "Enum MLPaddingMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MLPaddingMode Fields Constant = 0 Edge = 1 Reflection = 2 Symmetric = 3"
  },
  "api/CSharpToJavaScript.APIs.JS.MLPool2dOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLPool2dOptions.html",
    "title": "Class MLPool2dOptions | CSharpToJavaScript",
    "keywords": "Class MLPool2dOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLPool2dOptions Inheritance object MLPool2dOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AutoPad public MLAutoPad AutoPad Field Value MLAutoPad Dilations public List<ulong> Dilations Field Value List<ulong> Layout public MLInputOperandLayout Layout Field Value MLInputOperandLayout OutputSizes public List<ulong> OutputSizes Field Value List<ulong> Padding public List<ulong> Padding Field Value List<ulong> RoundingType public MLRoundingType RoundingType Field Value MLRoundingType Strides public List<ulong> Strides Field Value List<ulong> WindowDimensions public List<ulong> WindowDimensions Field Value List<ulong>"
  },
  "api/CSharpToJavaScript.APIs.JS.MLPowerPreference.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLPowerPreference.html",
    "title": "Enum MLPowerPreference | CSharpToJavaScript",
    "keywords": "Enum MLPowerPreference Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MLPowerPreference Fields Default = 0 HighPerformance = 1 LowPower = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.MLRecurrentNetworkDirection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLRecurrentNetworkDirection.html",
    "title": "Enum MLRecurrentNetworkDirection | CSharpToJavaScript",
    "keywords": "Enum MLRecurrentNetworkDirection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MLRecurrentNetworkDirection Fields Backward = 1 Both = 2 Forward = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.MLReduceOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLReduceOptions.html",
    "title": "Class MLReduceOptions | CSharpToJavaScript",
    "keywords": "Class MLReduceOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLReduceOptions Inheritance object MLReduceOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Axes public List<ulong> Axes Field Value List<ulong> KeepDimensions public bool KeepDimensions Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.MLResample2dOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLResample2dOptions.html",
    "title": "Class MLResample2dOptions | CSharpToJavaScript",
    "keywords": "Class MLResample2dOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLResample2dOptions Inheritance object MLResample2dOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Axes public List<ulong> Axes Field Value List<ulong> Mode public MLInterpolationMode Mode Field Value MLInterpolationMode Scales public List<Number> Scales Field Value List<Number> Sizes public List<ulong> Sizes Field Value List<ulong>"
  },
  "api/CSharpToJavaScript.APIs.JS.MLRoundingType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLRoundingType.html",
    "title": "Enum MLRoundingType | CSharpToJavaScript",
    "keywords": "Enum MLRoundingType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MLRoundingType Fields Ceil = 1 Floor = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.MLSoftplusOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLSoftplusOptions.html",
    "title": "Class MLSoftplusOptions | CSharpToJavaScript",
    "keywords": "Class MLSoftplusOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLSoftplusOptions Inheritance object MLSoftplusOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Steepness public Number Steepness Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.MLSplitOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLSplitOptions.html",
    "title": "Class MLSplitOptions | CSharpToJavaScript",
    "keywords": "Class MLSplitOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLSplitOptions Inheritance object MLSplitOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Axis public ulong Axis Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.MLSqueezeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLSqueezeOptions.html",
    "title": "Class MLSqueezeOptions | CSharpToJavaScript",
    "keywords": "Class MLSqueezeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLSqueezeOptions Inheritance object MLSqueezeOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Axes public List<ulong> Axes Field Value List<ulong>"
  },
  "api/CSharpToJavaScript.APIs.JS.MLTransposeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MLTransposeOptions.html",
    "title": "Class MLTransposeOptions | CSharpToJavaScript",
    "keywords": "Class MLTransposeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MLTransposeOptions Inheritance object MLTransposeOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Permutation public List<ulong> Permutation Field Value List<ulong>"
  },
  "api/CSharpToJavaScript.APIs.JS.Magnetometer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Magnetometer.html",
    "title": "Class Magnetometer | CSharpToJavaScript",
    "keywords": "Class Magnetometer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Magnetometer interface of the Sensor APIs provides information about the magnetic field as detected by the device&apos;s primary magnetometer sensor. [To(\"FirstCharToLowerCase\")] public class Magnetometer : Sensor Inheritance object EventTarget Sensor Magnetometer Inherited Members Sensor.Activated Sensor.HasReading Sensor.Timestamp Sensor.Start() Sensor.Stop() Sensor.Onreading Sensor.Onactivate Sensor.Onerror EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To use this sensor, the user must grant permission to the &apos;magnetometer&apos; device sensor through the Permissions API. In addition, this feature may be blocked by a Permissions Policy set on your server. See also on MDN Constructors Magnetometer() public Magnetometer() Magnetometer(MagnetometerSensorOptions) The Magnetometer() constructor creates a new Magnetometer object which returns information about the magnetic field as detected by a device&apos;s primary magnetometer sensor. public Magnetometer(MagnetometerSensorOptions sensorOptions) Parameters sensorOptions MagnetometerSensorOptions Remarks -'sensor.Reading_event' event See also on MDN Properties X The x read-only property of the Magnetometer interface returns a number specifying the magnetic field around the device&apos;s x-axis. public Number? X { get; } Property Value Number A 'Number'. Remarks See also on MDN Y The y read-only property of the Magnetometer interface returns a number specifying the magnetic field around the device&apos;s y-axis. public Number? Y { get; } Property Value Number A 'Number'. Remarks See also on MDN Z The z read-only property of the Magnetometer interface returns a number specifying the magnetic field around the device&apos;s z-axis. public Number? Z { get; } Property Value Number A 'Number'. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MagnetometerLocalCoordinateSystem.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MagnetometerLocalCoordinateSystem.html",
    "title": "Enum MagnetometerLocalCoordinateSystem | CSharpToJavaScript",
    "keywords": "Enum MagnetometerLocalCoordinateSystem Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MagnetometerLocalCoordinateSystem Fields Device = 0 Screen = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.MagnetometerReadingValues.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MagnetometerReadingValues.html",
    "title": "Class MagnetometerReadingValues | CSharpToJavaScript",
    "keywords": "Class MagnetometerReadingValues Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MagnetometerReadingValues Inheritance object MagnetometerReadingValues Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields X public required Number? X Field Value Number Y public required Number? Y Field Value Number Z public required Number? Z Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.MagnetometerSensorOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MagnetometerSensorOptions.html",
    "title": "Class MagnetometerSensorOptions | CSharpToJavaScript",
    "keywords": "Class MagnetometerSensorOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MagnetometerSensorOptions : SensorOptions Inheritance object SensorOptions MagnetometerSensorOptions Inherited Members SensorOptions.Frequency object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ReferenceFrame public MagnetometerLocalCoordinateSystem ReferenceFrame Field Value MagnetometerLocalCoordinateSystem"
  },
  "api/CSharpToJavaScript.APIs.JS.Math.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Math.html",
    "title": "Class Math | CSharpToJavaScript",
    "keywords": "Class Math Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class Math Inheritance object Math Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields E public const float E = 2.7182817 Field Value float LN10 public const float LN10 = 2.3025851 Field Value float LN2 public const float LN2 = 0.6931472 Field Value float LOG10E public const float LOG10E = 0.4342945 Field Value float LOG2E public const float LOG2E = 1.442695 Field Value float PI public const float PI = 3.1415927 Field Value float SQRT1_2 public const float SQRT1_2 = 0.70710677 Field Value float SQRT2 public const float SQRT2 = 1.4142135 Field Value float Methods Abs(float) [To(\"FirstCharToLowerCase\")] public static float Abs(float x) Parameters x float Returns float Acos(float) [To(\"FirstCharToLowerCase\")] public static float Acos(float x) Parameters x float Returns float Acosh(float) [To(\"FirstCharToLowerCase\")] public static float Acosh(float x) Parameters x float Returns float Asin(float) [To(\"FirstCharToLowerCase\")] public static float Asin(float x) Parameters x float Returns float Asinh(float) [To(\"FirstCharToLowerCase\")] public static float Asinh(float x) Parameters x float Returns float Atan(float) [To(\"FirstCharToLowerCase\")] public static float Atan(float x) Parameters x float Returns float Atan2(float) [To(\"FirstCharToLowerCase\")] public static float Atan2(float x) Parameters x float Returns float Atanh(float) [To(\"FirstCharToLowerCase\")] public static float Atanh(float x) Parameters x float Returns float Cbrt(float) [To(\"FirstCharToLowerCase\")] public static float Cbrt(float x) Parameters x float Returns float Ceil(float) [To(\"FirstCharToLowerCase\")] public static float Ceil(float x) Parameters x float Returns float Clz32(float) [To(\"FirstCharToLowerCase\")] public static float Clz32(float x) Parameters x float Returns float Cos(float) [To(\"FirstCharToLowerCase\")] public static float Cos(float x) Parameters x float Returns float Cosh(float) [To(\"FirstCharToLowerCase\")] public static float Cosh(float x) Parameters x float Returns float Exp(float) [To(\"FirstCharToLowerCase\")] public static float Exp(float x) Parameters x float Returns float Expm1(float) [To(\"FirstCharToLowerCase\")] public static float Expm1(float x) Parameters x float Returns float Floor(float) [To(\"FirstCharToLowerCase\")] public static int Floor(float x) Parameters x float Returns int Fround(float) [To(\"FirstCharToLowerCase\")] public static float Fround(float x) Parameters x float Returns float Hypot(params float[]) [To(\"FirstCharToLowerCase\")] public static float Hypot(params float[] args) Parameters args float[] Returns float Imul(float, float) [To(\"FirstCharToLowerCase\")] public static float Imul(float x, float y) Parameters x float y float Returns float Log(float) [To(\"FirstCharToLowerCase\")] public static float Log(float x) Parameters x float Returns float Log10(float) [To(\"FirstCharToLowerCase\")] public static float Log10(float x) Parameters x float Returns float Log1p(float) [To(\"FirstCharToLowerCase\")] public static float Log1p(float x) Parameters x float Returns float Log2(float) [To(\"FirstCharToLowerCase\")] public static float Log2(float x) Parameters x float Returns float Max(params float[]) [To(\"FirstCharToLowerCase\")] public static float Max(params float[] args) Parameters args float[] Returns float Min(params float[]) [To(\"FirstCharToLowerCase\")] public static float Min(params float[] args) Parameters args float[] Returns float Pow(float, float) [To(\"FirstCharToLowerCase\")] public static float Pow(float base_, float exponent) Parameters base_ float exponent float Returns float Random() [To(\"FirstCharToLowerCase\")] public static float Random() Returns float Round(float) [To(\"FirstCharToLowerCase\")] public static float Round(float x) Parameters x float Returns float Sign(float) [To(\"FirstCharToLowerCase\")] public static float Sign(float x) Parameters x float Returns float Sin(float) [To(\"FirstCharToLowerCase\")] public static float Sin(float x) Parameters x float Returns float Sinh(float) [To(\"FirstCharToLowerCase\")] public static float Sinh(float x) Parameters x float Returns float Sqrt(float) [To(\"FirstCharToLowerCase\")] public static float Sqrt(float x) Parameters x float Returns float Tan(float) [To(\"FirstCharToLowerCase\")] public static float Tan(float x) Parameters x float Returns float Tanh(float) [To(\"FirstCharToLowerCase\")] public static float Tanh(float x) Parameters x float Returns float Trunc(float) [To(\"FirstCharToLowerCase\")] public static int Trunc(float x) Parameters x float Returns int"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaCapabilities.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaCapabilities.html",
    "title": "Class MediaCapabilities | CSharpToJavaScript",
    "keywords": "Class MediaCapabilities Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaCapabilities interface of the Media Capabilities API provides information about the decoding abilities of the device, system and browser. The API can be used to query the browser about the decoding abilities of the device based on codecs, profile, resolution, and bitrates. The information can be used to serve optimal media streams to the user and determine if playback should be smooth and power efficient. [To(\"FirstCharToLowerCase\")] public class MediaCapabilities Inheritance object MediaCapabilities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The information is accessed through the mediaCapabilities property of the Navigator interface. -HTMLMediaElement&apos;s method canPlayType() -MediaSource&apos;s method isTypeSupported() -Navigator interface See also on MDN Methods DecodingInfo(MediaDecodingConfiguration) The MediaCapabilities.decodingInfo() method, part of the Media Capabilities API, returns a promise with the tested media configuration&apos;s capabilities info. This contains the three boolean properties supported, smooth, and powerefficient, which describe whether decoding the media described would be supported, smooth, and powerefficient. public Task<MediaCapabilitiesDecodingInfo> DecodingInfo(MediaDecodingConfiguration configuration) Parameters configuration MediaDecodingConfiguration Returns Task<MediaCapabilitiesDecodingInfo> A 'Promise' fulfilling with an object containing three Boolean attributes:Browsers will report a supported media configuration as smooth and powerEfficient until stats on this device have been recorded. All supported audio codecs are reported to be power efficient. Remarks -EncodingInfo(MediaEncodingConfiguration) -CanPlayType(string) for file -MediaSource.IsTypeSupported for media-source See also on MDN EncodingInfo(MediaEncodingConfiguration) The MediaCapabilities.encodingInfo() method, part of the MediaCapabilities interface of the Media Capabilities API, returns a promise with the tested media configuration&apos;s capabilities information. This contains the three boolean properties supported, smooth, and powerefficient, which describe how compatible the device is with the type of media. public Task<MediaCapabilitiesEncodingInfo> EncodingInfo(MediaEncodingConfiguration configuration) Parameters configuration MediaEncodingConfiguration Returns Task<MediaCapabilitiesEncodingInfo> A 'Promise' fulfilling with an object containing three Boolean attributes:Browsers will report a supported media configuration as smooth and powerEfficient until stats on this device have been recorded. All supported audio codecs are reported to be power efficient. Remarks -DecodingInfo(MediaDecodingConfiguration) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaCapabilitiesDecodingInfo.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaCapabilitiesDecodingInfo.html",
    "title": "Class MediaCapabilitiesDecodingInfo | CSharpToJavaScript",
    "keywords": "Class MediaCapabilitiesDecodingInfo Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaCapabilities.decodingInfo() method, part of the Media Capabilities API, returns a promise with the tested media configuration&apos;s capabilities info. This contains the three boolean properties supported, smooth, and powerefficient, which describe whether decoding the media described would be supported, smooth, and powerefficient. [To(\"FirstCharToLowerCase\")] public class MediaCapabilitiesDecodingInfo : MediaCapabilitiesInfo Inheritance object MediaCapabilitiesInfo MediaCapabilitiesDecodingInfo Inherited Members MediaCapabilitiesInfo.Supported MediaCapabilitiesInfo.Smooth MediaCapabilitiesInfo.PowerEfficient object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -EncodingInfo(MediaEncodingConfiguration) -CanPlayType(string) for file -MediaSource.IsTypeSupported for media-source See also on MDN Fields Configuration public MediaDecodingConfiguration Configuration Field Value MediaDecodingConfiguration KeySystemAccess public required Unsupported KeySystemAccess Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaCapabilitiesEncodingInfo.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaCapabilitiesEncodingInfo.html",
    "title": "Class MediaCapabilitiesEncodingInfo | CSharpToJavaScript",
    "keywords": "Class MediaCapabilitiesEncodingInfo Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaCapabilities.encodingInfo() method, part of the MediaCapabilities interface of the Media Capabilities API, returns a promise with the tested media configuration&apos;s capabilities information. This contains the three boolean properties supported, smooth, and powerefficient, which describe how compatible the device is with the type of media. [To(\"FirstCharToLowerCase\")] public class MediaCapabilitiesEncodingInfo : MediaCapabilitiesInfo Inheritance object MediaCapabilitiesInfo MediaCapabilitiesEncodingInfo Inherited Members MediaCapabilitiesInfo.Supported MediaCapabilitiesInfo.Smooth MediaCapabilitiesInfo.PowerEfficient object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -DecodingInfo(MediaDecodingConfiguration) See also on MDN Fields Configuration public MediaEncodingConfiguration Configuration Field Value MediaEncodingConfiguration"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaCapabilitiesInfo.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaCapabilitiesInfo.html",
    "title": "Class MediaCapabilitiesInfo | CSharpToJavaScript",
    "keywords": "Class MediaCapabilitiesInfo Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaCapabilitiesInfo Inheritance object MediaCapabilitiesInfo Derived MediaCapabilitiesDecodingInfo MediaCapabilitiesEncodingInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields PowerEfficient public required bool PowerEfficient Field Value bool Smooth public required bool Smooth Field Value bool Supported public required bool Supported Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaCapabilitiesKeySystemConfiguration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaCapabilitiesKeySystemConfiguration.html",
    "title": "Class MediaCapabilitiesKeySystemConfiguration | CSharpToJavaScript",
    "keywords": "Class MediaCapabilitiesKeySystemConfiguration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaCapabilitiesKeySystemConfiguration Inheritance object MediaCapabilitiesKeySystemConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Audio public KeySystemTrackConfiguration Audio Field Value KeySystemTrackConfiguration DistinctiveIdentifier public Unsupported DistinctiveIdentifier Field Value Unsupported InitDataType public string InitDataType Field Value string KeySystem public required string KeySystem Field Value string PersistentState public Unsupported PersistentState Field Value Unsupported SessionTypes public List<string> SessionTypes Field Value List<string> Video public KeySystemTrackConfiguration Video Field Value KeySystemTrackConfiguration"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaConfiguration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaConfiguration.html",
    "title": "Class MediaConfiguration | CSharpToJavaScript",
    "keywords": "Class MediaConfiguration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaConfiguration Inheritance object MediaConfiguration Derived MediaDecodingConfiguration MediaEncodingConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Audio public AudioConfiguration Audio Field Value AudioConfiguration Video public VideoConfiguration Video Field Value VideoConfiguration"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaDecodingConfiguration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaDecodingConfiguration.html",
    "title": "Class MediaDecodingConfiguration | CSharpToJavaScript",
    "keywords": "Class MediaDecodingConfiguration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaDecodingConfiguration : MediaConfiguration Inheritance object MediaConfiguration MediaDecodingConfiguration Inherited Members MediaConfiguration.Video MediaConfiguration.Audio object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields KeySystemConfiguration public MediaCapabilitiesKeySystemConfiguration KeySystemConfiguration Field Value MediaCapabilitiesKeySystemConfiguration Type public required MediaDecodingType Type Field Value MediaDecodingType"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaDecodingType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaDecodingType.html",
    "title": "Enum MediaDecodingType | CSharpToJavaScript",
    "keywords": "Enum MediaDecodingType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MediaDecodingType Fields File = 0 MediaSource = 1 Webrtc = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaElementAudioSourceNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaElementAudioSourceNode.html",
    "title": "Class MediaElementAudioSourceNode | CSharpToJavaScript",
    "keywords": "Class MediaElementAudioSourceNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaElementAudioSourceNode interface represents an audio source consisting of an HTML {{ htmlelement(\"audio\") }} or {{ htmlelement(\"video\") }} element. It is an AudioNode that acts as an audio source. [To(\"FirstCharToLowerCase\")] public class MediaElementAudioSourceNode : AudioNode Inheritance object EventTarget AudioNode MediaElementAudioSourceNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A MediaElementAudioSourceNode has no inputs and exactly one output, and is created using the CreateMediaElementSource(HTMLMediaElement) method. The number of channels in the output equals the number of channels of the audio referenced by the HTMLMediaElement used in the creation of the node, or is 1 if the HTMLMediaElement has no audio. -Using the Web Audio API See also on MDN Constructors MediaElementAudioSourceNode() public MediaElementAudioSourceNode() MediaElementAudioSourceNode(AudioContext, MediaElementAudioSourceOptions) The MediaElementAudioSourceNode() constructor creates a new MediaElementAudioSourceNode object instance. public MediaElementAudioSourceNode(AudioContext context, MediaElementAudioSourceOptions options) Parameters context AudioContext options MediaElementAudioSourceOptions Remarks See also on MDN Properties MediaElement The MediaElementAudioSourceNode interface's read-only mediaElement property indicates the HTMLMediaElement that contains the audio track from which the node is receiving audio. public HTMLMediaElement MediaElement { get; } Property Value HTMLMediaElement An HTMLMediaElement representing the element which contains the source of audio for the node. Remarks This stream was specified when the node was first created, either using the {{domxref(&quot;MediaElementAudioSourceNode.MediaElementAudioSourceNode&quot;, &quot;MediaElementAudioSourceNode()&quot;)}} constructor or the CreateMediaElementSource(HTMLMediaElement) method. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaElementAudioSourceOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaElementAudioSourceOptions.html",
    "title": "Class MediaElementAudioSourceOptions | CSharpToJavaScript",
    "keywords": "Class MediaElementAudioSourceOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaElementAudioSourceOptions Inheritance object MediaElementAudioSourceOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MediaElement public required HTMLMediaElement MediaElement Field Value HTMLMediaElement"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaEncodingConfiguration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaEncodingConfiguration.html",
    "title": "Class MediaEncodingConfiguration | CSharpToJavaScript",
    "keywords": "Class MediaEncodingConfiguration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaEncodingConfiguration : MediaConfiguration Inheritance object MediaConfiguration MediaEncodingConfiguration Inherited Members MediaConfiguration.Video MediaConfiguration.Audio object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Type public required MediaEncodingType Type Field Value MediaEncodingType"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaEncodingType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaEncodingType.html",
    "title": "Enum MediaEncodingType | CSharpToJavaScript",
    "keywords": "Enum MediaEncodingType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MediaEncodingType Fields Record = 0 Webrtc = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaError.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaError.html",
    "title": "Class MediaError | CSharpToJavaScript",
    "keywords": "Class MediaError Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaError interface represents an error which occurred while handling media in an HTML media element based on HTMLMediaElement, such as {{HTMLElement(\"audio\")}} or {{HTMLElement(\"video\")}}. [To(\"FirstCharToLowerCase\")] public class MediaError Inheritance object MediaError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A MediaError object describes the error in general terms using a numeric code categorizing the kind of error, and a message, which provides specific diagnostics about what went wrong. -Error See also on MDN Fields MEDIA_ERR_ABORTED public const ushort MEDIA_ERR_ABORTED = 1 Field Value ushort MEDIA_ERR_DECODE public const ushort MEDIA_ERR_DECODE = 3 Field Value ushort MEDIA_ERR_NETWORK public const ushort MEDIA_ERR_NETWORK = 2 Field Value ushort MEDIA_ERR_SRC_NOT_SUPPORTED public const ushort MEDIA_ERR_SRC_NOT_SUPPORTED = 4 Field Value ushort Properties Code The read-only property MediaError.code returns a numeric value which represents the kind of error that occurred on a media element. To get a text string with specific diagnostic information, see Message. public ushort Code { get; } Property Value ushort A numeric value indicating the general type of error which occurred. The possible values are described below, in Media error code constants. Remarks -MediaError: Interface used to define the MediaError.code property See also on MDN Message The read-only property MediaError.message returns a human-readable string offering specific diagnostic details related to the error described by the MediaError object, or an empty string (&quot;&quot;) if no diagnostic information can be determined or provided. public string Message { get; } Property Value string A string providing a detailed, specific explanation of what went wrong and possibly how it might be fixed. This is not a generic description of the Code property's value, but instead goes deeper into the specifics of this particular error and its circumstances. If no specific details are available, this string is empty. Remarks -MediaError: Interface used to define the MediaError.message property -audio, video See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaImage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaImage.html",
    "title": "Class MediaImage | CSharpToJavaScript",
    "keywords": "Class MediaImage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Media Session API&apos;s MediaImage dictionary describes the images associated with a media resource's MediaMetadata. [To(\"FirstCharToLowerCase\")] public class MediaImage Inheritance object MediaImage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Its contents can be displayed by the user agent in appropriate contexts like in a player interface to show the current playing video or audio track. -Artwork See also on MDN Fields Sizes public string Sizes Field Value string Src public required string Src Field Value string Type public string Type Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaList.html",
    "title": "Class MediaList | CSharpToJavaScript",
    "keywords": "Class MediaList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaList interface represents the media queries of a stylesheet, e.g. those set using a link element's media attribute. [To(\"FirstCharToLowerCase\")] public class MediaList Inheritance object MediaList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: MediaList is a live list; updating the list using properties or methods listed below will immediately update the behavior of the document. See also on MDN Properties Length The read-only length property of the MediaList interface returns the number of media queries in the list. public ulong Length { get; } Property Value ulong A positive integer. Remarks See also on MDN MediaText The mediaText property of the MediaList interface is a stringifier that returns a string representing the MediaList as text, and also allows you to set a new MediaList. public Unsupported MediaText { get; set; } Property Value Unsupported A string representing the media queries of a stylesheet. Each one is separated by a comma, for example screen and (min-width: 480px), print.If you wish to set new media queries on the document, the string value must have the different queries separated by commas, e.g. screen, print. Note that the MediaList is a live list; updating the list via mediaText will immediately update the behavior of the document.Also note that is you try to set mediaText to null, it will be treated as an empty string, i.e. the value will be set to &quot;&quot;. Remarks See also on MDN Methods AppendMedium(Unsupported) The appendMedium() method of the MediaList interface adds a media query to the list. If the media query is already in the collection, this method does nothing. public GlobalObject.Undefined AppendMedium(Unsupported medium) Parameters medium Unsupported Returns GlobalObject.Undefined None (undefined). Remarks See also on MDN DeleteMedium(Unsupported) The deleteMedium() method of the MediaList interface removes from this MediaList the given media query. public GlobalObject.Undefined DeleteMedium(Unsupported medium) Parameters medium Unsupported Returns GlobalObject.Undefined None (undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaMetadata.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaMetadata.html",
    "title": "Class MediaMetadata | CSharpToJavaScript",
    "keywords": "Class MediaMetadata Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaMetadata interface of the Media Session API allows a web page to provide rich media metadata for display in a platform UI. [To(\"FirstCharToLowerCase\")] public class MediaMetadata Inheritance object MediaMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors MediaMetadata() public MediaMetadata() MediaMetadata(MediaMetadataInit) The MediaMetadata() constructor creates a new MediaMetadata object. public MediaMetadata(MediaMetadataInit init) Parameters init MediaMetadataInit Remarks See also on MDN Properties Album The album property of the MediaMetaData interface returns or sets the name of the album or collection containing the media to be played. public string Album { get; set; } Property Value string A String containing the name of the album. Remarks See also on MDN Artist The artist property of the MediaMetaData interface returns or sets the name of the artist, group, creator, etc., of the media to be played. public string Artist { get; set; } Property Value string A String containing the name of the artist. Remarks See also on MDN Artwork The artwork property of the MediaMetaData interface returns or sets an array of MediaImage objects representing images associated with playing media. public MediaImage[] Artwork { get; set; } Property Value MediaImage[] An {{jsxref(\"Array\")}} of MediaImage objects. Remarks -MediaImage See also on MDN Title The title property of the MediaMetaData interface returns or sets the title of the media to be played. public string Title { get; set; } Property Value string A String containing the title of the media. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaMetadataInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaMetadataInit.html",
    "title": "Class MediaMetadataInit | CSharpToJavaScript",
    "keywords": "Class MediaMetadataInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaMetadataInit Inheritance object MediaMetadataInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Album public string Album Field Value string Artist public string Artist Field Value string Artwork public List<MediaImage> Artwork Field Value List<MediaImage> Title public string Title Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaPositionState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaPositionState.html",
    "title": "Class MediaPositionState | CSharpToJavaScript",
    "keywords": "Class MediaPositionState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaPositionState Inheritance object MediaPositionState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Duration public Number Duration Field Value Number PlaybackRate public Number PlaybackRate Field Value Number Position public Number Position Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaRecorder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaRecorder.html",
    "title": "Class MediaRecorder | CSharpToJavaScript",
    "keywords": "Class MediaRecorder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaRecorder interface of the MediaStream Recording API provides functionality to easily record media. It is created using the MediaRecorder(Unsupported, MediaRecorderOptions) constructor. [To(\"FirstCharToLowerCase\")] public class MediaRecorder : EventTarget Inheritance object EventTarget MediaRecorder Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Using the MediaStream Recording API -Web Dictaphone: MediaRecorder + getUserMedia + Web Audio API visualization demo, by Chris Mills (source on GitHub.) -Recording a media element -simpl.info MediaStream Recording demo, by Sam Dutton. -MediaDevices.GetUserMedia -OpenLang: HTML video language lab web application using MediaDevices and the MediaStream Recording API for video recording (source on GitHub) See also on MDN Constructors MediaRecorder() public MediaRecorder() MediaRecorder(Unsupported, MediaRecorderOptions) The MediaRecorder() constructor creates a new MediaRecorder object that will record a specified MediaStream. public MediaRecorder(Unsupported stream, MediaRecorderOptions options) Parameters stream Unsupported options MediaRecorderOptions Remarks The object can optionally be configured to record using a specific media container (file type), and, further, can specify the exact codec and codec configuration(s) to use by specifying the codecs parameter. -Using the MediaStream Recording API -Web Dictaphone: MediaRecorder + getUserMedia + Web Audio API visualization demo, by Chris Mills (source on GitHub.) -simpl.info MediaStream Recording demo, by Sam Dutton. -MediaDevices.GetUserMedia See also on MDN Properties AudioBitrateMode public BitrateMode AudioBitrateMode { get; } Property Value BitrateMode AudioBitsPerSecond The audioBitsPerSecond read-only property of the MediaRecorder interface returns the audio encoding bit rate in use. public ulong AudioBitsPerSecond { get; } Property Value ulong A Number (unsigned long). Remarks This may differ from the bit rate specified in the constructor (if it was provided). See also on MDN MimeType The mimeType read-only property returns the MIME media type that was specified when creating the MediaRecorder object, or, if none was specified, which was chosen by the browser. This is the file format of the file that would result from writing all of the recorded data to disk. public string MimeType { get; } Property Value string The MIME media type which describes the format of the recorded media, as a string. This string may include the codecs parameter, giving details about the codecs and the codec configurations used by the media recorder.The media type strings are standardized by the Internet Assigned Numbers Authority (IANA). For their official list of defined media type strings, see the article Media Types on the IANA site. See also media types to learn more about media types and how they&apos;re used in web content and by web browsers. Remarks Keep in mind that not all codecs are supported by a given container; if you write media using a codec that is not supported by a given media container, the resulting file may not work reliably if at all when you try to play it back. See our media type and format guide for information about container and codec support across browsers. NOTE Note: The term &quot;MIME type&quot; is officially considered to be historical; these strings are now officially known as media types. MDN Web Docs content uses the terms interchangeably. -Using the MediaStream Recording API -Codecs in common media types -Web Dictaphone: MediaRecorder + getUserMedia + Web Audio API visualization demo, by Chris Mills (source on GitHub.) -simpl.info MediaStream Recording demo, by Sam Dutton. -MediaDevices.GetUserMedia See also on MDN Ondataavailable public EventHandlerNonNull Ondataavailable { get; set; } Property Value EventHandlerNonNull Onerror public EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull Onpause public EventHandlerNonNull Onpause { get; set; } Property Value EventHandlerNonNull Onresume public EventHandlerNonNull Onresume { get; set; } Property Value EventHandlerNonNull Onstart public EventHandlerNonNull Onstart { get; set; } Property Value EventHandlerNonNull Onstop public EventHandlerNonNull Onstop { get; set; } Property Value EventHandlerNonNull State The MediaRecorder.state read-only property returns the current state of the current MediaRecorder object. public RecordingState State { get; } Property Value RecordingState A string containing one of the following values: Remarks -Using the MediaStream Recording API -Web Dictaphone: MediaRecorder + getUserMedia + Web Audio API visualization demo, by Chris Mills (source on GitHub.) -simpl.info MediaStream Recording demo, by Sam Dutton. -Navigator.GetUserMedia See also on MDN Stream The MediaRecorder.stream read-only property returns the stream that was passed into the MediaRecorder() constructor when the MediaRecorder was created. public Unsupported Stream { get; } Property Value Unsupported The MediaStream passed into the MediaRecorder() constructor when the MediaRecorder was originally created. Remarks -Using the MediaStream Recording API -Web Dictaphone: MediaRecorder + getUserMedia + Web Audio API visualization demo, by Chris Mills (source on GitHub.) -simpl.info MediaStream Recording demo, by Sam Dutton. -Navigator.GetUserMedia See also on MDN VideoBitsPerSecond The videoBitsPerSecond read-only property of the MediaRecorder interface returns the video encoding bit rate in use. public ulong VideoBitsPerSecond { get; } Property Value ulong A Number (unsigned long). Remarks This may differ from the bit rate specified in the constructor, if it was provided. See also on MDN Methods IsTypeSupported(string) public static bool IsTypeSupported(string type) Parameters type string Returns bool Pause() The MediaRecorder.pause() method (part of the MediaStream Recording API) is used to pause recording of media streams. public GlobalObject.Undefined Pause() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks When a MediaRecorder object&apos;s pause()method is called, the browser queues a task that runs the below steps: -Using the MediaStream Recording API -Web Dictaphone: MediaRecorder + getUserMedia + Web Audio API visualization demo, by Chris Mills (source on GitHub.) -simpl.info MediaStream Recording demo, by Sam Dutton. -Navigator.GetUserMedia See also on MDN RequestData() The MediaRecorder.requestData() method (part of the MediaStream Recording API) is used to raise a MediaRecorder.Dataavailable_event event containing a Blob object of the captured media as it was when the method was called. This can then be grabbed and manipulated as you wish. public GlobalObject.Undefined RequestData() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks When the requestData() method is invoked, the browser queues a task that runs the following steps: -Using the MediaStream Recording API -Web Dictaphone: MediaRecorder + getUserMedia + Web Audio API visualization demo, by Chris Mills (source on GitHub.) -simpl.info MediaStream Recording demo, by Sam Dutton. -Navigator.GetUserMedia See also on MDN Resume() The MediaRecorder.resume() method (part of the MediaStream Recording API) is used to resume media recording when it has been previously paused. public GlobalObject.Undefined Resume() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks When the resume() method is invoked, the browser queues a task that runs the following steps: -Using the MediaStream Recording API -Web Dictaphone: MediaRecorder + getUserMedia + Web Audio API visualization demo, by Chris Mills (source on GitHub.) -simpl.info MediaStream Recording demo, by Sam Dutton. -Navigator.GetUserMedia See also on MDN Start(ulong) The MediaRecorder method start(), which is part of the MediaStream Recording API, begins recording media into one or more Blob objects. public GlobalObject.Undefined Start(ulong timeslice) Parameters timeslice ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks You can record the entire duration of the media into a single Blob (or until you call RequestData()), or you can specify the number of milliseconds to record at a time. Then, each time that amount of media has been recorded, an event will be delivered to let you act upon the recorded media, while a new Blob is created to record the next slice of the media. Assuming the MediaRecorder's State is inactive, start() sets the state to recording, then begins capturing media from the input stream. A Blob is created and the data is collected in it until the time slice period elapses or the source media ends. Each time a Blob is filled up to that point (the timeslice duration or the end-of-media, if no slice duration was provided), a MediaRecorder.Dataavailable_event event is sent to the MediaRecorder with the recorded data. If the source is still playing, a new Blob is created and recording continues into that, and so forth. When the source stream ends, state is set to inactive and data gathering stops. A final MediaRecorder.Dataavailable_event event is sent to the MediaRecorder, followed by a MediaRecorder/stop_event event. NOTE Note: If the browser is unable to start recording or continue recording, it will raise a DOMError event, followed by a MediaRecorder.Dataavailable_event event containing the Blob it has gathered, followed by the MediaRecorder/stop_event event. -Using the MediaStream Recording API -Web Dictaphone: MediaRecorder + getUserMedia + Web Audio API visualization demo, by Chris Mills (source on GitHub.) -simpl.info MediaStream Recording demo, by Sam Dutton. -MediaDevices.GetUserMedia See also on MDN Stop() The MediaRecorder.stop() method (part of the MediaStream Recording API) is used to stop media capture. public GlobalObject.Undefined Stop() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks When the stop() method is invoked, the UA queues a task that runs the following steps: -Using the MediaStream Recording API -Web Dictaphone: MediaRecorder + getUserMedia + Web Audio API visualization demo, by Chris Mills (source on GitHub.) -simpl.info MediaStream Recording demo, by Sam Dutton. -Navigator.GetUserMedia See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaRecorderOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaRecorderOptions.html",
    "title": "Class MediaRecorderOptions | CSharpToJavaScript",
    "keywords": "Class MediaRecorderOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaRecorderOptions Inheritance object MediaRecorderOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AudioBitrateMode public BitrateMode AudioBitrateMode Field Value BitrateMode AudioBitsPerSecond public ulong AudioBitsPerSecond Field Value ulong BitsPerSecond public ulong BitsPerSecond Field Value ulong MimeType public string MimeType Field Value string VideoBitsPerSecond public ulong VideoBitsPerSecond Field Value ulong VideoKeyFrameIntervalCount public ulong VideoKeyFrameIntervalCount Field Value ulong VideoKeyFrameIntervalDuration public Unsupported VideoKeyFrameIntervalDuration Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaSession.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaSession.html",
    "title": "Class MediaSession | CSharpToJavaScript",
    "keywords": "Class MediaSession Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaSession interface of the Media Session API allows a web page to provide custom behaviors for standard media playback interactions, and to report metadata that can be sent by the user agent to the device or operating system for presentation in standardized user interface elements. [To(\"FirstCharToLowerCase\")] public class MediaSession Inheritance object MediaSession Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks For example, a smartphone might have a standard panel in its lock screen that provides controls for media playback and information display. A browser on the device can use MediaSession to make browser playback controllable from that standard/global user interface. See also on MDN Properties Metadata The metadata property of the MediaSession interface contains a MediaMetadata object providing descriptive information about the currently playing media, or null if the metadata has not been set. This metadata is provided by the browser to the device for presentation in any standard media control user interface the device might offer. public MediaMetadata? Metadata { get; set; } Property Value MediaMetadata An instance of MediaMetadata containing information about the media currently being played. Remarks See also on MDN PlaybackState The playbackState property of the MediaSession interface indicates whether the current media session is playing or paused. public MediaSessionPlaybackState PlaybackState { get; set; } Property Value MediaSessionPlaybackState A string indicating the current playback state of the media session. The value may be one of the following: Remarks See also on MDN Methods SetActionHandler(MediaSessionAction, MediaSessionActionHandler?) The setActionHandler() method of the MediaSession interface sets a handler for a media session action. These actions let a web app receive notifications when the user engages a device&apos;s built-in physical or onscreen media controls, such as play, stop, or seek buttons. public GlobalObject.Undefined SetActionHandler(MediaSessionAction action, MediaSessionActionHandler? handler) Parameters action MediaSessionAction handler MediaSessionActionHandler? Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN SetCameraActive(bool) The MediaSession method setCameraActive() is used to indicate to the user agent whether the user&apos;s camera is considered to be active. public GlobalObject.Undefined SetCameraActive(bool active) Parameters active bool Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Call this method on the navigator object&apos;s MediaSession object. Note that the status of the camera is not tracked in the MediaSession itself, but must be tracked separately. See also on MDN SetMicrophoneActive(bool) The MediaSession method setMicrophoneActive() is used to indicate to the user agent whether the user&apos;s microphone is considered to be currently muted. public GlobalObject.Undefined SetMicrophoneActive(bool active) Parameters active bool Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Call this method on the navigator object&apos;s MediaSession object. Note that the status of the microphone is not tracked in the MediaSession itself, but must be tracked separately. See also on MDN SetPositionState(MediaPositionState) The MediaSession method setPositionState() is used to update the current document&apos;s media playback position and speed for presentation by user&apos;s device in any kind of interface that provides details about ongoing media. This can be particularly useful if your code implements a player for type of media not directly supported by the browser. public GlobalObject.Undefined SetPositionState(MediaPositionState state) Parameters state MediaPositionState Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Call this method on the navigator object&apos;s MediaSession object. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaSessionAction.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaSessionAction.html",
    "title": "Enum MediaSessionAction | CSharpToJavaScript",
    "keywords": "Enum MediaSessionAction Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MediaSessionAction Fields Enterpictureinpicture = 14 Hangup = 11 Nextslide = 13 Nexttrack = 5 Pause = 1 Play = 0 Previousslide = 12 Previoustrack = 4 Seekbackward = 2 Seekforward = 3 Seekto = 8 Skipad = 6 Stop = 7 Togglecamera = 10 Togglemicrophone = 9"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaSessionActionDetails.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaSessionActionDetails.html",
    "title": "Class MediaSessionActionDetails | CSharpToJavaScript",
    "keywords": "Class MediaSessionActionDetails Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaSessionActionDetails Inheritance object MediaSessionActionDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Action public required MediaSessionAction Action Field Value MediaSessionAction FastSeek public bool FastSeek Field Value bool SeekOffset public Number SeekOffset Field Value Number SeekTime public Number SeekTime Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaSessionActionHandler.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaSessionActionHandler.html",
    "title": "Struct MediaSessionActionHandler | CSharpToJavaScript",
    "keywords": "Struct MediaSessionActionHandler Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct MediaSessionActionHandler Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaSessionPlaybackState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaSessionPlaybackState.html",
    "title": "Enum MediaSessionPlaybackState | CSharpToJavaScript",
    "keywords": "Enum MediaSessionPlaybackState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The playbackState property of the MediaSession interface indicates whether the current media session is playing or paused. public enum MediaSessionPlaybackState Fields None = 0 Paused = 1 Playing = 2 Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaSettingsRange.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaSettingsRange.html",
    "title": "Class MediaSettingsRange | CSharpToJavaScript",
    "keywords": "Class MediaSettingsRange Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaSettingsRange Inheritance object MediaSettingsRange Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Max public Number Max Field Value Number Min public Number Min Field Value Number Step public Number Step Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaStreamAudioDestinationNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaStreamAudioDestinationNode.html",
    "title": "Class MediaStreamAudioDestinationNode | CSharpToJavaScript",
    "keywords": "Class MediaStreamAudioDestinationNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaStreamAudioDestinationNode interface represents an audio destination consisting of a WebRTC MediaStream with a single AudioMediaStreamTrack, which can be used in a similar way to a MediaStream obtained from {{domxref(&quot;MediaDevices.getUserMedia&quot;, &quot;navigator.mediaDevices.getUserMedia()&quot;)}}. [To(\"FirstCharToLowerCase\")] public class MediaStreamAudioDestinationNode : AudioNode Inheritance object EventTarget AudioNode MediaStreamAudioDestinationNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It is an AudioNode that acts as an audio destination, created using the CreateMediaStreamDestination() method. -Using the Web Audio API See also on MDN Constructors MediaStreamAudioDestinationNode() public MediaStreamAudioDestinationNode() MediaStreamAudioDestinationNode(AudioContext, AudioNodeOptions) public MediaStreamAudioDestinationNode(AudioContext context, AudioNodeOptions options) Parameters context AudioContext options AudioNodeOptions Properties Stream The stream property of the AudioContext interface represents a MediaStream containing a single audio MediaStreamTrack with the same number of channels as the node itself. public Unsupported Stream { get; } Property Value Unsupported A MediaStream containing a single audio track. The audio track is a MediaStreamTrack whose MediaStreamTrack.Kind is audio. Remarks You can use this property to get a stream out of the audio graph and feed it into another construct, such as a Media Recorder. -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaStreamAudioSourceNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaStreamAudioSourceNode.html",
    "title": "Class MediaStreamAudioSourceNode | CSharpToJavaScript",
    "keywords": "Class MediaStreamAudioSourceNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaStreamAudioSourceNode interface is a type of AudioNode which operates as an audio source whose media is received from a MediaStream obtained using the WebRTC or Media Capture and Streams APIs. [To(\"FirstCharToLowerCase\")] public class MediaStreamAudioSourceNode : AudioNode Inheritance object EventTarget AudioNode MediaStreamAudioSourceNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This media could be from a microphone (through MediaDevices.GetUserMedia) or from a remote peer on a WebRTC call (using the RTCPeerConnection's audio tracks). A MediaStreamAudioSourceNode has no inputs and exactly one output, and is created using the CreateMediaStreamSource(Unsupported) method. The MediaStreamAudioSourceNode takes the audio from the first MediaStreamTrack whose MediaStreamTrack.Kind attribute's value is audio. See Track ordering for more information about the order of tracks. The number of channels output by the node matches the number of tracks found in the selected audio track. -Using the Web Audio API -WebRTC API -Media Capture and Streams API (Media Streams) -MediaStreamTrackAudioSourceNode See also on MDN Constructors MediaStreamAudioSourceNode() public MediaStreamAudioSourceNode() MediaStreamAudioSourceNode(AudioContext, MediaStreamAudioSourceOptions) The Web Audio API&apos;s MediaStreamAudioSourceNode() constructor creates and returns a new MediaStreamAudioSourceNode object which uses the first audio track of a given MediaStream as its source. public MediaStreamAudioSourceNode(AudioContext context, MediaStreamAudioSourceOptions options) Parameters context AudioContext options MediaStreamAudioSourceOptions Remarks NOTE Note: Another way to create a MediaStreamAudioSourceNode is to call the CreateMediaStreamSource(Unsupported) method, specifying the stream from which you want to obtain audio. See also on MDN Properties MediaStream The MediaStreamAudioSourceNode interface's read-only mediaStream property indicates the MediaStream that contains the audio track from which the node is receiving audio. public Unsupported MediaStream { get; } Property Value Unsupported A MediaStream representing the stream which contains the MediaStreamTrack serving as the source of audio for the node.The user agent uses the first audio track it finds on the specified stream as the audio source for this node. However, there is no way to be certain which track that will be on multi-track streams. If the specific track matters to you, or you need to have access to the track itself, you should use a MediaStreamTrackAudioSourceNode instead. Remarks This stream was specified when the node was first created, either using the {{domxref(&quot;MediaStreamAudioSourceNode.MediaStreamAudioSourceNode&quot;, &quot;MediaStreamAudioSourceNode()&quot;)}} constructor or the CreateMediaStreamSource(Unsupported) method. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaStreamAudioSourceOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaStreamAudioSourceOptions.html",
    "title": "Class MediaStreamAudioSourceOptions | CSharpToJavaScript",
    "keywords": "Class MediaStreamAudioSourceOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaStreamAudioSourceOptions Inheritance object MediaStreamAudioSourceOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MediaStream public required Unsupported MediaStream Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaStreamTrackAudioSourceNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaStreamTrackAudioSourceNode.html",
    "title": "Class MediaStreamTrackAudioSourceNode | CSharpToJavaScript",
    "keywords": "Class MediaStreamTrackAudioSourceNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaStreamTrackAudioSourceNode interface is a type of AudioNode which represents a source of audio data taken from a specific MediaStreamTrack obtained through the WebRTC or Media Capture and Streams APIs. [To(\"FirstCharToLowerCase\")] public class MediaStreamTrackAudioSourceNode : AudioNode Inheritance object EventTarget AudioNode MediaStreamTrackAudioSourceNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The audio itself might be input from a microphone or other audio sampling device, or might be received through a RTCPeerConnection, among other possible options. A MediaStreamTrackAudioSourceNode has no inputs and exactly one output, and is created using the CreateMediaStreamTrackSource(Unsupported) method. This interface is similar to MediaStreamAudioSourceNode, except it lets you specifically state the track to use, rather than assuming the first audio track on a stream. -Using the Web Audio API -WebRTC API -Media Capture and Streams API (Media Streams) -MediaStreamAudioSourceNode See also on MDN Constructors MediaStreamTrackAudioSourceNode() public MediaStreamTrackAudioSourceNode() MediaStreamTrackAudioSourceNode(AudioContext, MediaStreamTrackAudioSourceOptions) public MediaStreamTrackAudioSourceNode(AudioContext context, MediaStreamTrackAudioSourceOptions options) Parameters context AudioContext options MediaStreamTrackAudioSourceOptions"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaStreamTrackAudioSourceOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaStreamTrackAudioSourceOptions.html",
    "title": "Class MediaStreamTrackAudioSourceOptions | CSharpToJavaScript",
    "keywords": "Class MediaStreamTrackAudioSourceOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaStreamTrackAudioSourceOptions Inheritance object MediaStreamTrackAudioSourceOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MediaStreamTrack public required Unsupported MediaStreamTrack Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaStreamTrackProcessor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaStreamTrackProcessor.html",
    "title": "Class MediaStreamTrackProcessor | CSharpToJavaScript",
    "keywords": "Class MediaStreamTrackProcessor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaStreamTrackProcessor interface of the 'Insertable Streams for MediaStreamTrack API' consumes a MediaStreamTrack object's source and generates a stream of media frames. [To(\"FirstCharToLowerCase\")] public class MediaStreamTrackProcessor Inheritance object MediaStreamTrackProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors MediaStreamTrackProcessor() public MediaStreamTrackProcessor() MediaStreamTrackProcessor(MediaStreamTrackProcessorInit) The MediaStreamTrackProcessor() constructor creates a new MediaStreamTrackProcessor object which consumes a MediaStreamTrack object's source and generates a stream of media frames. public MediaStreamTrackProcessor(MediaStreamTrackProcessorInit init) Parameters init MediaStreamTrackProcessorInit Remarks See also on MDN Properties Readable The readable property of the MediaStreamTrackProcessor interface returns a ReadableStream. public ReadableStream Readable { get; set; } Property Value ReadableStream A ReadableStream. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaStreamTrackProcessorInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaStreamTrackProcessorInit.html",
    "title": "Class MediaStreamTrackProcessorInit | CSharpToJavaScript",
    "keywords": "Class MediaStreamTrackProcessorInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaStreamTrackProcessorInit Inheritance object MediaStreamTrackProcessorInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MaxBufferSize public ushort MaxBufferSize Field Value ushort Track public required Unsupported Track Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaTrackCapabilities.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaTrackCapabilities.html",
    "title": "Class MediaTrackCapabilities | CSharpToJavaScript",
    "keywords": "Class MediaTrackCapabilities Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaTrackCapabilities Inheritance object MediaTrackCapabilities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Brightness public MediaSettingsRange Brightness Field Value MediaSettingsRange ColorTemperature public MediaSettingsRange ColorTemperature Field Value MediaSettingsRange Contrast public MediaSettingsRange Contrast Field Value MediaSettingsRange ExposureCompensation public MediaSettingsRange ExposureCompensation Field Value MediaSettingsRange ExposureMode public List<string> ExposureMode Field Value List<string> ExposureTime public MediaSettingsRange ExposureTime Field Value MediaSettingsRange FocusDistance public MediaSettingsRange FocusDistance Field Value MediaSettingsRange FocusMode public List<string> FocusMode Field Value List<string> Iso public MediaSettingsRange Iso Field Value MediaSettingsRange Pan public MediaSettingsRange Pan Field Value MediaSettingsRange Saturation public MediaSettingsRange Saturation Field Value MediaSettingsRange Sharpness public MediaSettingsRange Sharpness Field Value MediaSettingsRange Tilt public MediaSettingsRange Tilt Field Value MediaSettingsRange Torch public List<bool> Torch Field Value List<bool> WhiteBalanceMode public List<string> WhiteBalanceMode Field Value List<string> Zoom public MediaSettingsRange Zoom Field Value MediaSettingsRange"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaTrackConstraintSet.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaTrackConstraintSet.html",
    "title": "Class MediaTrackConstraintSet | CSharpToJavaScript",
    "keywords": "Class MediaTrackConstraintSet Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MediaTrackConstraintSet Inheritance object MediaTrackConstraintSet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Brightness public Unsupported Brightness Field Value Unsupported ColorTemperature public Unsupported ColorTemperature Field Value Unsupported Contrast public Unsupported Contrast Field Value Unsupported ExposureCompensation public Unsupported ExposureCompensation Field Value Unsupported ExposureMode public string ExposureMode Field Value string ExposureTime public Unsupported ExposureTime Field Value Unsupported FocusDistance public Unsupported FocusDistance Field Value Unsupported FocusMode public string FocusMode Field Value string Iso public Unsupported Iso Field Value Unsupported Pan public Union81 Pan Field Value Union81 PointsOfInterest public Union84 PointsOfInterest Field Value Union84 Saturation public Unsupported Saturation Field Value Unsupported Sharpness public Unsupported Sharpness Field Value Unsupported Tilt public Union82 Tilt Field Value Union82 Torch public Unsupported Torch Field Value Unsupported WhiteBalanceMode public string WhiteBalanceMode Field Value string Zoom public Union83 Zoom Field Value Union83"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaTrackSettings.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaTrackSettings.html",
    "title": "Class MediaTrackSettings | CSharpToJavaScript",
    "keywords": "Class MediaTrackSettings Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaTrackSettings dictionary is used to return the current values configured for each of a MediaStreamTrack's settings. These values will adhere as closely as possible to any constraints previously described using a MediaTrackConstraints object and set using MediaStreamTrack.ApplyConstraints, and will adhere to the default constraints for any properties whose constraints haven't been changed, or whose customized constraints couldn't be matched. [To(\"FirstCharToLowerCase\")] public class MediaTrackSettings Inheritance object MediaTrackSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To learn more about how constraints and settings work, see Capabilities, constraints, and settings. -MediaDevices.GetUserMedia -MediaDevices.GetDisplayMedia -MediaStreamTrack.GetConstraints -MediaStreamTrack.ApplyConstraints -MediaStreamTrack.GetSettings See also on MDN Fields Brightness public Number Brightness Field Value Number ColorTemperature public Number ColorTemperature Field Value Number Contrast public Number Contrast Field Value Number ExposureCompensation public Number ExposureCompensation Field Value Number ExposureMode public string ExposureMode Field Value string ExposureTime public Number ExposureTime Field Value Number FocusDistance public Number FocusDistance Field Value Number FocusMode public string FocusMode Field Value string Iso public Number Iso Field Value Number Pan public Number Pan Field Value Number PointsOfInterest public List<Point2D> PointsOfInterest Field Value List<Point2D> Saturation public Number Saturation Field Value Number Sharpness public Number Sharpness Field Value Number Tilt public Number Tilt Field Value Number Torch public bool Torch Field Value bool WhiteBalanceMode public string WhiteBalanceMode Field Value string Zoom public Number Zoom Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaTrackSupportedConstraints.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaTrackSupportedConstraints.html",
    "title": "Class MediaTrackSupportedConstraints | CSharpToJavaScript",
    "keywords": "Class MediaTrackSupportedConstraints Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaTrackSupportedConstraints dictionary establishes the list of constrainable properties recognized by the {{Glossary(\"user agent\")}} or browser in its implementation of the MediaStreamTrack object. An object conforming to MediaTrackSupportedConstraints is returned by MediaDevices.GetSupportedConstraints. [To(\"FirstCharToLowerCase\")] public class MediaTrackSupportedConstraints Inheritance object MediaTrackSupportedConstraints Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Because of the way interface definitions in WebIDL work, if a constraint is requested but not supported, no error will occur. Instead, the specified constraints will be applied, with any unrecognized constraints stripped from the request. That can lead to confusing and hard to debug errors, so be sure to use getSupportedConstraints() to retrieve this information before attempting to establish constraints if you need to know the difference between silently ignoring a constraint and a constraint being accepted. An actual constraint set is described using an object based on the MediaTrackConstraints dictionary. To learn more about how constraints work, see Capabilities, constraints, and settings. -Media Capture and Streams API -Capabilities, constraints, and settings -Screen Capture API -Using the Screen Capture API -MediaTrackConstraints -MediaDevices.GetUserMedia -MediaStreamTrack.GetConstraints -MediaStreamTrack.ApplyConstraints -MediaStreamTrack.GetSettings See also on MDN Fields Brightness public bool Brightness Field Value bool ColorTemperature public bool ColorTemperature Field Value bool Contrast public bool Contrast Field Value bool ExposureCompensation public bool ExposureCompensation Field Value bool ExposureMode public bool ExposureMode Field Value bool ExposureTime public bool ExposureTime Field Value bool FocusDistance public bool FocusDistance Field Value bool FocusMode public bool FocusMode Field Value bool Iso public bool Iso Field Value bool Pan public bool Pan Field Value bool PointsOfInterest public bool PointsOfInterest Field Value bool Saturation public bool Saturation Field Value bool Sharpness public bool Sharpness Field Value bool Tilt public bool Tilt Field Value bool Torch public bool Torch Field Value bool WhiteBalanceMode public bool WhiteBalanceMode Field Value bool Zoom public bool Zoom Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.Memory.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Memory.html",
    "title": "Class Memory | CSharpToJavaScript",
    "keywords": "Class Memory Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class Memory Inheritance object Memory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Memory() public Memory() Memory(MemoryDescriptor) public Memory(MemoryDescriptor descriptor) Parameters descriptor MemoryDescriptor Properties Buffer public byte[] Buffer { get; } Property Value byte[] Methods Grow(ulong) public ulong Grow(ulong delta) Parameters delta ulong Returns ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.MemoryDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MemoryDescriptor.html",
    "title": "Class MemoryDescriptor | CSharpToJavaScript",
    "keywords": "Class MemoryDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MemoryDescriptor Inheritance object MemoryDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Initial public required ulong Initial Field Value ulong Maximum public ulong Maximum Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.MessageChannel.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MessageChannel.html",
    "title": "Class MessageChannel | CSharpToJavaScript",
    "keywords": "Class MessageChannel Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MessageChannel interface of the Channel Messaging API allows us to create a new message channel and send data through it via its two MessagePort properties. [To(\"FirstCharToLowerCase\")] public class MessageChannel Inheritance object MessageChannel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -Using channel messaging See also on MDN Constructors MessageChannel() The MessageChannel() constructor of the MessageChannel interface returns a new MessageChannel object with two new MessagePort objects. public MessageChannel() Remarks AvailableInWorkers -Using channel messaging See also on MDN Properties Port1 The port1 read-only property of the MessageChannel interface returns the first port of the message channel — the port attached to the context that originated the channel. public MessagePort Port1 { get; } Property Value MessagePort A MessagePort object, the first port of the channel, that is the port attached to the context that originated the channel. Remarks AvailableInWorkers -Using channel messaging See also on MDN Port2 The port2 read-only property of the MessageChannel interface returns the second port of the message channel — the port attached to the context at the other end of the channel, which the message is initially sent to. public MessagePort Port2 { get; } Property Value MessagePort A MessagePort object representing the second port of the channel, the port attached to the context at the other end of the channel. Remarks AvailableInWorkers -Using channel messaging See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MessageEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MessageEvent.html",
    "title": "Class MessageEvent | CSharpToJavaScript",
    "keywords": "Class MessageEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MessageEvent interface represents a message received by a target object. [To(\"FirstCharToLowerCase\")] public class MessageEvent : Event Inheritance object Event MessageEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This is used to represent messages in: The action triggered by this event is defined in a function set as the event handler for the relevant message event (e.g. using an onmessage handler as listed above). AvailableInWorkers -ExtendableMessageEvent — similar to this interface but used in interfaces that needs to give more flexibility to authors. See also on MDN Constructors MessageEvent() public MessageEvent() MessageEvent(string, MessageEventInit) The MessageEvent() constructor creates a new MessageEvent object. public MessageEvent(string type, MessageEventInit eventInitDict) Parameters type string eventInitDict MessageEventInit Remarks -ExtendableMessageEvent — similar to this interface but used in interfaces that needs to give more flexibility to authors. See also on MDN Properties Data The data read-only property of the MessageEvent interface represents the data sent by the message emitter. public dynamic Data { get; } Property Value dynamic The data sent by the message emitter; this can be any data type.If the data is sent by a WebSocket connector, the type of this property depends on the type of the WebSocket message and the value of BinaryType. Remarks -ExtendableMessageEvent — similar to this interface but used in interfaces that needs to give more flexibility to authors. See also on MDN LastEventId The lastEventId read-only property of the MessageEvent interface is a string representing a unique ID for the event. public string LastEventId { get; } Property Value string A string representing the ID. Remarks -ExtendableMessageEvent — similar to this interface but used in interfaces that needs to give more flexibility to authors. See also on MDN Origin The origin read-only property of the MessageEvent interface is a string representing the origin of the message emitter. public string Origin { get; } Property Value string A string representing the origin. Remarks -ExtendableMessageEvent — similar to this interface but used in interfaces that needs to give more flexibility to authors. See also on MDN Ports The ports read-only property of the MessageEvent interface is an array of MessagePort objects representing the ports associated with the channel the message is being sent through (where appropriate, e.g. in channel messaging or when sending a message to a shared worker). public MessagePort[] Ports { get; } Property Value MessagePort[] An array of MessagePort objects. Remarks -ExtendableMessageEvent — similar to this interface but used in interfaces that needs to give more flexibility to authors. See also on MDN Source The source read-only property of the MessageEvent interface is a MessageEventSource (which can be a {{glossary(\"WindowProxy\")}}, MessagePort, or ServiceWorker object) representing the message emitter. public Union30? Source { get; } Property Value Union30? a MessageEventSource (which can be a WindowProxy, MessagePort, or ServiceWorker object) representing the message emitter. Remarks -ExtendableMessageEvent — similar to this interface but used in interfaces that needs to give more flexibility to authors. See also on MDN Methods InitMessageEvent(string, bool, bool, dynamic, string, string, Union30?, List<MessagePort>) public GlobalObject.Undefined InitMessageEvent(string type, bool bubbles, bool cancelable, dynamic data, string origin, string lastEventId, Union30? source, List<MessagePort> ports) Parameters type string bubbles bool cancelable bool data dynamic origin string lastEventId string source Union30? ports List<MessagePort> Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.MessageEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MessageEventInit.html",
    "title": "Class MessageEventInit | CSharpToJavaScript",
    "keywords": "Class MessageEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MessageEventInit : EventInit Inheritance object EventInit MessageEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Data public dynamic Data Field Value dynamic LastEventId public string LastEventId Field Value string Origin public string Origin Field Value string Ports public List<MessagePort> Ports Field Value List<MessagePort> Source public Union30? Source Field Value Union30?"
  },
  "api/CSharpToJavaScript.APIs.JS.MessagePort.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MessagePort.html",
    "title": "Class MessagePort | CSharpToJavaScript",
    "keywords": "Class MessagePort Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MessagePort interface of the Channel Messaging API represents one of the two ports of a MessageChannel, allowing messages to be sent from one port and listening out for them arriving at the other. [To(\"FirstCharToLowerCase\")] public class MessagePort : EventTarget Inheritance object EventTarget MessagePort Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks MessagePort is a transferable object. AvailableInWorkers -Using channel messaging See also on MDN Properties Onmessage public EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onmessageerror public EventHandlerNonNull Onmessageerror { get; set; } Property Value EventHandlerNonNull Methods Close() The close() method of the MessagePort interface disconnects the port, so it is no longer active. This stops the flow of messages to that port. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -Using channel messaging See also on MDN PostMessage(dynamic, StructuredSerializeOptions) The postMessage() method of the MessagePort interface sends a message from the port, and optionally, transfers ownership of objects to other browsing contexts. public GlobalObject.Undefined PostMessage(dynamic message, StructuredSerializeOptions options) Parameters message dynamic options StructuredSerializeOptions Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -Using channel messaging See also on MDN PostMessage(dynamic, List<object>) The postMessage() method of the MessagePort interface sends a message from the port, and optionally, transfers ownership of objects to other browsing contexts. public GlobalObject.Undefined PostMessage(dynamic message, List<object> transfer) Parameters message dynamic transfer List<object> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -Using channel messaging See also on MDN Start() The start() method of the MessagePort interface starts the sending of messages queued on the port. This method is only needed when using AddEventListener(string, Action?, Union41); it is implied when using MessagePort.Message_event. public GlobalObject.Undefined Start() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -Using channel messaging See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MeteringMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MeteringMode.html",
    "title": "Enum MeteringMode | CSharpToJavaScript",
    "keywords": "Enum MeteringMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum MeteringMode Fields Continuous = 3 Manual = 1 None = 0 SingleShot = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.MimeType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MimeType.html",
    "title": "Class MimeType | CSharpToJavaScript",
    "keywords": "Class MimeType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The MimeType interface provides contains information about a MIME type associated with a particular plugin. Navigator.MimeTypes returns an array of this object. [To(\"FirstCharToLowerCase\")] public class MimeType Inheritance object MimeType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Description public string Description { get; } Property Value string EnabledPlugin public Plugin EnabledPlugin { get; } Property Value Plugin Suffixes public string Suffixes { get; } Property Value string Type public string Type { get; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.MimeTypeArray.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MimeTypeArray.html",
    "title": "Class MimeTypeArray | CSharpToJavaScript",
    "keywords": "Class MimeTypeArray Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The MimeTypeArray interface returns an array of 'MimeType' instances, each of which contains information about a supported browser plugins. This object is returned by Navigator.MimeTypes. [To(\"FirstCharToLowerCase\")] public class MimeTypeArray Inheritance object MimeTypeArray Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: This interface was an attempt to create an unmodifiable list and only continues to be supported to not break code that&apos;s already using it. Modern APIs use types that wrap around ECMAScript array types instead, so you can treat them like ECMAScript arrays, and at the same time impose additional semantics on their usage (such as making their items read-only). See also on MDN Properties Length public ulong Length { get; } Property Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.Module.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Module.html",
    "title": "Class Module | CSharpToJavaScript",
    "keywords": "Class Module Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class Module Inheritance object Module Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Module() public Module() Module(Union67) public Module(Union67 bytes) Parameters bytes Union67 Methods CustomSections(Module, string) public static List<byte[]> CustomSections(Module moduleObject, string sectionName) Parameters moduleObject Module sectionName string Returns List<byte[]> Exports(Module) public static List<ModuleExportDescriptor> Exports(Module moduleObject) Parameters moduleObject Module Returns List<ModuleExportDescriptor> Imports(Module) public static List<ModuleImportDescriptor> Imports(Module moduleObject) Parameters moduleObject Module Returns List<ModuleImportDescriptor>"
  },
  "api/CSharpToJavaScript.APIs.JS.ModuleExportDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ModuleExportDescriptor.html",
    "title": "Class ModuleExportDescriptor | CSharpToJavaScript",
    "keywords": "Class ModuleExportDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ModuleExportDescriptor Inheritance object ModuleExportDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Kind public required ImportExportKind Kind Field Value ImportExportKind Name public required string Name Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.ModuleImportDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ModuleImportDescriptor.html",
    "title": "Class ModuleImportDescriptor | CSharpToJavaScript",
    "keywords": "Class ModuleImportDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ModuleImportDescriptor Inheritance object ModuleImportDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Kind public required ImportExportKind Kind Field Value ImportExportKind Module public required string Module Field Value string Name public required string Name Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.MouseEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MouseEvent.html",
    "title": "Class MouseEvent | CSharpToJavaScript",
    "keywords": "Class MouseEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MouseEvent interface represents events that occur due to the user interacting with a pointing device (such as a mouse). Common events using this interface include Element/click_event, Element/dblclick_event, Element/mouseup_event, Element/mousedown_event. [To(\"FirstCharToLowerCase\")] public class MouseEvent : UIEvent Inheritance object Event UIEvent MouseEvent Derived DragEvent WheelEvent Inherited Members UIEvent.View UIEvent.Detail UIEvent.InitUIEvent(string, bool, bool, Window, long) UIEvent.Which Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks MouseEvent derives from UIEvent, which in turn derives from Event. Though the InitMouseEvent(string, bool, bool, Window?, long, long, long, long, long, bool, bool, bool, bool, Number, EventTarget?) method is kept for backward compatibility, creating of a MouseEvent object should be done using the MouseEvent(string, MouseEventInit) constructor. Several more specific events are based on MouseEvent, including WheelEvent, DragEvent, and PointerEvent. -Its direct parent, UIEvent -PointerEvent: For advanced pointer events, including multi-touch See also on MDN Constructors MouseEvent() public MouseEvent() MouseEvent(string, MouseEventInit) The MouseEvent() constructor creates a new MouseEvent object. public MouseEvent(string type, MouseEventInit eventInitDict) Parameters type string eventInitDict MouseEventInit Remarks -MouseEvent, the interface of the objects it constructs. See also on MDN Properties AltKey The MouseEvent.altKey read-only property is a boolean value that indicates whether the &lt;kbd&gt;alt&lt;/kbd&gt; key was pressed or not when a given mouse event occurs. public bool AltKey { get; } Property Value bool A boolean value, where true indicates that the key is pressed, and false indicates that the key is not pressed. Remarks Be aware that the browser can&apos;t always detect the &lt;kbd&gt;alt&lt;/kbd&gt; key on some operating systems. On some Linux variants, for example, a left mouse click combined with the &lt;kbd&gt;alt&lt;/kbd&gt; key is used to move or resize windows. NOTE Note: On Macintosh keyboards, this key is also known as the &lt;kbd&gt;option&lt;/kbd&gt; key. -MouseEvent See also on MDN Button The MouseEvent.button read-only property indicates which button was pressed on the mouse to trigger the event. public Number Button { get; } Property Value Number A number representing a given button:As noted above, buttons may be configured differently to the standard &quot;left to right&quot; layout. A mouse configured for left-handed use may have the button actions reversed. Some pointing devices only have one button and use keyboard or other input mechanisms to indicate main, secondary, auxiliary, etc. Others may have many buttons mapped to different functions and button values. Remarks This property only guarantees to indicate which buttons are pressed during events caused by pressing or releasing one or multiple buttons. As such, it is not reliable for events such as Element/mouseenter_event, Element/mouseleave_event, Element/mouseover_event, Element/mouseout_event, or Element/mousemove_event. Users may change the configuration of buttons on their pointing device so that if an event&apos;s button property is zero, it may not have been caused by the button that is physically left–most on the pointing device; however, it should behave as if the left button was clicked in the standard button layout. NOTE Note: Do not confuse this property with the Buttons property, which indicates which buttons are pressed for all mouse events types. -MouseEvent See also on MDN Buttons The MouseEvent.buttons read-only property indicates which buttons are pressed on the mouse (or other input device) when a mouse event is triggered. public ushort Buttons { get; } Property Value ushort A number representing one or more buttons. For more than one button pressed simultaneously, the values are combined (e.g., 3 is primary + secondary). Remarks Each button that can be pressed is represented by a given number (see below). If more than one button is pressed, the button values are added together to produce a new number. For example, if the secondary (2) and auxiliary (4) buttons are pressed simultaneously, the value is 6 (i.e., 2 + 4). NOTE Note: Do not confuse this property with the Button property. The Buttons property indicates the state of buttons pressed during any kind of mouse event, while the Button property only guarantees the correct value for mouse events caused by pressing or releasing one or multiple buttons. -MouseEvent See also on MDN ClientX The clientX read-only property of the MouseEvent interface provides the horizontal coordinate within the application's {{glossary(\"viewport\")}} at which the event occurred (as opposed to the coordinate within the page). public long ClientX { get; } Property Value long A double floating point value. Remarks For example, clicking on the left edge of the viewport will always result in a mouse event with a clientX value of 0, regardless of whether the page is scrolled horizontally. -MouseEvent -ClientY -ScreenX / ScreenY See also on MDN ClientY The clientY read-only property of the MouseEvent interface provides the vertical coordinate within the application's {{glossary(\"viewport\")}} at which the event occurred (as opposed to the coordinate within the page). public long ClientY { get; } Property Value long A double floating point value. Remarks For example, clicking on the top edge of the viewport will always result in a mouse event with a clientY value of 0, regardless of whether the page is scrolled vertically. -MouseEvent -ClientX -ScreenX / ScreenY See also on MDN CtrlKey The MouseEvent.ctrlKey read-only property is a boolean value that indicates whether the &lt;kbd&gt;ctrl&lt;/kbd&gt; key was pressed or not when a given mouse event occurs. public bool CtrlKey { get; } Property Value bool A boolean value, where true indicates that the key is pressed, and false indicates that the key is not pressed. Remarks On Macintosh keyboards, this key is labeled the &lt;kbd&gt;control&lt;/kbd&gt; key. Also, note that on a Mac, a click combined with the &lt;kbd&gt;control&lt;/kbd&gt; key is intercepted by the operating system and used to open a context menu, so ctrlKey is not detectable on click events. -MouseEvent See also on MDN LayerX The MouseEvent.layerX read-only property returns the horizontal coordinate of the event relative to the current layer. public long LayerX { get; } Property Value long An integer value in pixels for the x-coordinate of the mouse pointer, when the mouse event fired. Remarks This property takes scrolling of the page into account and returns a value relative to the whole of the document unless the event occurs inside a positioned element, where the returned value is relative to the top left of the positioned element. See also on MDN LayerY The MouseEvent.layerY read-only property returns the vertical coordinate of the event relative to the current layer. public long LayerY { get; } Property Value long An integer value in pixels for the y-coordinate of the mouse pointer, when the mouse event fired. Remarks This property takes scrolling of the page into account, and returns a value relative to the whole of the document, unless the event occurs inside a positioned element, where the returned value is relative to the top left of the positioned element. See also on MDN MetaKey The MouseEvent.metaKey read-only property is a boolean value that indicates whether the &lt;kbd&gt;meta&lt;/kbd&gt; key was pressed or not when a given mouse event occurs. public bool MetaKey { get; } Property Value bool A boolean value, where true indicates that the key is pressed, and false indicates that the key is not pressed. Remarks Be aware that many operating systems bind special functionality to the &lt;kbd&gt;meta&lt;/kbd&gt; key, so this property may be false even when the key is actually pressed. On Windows, for example, this key may open the Start menu. NOTE Note: On Macintosh keyboards, this key is the &lt;kbd&gt;command&lt;/kbd&gt; key (&lt;kbd&gt;⌘&lt;/kbd&gt;). On Windows keyboards, this key is the Windows key (&lt;kbd&gt;⊞&lt;/kbd&gt;). -MouseEvent See also on MDN RelatedTarget The MouseEvent.relatedTarget read-only property is the secondary target for the mouse event, if there is one. public EventTarget? RelatedTarget { get; } Property Value EventTarget An EventTarget object or null. Remarks That is: For events with no secondary target, relatedTarget returns null. RelatedTarget is a similar property for focus events. -MouseEvent -Comparison of Event Targets See also on MDN ScreenX The screenX read-only property of the MouseEvent interface provides the horizontal coordinate (offset) of the mouse pointer in global (screen) coordinates. public long ScreenX { get; } Property Value long A double floating point value.Early versions of the spec defined this as an integer referring to the number of pixels. Remarks NOTE Note: In a multiscreen environment, screens aligned horizontally will be treated as a single device, and so the range of the screenX value will increase to the combined width of the screens. -MouseEvent -ScreenY -ClientX / ClientY See also on MDN ScreenY The screenY read-only property of the MouseEvent interface provides the vertical coordinate (offset) of the mouse pointer in global (screen) coordinates. public long ScreenY { get; } Property Value long A double floating point value.Early versions of the spec defined this as an integer referring to the number of pixels. Remarks -MouseEvent -ScreenX -ClientX / ClientY See also on MDN ShiftKey The MouseEvent.shiftKey read-only property is a boolean value that indicates whether the &lt;kbd&gt;shift&lt;/kbd&gt; key was pressed or not when a given mouse event occurs. public bool ShiftKey { get; } Property Value bool A boolean value, where true indicates that the key is pressed, and false indicates that the key is not pressed. Remarks -MouseEvent See also on MDN Methods GetModifierState(string) The MouseEvent.getModifierState() method returns the current state of the specified modifier key: true if the modifier is active (i.e., the modifier key is pressed or locked), otherwise, false. public bool GetModifierState(string keyArg) Parameters keyArg string Returns bool A boolean value. Remarks See GetModifierState(string) for details. -The MouseEvent this method belongs to. -GetModifierState(string) See also on MDN InitMouseEvent(string, bool, bool, Window?, long, long, long, long, long, bool, bool, bool, bool, Number, EventTarget?) IMPORTANT Deprecated The MouseEvent.initMouseEvent() method initializes the value of a mouse event once it's been created (normally using the CreateEvent(string) method). public GlobalObject.Undefined InitMouseEvent(string typeArg, bool bubblesArg, bool cancelableArg, Window? viewArg, long detailArg, long screenXArg, long screenYArg, long clientXArg, long clientYArg, bool ctrlKeyArg, bool altKeyArg, bool shiftKeyArg, bool metaKeyArg, Number buttonArg, EventTarget? relatedTargetArg) Parameters typeArg string bubblesArg bool cancelableArg bool viewArg Window detailArg long screenXArg long screenYArg long clientXArg long clientYArg long ctrlKeyArg bool altKeyArg bool shiftKeyArg bool metaKeyArg bool buttonArg Number relatedTargetArg EventTarget Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks WARNING Warning: Do not use this method anymore as it is deprecated. Instead use specific event constructors, like MouseEvent(string, MouseEventInit). The page on Creating and triggering events gives more information about the way to use these. Events initialized in this way must have been created with the CreateEvent(string) method. This method must be called to set the event before it is dispatched, using DispatchEvent(Event). -MouseEvent(string, MouseEventInit) constructor, the modern standard way of creating a MouseEvent -InitEvent(string, bool, bool) is a simpler method serving a similar purpose. It is also obsolete and shouldn&apos;t be used any more. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MouseEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MouseEventInit.html",
    "title": "Class MouseEventInit | CSharpToJavaScript",
    "keywords": "Class MouseEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MouseEventInit : EventModifierInit Inheritance object EventInit UIEventInit EventModifierInit MouseEventInit Derived DragEventInit WheelEventInit Inherited Members EventModifierInit.CtrlKey EventModifierInit.ShiftKey EventModifierInit.AltKey EventModifierInit.MetaKey EventModifierInit.ModifierAltGraph EventModifierInit.ModifierCapsLock EventModifierInit.ModifierFn EventModifierInit.ModifierFnLock EventModifierInit.ModifierHyper EventModifierInit.ModifierNumLock EventModifierInit.ModifierScrollLock EventModifierInit.ModifierSuper EventModifierInit.ModifierSymbol EventModifierInit.ModifierSymbolLock UIEventInit.View UIEventInit.Detail UIEventInit.Which EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Button public Number Button Field Value Number Buttons public ushort Buttons Field Value ushort ClientX public long ClientX Field Value long ClientY public long ClientY Field Value long RelatedTarget public EventTarget? RelatedTarget Field Value EventTarget ScreenX public long ScreenX Field Value long ScreenY public long ScreenY Field Value long"
  },
  "api/CSharpToJavaScript.APIs.JS.MultiCacheQueryOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MultiCacheQueryOptions.html",
    "title": "Class MultiCacheQueryOptions | CSharpToJavaScript",
    "keywords": "Class MultiCacheQueryOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MultiCacheQueryOptions : CacheQueryOptions Inheritance object CacheQueryOptions MultiCacheQueryOptions Inherited Members CacheQueryOptions.IgnoreSearch CacheQueryOptions.IgnoreMethod CacheQueryOptions.IgnoreVary object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CacheName public string CacheName Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.MutationCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MutationCallback.html",
    "title": "Struct MutationCallback | CSharpToJavaScript",
    "keywords": "Struct MutationCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct MutationCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.MutationEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MutationEvent.html",
    "title": "Class MutationEvent | CSharpToJavaScript",
    "keywords": "Class MutationEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The MutationEvent interface provides event properties that are specific to modifications to the Document Object Model (DOM) hierarchy and nodes. [To(\"FirstCharToLowerCase\")] public class MutationEvent : Event Inheritance object Event MutationEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: Using mutation events is problematic: They have been deprecated in favor of mutation observers. Consider using these instead. -MutationObserver See also on MDN Fields ADDITION public const ushort ADDITION = 2 Field Value ushort MODIFICATION public const ushort MODIFICATION = 1 Field Value ushort REMOVAL public const ushort REMOVAL = 3 Field Value ushort Properties AttrChange IMPORTANT Deprecated The attrChange read-only property of the MutationEvent interface returns a number indicating what kind of change triggered the DOMAttrModified event. The three possible values are MODIFICATION (1), ADDITION (2) or REMOVAL (3). It has no meaning for other events and is then set to 0. public ushort AttrChange { get; } Property Value ushort An integer: 0, 1 (MODIFICATION), 2 (ADDITION), or 3 (REMOVAL). Remarks See also on MDN AttrName IMPORTANT Deprecated The attrName read-only property of the MutationEvent interface returns a string with the name of the node affected by the DOMAttrModified event. It has no meaning for other events and is then set to the empty string (&quot;&quot;). public string AttrName { get; } Property Value string A string. Remarks See also on MDN NewValue IMPORTANT Deprecated The newValue read-only property of the MutationEvent interface returns a string. In DOMAttrModified events, it represents the new value of the Attr node. In DOMCharacterDataModified events, it contains the new value of the CharacterData node. In all other cases, returns the empty string (&quot;&quot;). public string NewValue { get; } Property Value string A string. Remarks See also on MDN PrevValue IMPORTANT Deprecated The prevValue read-only property of the MutationEvent interface returns a string. In DOMAttrModified events, it represents the previous value of the Attr node. In DOMCharacterDataModified events, it contains the previous value of the CharacterData node. In all other cases, returns the empty string (&quot;&quot;). public string PrevValue { get; } Property Value string A string. Remarks See also on MDN RelatedNode IMPORTANT Deprecated The relatedNode read-only property of the MutationEvent interface returns a string indicating the node related to the event, like the changed node inside the subtree for DOMSubtreeModified. public Node? RelatedNode { get; } Property Value Node A string. Remarks See also on MDN Methods InitMutationEvent(string, bool, bool, Node?, string, string, string, ushort) IMPORTANT Deprecated The initMutationEvent() method of the MutationEvent interface initializes the value of a mutation event once it's been created (normally using the CreateEvent(string) method). public GlobalObject.Undefined InitMutationEvent(string typeArg, bool bubblesArg, bool cancelableArg, Node? relatedNodeArg, string prevValueArg, string newValueArg, string attrNameArg, ushort attrChangeArg) Parameters typeArg string bubblesArg bool cancelableArg bool relatedNodeArg Node prevValueArg string newValueArg string attrNameArg string attrChangeArg ushort Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method must be called to set the event before it is dispatched, using DispatchEvent(Event). NOTE Note: In general, you won&apos;t create these events yourself; they are created by the browser. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MutationObserver.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MutationObserver.html",
    "title": "Class MutationObserver | CSharpToJavaScript",
    "keywords": "Class MutationObserver Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MutationObserver interface provides the ability to watch for changes being made to the DOM tree. It is designed as a replacement for the older Mutation Events feature, which was part of the DOM3 Events specification. [To(\"FirstCharToLowerCase\")] public class MutationObserver Inheritance object MutationObserver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -'PerformanceObserver' -'ResizeObserver' -'IntersectionObserver' -A brief overview -A more in-depth discussion -A screencast by Chromium developer Rafael Weinstein See also on MDN Constructors MutationObserver() public MutationObserver() MutationObserver(MutationCallback) The DOM MutationObserver() constructor — part of the MutationObserver interface — creates and returns a new observer which invokes a specified callback when DOM events occur. public MutationObserver(MutationCallback callback) Parameters callback MutationCallback Remarks DOM observation does not begin immediately; the Observe(Node, MutationObserverInit) method must be called first to establish which portion of the DOM to watch and what kinds of changes to watch for. See also on MDN Methods Disconnect() The MutationObserver method disconnect() tells the observer to stop watching for mutations. public GlobalObject.Undefined Disconnect() Returns GlobalObject.Undefined undefined. NOTE Note: All notifications of mutations that have already been detected, but not yet reported to the observer, are discarded. To hold on to and handle the detected but unreported mutations, use the TakeRecords() method. Remarks The observer can be reused by calling its Observe(Node, MutationObserverInit) method again. See also on MDN Observe(Node, MutationObserverInit) The MutationObserver method observe() configures the MutationObserver callback to begin receiving notifications of changes to the DOM that match the given options. public GlobalObject.Undefined Observe(Node target, MutationObserverInit options) Parameters target Node options MutationObserverInit Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Depending on the configuration, the observer may watch a single Node in the DOM tree, or that node and some or all of its descendant nodes. To stop the MutationObserver (so that none of its callbacks will be triggered any longer), call Disconnect(). See also on MDN TakeRecords() The MutationObserver method takeRecords() returns a list of all matching DOM changes that have been detected but not yet processed by the observer&apos;s callback function, leaving the mutation queue empty. public List<MutationRecord> TakeRecords() Returns List<MutationRecord> An array of MutationRecord objects, each describing one change applied to the observed portion of the document&apos;s DOM tree. NOTE Note: The queue of mutations which have occurred, but not been delivered to the observer&apos;s callback is left empty after calling takeRecords(). Remarks The most common use case for this is to immediately fetch all pending mutation records immediately prior to disconnecting the observer, so that any pending mutations can be processed when shutting down the observer. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MutationObserverInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MutationObserverInit.html",
    "title": "Class MutationObserverInit | CSharpToJavaScript",
    "keywords": "Class MutationObserverInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MutationObserverInit Inheritance object MutationObserverInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AttributeFilter public List<string> AttributeFilter Field Value List<string> AttributeOldValue public bool AttributeOldValue Field Value bool Attributes public bool Attributes Field Value bool CharacterData public bool CharacterData Field Value bool CharacterDataOldValue public bool CharacterDataOldValue Field Value bool ChildList public bool ChildList Field Value bool Subtree public bool Subtree Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.MutationRecord.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MutationRecord.html",
    "title": "Class MutationRecord | CSharpToJavaScript",
    "keywords": "Class MutationRecord Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MutationRecord is a read-only interface that represents an individual DOM mutation observed by a MutationObserver. It is the object inside the array passed to the callback of a MutationObserver. [To(\"FirstCharToLowerCase\")] public class MutationRecord Inheritance object MutationRecord Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties AddedNodes The MutationRecord read-only property addedNodes is a NodeList of nodes added to a target node by a mutation observed with a MutationObserver. public NodeList AddedNodes { get; } Property Value NodeList A NodeList containing the nodes added to the target of the mutation observed by the MutationObserver. Remarks See also on MDN AttributeName The MutationRecord read-only property attributeName contains the name of a changed attribute belonging to a node that is observed by a MutationObserver. public string? AttributeName { get; } Property Value string If the record&apos;s type is attributes, this is a string representing the name of the mutated attribute of the mutation target.If the record&apos;s type is not attributes, this is null. Remarks See also on MDN AttributeNamespace The MutationRecord read-only property attributeNamespace is the namespace of the mutated attribute in the MutationRecord observed by a MutationObserver. public string? AttributeNamespace { get; } Property Value string If the record&apos;s type is attributes, the property is a string representing the namespace of the mutated attribute of the mutation target. The value is null otherwise. Remarks See also on MDN NextSibling The MutationRecord read-only property nextSibling is the next sibling of an added or removed child node of the target of a MutationObserver. public Node? NextSibling { get; } Property Value Node If a node is added to or removed from the target of a MutationObserver, the value is the Node that is the next sibling of the added or removed node: that is, the node immediately following this one in the parent's ChildNodes list.The value is null if there are no added or removed nodes, or if the node is the last child of its parent. Remarks See also on MDN OldValue The MutationRecord read-only property oldValue contains the character data or attribute value of an observed node before it was changed. public string? OldValue { get; } Property Value string A string representing the old value of an attribute which has been changed, if:A string representing the old value of a CharacterData node that has been changed, if:Otherwise this property is null. Remarks See also on MDN PreviousSibling The MutationRecord read-only property previousSibling is the previous sibling of an added or removed child node of the target of a MutationObserver. public Node? PreviousSibling { get; } Property Value Node If a node is added to or removed from the target of a MutationObserver, the value is the Node that is the previous sibling of the added or removed node: that is, the node immediately before this one in the parent's ChildNodes list.The value is null if there are no added or removed nodes, or if the node is the first child of its parent. Remarks See also on MDN RemovedNodes The MutationRecord read-only property removedNodes is a NodeList of nodes removed from a target node by a mutation observed with a MutationObserver. public NodeList RemovedNodes { get; } Property Value NodeList A NodeList containing the nodes removed from the target of the mutation observed by the MutationObserver. Remarks See also on MDN Target The MutationRecord read-only property target is the target (i.e. the mutated/changed node) of a mutation observed with a MutationObserver. public Node Target { get; } Property Value Node The Node that the mutation affected. Remarks See also on MDN Type The MutationRecord read-only property type is the type of the MutationRecord observed by a MutationObserver. public string Type { get; } Property Value string The property is set to the type of the mutation as a string. The value can be one of the following: Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NamedNodeMap.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NamedNodeMap.html",
    "title": "Class NamedNodeMap | CSharpToJavaScript",
    "keywords": "Class NamedNodeMap Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The NamedNodeMap interface represents a collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array. [To(\"FirstCharToLowerCase\")] public class NamedNodeMap Inheritance object NamedNodeMap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A NamedNodeMap object is live and will thus be auto-updated if changes are made to its contents internally or elsewhere. NOTE Note: Although called NamedNodeMap, this interface doesn't deal with Node objects but with Attr objects, which are a specialized class of Node objects. -Attributes See also on MDN Properties Length The read-only length property of the NamedNodeMap interface is the number of objects stored in the map. public ulong Length { get; } Property Value ulong A number containing the number of objects in the map Remarks See also on MDN Methods GetNamedItemNS(string?, string) The getNamedItemNS() method of the NamedNodeMap interface returns the Attr corresponding to the given local name in the given namespace, or null if there is no corresponding attribute. public Attr? GetNamedItemNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns Attr An Attr corresponding to the namespace and local name given in parameters, or null if none has been found. Remarks See also on MDN RemoveNamedItem(string) The removeNamedItem() method of the NamedNodeMap interface removes the Attr corresponding to the given name from the map. public Attr RemoveNamedItem(string qualifiedName) Parameters qualifiedName string Returns Attr The removed Attr. Remarks See also on MDN RemoveNamedItemNS(string?, string) The removedNamedItemNS() method of the NamedNodeMap interface removes the Attr corresponding to the given namespace and local name from the map. public Attr RemoveNamedItemNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns Attr The removed Attr. Remarks See also on MDN SetNamedItem(Attr) The setNamedItem() method of the NamedNodeMap interface puts the Attr identified by its name in the map. If there is already an Attr with the same name in the map, it is replaced. public Attr? SetNamedItem(Attr attr) Parameters attr Attr Returns Attr Returns the old attribute if replaced, or null if the attribute is new. Remarks See also on MDN SetNamedItemNS(Attr) The setNamedItemNS() method of the NamedNodeMap interface puts the Attr identified by its name in the map. If there was already an Attr with the same name in the map, it is replaced. public Attr? SetNamedItemNS(Attr attr) Parameters attr Attr Returns Attr Returns the old attribute if replaced, or null if the attribute is new. Remarks NOTE Note: This method is an alias of setNamedItem() you can use them interchangeably. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigateEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigateEvent.html",
    "title": "Class NavigateEvent | CSharpToJavaScript",
    "keywords": "Class NavigateEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The NavigateEvent interface of the {{domxref(&quot;Navigation API&quot;, &quot;Navigation API&quot;, &quot;&quot;, \"nocode\")}} is the event object for the Navigation/navigate_event event, which fires when any type of navigation is initiated (this includes usage of {{domxref(&quot;History API&quot;, &quot;History API&quot;, &quot;&quot;, \"nocode\")}} features like Go(long)). NavigateEvent provides access to information about that navigation, and allows developers to intercept and control the navigation handling. [To(\"FirstCharToLowerCase\")] public class NavigateEvent : Event Inheritance object Event NavigateEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Constructors NavigateEvent() public NavigateEvent() NavigateEvent(string, NavigateEventInit) The NavigateEvent() constructor creates a new NavigateEvent object instance. public NavigateEvent(string type, NavigateEventInit eventInitDict) Parameters type string eventInitDict NavigateEventInit Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Properties CanIntercept The canIntercept read-only property of the NavigateEvent interface returns true if the navigation can be intercepted and have its URL rewritten, or false otherwise public bool CanIntercept { get; } Property Value bool A boolean value—true if the navigation can be intercepted, false if not. Remarks There are several rules around when a navigation can be intercepted. For example: See the spec for more explanation on when a Document can have its URL rewritten, including a table of examples. -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Destination The destination read-only property of the NavigateEvent interface returns a NavigationDestination object representing the destination being navigated to. public NavigationDestination Destination { get; } Property Value NavigationDestination A NavigationDestination object. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN DownloadRequest The downloadRequest read-only property of the NavigateEvent interface returns the filename of the file requested for download, in the case of a download navigation (e.g. an {{htmlelement(\"a\")}} or {{htmlelement(\"area\")}} element with a download attribute), or null otherwise. public string? DownloadRequest { get; } Property Value string A string containing the filename of the file requested for download, or null. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN FormData The formData read-only property of the NavigateEvent interface returns the FormData object representing the submitted data in the case of a POST form submission, or null otherwise. public FormData? FormData { get; } Property Value FormData A FormData object, or null. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN HashChange The hashChange read-only property of the NavigateEvent interface returns true if the navigation is a fragment navigation (i.e. to a fragment identifier in the same document), or false otherwise. public bool HashChange { get; } Property Value bool A boolean value—true if the navigation is a fragment navigation, false if not. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Info The info read-only property of the NavigateEvent interface returns the info data value passed by the initiating navigation operation (e.g. Back(NavigationOptions), or Navigate(string, NavigationNavigateOptions)), or undefined if no info data was passed. public dynamic Info { get; } Property Value dynamic The info value passed by the initiating navigation operation, or undefined if none was passed. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo -Methods that allow info to be passed — Back(NavigationOptions), Forward(NavigationOptions), Navigate(string, NavigationNavigateOptions), Reload(NavigationReloadOptions), and TraverseTo(string, NavigationOptions) See also on MDN NavigationType The navigationType read-only property of the NavigateEvent interface returns the type of the navigation — push, reload, replace, or traverse. public NavigationType NavigationType { get; } Property Value NavigationType An enumerated value representing the type of navigation.The possible values are: Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Signal The signal read-only property of the NavigateEvent interface returns an AbortSignal, which will become aborted if the navigation is cancelled (e.g. by the user pressing the browser's \"Stop\" button, or another navigation starting and thus cancelling the ongoing one). public AbortSignal Signal { get; } Property Value AbortSignal An AbortSignal object. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN UserInitiated The userInitiated read-only property of the NavigateEvent interface returns true if the navigation was initiated by the user (e.g. by clicking a link, submitting a form, or pressing the browser&apos;s &quot;Back&quot;/&quot;Forward&quot; buttons), or false otherwise. public bool UserInitiated { get; } Property Value bool A boolean value—true if the navigation is user-initiated, false if not. Remarks NOTE Note: The table found at Appendix: types of navigations shows which navigation types are user-initiated. -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Methods Intercept(NavigationInterceptOptions) The intercept() method of the NavigateEvent interface intercepts this navigation, turning it into a same-document navigation to the Url URL. public GlobalObject.Undefined Intercept(NavigationInterceptOptions options) Parameters options NavigationInterceptOptions Returns GlobalObject.Undefined None (undefined). Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Scroll() The scroll() method of the NavigateEvent interface can be called to manually trigger the browser-driven scrolling behavior that occurs in response to the navigation, if you want it to happen before the navigation handling has completed. public GlobalObject.Undefined Scroll() Returns GlobalObject.Undefined undefined. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigateEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigateEventInit.html",
    "title": "Class NavigateEventInit | CSharpToJavaScript",
    "keywords": "Class NavigateEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NavigateEventInit : EventInit Inheritance object EventInit NavigateEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CanIntercept public bool CanIntercept Field Value bool Destination public required NavigationDestination Destination Field Value NavigationDestination DownloadRequest public string? DownloadRequest Field Value string FormData public FormData? FormData Field Value FormData HashChange public bool HashChange Field Value bool Info public dynamic Info Field Value dynamic NavigationType public NavigationType NavigationType Field Value NavigationType Signal public required AbortSignal Signal Field Value AbortSignal UserInitiated public bool UserInitiated Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.Navigation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Navigation.html",
    "title": "Class Navigation | CSharpToJavaScript",
    "keywords": "Class Navigation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Navigation interface of the {{domxref(&quot;Navigation API&quot;, &quot;Navigation API&quot;, &quot;&quot;, &quot;nocode&quot;)}} allows control over all navigation actions for the current window in one central place, including initiating navigations programmatically, examining navigation history entries, and managing navigations as they happen. [To(\"FirstCharToLowerCase\")] public class Navigation : EventTarget Inheritance object EventTarget Navigation Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It is accessed via the Navigation property. The Navigation API only exposes history entries created in the current browsing context that have the same origin as the current page (e.g. not navigations inside embedded iframes, or cross-origin navigations), providing an accurate list of all previous history entries just for your app. This makes traversing the history a much less fragile proposition than with the older {{domxref(\"History API\", \"History API\", &quot;&quot;, &quot;nocode&quot;)}}. -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Properties CanGoBack The canGoBack read-only property of the Navigation interface returns true if it is possible to navigate backwards in the navigation history (i.e. the CurrentEntry is not the first one in the history entry list), and false if it is not. public bool CanGoBack { get; } Property Value bool A boolean value: true if it is possible to navigate backwards in the navigation history, false otherwise. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN CanGoForward The canGoForward read-only property of the Navigation interface returns true if it is possible to navigate forwards in the navigation history (i.e. the CurrentEntry is not the last one in the history entry list), and false if it is not. public bool CanGoForward { get; } Property Value bool A boolean value:true if it is possible to navigate forwards in the navigation history, falseotherwise. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN CurrentEntry The currentEntry read-only property of the Navigation interface returns a NavigationHistoryEntry object representing the location the user is currently navigated to right now. public NavigationHistoryEntry? CurrentEntry { get; } Property Value NavigationHistoryEntry A NavigationHistoryEntry object. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Oncurrententrychange public EventHandlerNonNull Oncurrententrychange { get; set; } Property Value EventHandlerNonNull Onnavigate public EventHandlerNonNull Onnavigate { get; set; } Property Value EventHandlerNonNull Onnavigateerror public EventHandlerNonNull Onnavigateerror { get; set; } Property Value EventHandlerNonNull Onnavigatesuccess public EventHandlerNonNull Onnavigatesuccess { get; set; } Property Value EventHandlerNonNull Transition The NavigationTransition interface of the {{domxref(&quot;Navigation API&quot;, &quot;Navigation API&quot;, &quot;&quot;, \"nocode\")}} represents an ongoing navigation, that is, a navigation that hasn't yet reached the Navigation/navigatesuccess_event or Navigation/navigateerror_event stage. public NavigationTransition? Transition { get; } Property Value NavigationTransition Remarks It is accessed via the Transition property. -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Methods Back(NavigationOptions) The back() method of the Navigation interface navigates backwards by one entry in the navigation history. public NavigationResult Back(NavigationOptions options) Parameters options NavigationOptions Returns NavigationResult An object with the following properties:Either one of these promises rejects if the navigation has failed for some reason. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Entries() The entries() method of the Navigation interface returns an array of NavigationHistoryEntry objects representing all existing history entries. public List<NavigationHistoryEntry> Entries() Returns List<NavigationHistoryEntry> An array of NavigationHistoryEntry objects. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Forward(NavigationOptions) The forward() method of the Navigation interface navigates forwards by one entry in the navigation history. public NavigationResult Forward(NavigationOptions options) Parameters options NavigationOptions Returns NavigationResult An object with the following properties:Either one of these promises rejects if the navigation has failed for some reason. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Navigate(string, NavigationNavigateOptions) The navigate() method of the Navigation interface navigates to a specific URL, updating any provided state in the history entries list. public NavigationResult Navigate(string url, NavigationNavigateOptions options) Parameters url string options NavigationNavigateOptions Returns NavigationResult An object with the following properties:Either one of these promises rejects if the navigation has failed for some reason. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Reload(NavigationReloadOptions) The reload() method of the Navigation interface reloads the current URL, updating any provided state in the history entries list. public NavigationResult Reload(NavigationReloadOptions options) Parameters options NavigationReloadOptions Returns NavigationResult An object with the following properties:Either one of these promises rejects if the navigation has failed for some reason. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN TraverseTo(string, NavigationOptions) The traverseTo() method of the Navigation interface navigates to the NavigationHistoryEntry identified by the given Key. public NavigationResult TraverseTo(string key, NavigationOptions options) Parameters key string options NavigationOptions Returns NavigationResult An object with the following properties:Either one of these promises rejects if the navigation has failed for some reason. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN UpdateCurrentEntry(NavigationUpdateCurrentEntryOptions) The updateCurrentEntry() method of the Navigation interface updates the state of the CurrentEntry; used in cases where the state change will be independent of a navigation or reload. public GlobalObject.Undefined UpdateCurrentEntry(NavigationUpdateCurrentEntryOptions options) Parameters options NavigationUpdateCurrentEntryOptions Returns GlobalObject.Undefined None (undefined). Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationCurrentEntryChangeEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationCurrentEntryChangeEvent.html",
    "title": "Class NavigationCurrentEntryChangeEvent | CSharpToJavaScript",
    "keywords": "Class NavigationCurrentEntryChangeEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The NavigationCurrentEntryChangeEvent interface of the {{domxref(&quot;Navigation API&quot;, &quot;Navigation API&quot;, &quot;&quot;, \"nocode\")}} is the event object for the Navigation/currententrychange_event event, which fires when the CurrentEntry has changed. [To(\"FirstCharToLowerCase\")] public class NavigationCurrentEntryChangeEvent : Event Inheritance object Event NavigationCurrentEntryChangeEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This event will fire for same-document navigations (e.g. Back(NavigationOptions) or TraverseTo(string, NavigationOptions)), replacements (i.e. a Navigate(string, NavigationNavigateOptions) call with history set to replace), or other calls that change the entry's state (e.g. UpdateCurrentEntry(NavigationUpdateCurrentEntryOptions), or the {{domxref(\"History API\", \"History API\", &quot;&quot;, \"nocode\")}}'s ReplaceState(dynamic, string, string?)). This event fires after the navigation is committed, meaning that the visible URL has changed and the NavigationHistoryEntry update has occurred. It is useful for migrating from usage of older API features like the Window/hashchange_event or Window/popstate_event events. -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Constructors NavigationCurrentEntryChangeEvent() public NavigationCurrentEntryChangeEvent() NavigationCurrentEntryChangeEvent(string, NavigationCurrentEntryChangeEventInit) public NavigationCurrentEntryChangeEvent(string type, NavigationCurrentEntryChangeEventInit eventInitDict) Parameters type string eventInitDict NavigationCurrentEntryChangeEventInit Properties From The from read-only property of the NavigationCurrentEntryChangeEvent interface returns the NavigationHistoryEntry that was navigated from. public NavigationHistoryEntry From { get; } Property Value NavigationHistoryEntry A NavigationHistoryEntry object. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN NavigationType The navigationType read-only property of the NavigationCurrentEntryChangeEvent interface returns the type of the navigation that resulted in the change. public NavigationType? NavigationType { get; } Property Value NavigationType? An enumerated value representing the type of navigation.The possible values are: Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationCurrentEntryChangeEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationCurrentEntryChangeEventInit.html",
    "title": "Class NavigationCurrentEntryChangeEventInit | CSharpToJavaScript",
    "keywords": "Class NavigationCurrentEntryChangeEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NavigationCurrentEntryChangeEventInit : EventInit Inheritance object EventInit NavigationCurrentEntryChangeEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields From public required NavigationHistoryEntry From Field Value NavigationHistoryEntry NavigationType public NavigationType? NavigationType Field Value NavigationType?"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationDestination.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationDestination.html",
    "title": "Class NavigationDestination | CSharpToJavaScript",
    "keywords": "Class NavigationDestination Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The NavigationDestination interface of the {{domxref(&quot;Navigation API&quot;, &quot;Navigation API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents the destination being navigated to in the current navigation. [To(\"FirstCharToLowerCase\")] public class NavigationDestination Inheritance object NavigationDestination Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It is accessed via the Destination property. -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Properties Id The id read-only property of the NavigationDestination interface returns the Id value of the destination NavigationHistoryEntry if the NavigationType is traverse, or null otherwise. public string Id { get; } Property Value string A string representing the id of the destination NavigationHistoryEntry, or null. Remarks The id is a unique, UA-generated value that always represents the history entry, useful to correlate a history entry with an external resource such as a storage cache. -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Index The index read-only property of the NavigationDestination interface returns the Index value of the destination NavigationHistoryEntry if the NavigationType is traverse, or -1 otherwise. public long Index { get; } Property Value long A number representing the index of the destination NavigationHistoryEntry, or -1. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Key The key read-only property of the NavigationDestination interface returns the Key value of the destination NavigationHistoryEntry if the NavigationType is traverse, or null otherwise. public string Key { get; } Property Value string A string representing the key of the destination NavigationHistoryEntry, or null. Remarks The key is a unique, UA-generated value that represents the history entry's slot in the history entries list, used to navigate to this place in the history via TraverseTo(string, NavigationOptions). It will be reused by other entries that replace the entry in the list (i.e. if the NavigationType is replace). -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN SameDocument The sameDocument read-only property of the NavigationDestination interface returns true if the navigation is to the same document as the current Document value, or false otherwise. public bool SameDocument { get; } Property Value bool A boolean. Remarks This is useful for checking whether the navigation will be same-document or cross-document. -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Url The url read-only property of the NavigationDestination interface returns the URL being navigated to. public string Url { get; } Property Value string A string. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Methods GetState() The getState() method of the NavigationDestination interface returns a clone of the developer-supplied state associated with the destination NavigationHistoryEntry, or navigation operation (e.g. Navigate(string, NavigationNavigateOptions)) as appropriate. public dynamic GetState() Returns dynamic A value representing the state. This can be any type.If no state is defined, it returns undefined. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo -Methods that allow state to be updated — Navigate(string, NavigationNavigateOptions), Reload(NavigationReloadOptions), and UpdateCurrentEntry(NavigationUpdateCurrentEntryOptions) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationEvent.html",
    "title": "Class NavigationEvent | CSharpToJavaScript",
    "keywords": "Class NavigationEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NavigationEvent : UIEvent Inheritance object Event UIEvent NavigationEvent Inherited Members UIEvent.View UIEvent.Detail UIEvent.InitUIEvent(string, bool, bool, Window, long) UIEvent.Which Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NavigationEvent() public NavigationEvent() NavigationEvent(string, NavigationEventInit) public NavigationEvent(string type, NavigationEventInit eventInitDict) Parameters type string eventInitDict NavigationEventInit Properties Dir public SpatialNavigationDirection Dir { get; } Property Value SpatialNavigationDirection RelatedTarget public EventTarget? RelatedTarget { get; } Property Value EventTarget"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationEventInit.html",
    "title": "Class NavigationEventInit | CSharpToJavaScript",
    "keywords": "Class NavigationEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NavigationEventInit : UIEventInit Inheritance object EventInit UIEventInit NavigationEventInit Inherited Members UIEventInit.View UIEventInit.Detail UIEventInit.Which EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Dir public SpatialNavigationDirection Dir Field Value SpatialNavigationDirection RelatedTarget public EventTarget? RelatedTarget Field Value EventTarget"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationFocusReset.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationFocusReset.html",
    "title": "Enum NavigationFocusReset | CSharpToJavaScript",
    "keywords": "Enum NavigationFocusReset Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum NavigationFocusReset Fields AfterTransition = 0 Manual = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationHistoryBehavior.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationHistoryBehavior.html",
    "title": "Enum NavigationHistoryBehavior | CSharpToJavaScript",
    "keywords": "Enum NavigationHistoryBehavior Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum NavigationHistoryBehavior Fields Auto = 0 Push = 1 Replace = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationHistoryEntry.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationHistoryEntry.html",
    "title": "Class NavigationHistoryEntry | CSharpToJavaScript",
    "keywords": "Class NavigationHistoryEntry Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The NavigationHistoryEntry interface of the {{domxref(&quot;Navigation API&quot;, &quot;Navigation API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a single navigation history entry. [To(\"FirstCharToLowerCase\")] public class NavigationHistoryEntry : EventTarget Inheritance object EventTarget NavigationHistoryEntry Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks These objects are commonly accessed via the CurrentEntry property and Entries() method. The Navigation API only exposes history entries created in the current browsing context that have the same origin as the current page (e.g. not navigations inside embedded iframes, or cross-origin navigations), providing an accurate list of all previous history entries just for your app. This makes traversing the history a much less fragile proposition than with the older {{domxref(\"History API\", \"History API\", &quot;&quot;, &quot;nocode&quot;)}}. -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Properties Id The id read-only property of the NavigationHistoryEntry interface returns the id of the history entry. This is a unique, UA-generated value that always represents a specific history entry, useful to correlate it with an external resource such as a storage cache. public string Id { get; } Property Value string A string representing the id of the NavigationHistoryEntry. Remarks This differs from the Key of a history entry. The key is a unique, UA-generated value that represents the history entry's slot in the entries list rather than the entry itself. It is used to navigate that particular slot via TraverseTo(string, NavigationOptions). The key will be reused by other entries that replace the entry in the list (that is, if the NavigationType is replace). -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Index The index read-only property of the NavigationHistoryEntry interface returns the index of the history entry in the history entries list (that is, the list returned by Entries()), or -1 if the entry does not appear in the list. public long Index { get; } Property Value long A number representing the index of the entry in the history entries list, or -1 if this item does not appear in the list. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Key The key read-only property of the NavigationHistoryEntry interface returns the key of the history entry. This is a unique, UA-generated value that represents the history entry's slot in the entries list. It is used to navigate that particular slot via TraverseTo(string, NavigationOptions). The key will be reused by other entries that replace the entry in the list (that is, if the NavigationType is replace). public string Key { get; } Property Value string A string representing the key of the NavigationHistoryEntry. Remarks This differs from the Id of a history entry. The id is a unique, UA-generated value that always represents a specific history entry rather than its slot in the entries list. This is useful to correlate it with an external resource such as a storage cache. -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Ondispose public EventHandlerNonNull Ondispose { get; set; } Property Value EventHandlerNonNull SameDocument The sameDocument read-only property of the NavigationHistoryEntry interface returns true if this history entry is for the same document as the current Document value, or false otherwise. public bool SameDocument { get; } Property Value bool A boolean. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Url The url read-only property of the NavigationHistoryEntry interface returns the absolute URL of this history entry. public string? Url { get; } Property Value string A string representing the URL. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Methods GetState() The getState() method of the NavigationHistoryEntry interface returns a clone of the developer-supplied state associated with this history entry. public dynamic GetState() Returns dynamic A value representing the state. This can be any structured-cloneable data type.If no state is defined, it returns undefined. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo -Methods that allow state to be updated — Navigate(string, NavigationNavigateOptions), Reload(NavigationReloadOptions), and UpdateCurrentEntry(NavigationUpdateCurrentEntryOptions) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationInterceptHandler.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationInterceptHandler.html",
    "title": "Struct NavigationInterceptHandler | CSharpToJavaScript",
    "keywords": "Struct NavigationInterceptHandler Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct NavigationInterceptHandler Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationInterceptOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationInterceptOptions.html",
    "title": "Class NavigationInterceptOptions | CSharpToJavaScript",
    "keywords": "Class NavigationInterceptOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NavigationInterceptOptions Inheritance object NavigationInterceptOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FocusReset public NavigationFocusReset FocusReset Field Value NavigationFocusReset Handler public NavigationInterceptHandler Handler Field Value NavigationInterceptHandler Scroll public NavigationScrollBehavior Scroll Field Value NavigationScrollBehavior"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationNavigateOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationNavigateOptions.html",
    "title": "Class NavigationNavigateOptions | CSharpToJavaScript",
    "keywords": "Class NavigationNavigateOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NavigationNavigateOptions : NavigationOptions Inheritance object NavigationOptions NavigationNavigateOptions Inherited Members NavigationOptions.Info object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields History public NavigationHistoryBehavior History Field Value NavigationHistoryBehavior State public dynamic State Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationOptions.html",
    "title": "Class NavigationOptions | CSharpToJavaScript",
    "keywords": "Class NavigationOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NavigationOptions Inheritance object NavigationOptions Derived NavigationNavigateOptions NavigationReloadOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Info public dynamic Info Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationPreloadManager.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationPreloadManager.html",
    "title": "Class NavigationPreloadManager | CSharpToJavaScript",
    "keywords": "Class NavigationPreloadManager Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The NavigationPreloadManager interface of the Service Worker API provides methods for managing the preloading of resources in parallel with service worker bootup. [To(\"FirstCharToLowerCase\")] public class NavigationPreloadManager Inheritance object NavigationPreloadManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks If supported, an object of this type is returned by NavigationPreload. The result of a preload fetch request is waited on using the promise returned by PreloadResponse. -Speed up Service Worker with Navigation Preloads (developer.chrome.com) See also on MDN Methods Disable() The disable() method of the NavigationPreloadManager interface halts the automatic preloading of service-worker-managed resources previously started using Enable() It returns a promise that resolves with undefined. public Task<GlobalObject.Undefined> Disable() Returns Task<GlobalObject.Undefined> A Promise that resolves with 'undefined'. Remarks The method may be called in the service worker&apos;s activate event handler (before the fetch event handler can be called). Enable() See also on MDN Enable() The enable() method of the NavigationPreloadManager interface is used to enable preloading of resources managed by the service worker. It returns a promise that resolves with undefined. public Task<GlobalObject.Undefined> Enable() Returns Task<GlobalObject.Undefined> A Promise that resolves with 'undefined'. Remarks The method should be called in the service worker&apos;s activate event handler, which ensures it is called before any fetch event handler can fire. Disable() See also on MDN GetState() The getState() method of the NavigationPreloadManager interface returns a {{jsxref(\"Promise\")}} that resolves to an object with properties that indicate whether preload is enabled and what value will be sent in the {{HTTPHeader(\"Service-Worker-Navigation-Preload\")}} HTTP header. public Task<NavigationPreloadState> GetState() Returns Task<NavigationPreloadState> A Promise that resolves with an object that has the following properties: Remarks See also on MDN SetHeaderValue(string) The setHeaderValue() method of the NavigationPreloadManager interface sets the value of the {{HTTPHeader(\"Service-Worker-Navigation-Preload\")}} header that will be sent with requests resulting from a Fetch operation made during service worker navigation preloading. It returns an empty Promise that resolves with undefined. public Task<GlobalObject.Undefined> SetHeaderValue(string value) Parameters value string Returns Task<GlobalObject.Undefined> A Promise that resolves with 'undefined'. Remarks The presence of the Service-Worker-Navigation-Preload header in preloading requests allows servers to configure the returned resource differently for preloading fetch requests than from normal fetch requests. The default directive is set to true: this method allows the possibility of configuring multiple different responses to preload requests. NOTE Note: If a different response may result from setting this header, the server must set Vary: Service-Worker-Navigation-Preload to ensure that the different responses are cached. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationPreloadState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationPreloadState.html",
    "title": "Class NavigationPreloadState | CSharpToJavaScript",
    "keywords": "Class NavigationPreloadState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NavigationPreloadState Inheritance object NavigationPreloadState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Enabled public bool Enabled Field Value bool HeaderValue public string HeaderValue Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationReloadOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationReloadOptions.html",
    "title": "Class NavigationReloadOptions | CSharpToJavaScript",
    "keywords": "Class NavigationReloadOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NavigationReloadOptions : NavigationOptions Inheritance object NavigationOptions NavigationReloadOptions Inherited Members NavigationOptions.Info object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields State public dynamic State Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationResult.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationResult.html",
    "title": "Class NavigationResult | CSharpToJavaScript",
    "keywords": "Class NavigationResult Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NavigationResult Inheritance object NavigationResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Committed public Task<NavigationHistoryEntry> Committed Field Value Task<NavigationHistoryEntry> Finished public Task<NavigationHistoryEntry> Finished Field Value Task<NavigationHistoryEntry>"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationScrollBehavior.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationScrollBehavior.html",
    "title": "Enum NavigationScrollBehavior | CSharpToJavaScript",
    "keywords": "Enum NavigationScrollBehavior Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum NavigationScrollBehavior Fields AfterTransition = 0 Manual = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationTransition.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationTransition.html",
    "title": "Class NavigationTransition | CSharpToJavaScript",
    "keywords": "Class NavigationTransition Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The NavigationTransition interface of the {{domxref(&quot;Navigation API&quot;, &quot;Navigation API&quot;, &quot;&quot;, \"nocode\")}} represents an ongoing navigation, that is, a navigation that hasn't yet reached the Navigation/navigatesuccess_event or Navigation/navigateerror_event stage. [To(\"FirstCharToLowerCase\")] public class NavigationTransition Inheritance object NavigationTransition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It is accessed via the Transition property. -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Properties Finished The finished read-only property of the NavigationTransition interface returns a {{jsxref(\"Promise\")}} that fulfills at the same time the Navigation/navigatesuccess_event event fires, or rejects at the same time the Navigation/navigateerror_event event fires. public Task<GlobalObject.Undefined> Finished { get; } Property Value Task<GlobalObject.Undefined> A Promise that resolves to undefined. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN From The from read-only property of the NavigationTransition interface returns the NavigationHistoryEntry that the transition is coming from. public NavigationHistoryEntry From { get; } Property Value NavigationHistoryEntry A NavigationHistoryEntry object. Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN NavigationType The navigationType read-only property of the NavigationTransition interface returns the type of the ongoing navigation. public NavigationType NavigationType { get; } Property Value NavigationType An enumerated value representing the type of ongoing navigation.The possible values are: Remarks -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationType.html",
    "title": "Enum NavigationType | CSharpToJavaScript",
    "keywords": "Enum NavigationType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum NavigationType Fields Push = 0 Reload = 2 Replace = 1 Traverse = 3"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigationUpdateCurrentEntryOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigationUpdateCurrentEntryOptions.html",
    "title": "Class NavigationUpdateCurrentEntryOptions | CSharpToJavaScript",
    "keywords": "Class NavigationUpdateCurrentEntryOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NavigationUpdateCurrentEntryOptions Inheritance object NavigationUpdateCurrentEntryOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields State public required dynamic State Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.Navigator.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Navigator.html",
    "title": "Class Navigator | CSharpToJavaScript",
    "keywords": "Class Navigator Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Navigator interface represents the state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities. [To(\"FirstCharToLowerCase\")] public class Navigator Inheritance object Navigator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A Navigator object can be retrieved using the read-only Navigator property. See also on MDN Properties Clipboard The Clipboard API adds to the Navigator interface the read-only clipboard property, which returns the Clipboard object used to read and write the clipboard's contents. public Clipboard Clipboard { get; } Property Value Clipboard The Clipboard object used to access the system clipboard. Remarks The Clipboard API can be used to implement cut, copy, and paste features within a web application. Use of the asynchronous clipboard read and write methods requires that the user grant the website or app permission to access the clipboard. This permission must be obtained from the Permissions API using the &quot;clipboard-read&quot; and/or &quot;clipboard-write&quot; permissions. See also on MDN Contacts The contacts read-only property of the Navigator interface returns a 'ContactsManager' interface which allows users to select entries from their contact list and share limited details of the selected entries with a website or application. public ContactsManager Contacts { get; } Property Value ContactsManager A 'ContactsManager' object. Two successive calls return the same object. Remarks -A Contact Picker for the Web -A Contact Picker demo on glitch See also on MDN Credentials The credentials property of the Navigator interface returns the CredentialsContainer interface, which exposes methods to request credentials. The CredentialsContainer interface also notifies the user agent when an interesting event occurs, such as a successful sign-in or sign-out. This interface can be used for feature detection. public CredentialsContainer Credentials { get; } Property Value CredentialsContainer The CredentialsContainer interface. Remarks See also on MDN MediaCapabilities The Navigator.mediaCapabilities read-only property returns a MediaCapabilities object that can expose information about the decoding and encoding capabilities for a given format and output capabilities as defined by the Media Capabilities API. public MediaCapabilities MediaCapabilities { get; } Property Value MediaCapabilities A MediaCapabilities object. Remarks -Media Capabilities API -Navigator See also on MDN MediaSession The read-only Navigator property mediaSession returns a MediaSession object that can be used to share with the browser metadata and other information about the current playback state of media being handled by a document. public MediaSession MediaSession { get; } Property Value MediaSession A MediaSession object the current document can use to share information about media it&apos;s playing and its current playback status. This information can include typical metadata such as the title, artist, and album name of the song being played as well as potentially one or more images containing things like album art, artist photos, and so forth. Remarks This information may, in turn, be shared with the device and/or operating system in order to a device&apos;s standard media control user experience to describe and control the playback of the media. In addition, the MediaSession interface provides the SetActionHandler(MediaSessionAction, MediaSessionActionHandler?) method, which lets you receive events when the user engages device controls such as either onscreen or physical play, pause, seek, and other similar controls. An internet radio app, for example, can use setActionHandler() to let the media controls on a keyboard or elsewhere on the user&apos;s device be used to control the app&apos;s media playback. See also on MDN ServiceWorker The Navigator.serviceWorker read-only property returns the ServiceWorkerContainer object for the associated document, which provides access to registration, removal, upgrade, and communication with the ServiceWorker. public ServiceWorkerContainer ServiceWorker { get; } Property Value ServiceWorkerContainer ServiceWorkerContainer. Remarks The feature may not be available in private mode. -Service Worker API -Using Service Workers See also on MDN UserActivation The read-only userActivation property of the Navigator interface returns a UserActivation object which contains information about the current window's user activation state. public UserActivation UserActivation { get; } Property Value UserActivation A UserActivation object. Remarks -UserActivation -HasBeenActive -IsActive -Features gated by user activation See also on MDN Xr The read-only xr property provided by the Navigator interface returns an XRSystem object which can be used to access the WebXR Device API. public XRSystem Xr { get; } Property Value XRSystem The XRSystem object used to interface with the WebXR Device API in the current context. This can be used to present augmented and/or virtual reality imagery to the user. Remarks -WebGL API: 2D and 3D accelerated graphics for the web -Canvas API: 2D graphics API See also on MDN Methods GetAutoplayPolicy(AudioContext) The getAutoplayPolicy() method of the Autoplay Policy Detection API provides information about whether autoplay of media elements and audio contexts is allowed, disallowed, or only allowed if the audio is muted. public AutoplayPolicy GetAutoplayPolicy(AudioContext context) Parameters context AudioContext Returns AutoplayPolicy A string indicating the autoplay policy for the specified media feature type, element, or context. This will be a string containing one of the following values:Note that the autoplay policy returned for a type parameter is the broad policy for items of the indicated type. On page load, all items of a type will have the same policy as the type. Once the user has interacted with the page/site, on some browsers individual items may have a different policy to the corresponding type. Remarks Applications can use this information to provide an appropriate user experience. For example, if the user agent policy only allows autoplay of inaudible content, the application might mute videos so that they can still autoplay. The method can be used to get either the broad autoplay policy for all items of a particular type in the document, or for specific media elements or audio contexts. -Autoplay guide for media and Web Audio APIs See also on MDN GetAutoplayPolicy(AutoplayPolicyMediaType) The getAutoplayPolicy() method of the Autoplay Policy Detection API provides information about whether autoplay of media elements and audio contexts is allowed, disallowed, or only allowed if the audio is muted. public AutoplayPolicy GetAutoplayPolicy(AutoplayPolicyMediaType type) Parameters type AutoplayPolicyMediaType Returns AutoplayPolicy A string indicating the autoplay policy for the specified media feature type, element, or context. This will be a string containing one of the following values:Note that the autoplay policy returned for a type parameter is the broad policy for items of the indicated type. On page load, all items of a type will have the same policy as the type. Once the user has interacted with the page/site, on some browsers individual items may have a different policy to the corresponding type. Remarks Applications can use this information to provide an appropriate user experience. For example, if the user agent policy only allows autoplay of inaudible content, the application might mute videos so that they can still autoplay. The method can be used to get either the broad autoplay policy for all items of a particular type in the document, or for specific media elements or audio contexts. -Autoplay guide for media and Web Audio APIs See also on MDN GetAutoplayPolicy(HTMLMediaElement) The getAutoplayPolicy() method of the Autoplay Policy Detection API provides information about whether autoplay of media elements and audio contexts is allowed, disallowed, or only allowed if the audio is muted. public AutoplayPolicy GetAutoplayPolicy(HTMLMediaElement element) Parameters element HTMLMediaElement Returns AutoplayPolicy A string indicating the autoplay policy for the specified media feature type, element, or context. This will be a string containing one of the following values:Note that the autoplay policy returned for a type parameter is the broad policy for items of the indicated type. On page load, all items of a type will have the same policy as the type. Once the user has interacted with the page/site, on some browsers individual items may have a different policy to the corresponding type. Remarks Applications can use this information to provide an appropriate user experience. For example, if the user agent policy only allows autoplay of inaudible content, the application might mute videos so that they can still autoplay. The method can be used to get either the broad autoplay policy for all items of a particular type in the document, or for specific media elements or audio contexts. -Autoplay guide for media and Web Audio APIs See also on MDN RequestMIDIAccess(MIDIOptions) The requestMIDIAccess() method of the 'Navigator' interface returns a {{jsxref('Promise')}} representing a request for access to MIDI devices on a user's system. This method is part of the Web MIDI API, which provides a means for accessing, enumerating, and manipulating MIDI devices. public Task<MIDIAccess> RequestMIDIAccess(MIDIOptions options) Parameters options MIDIOptions Returns Task<MIDIAccess> A 'Promise' that resolves with a MIDIAccess object. Remarks This method may prompt the user for access to MIDI devices available to their system, or it may use a previously established preference to grant or deny access. If permission is granted then the 'Promise' resolves and a MIDIAccess object is returned. -Web MIDI API -Introduction to Web MIDI See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorConcurrentHardware.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorConcurrentHardware.html",
    "title": "Interface NavigatorConcurrentHardware | CSharpToJavaScript",
    "keywords": "Interface NavigatorConcurrentHardware Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NavigatorConcurrentHardware Properties HardwareConcurrency ulong HardwareConcurrency { get; } Property Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorContentUtils.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorContentUtils.html",
    "title": "Interface NavigatorContentUtils | CSharpToJavaScript",
    "keywords": "Interface NavigatorContentUtils Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NavigatorContentUtils Methods RegisterProtocolHandler(string, string) GlobalObject.Undefined RegisterProtocolHandler(string scheme, string url) Parameters scheme string url string Returns GlobalObject.Undefined UnregisterProtocolHandler(string, string) GlobalObject.Undefined UnregisterProtocolHandler(string scheme, string url) Parameters scheme string url string Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorCookies.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorCookies.html",
    "title": "Interface NavigatorCookies | CSharpToJavaScript",
    "keywords": "Interface NavigatorCookies Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NavigatorCookies Properties CookieEnabled bool CookieEnabled { get; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorDeviceMemory.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorDeviceMemory.html",
    "title": "Interface NavigatorDeviceMemory | CSharpToJavaScript",
    "keywords": "Interface NavigatorDeviceMemory Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The deviceMemory read-only property of the Navigator interface returns the approximate amount of device memory in gigabytes. [To(\"FirstCharToLowerCase\")] public interface NavigatorDeviceMemory Remarks The reported value is imprecise to curtail fingerprinting. It&apos;s approximated by rounding down to the nearest power of 2, then dividing that number by 1024. It is then clamped within lower and upper bounds to protect the privacy of owners of very low- or high-memory devices. -Device Memory API -Device-Memory HTTP header See also on MDN Properties DeviceMemory Number DeviceMemory { get; } Property Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorGPU.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorGPU.html",
    "title": "Interface NavigatorGPU | CSharpToJavaScript",
    "keywords": "Interface NavigatorGPU Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NavigatorGPU Properties Gpu GPU Gpu { get; } Property Value GPU"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorID.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorID.html",
    "title": "Interface NavigatorID | CSharpToJavaScript",
    "keywords": "Interface NavigatorID Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NavigatorID Properties AppCodeName string AppCodeName { get; } Property Value string AppName string AppName { get; } Property Value string AppVersion string AppVersion { get; } Property Value string Oscpu string Oscpu { get; } Property Value string Platform string Platform { get; } Property Value string Product string Product { get; } Property Value string ProductSub string ProductSub { get; } Property Value string UserAgent string UserAgent { get; } Property Value string Vendor string Vendor { get; } Property Value string VendorSub string VendorSub { get; } Property Value string Methods TaintEnabled() bool TaintEnabled() Returns bool"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorLanguage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorLanguage.html",
    "title": "Interface NavigatorLanguage | CSharpToJavaScript",
    "keywords": "Interface NavigatorLanguage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Navigator.language read-only property returns a string representing the preferred language of the user, usually the language of the browser UI. [To(\"FirstCharToLowerCase\")] public interface NavigatorLanguage Remarks -Navigator.Languages -Navigator See also on MDN Properties Language string Language { get; } Property Value string Languages string[] Languages { get; } Property Value string[]"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorLocks.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorLocks.html",
    "title": "Interface NavigatorLocks | CSharpToJavaScript",
    "keywords": "Interface NavigatorLocks Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The locks read-only property of the Navigator interface returns a LockManager object which provides methods for requesting a new 'Lock' object and querying for an existing Lock object. [To(\"FirstCharToLowerCase\")] public interface NavigatorLocks Remarks See also on MDN Properties Locks LockManager Locks { get; } Property Value LockManager"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorML.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorML.html",
    "title": "Interface NavigatorML | CSharpToJavaScript",
    "keywords": "Interface NavigatorML Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NavigatorML Properties Ml ML Ml { get; } Property Value ML"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorOnLine.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorOnLine.html",
    "title": "Interface NavigatorOnLine | CSharpToJavaScript",
    "keywords": "Interface NavigatorOnLine Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Returns the online status of the browser. The property returns a boolean value, with true meaning online and false meaning offline. The property sends updates whenever the browser&apos;s ability to connect to the network changes. The update occurs when the user follows links or when a script requests a remote page. For example, the property should return false when users click links soon after they lose internet connection. [To(\"FirstCharToLowerCase\")] public interface NavigatorOnLine Remarks Browsers implement this property differently. In Chrome and Safari, if the browser is not able to connect to a local area network (LAN) or a router, it is offline; all other conditions return true. So while you can assume that the browser is offline when it returns a false value, you cannot assume that a true value necessarily means that the browser can access the internet. You could be getting false positives, such as in cases where the computer is running a virtualization software that has virtual ethernet adapters that are always &quot;connected.&quot; Therefore, if you really want to determine the online status of the browser, you should develop additional means for checking. In Firefox, switching the browser to offline mode sends a false value. Until Firefox 41, all other conditions returned a true value; testing actual behavior on Nightly 68 on Windows shows that it only looks for LAN connection like Chrome and Safari giving false positives. You can see changes in the network state by listening to the online and offline events. See also on MDN Properties OnLine bool OnLine { get; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorPlugins.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorPlugins.html",
    "title": "Interface NavigatorPlugins | CSharpToJavaScript",
    "keywords": "Interface NavigatorPlugins Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated Returns a PluginArray object, listing the Plugin objects describing the plugins installed in the application. Named properties of returned object are not enumerable (except in very old browser versions). [To(\"FirstCharToLowerCase\")] public interface NavigatorPlugins Remarks Recent versions of the specification hard-code the returned list. If inline viewing of PDF files is supported the property lists five standard plugins If inline PDF viewing is not supported then an empty list is returned. NOTE Note: Use Navigator.PdfViewerEnabled to determine if inline viewing of PDF files is supported. Do not infer it from this property. The &quot;five standard plugins&quot; are those that developers have most commonly used to feature detect inline PDF viewing. Returning these ensures that legacy code can more reliably determine whether inline viewing is supported. However this approach is not recommended for new code because this property may eventually be removed. Legacy browser versions also list plugins for Adobe Flash and PDF viewer extensions. See also on MDN Properties MimeTypes MimeTypeArray MimeTypes { get; } Property Value MimeTypeArray PdfViewerEnabled bool PdfViewerEnabled { get; } Property Value bool Plugins PluginArray Plugins { get; } Property Value PluginArray Methods JavaEnabled() bool JavaEnabled() Returns bool"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorStorage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorStorage.html",
    "title": "Interface NavigatorStorage | CSharpToJavaScript",
    "keywords": "Interface NavigatorStorage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Navigator.storage read-only property returns the singleton StorageManager object used to access the overall storage capabilities of the browser for the current site or app. The returned object lets you examine and configure persistence of data stores and learn approximately how much more space your browser has available for local storage use. [To(\"FirstCharToLowerCase\")] public interface NavigatorStorage Remarks -StorageManager -Navigator See also on MDN Properties Storage StorageManager Storage { get; } Property Value StorageManager"
  },
  "api/CSharpToJavaScript.APIs.JS.Node.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Node.html",
    "title": "Class Node | CSharpToJavaScript",
    "keywords": "Class Node Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll In addition, every kind of DOM node is represented by an interface based on Node. These include Attr, CharacterData (which Text, Comment, CDATASection and ProcessingInstruction are all based on), and DocumentType. [To(\"FirstCharToLowerCase\")] public class Node : EventTarget Inheritance object EventTarget Node Derived Attr CharacterData Document DocumentFragment DocumentType Element Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks In some cases, a particular feature of the base Node interface may not apply to one of its child interfaces; in that case, the inheriting node may return null or throw an exception, depending on circumstances. For example, attempting to add children to a node type that cannot have children will throw an exception. See also on MDN Fields ATTRIBUTE_NODE public const ushort ATTRIBUTE_NODE = 2 Field Value ushort CDATA_SECTION_NODE public const ushort CDATA_SECTION_NODE = 4 Field Value ushort COMMENT_NODE public const ushort COMMENT_NODE = 8 Field Value ushort DOCUMENT_FRAGMENT_NODE public const ushort DOCUMENT_FRAGMENT_NODE = 11 Field Value ushort DOCUMENT_NODE public const ushort DOCUMENT_NODE = 9 Field Value ushort DOCUMENT_POSITION_CONTAINED_BY public const ushort DOCUMENT_POSITION_CONTAINED_BY = 16 Field Value ushort DOCUMENT_POSITION_CONTAINS public const ushort DOCUMENT_POSITION_CONTAINS = 8 Field Value ushort DOCUMENT_POSITION_DISCONNECTED public const ushort DOCUMENT_POSITION_DISCONNECTED = 1 Field Value ushort DOCUMENT_POSITION_FOLLOWING public const ushort DOCUMENT_POSITION_FOLLOWING = 4 Field Value ushort DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC public const ushort DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 32 Field Value ushort DOCUMENT_POSITION_PRECEDING public const ushort DOCUMENT_POSITION_PRECEDING = 2 Field Value ushort DOCUMENT_TYPE_NODE public const ushort DOCUMENT_TYPE_NODE = 10 Field Value ushort ELEMENT_NODE public const ushort ELEMENT_NODE = 1 Field Value ushort ENTITY_NODE public const ushort ENTITY_NODE = 6 Field Value ushort ENTITY_REFERENCE_NODE public const ushort ENTITY_REFERENCE_NODE = 5 Field Value ushort NOTATION_NODE public const ushort NOTATION_NODE = 12 Field Value ushort PROCESSING_INSTRUCTION_NODE public const ushort PROCESSING_INSTRUCTION_NODE = 7 Field Value ushort TEXT_NODE public const ushort TEXT_NODE = 3 Field Value ushort Properties BaseURI The read-only baseURI property of the Node interface returns the absolute base URL of the document containing the node. public string BaseURI { get; } Property Value string A string representing the base URL of the Node. Remarks The base URL is used to resolve relative URLs when the browser needs to obtain an absolute URL, for example when processing the HTML img element's src attribute or the xlink:href or href attributes in SVG. Although this property is read-only, its value is determined by an algorithm each time the property is accessed, and may change if the conditions changed. The base URL is determined as follows: -base element. See also on MDN ChildNodes The read-only childNodes property of the Node interface returns a live NodeList of child Node of the given element where the first child node is assigned index 0. Child nodes include elements, text and comments. public NodeList ChildNodes { get; } Property Value NodeList A live NodeList containing the children of the node. NOTE Note: Several calls to childNodes return the same NodeList. Remarks NOTE Note: The NodeList being live means that its content is changed each time new children are added or removed. The items in the collection of nodes are objects, not strings. To get data from node objects, use their properties. For example, to get the name of the first childNode, you can use elementNodeReference.childNodes[0].nodeName. The Document object itself has two children: the Doctype declaration and the root element, typically referred to as documentElement. In HTML documents the latter is the html element. It is important to keep in mind that childNodes includes all child nodes, including non-element nodes like text and comment. To get a collection containing only elements, use Element.Children instead. -FirstChild -LastChild -NextSibling -PreviousSibling -Element.Children See also on MDN FirstChild The read-only firstChild property of the Node interface returns the node&apos;s first child in the tree, or null if the node has no children. public Node? FirstChild { get; } Property Value Node A Node, or null if there are none. Remarks If the node is a Document, this property returns the first node in the list of its direct children. NOTE Note: This property returns any type of node that is the first child of this one. It may be a Text or a Comment node. If you want to get the first Element that is a child of another element, consider using Element.FirstElementChild. -Element.FirstElementChild -LastChild See also on MDN IsConnected The read-only isConnected property of the Node interface returns a boolean indicating whether the node is connected (directly or indirectly) to a Document object. public bool IsConnected { get; } Property Value bool A boolean value that is true if the node is connected to its relevant context object, and false if not. Remarks -Node.prototype.isConnected polyfill See also on MDN LastChild The read-only lastChild property of the Node interface returns the last child of the node, or null if there are no child nodes. public Node? LastChild { get; } Property Value Node A Node that is the last child of the node, or null is there are no child nodes. Remarks NOTE Note: This property returns any type of node that is the last child of this one. It may be a Text or a Comment node. If you want to get the last Element that is a child of another element, consider using Element.LastElementChild. -FirstChild -Element.LastElementChild See also on MDN NextSibling The read-only nextSibling property of the Node interface returns the node immediately following the specified one in their parent's ChildNodes, or returns null if the specified node is the last child in the parent element. public Node? NextSibling { get; } Property Value Node A Node representing the next sibling of the current node, or null if there are none. Remarks NOTE Note: Browsers insert Text nodes into a document to represent whitespace in the source markup. Therefore a node obtained, for example, using Node.firstChild or Node.previousSibling may refer to a whitespace text node rather than the actual element the author intended to get. The article Whitespace in the DOM contains more information about this behavior. You can use Element.NextElementSibling to obtain the next element skipping any whitespace nodes, other between-element text, or comments. To navigate the opposite way through the child nodes list use Node.previousSibling. -Element.NextElementSibling -PreviousSibling See also on MDN NodeName The read-only nodeName property of Node returns the name of the current node as a string. public string NodeName { get; } Property Value string A string. Values for the different types of nodes are: Remarks -TagName -Name -Name -Target See also on MDN NodeType The read-only nodeType property of a Node interface is an integer that identifies what the node is. It distinguishes different kind of nodes from each other, such as Element, Text and Comment. public ushort NodeType { get; } Property Value ushort An integer which specifies the type of the node. Possible values are:The following constants have been deprecated and are not in use anymore: Node.ENTITY_REFERENCE_NODE (5), Node.ENTITY_NODE (6), and Node.NOTATION_NODE (12). Remarks See also on MDN NodeValue The nodeValue property of the Node interface returns or sets the value of the current node. public string? NodeValue { get; set; } Property Value string A string containing the value of the current node, if any. For the document itself, nodeValue returns null. For text, comment, and CDATA nodes, nodeValue returns the content of the node. For attribute nodes, the value of the attribute is returned.The following table shows the return values for different types of nodes. Node Value of nodeValue CDATASection Content of the CDATA section Comment Content of the comment Document null DocumentFragment null DocumentType null Element null NamedNodeMap null ProcessingInstruction Entire content excluding the target Text Content of the text node NOTE Note: When nodeValue is defined to be null, setting it has no effect. Remarks See also on MDN OwnerDocument The read-only ownerDocument property of the Node interface returns the top-level document object of the node. public Document? OwnerDocument { get; } Property Value Document A Document that is the top-level object in which all the child nodes are created.If this property is used on a node that is itself a document, the value is null. Remarks See also on MDN ParentElement The read-only parentElement property of Node interface returns the DOM node's parent Element, or null if the node either has no parent, or its parent isn't a DOM Element. public Element? ParentElement { get; } Property Value Element An Element that is the parent element of the current node, or null if there isn&apos;t one. Remarks -ParentNode See also on MDN ParentNode The read-only parentNode property of the Node interface returns the parent of the specified node in the DOM tree. public Node? ParentNode { get; } Property Value Node A Node that is the parent of the current node. The parent of an element is an Element node, a Document node, or a DocumentFragment node. Remarks Document and DocumentFragment nodes can never have a parent, so parentNode will always return null. It also returns null if the node has just been created and is not yet attached to the tree. -FirstChild -LastChild -ChildNodes -NextSibling -ParentElement -PreviousSibling -RemoveChild(Node) See also on MDN PreviousSibling The read-only previousSibling property of the Node interface returns the node immediately preceding the specified one in its parent&apos;s ChildNodes list, or null if the specified node is the first in that list. public Node? PreviousSibling { get; } Property Value Node A Node representing the previous sibling of the current node, or null if there are none. Remarks NOTE Note: Browsers insert text nodes into a document to represent whitespace in the source markup. Therefore a node obtained, for example, using Node.firstChild or Node.previousSibling may refer to a whitespace text node rather than the actual element the author intended to get. See Whitespace in the DOM for more information. You can use previousElementSibling to get the previous element node (skipping text nodes and any other non-element nodes). To navigate the opposite way through the child nodes list use Node.nextSibling. -NextSibling -Element.PreviousElementSibling See also on MDN TextContent The textContent property of the {{domxref (\"Node\")}} interface represents the text content of the node and its descendants. public string? TextContent { get; set; } Property Value string A string, or null. Its value depends on the situation: WARNING Warning: Setting textContent on a node removes all of the node&apos;s children and replaces them with a single text node with the given string value. Remarks NOTE Note: textContent and InnerText are easily confused, but the two properties are different in important ways. -InnerText -InnerHTML -More on differences between innerText and textContent (blog post) See also on MDN Methods AppendChild(Node) The appendChild() method of the Node interface adds a node to the end of the list of children of a specified parent node. public Node AppendChild(Node node) Parameters node Node Returns Node A Node that is the appended child (aChild), except when aChild is a DocumentFragment, in which case the empty DocumentFragment is returned. Remarks NOTE Note: If the given child is a reference to an existing node in the document, appendChild() moves it from its current position to the new position. If the given child is a DocumentFragment, the entire contents of the DocumentFragment are moved into the child list of the specified parent node. appendChild() returns the newly appended node, or if the child is a DocumentFragment, the emptied fragment. NOTE Note: Unlike this method, the Element.Append method supports multiple arguments and appending strings. You can prefer using it if your node is an element. -RemoveChild(Node) -ReplaceChild(Node, Node) -InsertBefore(Node, Node?) -HasChildNodes() -InsertAdjacentElement(string, Element) -Element.Append See also on MDN CloneNode(bool) The cloneNode() method of the Node interface returns a duplicate of the node on which this method was called. Its parameter controls if the subtree contained in a node is also cloned or not. public Node CloneNode(bool deep) Parameters deep bool Returns Node The new Node cloned. The cloned node has no parent and is not part of the document, until it is added to another node that is part of the document, using AppendChild(Node) or a similar method. Remarks Cloning a node copies all of its attributes and their values, including intrinsic (inline) listeners. It does not copy event listeners added using addEventListener() or those assigned to element properties (e.g., node.onclick = someFunction). Additionally, for a canvas element, the painted image is not copied. WARNING Warning: cloneNode() may lead to duplicate element IDs in a document! If the original node has an id attribute, and the clone will be placed in the same document, then you should modify the clone&apos;s ID to be unique. Also, name attributes may need to be modified, depending on whether duplicate names are expected. To clone a node to insert into a different document, use ImportNode(Node, bool) instead. See also on MDN CompareDocumentPosition(Node) The compareDocumentPosition() method of the Node interface reports the position of its argument node relative to the node on which it is called. public ushort CompareDocumentPosition(Node other) Parameters other Node Returns ushort An integer value representing otherNode&apos;s position relative to node as a bitmask combining the following constant properties of Node:More than one bit is set if multiple scenarios apply. For example, if otherNode is located earlier in the document and contains the node on which compareDocumentPosition() was called, then both the DOCUMENT_POSITION_CONTAINS and DOCUMENT_POSITION_PRECEDING bits would be set, producing a value of 10 (0x0A). Remarks -Contains(Node?) See also on MDN Contains(Node?) The contains() method of the Node interface returns a boolean value indicating whether a node is a descendant of a given node, that is the node itself, one of its direct children (ChildNodes), one of the children&apos;s direct children, and so on. public bool Contains(Node? other) Parameters other Node Returns bool A boolean value that is true if otherNode is contained in the node, false if not.If the otherNode parameter is null, contains() always returns false. Remarks NOTE Note: A node is contained inside itself. -CompareDocumentPosition(Node) -HasChildNodes() See also on MDN GetRootNode(GetRootNodeOptions) The getRootNode() method of the Node interface returns the context object&apos;s root, which optionally includes the shadow root if it is available. public Node GetRootNode(GetRootNodeOptions options) Parameters options GetRootNodeOptions Returns Node An object inheriting from 'Node'. This will differ in exact form depending on where you called getRootNode(); for example: Remarks See also on MDN HasChildNodes() The hasChildNodes() method of the Node interface returns a boolean value indicating whether the given Node has child nodes or not. public bool HasChildNodes() Returns bool A boolean value that is true if the node has child nodes, and false otherwise. Remarks -ChildNodes See also on MDN InsertBefore(Node, Node?) The insertBefore() method of the Node interface inserts a node before a reference node as a child of a specified parent node. public Node InsertBefore(Node node, Node? child) Parameters node Node child Node Returns Node Returns the added child (unless newNode is a DocumentFragment, in which case the empty DocumentFragment is returned). Remarks If the given node already exists in the document, insertBefore() moves it from its current position to the new position. (That is, it will automatically be removed from its existing parent before appending it to the specified new parent.) This means that a node cannot be in two locations of the document simultaneously. NOTE Note: The CloneNode(bool) can be used to make a copy of the node before appending it under the new parent. Note that the copies made with cloneNode() will not be automatically kept in sync. If the given child is a DocumentFragment, the entire contents of the DocumentFragment are moved into the child list of the specified parent node. -RemoveChild(Node) -ReplaceChild(Node, Node) -AppendChild(Node) -HasChildNodes() -InsertAdjacentElement(string, Element) -Element.Prepend -Element.Before -Element.After See also on MDN IsDefaultNamespace(string?) The isDefaultNamespace() method of the Node interface accepts a namespace URI as an argument. It returns a boolean value that is true if the namespace is the default namespace on the given node and false if not. public bool IsDefaultNamespace(string? namespace_) Parameters namespace_ string Returns bool A boolean value that holds the return value true or false, indicating if the parameter is the default namespace, or not. Remarks NOTE Note: The default namespace of an HTML element is always &quot;&quot;. For a SVG element, it is set by the xmlns attribute. -LookupNamespaceURI(string?) -LookupPrefix(string?) See also on MDN IsEqualNode(Node?) The isEqualNode() method of the Node interface tests whether two nodes are equal. Two nodes are equal when they have the same type, defining characteristics (for elements, this would be their ID, number of children, and so forth), its attributes match, and so on. The specific set of data points that must match varies depending on the types of the nodes. public bool IsEqualNode(Node? otherNode) Parameters otherNode Node Returns bool A boolean value that is true if the two nodes are equals, or false if not. If otherNode is null, isEqualNode() always return false. Remarks -IsSameNode(Node?) See also on MDN IsSameNode(Node?) The isSameNode() method of the Node interface is a legacy alias the for the === strict equality operator. That is, it tests whether two nodes are the same (in other words, whether they reference the same object). public bool IsSameNode(Node? otherNode) Parameters otherNode Node Returns bool A boolean value that is true if both nodes are strictly equal, false if not. Remarks NOTE Note: There is no need to use isSameNode(); instead use the === strict equality operator. -IsEqualNode(Node?) See also on MDN LookupNamespaceURI(string?) The lookupNamespaceURI() method of the Node interface takes a prefix as parameter and returns the namespace URI associated with it on the given node if found (and null if not). public string? LookupNamespaceURI(string? prefix) Parameters prefix string Returns string A string containing the namespace URI corresponding to the prefix. If the prefix is not found, it returns null. If the requested prefix is null, it returns the default namespace URI. Remarks -LookupPrefix(string?) -Node.IsDefaultNameSpace See also on MDN LookupPrefix(string?) The lookupPrefix() method of the Node interface returns a string containing the prefix for a given namespace URI, if present, and null if not. When multiple prefixes are possible, the first prefix is returned. public string? LookupPrefix(string? namespace_) Parameters namespace_ string Returns string A string containing the corresponding prefix, or null if none has been found. If namespace is null, or the empty string, lookupPrefix() returns null.If the node is a DocumentType or a DocumentFragment, lookupPrefix() always returns null. Remarks -http://www.w3.org/TR/DOM-Level-3-Cor...amespacePrefix See also on MDN Normalize() The normalize() method of the Node interface puts the specified node and all of its sub-tree into a normalized form. In a normalized sub-tree, no text nodes in the sub-tree are empty and there are no adjacent text nodes. public GlobalObject.Undefined Normalize() Returns GlobalObject.Undefined None. Remarks -SplitText(ulong), its opposite. See also on MDN RemoveChild(Node) The removeChild() method of the Node interface removes a child node from the DOM and returns the removed node. public Node RemoveChild(Node child) Parameters child Node Returns Node Remarks NOTE Note: As long as a reference is kept on the removed child, it still exists in memory, but is no longer part of the DOM. It can still be reused later in the code. If the return value of removeChild() is not stored, and no other reference is kept, it will be automatically deleted from memory after a short time. Unlike CloneNode(bool) the return value preserves the EventListener objects associated with it. -ReplaceChild(Node, Node) -ParentNode -Element.Remove -CloneNode(bool) See also on MDN ReplaceChild(Node, Node) The replaceChild() method of the Node interface replaces a child node within the given (parent) node. public Node ReplaceChild(Node node, Node child) Parameters node Node child Node Returns Node The replaced Node. This is the same node as oldChild. Remarks -RemoveChild(Node) -Element.ReplaceWith See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NodeFilter.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NodeFilter.html",
    "title": "Interface NodeFilter | CSharpToJavaScript",
    "keywords": "Interface NodeFilter Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NodeFilter Fields FILTER_ACCEPT public const ushort FILTER_ACCEPT = 1 Field Value ushort FILTER_REJECT public const ushort FILTER_REJECT = 2 Field Value ushort FILTER_SKIP public const ushort FILTER_SKIP = 3 Field Value ushort SHOW_ALL public const ulong SHOW_ALL = 4294967295 Field Value ulong SHOW_ATTRIBUTE public const ulong SHOW_ATTRIBUTE = 2 Field Value ulong SHOW_CDATA_SECTION public const ulong SHOW_CDATA_SECTION = 8 Field Value ulong SHOW_COMMENT public const ulong SHOW_COMMENT = 128 Field Value ulong SHOW_DOCUMENT public const ulong SHOW_DOCUMENT = 256 Field Value ulong SHOW_DOCUMENT_FRAGMENT public const ulong SHOW_DOCUMENT_FRAGMENT = 1024 Field Value ulong SHOW_DOCUMENT_TYPE public const ulong SHOW_DOCUMENT_TYPE = 512 Field Value ulong SHOW_ELEMENT public const ulong SHOW_ELEMENT = 1 Field Value ulong SHOW_ENTITY public const ulong SHOW_ENTITY = 32 Field Value ulong SHOW_ENTITY_REFERENCE public const ulong SHOW_ENTITY_REFERENCE = 16 Field Value ulong SHOW_NOTATION public const ulong SHOW_NOTATION = 2048 Field Value ulong SHOW_PROCESSING_INSTRUCTION public const ulong SHOW_PROCESSING_INSTRUCTION = 64 Field Value ulong SHOW_TEXT public const ulong SHOW_TEXT = 4 Field Value ulong Methods AcceptNode(Node) ushort AcceptNode(Node node) Parameters node Node Returns ushort"
  },
  "api/CSharpToJavaScript.APIs.JS.NodeIterator.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NodeIterator.html",
    "title": "Class NodeIterator | CSharpToJavaScript",
    "keywords": "Class NodeIterator Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The NodeIterator interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order. [To(\"FirstCharToLowerCase\")] public class NodeIterator Inheritance object NodeIterator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The creator method: CreateNodeIterator(Node, ulong, NodeFilter?). -Related interfaces:-NodeFilter -TreeWalker See also on MDN Properties Filter The NodeIterator.filter read-only property returns a NodeFilter object, that is an object which implements an acceptNode(node) method, used to screen nodes. public NodeFilter? Filter { get; } Property Value NodeFilter A NodeFilter object. Remarks When creating the NodeIterator, the filter object is passed in as the third parameter, and the object method acceptNode(node) is called on every single node to determine whether or not to accept it. This function should return the constant NodeFilter.FILTER_ACCEPT for cases when the node should be accepted and NodeFilter.FILTER_REJECT for cases when the node should be rejected. -The interface this property belongs to: NodeIterator. See also on MDN PointerBeforeReferenceNode The NodeIterator.pointerBeforeReferenceNode read-only property returns a boolean flag that indicates whether the NodeFilter is anchored before (if this value is true) or after (if this value is false) the anchor node indicated by the ReferenceNode property. public bool PointerBeforeReferenceNode { get; } Property Value bool A boolean. Remarks -The interface it belongs to: NodeIterator See also on MDN ReferenceNode The NodeIterator.referenceNode read-only property returns the Node to which the iterator is anchored; as new nodes are inserted, the iterator remains anchored to the reference node as specified by this property. public Node ReferenceNode { get; } Property Value Node A Node. Remarks -The interface it belongs to: NodeIterator See also on MDN Root The NodeIterator.root read-only property represents the Node that is the root of what the NodeIterator traverses. public Node Root { get; } Property Value Node A Node. Remarks -The interface it belongs to: NodeIterator. See also on MDN WhatToShow The NodeIterator.whatToShow read-only property represents an unsigned integer representing a bitmask signifying what types of nodes should be returned by the NodeIterator. public ulong WhatToShow { get; } Property Value ulong An unsigned integer.The values that can be combined to form the bitmask are: Remarks -The interface this property belongs to: NodeIterator. See also on MDN Methods Detach() IMPORTANT Deprecated The NodeIterator.detach() method is a no-op, kept for backward compatibility only. public GlobalObject.Undefined Detach() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Originally, it detached the NodeIterator from the set over which it iterates, releasing any resources used by the set and setting the iterator&apos;s state to INVALID. Once this method had been called, calls to other methods on NodeIterator would raise the INVALID_STATE_ERR exception. -The interface it belongs to: NodeIterator. See also on MDN NextNode() The NodeIterator.nextNode() method returns the next node in the set represented by the NodeIterator and advances the position of the iterator within the set. The first call to nextNode() returns the first node in the set. public Node? NextNode() Returns Node A Node representing the node after the current node in the set represented by this NodeIterator, or null if the current node is the last node in the set. Remarks This method returns null when there are no nodes left in the set. In old browsers, as specified in old versions of the specifications, the method may throws the INVALID_STATE_ERR DOMException if this method is called after the Detach()method. Recent browsers never throw. -The interface it belongs to: NodeIterator. See also on MDN PreviousNode() The NodeIterator.previousNode() method returns the previous node in the set represented by the NodeIterator and moves the position of the iterator backwards within the set. public Node? PreviousNode() Returns Node A Node representing the node before the current node in the set represented by this NodeIterator, or null if the current node is the first node in the set. Remarks This method returns null when the current node is the first node in the set. In old browsers, as specified in old versions of the specifications, the method may throws the INVALID_STATE_ERR DOMException if this method is called after the Detach()method. Recent browsers never throw. -The interface it belongs to: NodeIterator. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NodeList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NodeList.html",
    "title": "Class NodeList | CSharpToJavaScript",
    "keywords": "Class NodeList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll NodeList objects are collections of nodes, usually returned by properties such as ChildNodes and methods such as Document.QuerySelectorAll. [To(\"FirstCharToLowerCase\")] public class NodeList Inheritance object NodeList Derived RadioNodeList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: Although NodeList is not an Array, it is possible to iterate over it with forEach(). It can also be converted to a real Array using ArrayFrom. See also on MDN Properties this[int] public Node this[int i] { get; set; } Parameters i int Property Value Node Length The NodeList.length property returns the number of items in a NodeList. public ulong Length { get; } Property Value ulong An integer value representing the number of items in a NodeList. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NonDocumentTypeChildNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NonDocumentTypeChildNode.html",
    "title": "Interface NonDocumentTypeChildNode | CSharpToJavaScript",
    "keywords": "Interface NonDocumentTypeChildNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NonDocumentTypeChildNode Properties NextElementSibling Element? NextElementSibling { get; } Property Value Element PreviousElementSibling Element? PreviousElementSibling { get; } Property Value Element"
  },
  "api/CSharpToJavaScript.APIs.JS.NonElementParentNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NonElementParentNode.html",
    "title": "Interface NonElementParentNode | CSharpToJavaScript",
    "keywords": "Interface NonElementParentNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NonElementParentNode Methods GetElementById(string) Element? GetElementById(string elementId) Parameters elementId string Returns Element"
  },
  "api/CSharpToJavaScript.APIs.JS.Notification.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Notification.html",
    "title": "Class Notification | CSharpToJavaScript",
    "keywords": "Class Notification Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Notification interface of the Notifications API is used to configure and display desktop notifications to the user. [To(\"FirstCharToLowerCase\")] public class Notification : EventTarget Inheritance object EventTarget Notification Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks These notifications&apos; appearance and specific functionality vary across platforms but generally they provide a way to asynchronously provide information to the user. -Using the Notifications API See also on MDN Constructors Notification() public Notification() Notification(string, NotificationOptions) The Notification() constructor creates a new Notification object instance, which represents a user notification. public Notification(string title, NotificationOptions options) Parameters title string options NotificationOptions Remarks -Using the Notifications API See also on MDN Properties Actions The actions read-only property of the Notification interface provides the actions available for users to choose from for interacting with the notification. public NotificationAction[] Actions { get; } Property Value NotificationAction[] A read-only array of actions. Each element in the array is an object with the following members: Remarks The actions are set using the actions option of the second argument for the showNotification() method and Notification() constructor. NOTE Note: Browsers typically limit the maximum number of actions they will display for a particular notification. Check the static MaxActions property to determine the limit. -Using the Notifications API -MaxActions See also on MDN Badge The badge property of the Notification interface returns the URL of the image used to represent the notification when there is not enough space to display the notification itself. public string Badge { get; } Property Value string A string containing a URL. Remarks See also on MDN Body The body read-only property of the Notification interface indicates the body string of the notification, as specified in the body option of the Notification(string, NotificationOptions) constructor. public string Body { get; } Property Value string A string. Remarks -Using the Notifications API See also on MDN Data The data read-only property of the Notification interface returns a structured clone of the notification's data, as specified in the data option of the Notification(string, NotificationOptions) constructor. public dynamic Data { get; } Property Value dynamic A structured clone. Remarks The notification&apos;s data can be any arbitrary data that you want associated with the notification. -Using the Notifications API See also on MDN Dir The dir read-only property of the Notification interface indicates the text direction of the notification, as specified in the dir option of the Notification(string, NotificationOptions) constructor. public NotificationDirection Dir { get; } Property Value NotificationDirection A string specifying the text direction. Possible values are: NOTE Note: Most browsers seem to ignore explicit ltr and rtl settings, and just go with the browser-wide setting. Remarks -Using the Notifications API See also on MDN Icon The icon read-only property of the Notification interface contains the URL of an icon to be displayed as part of the notification, as specified in the icon option of the Notification(string, NotificationOptions) constructor. public string Icon { get; } Property Value string A string. Remarks -Using the Notifications API See also on MDN Image The image read-only property of the Notification interface contains the URL of an image to be displayed as part of the notification, as specified in the image option of the Notification(string, NotificationOptions) constructor. public string Image { get; } Property Value string A string. Remarks -Using the Notifications API See also on MDN Lang The lang read-only property of the Notification interface indicates the language used in the notification, as specified in the lang option of the Notification(string, NotificationOptions) constructor. public string Lang { get; } Property Value string A string specifying the language tag. Remarks The language itself is specified using a string representing a language tag according to {{RFC(5646, \"Tags for Identifying Languages (also known as BCP 47)\")}}. See the Sitepoint ISO 2 letter language codes page for a simple reference. -Using the Notifications API See also on MDN MaxActions public static ulong MaxActions { get; } Property Value ulong Onclick public EventHandlerNonNull Onclick { get; set; } Property Value EventHandlerNonNull Onclose public EventHandlerNonNull Onclose { get; set; } Property Value EventHandlerNonNull Onerror public EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull Onshow public EventHandlerNonNull Onshow { get; set; } Property Value EventHandlerNonNull Permission public static NotificationPermission Permission { get; } Property Value NotificationPermission Renotify The renotify read-only property of the Notification interface specifies whether the user should be notified after a new notification replaces an old one, as specified in the renotify option of the Notification(string, NotificationOptions) constructor. public bool Renotify { get; } Property Value bool A boolean value. false is the default; true makes the notification renotify the user. Remarks -Using the Notifications API See also on MDN RequireInteraction The requireInteraction read-only property of the Notification interface returns a boolean value indicating that a notification should remain active until the user clicks or dismisses it, rather than closing automatically. public bool RequireInteraction { get; } Property Value bool A boolean value. Remarks NOTE Note: This can be set when the notification is first created by setting the requireInteraction option to true in the options object of the Notification(string, NotificationOptions) constructor. -Using the Notifications API See also on MDN Silent The silent read-only property of the Notification interface specifies whether the notification should be silent, i.e., no sounds or vibrations should be issued, regardless of the device settings. This is specified in the silent option of the Notification(string, NotificationOptions) constructor. public bool? Silent { get; } Property Value bool? A boolean value. false is the default; true makes the notification silent. Remarks -Using the Notifications API See also on MDN Tag The tag read-only property of the Notification interface signifies an identifying tag for the notification, as specified in the tag option of the Notification(string, NotificationOptions) constructor. public string Tag { get; } Property Value string A string. Remarks The idea of notification tags is that more than one notification can share the same tag, linking them together. One notification can then be programmatically replaced with another to avoid the users&apos; screen being filled up with a huge number of similar notifications. -Using the Notifications API See also on MDN Timestamp The timestamp read-only property of the Notification interface returns a number, as specified in the timestamp option of the Notification(string, NotificationOptions) constructor. public Unsupported Timestamp { get; } Property Value Unsupported A number representing a timestamp, given as Unix time in milliseconds. Remarks The notification&apos;s timestamp can represent the time, in milliseconds since 00:00:00 UTC on 1 January 1970, of the event for which the notification was created, or it can be an arbitrary timestamp that you want associated with the notification. For example, a timestamp for an upcoming meeting could be set in the future, whereas a timestamp for a missed message could be set in the past. -Using the Notifications API See also on MDN Title The title read-only property of the Notification interface indicates the title of the notification, as specified in the title parameter of the Notification(string, NotificationOptions) constructor. public string Title { get; } Property Value string A string. Remarks -Using the Notifications API See also on MDN Vibrate The vibrate read-only property of the Notification interface specifies a vibration pattern for the device&apos;s vibration hardware to emit when the notification fires. This is specified in the vibrate option of the Notification(string, NotificationOptions) constructor. public ulong[] Vibrate { get; } Property Value ulong[] A vibration pattern, as specified in the Vibration API spec. Remarks -Using the Notifications API See also on MDN Methods Close() The close() method of the Notification interface is used to close/remove a previously displayed notification. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: This API shouldn&apos;t be used just to have the notification removed from the screen after a fixed delay since this method will also remove the notification from any notification tray, preventing users from interacting with it after it was initially shown. A valid use for this API would be to remove a notification that is no longer relevant (e.g. the user already read the notification on the webpage in the case of a messaging app or the following song is already playing in a music app). -Using the Notifications API See also on MDN RequestPermission(NotificationPermissionCallback) public static Task<NotificationPermission> RequestPermission(NotificationPermissionCallback deprecatedCallback) Parameters deprecatedCallback NotificationPermissionCallback Returns Task<NotificationPermission>"
  },
  "api/CSharpToJavaScript.APIs.JS.NotificationAction.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NotificationAction.html",
    "title": "Class NotificationAction | CSharpToJavaScript",
    "keywords": "Class NotificationAction Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NotificationAction Inheritance object NotificationAction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Action public required string Action Field Value string Icon public string Icon Field Value string Title public required string Title Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.NotificationDirection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NotificationDirection.html",
    "title": "Enum NotificationDirection | CSharpToJavaScript",
    "keywords": "Enum NotificationDirection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum NotificationDirection Fields Auto = 0 Ltr = 1 Rtl = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.NotificationEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NotificationEvent.html",
    "title": "Class NotificationEvent | CSharpToJavaScript",
    "keywords": "Class NotificationEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The parameter passed into the ServiceWorkerGlobalScope.Notificationclick_event handler, the NotificationEvent interface represents a notification click event that is dispatched on the ServiceWorkerGlobalScope of a ServiceWorker. [To(\"FirstCharToLowerCase\")] public class NotificationEvent : ExtendableEvent Inheritance object Event ExtendableEvent NotificationEvent Inherited Members ExtendableEvent.WaitUntil(Task<dynamic>) Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface inherits from the ExtendableEvent interface. See also on MDN Constructors NotificationEvent() public NotificationEvent() NotificationEvent(string, NotificationEventInit) The NotificationEvent() constructor creates a new NotificationEvent object. public NotificationEvent(string type, NotificationEventInit eventInitDict) Parameters type string eventInitDict NotificationEventInit Remarks See also on MDN Properties Action Returns the string ID of the notification button the user clicked. This value returns an empty string if the user clicked the notification somewhere other than an action button, or the notification does not have a button. The notification id is set during the creation of the Notification via the actions array attribute and can&apos;t be modified unless the notification is replaced. public string Action { get; } Property Value string A string. Remarks See also on MDN Notification The notification read-only property of the NotificationEvent interface returns the instance of the Notification that was clicked to fire the event. The Notification provides read-only access to many properties that were set at the instantiation time of the Notification such as tag and data attributes that allow you to store information for deferred use in the notificationclick event. public Notification Notification { get; } Property Value Notification A Notification object. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NotificationEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NotificationEventInit.html",
    "title": "Class NotificationEventInit | CSharpToJavaScript",
    "keywords": "Class NotificationEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NotificationEventInit : ExtendableEventInit Inheritance object EventInit ExtendableEventInit NotificationEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Action public string Action Field Value string Notification public required Notification Notification Field Value Notification"
  },
  "api/CSharpToJavaScript.APIs.JS.NotificationOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NotificationOptions.html",
    "title": "Class NotificationOptions | CSharpToJavaScript",
    "keywords": "Class NotificationOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NotificationOptions Inheritance object NotificationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Actions public List<NotificationAction> Actions Field Value List<NotificationAction> Badge public string Badge Field Value string Body public string Body Field Value string Data public dynamic Data Field Value dynamic Dir public NotificationDirection Dir Field Value NotificationDirection Icon public string Icon Field Value string Image public string Image Field Value string Lang public string Lang Field Value string Renotify public bool Renotify Field Value bool RequireInteraction public bool RequireInteraction Field Value bool Silent public bool? Silent Field Value bool? Tag public string Tag Field Value string Timestamp public Unsupported Timestamp Field Value Unsupported Vibrate public Unsupported Vibrate Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.NotificationPermission.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NotificationPermission.html",
    "title": "Enum NotificationPermission | CSharpToJavaScript",
    "keywords": "Enum NotificationPermission Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum NotificationPermission Fields Default = 0 Denied = 1 Granted = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.NotificationPermissionCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NotificationPermissionCallback.html",
    "title": "Struct NotificationPermissionCallback | CSharpToJavaScript",
    "keywords": "Struct NotificationPermissionCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct NotificationPermissionCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.Number.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Number.html",
    "title": "Class Number | CSharpToJavaScript",
    "keywords": "Class Number Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class Number : NumberPrototype Inheritance object NumberPrototype Number Inherited Members NumberPrototype.ToExponential(dynamic) NumberPrototype.ToFixed(dynamic) NumberPrototype.ToLocaleString(dynamic, dynamic) NumberPrototype.ToPrecision(dynamic) NumberPrototype.ToString(dynamic) NumberPrototype.ValueOf() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Number() public Number() Number(double) public Number(double value) Parameters value double Fields EPSILON public const double EPSILON = 6.204460492503131 Field Value double MAX_SAFE_INTEGER public const double MAX_SAFE_INTEGER = 9007199254740992 Field Value double MAX_VALUE public const double MAX_VALUE = 18530.62083416075 Field Value double MIN_SAFE_INTEGER public const double MIN_SAFE_INTEGER = -9007199254740991 Field Value double MIN_VALUE public const double MIN_VALUE = -274 Field Value double NEGATIVE_INFINITY public const double NEGATIVE_INFINITY = -Infinity Field Value double NaN public GlobalObject.NaN NaN Field Value GlobalObject.NaN POSITIVE_INFINITY public const double POSITIVE_INFINITY = Infinity Field Value double Properties Prototype [To(\"FirstCharToLowerCase\")] public static NumberPrototype Prototype { get; } Property Value NumberPrototype Value public dynamic Value { get; set; } Property Value dynamic Methods IsFinite(double) [To(\"FirstCharToLowerCase\")] public bool IsFinite(double number) Parameters number double Returns bool IsInteger(double) [To(\"FirstCharToLowerCase\")] public bool IsInteger(double number) Parameters number double Returns bool IsNaN(double) [To(\"FirstCharToLowerCase\")] public bool IsNaN(double number) Parameters number double Returns bool IsSafeInteger(double) [To(\"FirstCharToLowerCase\")] public bool IsSafeInteger(double number) Parameters number double Returns bool ParseFloat(string) [To(\"FirstCharToLowerCase\")] public float ParseFloat(string str) Parameters str string Returns float ParseInt(string, dynamic) [To(\"FirstCharToLowerCase\")] public int ParseInt(string str, dynamic radix) Parameters str string radix dynamic Returns int Operators implicit operator double(Number) public static implicit operator double(Number value) Parameters value Number Returns double implicit operator Number(double) public static implicit operator Number(double value) Parameters value double Returns Number"
  },
  "api/CSharpToJavaScript.APIs.JS.NumberPrototype.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NumberPrototype.html",
    "title": "Class NumberPrototype | CSharpToJavaScript",
    "keywords": "Class NumberPrototype Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NumberPrototype Inheritance object NumberPrototype Derived Number Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToExponential(dynamic) public string ToExponential(dynamic fractionDigits) Parameters fractionDigits dynamic Returns string ToFixed(dynamic) public string ToFixed(dynamic fractionDigits) Parameters fractionDigits dynamic Returns string ToLocaleString(dynamic?, dynamic?) public string ToLocaleString(dynamic? reserved1 = null, dynamic? reserved2 = null) Parameters reserved1 dynamic reserved2 dynamic Returns string ToPrecision(dynamic) public string ToPrecision(dynamic precision) Parameters precision dynamic Returns string ToString(dynamic?) public string ToString(dynamic? radix = null) Parameters radix dynamic Returns string ValueOf() public float ValueOf() Returns float"
  },
  "api/CSharpToJavaScript.APIs.JS.Object.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Object.html",
    "title": "Class Object | CSharpToJavaScript",
    "keywords": "Class Object Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class Object : ObjectPrototype Inheritance object ObjectPrototype Object Inherited Members ObjectPrototype.HasOwnProperty(dynamic) ObjectPrototype.IsPrototypeOf(dynamic) ObjectPrototype.PropertyIsEnumerable(dynamic) ObjectPrototype.ToLocaleString(dynamic, dynamic) ObjectPrototype.ToString() ObjectPrototype.ValueOf() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Object(dynamic?) public Object(dynamic? value = null) Parameters value dynamic Properties Prototype [To(\"FirstCharToLowerCase\")] public static ObjectPrototype Prototype { get; } Property Value ObjectPrototype Methods Assign(dynamic, params dynamic[]) [To(\"FirstCharToLowerCase\")] public static dynamic Assign(dynamic target, params dynamic[] sources) Parameters target dynamic sources dynamic[] Returns dynamic Create(dynamic, dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic Create(dynamic O, dynamic Properties) Parameters O dynamic Properties dynamic Returns dynamic DefineProperties(dynamic, dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic DefineProperties(dynamic O, dynamic Properties) Parameters O dynamic Properties dynamic Returns dynamic DefineProperty(dynamic, dynamic, dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic DefineProperty(dynamic O, dynamic P, dynamic Attributes) Parameters O dynamic P dynamic Attributes dynamic Returns dynamic Entries(dynamic) [To(\"FirstCharToLowerCase\")] public static KeyValuePair<string, dynamic> Entries(dynamic O) Parameters O dynamic Returns KeyValuePair<string, dynamic> Freeze(dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic Freeze(dynamic O) Parameters O dynamic Returns dynamic FromEntries(dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic FromEntries(dynamic iterable) Parameters iterable dynamic Returns dynamic GetOwnPropertyDescriptor(dynamic, dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic GetOwnPropertyDescriptor(dynamic O, dynamic P) Parameters O dynamic P dynamic Returns dynamic GetOwnPropertyDescriptors(dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic GetOwnPropertyDescriptors(dynamic O) Parameters O dynamic Returns dynamic GetOwnPropertyNames(dynamic) [To(\"FirstCharToLowerCase\")] public static string[] GetOwnPropertyNames(dynamic O) Parameters O dynamic Returns string[] GetOwnPropertySymbols(dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic[] GetOwnPropertySymbols(dynamic O) Parameters O dynamic Returns dynamic[] GetPrototypeOf(dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic GetPrototypeOf(dynamic O) Parameters O dynamic Returns dynamic HasOwn(dynamic, dynamic) [To(\"FirstCharToLowerCase\")] public static bool HasOwn(dynamic O, dynamic P) Parameters O dynamic P dynamic Returns bool Is(dynamic, dynamic) [To(\"FirstCharToLowerCase\")] public static bool Is(dynamic value1, dynamic value2) Parameters value1 dynamic value2 dynamic Returns bool IsExtensible(dynamic) [To(\"FirstCharToLowerCase\")] public static bool IsExtensible(dynamic O) Parameters O dynamic Returns bool IsFrozen(dynamic) [To(\"FirstCharToLowerCase\")] public static bool IsFrozen(dynamic O) Parameters O dynamic Returns bool IsSealed(dynamic) [To(\"FirstCharToLowerCase\")] public static bool IsSealed(dynamic O) Parameters O dynamic Returns bool Keys(dynamic) [To(\"FirstCharToLowerCase\")] public static string[] Keys(dynamic O) Parameters O dynamic Returns string[] PreventExtensions(dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic PreventExtensions(dynamic O) Parameters O dynamic Returns dynamic Seal(dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic Seal(dynamic O) Parameters O dynamic Returns dynamic SetPrototypeOf(dynamic, dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic SetPrototypeOf(dynamic O, dynamic proto) Parameters O dynamic proto dynamic Returns dynamic Values(dynamic) [To(\"FirstCharToLowerCase\")] public static string[] Values(dynamic O) Parameters O dynamic Returns string[]"
  },
  "api/CSharpToJavaScript.APIs.JS.ObjectPrototype.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ObjectPrototype.html",
    "title": "Class ObjectPrototype | CSharpToJavaScript",
    "keywords": "Class ObjectPrototype Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ObjectPrototype Inheritance object ObjectPrototype Derived Object Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ObjectPrototype() public ObjectPrototype() Methods HasOwnProperty(dynamic) public bool HasOwnProperty(dynamic V) Parameters V dynamic Returns bool IsPrototypeOf(dynamic) public bool IsPrototypeOf(dynamic V) Parameters V dynamic Returns bool PropertyIsEnumerable(dynamic) public bool PropertyIsEnumerable(dynamic V) Parameters V dynamic Returns bool ToLocaleString(dynamic?, dynamic?) public string ToLocaleString(dynamic? reserved1 = null, dynamic? reserved2 = null) Parameters reserved1 dynamic reserved2 dynamic Returns string ToString() public string ToString() Returns string ValueOf() public dynamic ValueOf() Returns dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.OfflineAudioCompletionEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OfflineAudioCompletionEvent.html",
    "title": "Class OfflineAudioCompletionEvent | CSharpToJavaScript",
    "keywords": "Class OfflineAudioCompletionEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Web Audio API OfflineAudioCompletionEvent interface represents events that occur when the processing of an OfflineAudioContext is terminated. The OfflineAudioContext/complete_event event uses this interface. [To(\"FirstCharToLowerCase\")] public class OfflineAudioCompletionEvent : Event Inheritance object Event OfflineAudioCompletionEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: This interface is marked as deprecated; it is still supported for legacy reasons, but it will soon be superseded when the promise version of StartRendering() is supported in browsers, which will no longer need it. -Using the Web Audio API See also on MDN Constructors OfflineAudioCompletionEvent() public OfflineAudioCompletionEvent() OfflineAudioCompletionEvent(string, OfflineAudioCompletionEventInit) The OfflineAudioCompletionEvent() constructor of the Web Audio API creates a new OfflineAudioCompletionEvent object. public OfflineAudioCompletionEvent(string type, OfflineAudioCompletionEventInit eventInitDict) Parameters type string eventInitDict OfflineAudioCompletionEventInit Remarks NOTE Note: You wouldn&apos;t generally use the constructor manually. OfflineAudioCompletionEvent events are dispatched to OfflineAudioContext instances for legacy reasons. See also on MDN Properties RenderedBuffer The renderedBuffer read-only property of the OfflineAudioCompletionEvent interface is an AudioBuffer containing the result of processing an OfflineAudioContext. public AudioBuffer RenderedBuffer { get; } Property Value AudioBuffer An AudioBuffer. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.OfflineAudioCompletionEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OfflineAudioCompletionEventInit.html",
    "title": "Class OfflineAudioCompletionEventInit | CSharpToJavaScript",
    "keywords": "Class OfflineAudioCompletionEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class OfflineAudioCompletionEventInit : EventInit Inheritance object EventInit OfflineAudioCompletionEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields RenderedBuffer public required AudioBuffer RenderedBuffer Field Value AudioBuffer"
  },
  "api/CSharpToJavaScript.APIs.JS.OfflineAudioContext.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OfflineAudioContext.html",
    "title": "Class OfflineAudioContext | CSharpToJavaScript",
    "keywords": "Class OfflineAudioContext Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The OfflineAudioContext interface is an AudioContext interface representing an audio-processing graph built from linked together AudioNodes. In contrast with a standard AudioContext, an OfflineAudioContext doesn't render the audio to the device hardware; instead, it generates it, as fast as it can, and outputs the result to an AudioBuffer. [To(\"FirstCharToLowerCase\")] public class OfflineAudioContext : BaseAudioContext Inheritance object EventTarget BaseAudioContext OfflineAudioContext Inherited Members BaseAudioContext.Destination BaseAudioContext.SampleRate BaseAudioContext.CurrentTime BaseAudioContext.Listener BaseAudioContext.State BaseAudioContext.AudioWorklet BaseAudioContext.Onstatechange BaseAudioContext.CreateAnalyser() BaseAudioContext.CreateBiquadFilter() BaseAudioContext.CreateBuffer(ulong, ulong, Number) BaseAudioContext.CreateBufferSource() BaseAudioContext.CreateChannelMerger(ulong) BaseAudioContext.CreateChannelSplitter(ulong) BaseAudioContext.CreateConstantSource() BaseAudioContext.CreateConvolver() BaseAudioContext.CreateDelay(Number) BaseAudioContext.CreateDynamicsCompressor() BaseAudioContext.CreateGain() BaseAudioContext.CreateIIRFilter(List<Number>, List<Number>) BaseAudioContext.CreateOscillator() BaseAudioContext.CreatePanner() BaseAudioContext.CreatePeriodicWave(List<Number>, List<Number>, PeriodicWaveConstraints) BaseAudioContext.CreateScriptProcessor(ulong, ulong, ulong) BaseAudioContext.CreateStereoPanner() BaseAudioContext.CreateWaveShaper() BaseAudioContext.DecodeAudioData(byte[], DecodeSuccessCallback?, DecodeErrorCallback?) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Using the Web Audio API See also on MDN Constructors OfflineAudioContext() public OfflineAudioContext() OfflineAudioContext(OfflineAudioContextOptions) The OfflineAudioContext() constructor—part of the Web Audio API—creates and returns a new OfflineAudioContext object instance, which can then be used to render audio to an AudioBuffer rather than to an audio output device. public OfflineAudioContext(OfflineAudioContextOptions contextOptions) Parameters contextOptions OfflineAudioContextOptions Remarks See also on MDN OfflineAudioContext(ulong, ulong, Number) The OfflineAudioContext() constructor—part of the Web Audio API—creates and returns a new OfflineAudioContext object instance, which can then be used to render audio to an AudioBuffer rather than to an audio output device. public OfflineAudioContext(ulong numberOfChannels, ulong length, Number sampleRate) Parameters numberOfChannels ulong length ulong sampleRate Number Remarks See also on MDN Properties Length The length property of the OfflineAudioContext interface returns an integer representing the size of the buffer in sample-frames. public ulong Length { get; } Property Value ulong An integer representing the size of the buffer in sample-frames. Remarks See also on MDN Oncomplete public EventHandlerNonNull Oncomplete { get; set; } Property Value EventHandlerNonNull Methods Resume() The resume() method of the OfflineAudioContext interface resumes the progression of time in an audio context that has been suspended. The promise resolves immediately because the OfflineAudioContext does not require the audio hardware. public Task<GlobalObject.Undefined> Resume() Returns Task<GlobalObject.Undefined> A Promise resolving to 'undefined'. Remarks See also on MDN StartRendering() The startRendering() method of the OfflineAudioContext Interface starts rendering the audio graph, taking into account the current connections and the current scheduled changes. public Task<AudioBuffer> StartRendering() Returns Task<AudioBuffer> None (GlobalObject.Undefined). Remarks The OfflineAudioContext/complete_event event (of type OfflineAudioCompletionEvent) is raised when the rendering is finished, containing the resulting AudioBuffer in its renderedBuffer property. Browsers currently support two versions of the startRendering() method — an older event-based version and a newer promise-based version. The former will eventually be removed, but currently both mechanisms are provided for legacy reasons. -Using the Web Audio API See also on MDN Suspend(Number) The suspend() method of the {{ domxref(&quot;OfflineAudioContext&quot;) }} interface schedules a suspension of the time progression in the audio context at the specified time and returns a promise. This is generally useful at the time of manipulating the audio graph synchronously on OfflineAudioContext. public Task<GlobalObject.Undefined> Suspend(Number suspendTime) Parameters suspendTime Number Returns Task<GlobalObject.Undefined> A Promise resolving to 'undefined'. Remarks Note that the maximum precision of suspension is the size of the render quantum and the specified suspension time will be rounded down to the nearest render quantum boundary. For this reason, it is not allowed to schedule multiple suspends at the same quantized frame. Also scheduling should be done while the context is not running to ensure the precise suspension. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.OfflineAudioContextOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OfflineAudioContextOptions.html",
    "title": "Class OfflineAudioContextOptions | CSharpToJavaScript",
    "keywords": "Class OfflineAudioContextOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class OfflineAudioContextOptions Inheritance object OfflineAudioContextOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Length public required ulong Length Field Value ulong NumberOfChannels public ulong NumberOfChannels Field Value ulong SampleRate public required Number SampleRate Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.OffscreenCanvas.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OffscreenCanvas.html",
    "title": "Class OffscreenCanvas | CSharpToJavaScript",
    "keywords": "Class OffscreenCanvas Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The OffscreenCanvas interface provides a canvas that can be rendered off screen, decoupling the DOM and the Canvas API so that the canvas element is no longer entirely dependent on the DOM. Rendering operations can also be run inside a worker context, allowing you to run some tasks in a separate thread and avoid heavy work on the main thread. [To(\"FirstCharToLowerCase\")] public class OffscreenCanvas : EventTarget Inheritance object EventTarget OffscreenCanvas Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks OffscreenCanvas is a transferable object. AvailableInWorkers -CanvasRenderingContext2D -OffscreenCanvasRenderingContext2D -ImageBitmap -ImageBitmapRenderingContext -TransferControlToOffscreen() -Window.RequestAnimationFrame -WebGL Off the Main Thread – Mozilla Hacks (2016) See also on MDN Constructors OffscreenCanvas() public OffscreenCanvas() OffscreenCanvas(ulong, ulong) The OffscreenCanvas() constructor returns a newly instantiated OffscreenCanvas object. public OffscreenCanvas(ulong width, ulong height) Parameters width ulong height ulong Remarks -OffscreenCanvas, the interface this constructor belongs to See also on MDN Properties Height The height property returns and sets the height of an OffscreenCanvas object. public ulong Height { get; set; } Property Value ulong Remarks -OffscreenCanvas, the interface this property belongs to. See also on MDN Oncontextlost public EventHandlerNonNull Oncontextlost { get; set; } Property Value EventHandlerNonNull Oncontextrestored public EventHandlerNonNull Oncontextrestored { get; set; } Property Value EventHandlerNonNull Width The width property returns and sets the width of an OffscreenCanvas object. public ulong Width { get; set; } Property Value ulong Remarks -OffscreenCanvas, the interface this property belongs to. See also on MDN Methods ConvertToBlob(ImageEncodeOptions) The OffscreenCanvas.convertToBlob() method creates a Blob object representing the image contained in the canvas. public Task<Blob> ConvertToBlob(ImageEncodeOptions options) Parameters options ImageEncodeOptions Returns Task<Blob> A {{jsxref(\"Promise\")}} returning a Blob object representing the image contained in the canvas. Remarks The desired file format and image quality may be specified. If the file format is not specified, or if the given format is not supported, then the data will be exported as image/png. Browsers are required to support image/png; many will support additional formats including image/jpeg and image/webp. The created image will have a resolution of 96dpi for file formats that support encoding resolution metadata. -The interface defining this method, OffscreenCanvas. See also on MDN GetContext(OffscreenRenderingContextId, dynamic) The OffscreenCanvas.getContext() method returns a drawing context for an offscreen canvas, or null if the context identifier is not supported. public Union23? GetContext(OffscreenRenderingContextId contextId, dynamic options) Parameters contextId OffscreenRenderingContextId options dynamic Returns Union23? A rendering context which is either aIf the contextType doesn&apos;t match a possible drawing context, null is returned. Remarks -The interface defining this method: OffscreenCanvas -GetContext(string, dynamic) -Available rendering contexts: CanvasRenderingContext2D, WebGLRenderingContext, WebGL2RenderingContext, ImageBitmapRenderingContext, and OffscreenCanvasRenderingContext2D See also on MDN TransferToImageBitmap() The OffscreenCanvas.transferToImageBitmap() method creates an ImageBitmap object from the most recently rendered image of the OffscreenCanvas. public ImageBitmap TransferToImageBitmap() Returns ImageBitmap An ImageBitmap. Remarks -The interface defining this method, OffscreenCanvas -TransferFromImageBitmap(ImageBitmap?) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.OffscreenCanvasRenderingContext2D.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OffscreenCanvasRenderingContext2D.html",
    "title": "Class OffscreenCanvasRenderingContext2D | CSharpToJavaScript",
    "keywords": "Class OffscreenCanvasRenderingContext2D Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The OffscreenCanvasRenderingContext2D interface is a CanvasRenderingContext2D rendering context for drawing to the bitmap of an OffscreenCanvas object. It is similar to the CanvasRenderingContext2D object, with the following differences: [To(\"FirstCharToLowerCase\")] public class OffscreenCanvasRenderingContext2D Inheritance object OffscreenCanvasRenderingContext2D Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTMLCanvasElement -canvas See also on MDN Properties Canvas public OffscreenCanvas Canvas { get; } Property Value OffscreenCanvas Methods Commit() The OffscreenCanvasRenderingContext2D.commit() method of the Canvas 2D API copies the rendering context's bitmap to the bitmap of the placeholder canvas element of the associated OffscreenCanvas object. The copy operation is synchronous. Calling this method is not needed for the transfer, since it happens automatically during the event-loop execution. public GlobalObject.Undefined Commit() Returns GlobalObject.Undefined Remarks -The interface defining this method: OffscreenCanvasRenderingContext2D See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.OffscreenRenderingContextId.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OffscreenRenderingContextId.html",
    "title": "Enum OffscreenRenderingContextId | CSharpToJavaScript",
    "keywords": "Enum OffscreenRenderingContextId Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum OffscreenRenderingContextId Fields Bitmaprenderer = 1 Webgl = 2 Webgl2 = 3 Webgpu = 4 _2d = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.OnBeforeUnloadEventHandlerNonNull.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OnBeforeUnloadEventHandlerNonNull.html",
    "title": "Struct OnBeforeUnloadEventHandlerNonNull | CSharpToJavaScript",
    "keywords": "Struct OnBeforeUnloadEventHandlerNonNull Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct OnBeforeUnloadEventHandlerNonNull Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.OnErrorEventHandlerNonNull.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OnErrorEventHandlerNonNull.html",
    "title": "Struct OnErrorEventHandlerNonNull | CSharpToJavaScript",
    "keywords": "Struct OnErrorEventHandlerNonNull Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct OnErrorEventHandlerNonNull Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.OptionalEffectTiming.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OptionalEffectTiming.html",
    "title": "Class OptionalEffectTiming | CSharpToJavaScript",
    "keywords": "Class OptionalEffectTiming Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class OptionalEffectTiming Inheritance object OptionalEffectTiming Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields PlaybackRate public Number PlaybackRate Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.OrientationSensor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OrientationSensor.html",
    "title": "Class OrientationSensor | CSharpToJavaScript",
    "keywords": "Class OrientationSensor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The OrientationSensor interface of the Sensor APIs is the base class for orientation sensors. This interface cannot be used directly. Instead it provides properties and methods accessed by interfaces that inherit from it. [To(\"FirstCharToLowerCase\")] public class OrientationSensor : Sensor Inheritance object EventTarget Sensor OrientationSensor Derived AbsoluteOrientationSensor RelativeOrientationSensor Inherited Members Sensor.Activated Sensor.HasReading Sensor.Timestamp Sensor.Start() Sensor.Stop() Sensor.Onreading Sensor.Onactivate Sensor.Onerror EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This feature may be blocked by a Permissions Policy set on your server. See also on MDN Properties Quaternion The quaternion read-only property of the OrientationSensor interface returns a four element 'Array' whose elements contain the components of the unit quaternion representing the device's orientation. public Number[]? Quaternion { get; } Property Value Number[] An 'Array' whose values are the x, y, z, and w components of the quaternion representing the device orientation. Remarks Because 'OrientationSensor' is a base class, quaternion may only be read from one of its derived classes. See also on MDN Methods PopulateMatrix(Union85) The populateMatrix method of the OrientationSensor interface populates the given target matrix with the rotation matrix based on the latest sensor reading. The rotation matrix is shown below. public GlobalObject.Undefined PopulateMatrix(Union85 targetMatrix) Parameters targetMatrix Union85 Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The formulas used to convert the sensor&apos;s quaternion to the provided matrix. where: See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.OrientationSensorLocalCoordinateSystem.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OrientationSensorLocalCoordinateSystem.html",
    "title": "Enum OrientationSensorLocalCoordinateSystem | CSharpToJavaScript",
    "keywords": "Enum OrientationSensorLocalCoordinateSystem Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum OrientationSensorLocalCoordinateSystem Fields Device = 0 Screen = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.OrientationSensorOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OrientationSensorOptions.html",
    "title": "Class OrientationSensorOptions | CSharpToJavaScript",
    "keywords": "Class OrientationSensorOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class OrientationSensorOptions : SensorOptions Inheritance object SensorOptions OrientationSensorOptions Inherited Members SensorOptions.Frequency object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ReferenceFrame public OrientationSensorLocalCoordinateSystem ReferenceFrame Field Value OrientationSensorLocalCoordinateSystem"
  },
  "api/CSharpToJavaScript.APIs.JS.OscillatorNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OscillatorNode.html",
    "title": "Class OscillatorNode | CSharpToJavaScript",
    "keywords": "Class OscillatorNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The OscillatorNode interface represents a periodic waveform, such as a sine wave. It is an AudioScheduledSourceNode audio-processing module that causes a specified frequency of a given wave to be created—in effect, a constant tone. [To(\"FirstCharToLowerCase\")] public class OscillatorNode : AudioScheduledSourceNode Inheritance object EventTarget AudioNode AudioScheduledSourceNode OscillatorNode Inherited Members AudioScheduledSourceNode.Onended AudioScheduledSourceNode.Start(Number) AudioScheduledSourceNode.Stop(Number) AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Using the Web Audio API See also on MDN Constructors OscillatorNode() public OscillatorNode() OscillatorNode(BaseAudioContext, OscillatorOptions) The OscillatorNode() constructor of the Web Audio API creates a new OscillatorNode object which is an AudioNode that represents a periodic waveform, like a sine wave, optionally setting the node&apos;s properties&apos; values to match values in a specified object. public OscillatorNode(BaseAudioContext context, OscillatorOptions options) Parameters context BaseAudioContext options OscillatorOptions Remarks If the default values of the properties are acceptable, you can optionally use the CreateOscillator() factory method instead; see Creating an AudioNode. See also on MDN Properties Detune The detune property of the OscillatorNode interface is an a-rate AudioParam representing detuning of oscillation in cents. public AudioParam Detune { get; } Property Value AudioParam An a-rate AudioParam. Remarks NOTE Note: though the AudioParam returned is read-only, the value it represents is not. -Using the Web Audio API See also on MDN Frequency The frequency property of the OscillatorNode interface is an a-rate AudioParam representing the frequency of oscillation in hertz. public AudioParam Frequency { get; } Property Value AudioParam An a-rate AudioParam. Remarks NOTE Note: though the AudioParam returned is read-only, the value it represents is not. -Using the Web Audio API See also on MDN Type The type property of the {{ domxref(&quot;OscillatorNode&quot;) }} interface specifies what shape of waveform the oscillator will output. There are several common waveforms available, as well as an option to specify a custom waveform shape. The shape of the waveform will affect the tone that is produced. public OscillatorType Type { get; set; } Property Value OscillatorType A string specifying the shape of oscillator wave. The different available values are: Remarks -Using the Web Audio API See also on MDN Methods SetPeriodicWave(PeriodicWave) The setPeriodicWave() method of the {{ domxref(\"OscillatorNode\") }} interface is used to point to a PeriodicWave defining a periodic waveform that can be used to shape the oscillator&apos;s output, when Type is custom. public GlobalObject.Undefined SetPeriodicWave(PeriodicWave periodicWave) Parameters periodicWave PeriodicWave Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using the Web Audio API -AudioContext.createPeriodicWave See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.OscillatorOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OscillatorOptions.html",
    "title": "Class OscillatorOptions | CSharpToJavaScript",
    "keywords": "Class OscillatorOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class OscillatorOptions : AudioNodeOptions Inheritance object AudioNodeOptions OscillatorOptions Inherited Members AudioNodeOptions.ChannelCount AudioNodeOptions.ChannelCountMode AudioNodeOptions.ChannelInterpretation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Detune public Number Detune Field Value Number Frequency public Number Frequency Field Value Number PeriodicWave public PeriodicWave PeriodicWave Field Value PeriodicWave Type public OscillatorType Type Field Value OscillatorType"
  },
  "api/CSharpToJavaScript.APIs.JS.OscillatorType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OscillatorType.html",
    "title": "Enum OscillatorType | CSharpToJavaScript",
    "keywords": "Enum OscillatorType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum OscillatorType Fields Custom = 4 Sawtooth = 2 Sine = 0 Square = 1 Triangle = 3"
  },
  "api/CSharpToJavaScript.APIs.JS.OverSampleType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OverSampleType.html",
    "title": "Enum OverSampleType | CSharpToJavaScript",
    "keywords": "Enum OverSampleType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum OverSampleType Fields None = 0 _2x = 1 _4x = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.PageTransitionEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PageTransitionEvent.html",
    "title": "Class PageTransitionEvent | CSharpToJavaScript",
    "keywords": "Class PageTransitionEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The PageTransitionEvent event object is available inside handler functions for the pageshow and pagehide events, fired when a document is being loaded or unloaded. [To(\"FirstCharToLowerCase\")] public class PageTransitionEvent : Event Inheritance object Event PageTransitionEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -pageshow event -pagehide event See also on MDN Constructors PageTransitionEvent() public PageTransitionEvent() PageTransitionEvent(string, PageTransitionEventInit) The PageTransitionEvent() constructor creates a new PageTransitionEvent object, that is used by the Window/pageshow_event or Window/pagehide_event events, fired at the Window object when a page is loaded or unloaded. public PageTransitionEvent(string type, PageTransitionEventInit eventInitDict) Parameters type string eventInitDict PageTransitionEventInit Remarks NOTE Note: A web developer doesn't typically need to call this constructor, as the browser creates these objects itself when firing Window/pageshow_event or Window/pagehide_event events. -pageshow event -pagehide event See also on MDN Properties Persisted The persisted read-only property indicates if a webpage is loading from a cache. public bool Persisted { get; } Property Value bool A boolean value. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PageTransitionEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PageTransitionEventInit.html",
    "title": "Class PageTransitionEventInit | CSharpToJavaScript",
    "keywords": "Class PageTransitionEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PageTransitionEventInit : EventInit Inheritance object EventInit PageTransitionEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Persisted public bool Persisted Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.PaintRenderingContext2D.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PaintRenderingContext2D.html",
    "title": "Class PaintRenderingContext2D | CSharpToJavaScript",
    "keywords": "Class PaintRenderingContext2D Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PaintRenderingContext2D Inheritance object PaintRenderingContext2D Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.PaintRenderingContext2DSettings.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PaintRenderingContext2DSettings.html",
    "title": "Class PaintRenderingContext2DSettings | CSharpToJavaScript",
    "keywords": "Class PaintRenderingContext2DSettings Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PaintRenderingContext2DSettings Inheritance object PaintRenderingContext2DSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alpha public bool Alpha Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.PaintSize.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PaintSize.html",
    "title": "Class PaintSize | CSharpToJavaScript",
    "keywords": "Class PaintSize Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PaintSize Inheritance object PaintSize Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Height public Number Height { get; } Property Value Number Width public Number Width { get; } Property Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.PaintWorkletGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PaintWorkletGlobalScope.html",
    "title": "Class PaintWorkletGlobalScope | CSharpToJavaScript",
    "keywords": "Class PaintWorkletGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The PaintWorkletGlobalScope interface of the CSS Painting API represents the global object available inside a paint Worklet. [To(\"FirstCharToLowerCase\")] public class PaintWorkletGlobalScope : WorkletGlobalScope Inheritance object WorkletGlobalScope PaintWorkletGlobalScope Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -CSS Painting API -Houdini APIs See also on MDN Properties DevicePixelRatio The read-only devicePixelRatio read-only property of the PaintWorkletGlobalScope interface returns the current device's ratio of physical pixels to logical pixels. public double DevicePixelRatio { get; } Property Value double A double-precision integer. Remarks -CSS.paintWorklet -Worklet -CSS Painting API -Houdini APIs -window.devicePixelRatio See also on MDN Methods RegisterPaint(string, VoidFunction) The registerPaint() method of the PaintWorkletGlobalScope interface registers a class to programmatically generate an image where a CSS property expects a file. public GlobalObject.Undefined RegisterPaint(string name, VoidFunction paintCtor) Parameters name string paintCtor VoidFunction Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -CSS Painting API -Houdini APIs See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PannerNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PannerNode.html",
    "title": "Class PannerNode | CSharpToJavaScript",
    "keywords": "Class PannerNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The PannerNode interface defines an audio-processing object that represents the location, direction, and behavior of an audio source signal in a simulated physical space. This AudioNode uses right-hand Cartesian coordinates to describe the source's position as a vector and its orientation as a 3D directional cone. [To(\"FirstCharToLowerCase\")] public class PannerNode : AudioNode Inheritance object EventTarget AudioNode PannerNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A PannerNode always has exactly one input and one output: the input can be mono or stereo but the output is always stereo (2 channels); you can&apos;t have panning effects without at least two audio channels! The PannerNode defines a spatial position and direction for a given signal. -Using the Web Audio API See also on MDN Constructors PannerNode() public PannerNode() PannerNode(BaseAudioContext, PannerOptions) The PannerNode() constructor of the Web Audio API creates a new PannerNode object instance. public PannerNode(BaseAudioContext context, PannerOptions options) Parameters context BaseAudioContext options PannerOptions Remarks See also on MDN Properties ConeInnerAngle The coneInnerAngle property of the PannerNode interface is a double value describing the angle, in degrees, of a cone inside of which there will be no volume reduction. public Number ConeInnerAngle { get; set; } Property Value Number A double. Remarks The coneInnerAngle property&apos;s default value is 360, suitable for a non-directional source. -Using the Web Audio API -Web Audio spatialization basics See also on MDN ConeOuterAngle The coneOuterAngle property of the PannerNode interface is a double value describing the angle, in degrees, of a cone outside of which the volume will be reduced by a constant value, defined by the ConeOuterGain property. public Number ConeOuterAngle { get; set; } Property Value Number A double. Remarks The coneOuterAngle property&apos;s default value is 0. -Using the Web Audio API -Web Audio spatialization basics See also on MDN ConeOuterGain The coneOuterGain property of the PannerNode interface is a double value, describing the amount of volume reduction outside the cone, defined by the ConeOuterAngle attribute. public Number ConeOuterGain { get; set; } Property Value Number A double. The default is 0, and its value can be in the range 0–1. Remarks The coneOuterGain property&apos;s default value is 0, meaning that no sound can be heard outside the cone. -Using the Web Audio API -Web Audio spatialization basics See also on MDN DistanceModel The distanceModel property of the PannerNode interface is an enumerated value determining which algorithm to use to reduce the volume of the audio source as it moves away from the listener. public DistanceModelType DistanceModel { get; set; } Property Value DistanceModelType An enum — see DistanceModelType. Remarks The possible values are: inverse is the default value of distanceModel. -Using the Web Audio API -Web Audio spatialization basics See also on MDN MaxDistance The maxDistance property of the PannerNode interface is a double value representing the maximum distance between the audio source and the listener, after which the volume is not reduced any further. This value is used only by the linear distance model. public Number MaxDistance { get; set; } Property Value Number A double. The default is 10000, and non-positive values are not allowed. Remarks The maxDistance property&apos;s default value is 10000. -Using the Web Audio API See also on MDN OrientationX The orientationX property of the {{ domxref(&quot;PannerNode&quot;) }} interface indicates the X (horizontal) component of the direction in which the audio source is facing, in a 3D Cartesian coordinate space. public AudioParam OrientationX { get; } Property Value AudioParam An AudioParam whose value is the X component of the direction in which the audio source is facing, in 3D Cartesian coordinate space. Remarks The complete vector is defined by the position of the audio source, given as (PositionX, {{domxref(\"PannerNode.positionY\", \"positionY\")}}, PositionZ), and the orientation of the audio source (that is, the direction in which it&apos;s facing), given as (OrientationX, OrientationY, OrientationZ). Depending on the directionality of the sound (as specified using the attributes ConeInnerAngle, ConeOuterAngle, and ConeOuterGain), the orientation of the sound may alter the perceived volume of the sound as it&apos;s being played. If the sound is pointing toward the listener, it will be louder than if the sound is pointed away from the listener. The AudioParam contained by this property is read only; however, you can still change the value of the parameter by assigning a new value to its Value property. -Using the Web Audio API -Web Audio spatialization basics -PannerNode See also on MDN OrientationY The orientationY property of the PannerNode interface indicates the Y (vertical) component of the direction the audio source is facing, in 3D Cartesian coordinate space. public AudioParam OrientationY { get; } Property Value AudioParam An AudioParam whose value is the Y component of the direction the audio source is facing, in 3D Cartesian coordinate space. Remarks The complete vector is defined by the position of the audio source, given as (PositionX, {{domxref(\"PannerNode.positionY\", \"positionY\")}}, PositionZ), and the orientation of the audio source (that is, the direction in which it&apos;s facing), given as (OrientationX, OrientationY, OrientationZ). Depending on the directionality of the sound (as specified using the attributes ConeInnerAngle, ConeOuterAngle, and ConeOuterGain), the orientation of the sound may alter the perceived volume of the sound as it&apos;s being played. If the sound is pointing toward the listener, it will be louder than if the sound is pointed away from the listener. The AudioParam contained by this property is read only; however, you can still change the value of the parameter by assigning a new value to its Value property. -Using the Web Audio API -Web Audio spatialization basics -PannerNode See also on MDN OrientationZ The orientationZ property of the PannerNode interface indicates the Z (depth) component of the direction the audio source is facing, in 3D Cartesian coordinate space. public AudioParam OrientationZ { get; } Property Value AudioParam An AudioParam whose value is the Z component of the direction the audio source is facing, in 3D Cartesian coordinate space. Remarks The complete vector is defined by the position of the audio source, given as (PositionX, {{domxref(\"PannerNode.positionY\", \"positionY\")}}, PositionZ), and the orientation of the audio source (that is, the direction in which it&apos;s facing), given as (OrientationX, OrientationY, OrientationZ). Depending on the directionality of the sound (as specified using the attributes ConeInnerAngle, ConeOuterAngle, and ConeOuterGain), the orientation of the sound may alter the perceived volume of the sound as it&apos;s being played. If the sound is pointing toward the listener, it will be louder than if the sound is pointed away from the listener. The AudioParam contained by this property is read only; however, you can still change the value of the parameter by assigning a new value to its Value property. -Using the Web Audio API -Web Audio spatialization basics -PannerNode See also on MDN PanningModel The panningModel property of the PannerNode interface is an enumerated value determining which spatialization algorithm to use to position the audio in 3D space. public PanningModelType PanningModel { get; set; } Property Value PanningModelType An enum — see PanningModelType. Remarks The possible values are: -Using the Web Audio API See also on MDN PositionX The positionX property of the {{ domxref(&quot;PannerNode&quot;) }} interface specifies the X coordinate of the audio source&apos;s position in 3D Cartesian coordinates, corresponding to the horizontal axis (left-right). public AudioParam PositionX { get; } Property Value AudioParam An AudioParam whose value is the X coordinate of the audio source&apos;s position, in 3D Cartesian coordinates. The default value is 0. Remarks The complete vector is defined by the position of the audio source, given as (PositionX, {{domxref(\"PannerNode.positionY\", \"positionY\")}}, PositionZ), and the orientation of the audio source (that is, the direction in which it&apos;s facing), given as (OrientationX, OrientationY, OrientationZ). Depending on the directionality of the sound (as specified using the attributes ConeInnerAngle, ConeOuterAngle, and ConeOuterGain), the orientation of the sound may alter the perceived volume of the sound as it&apos;s being played. If the sound is pointing toward the listener, it will be louder than if the sound is pointed away from the listener. The AudioParam contained by this property is read only; however, you can still change the value of the parameter by assigning a new value to its Value property. -Using the Web Audio API -Web Audio spatialization basics -PannerNode See also on MDN PositionY The positionY property of the PannerNode interface specifies the Y coordinate of the audio source's position in 3D Cartesian coordinates, corresponding to the vertical axis (top-bottom). The complete vector is defined by the position of the audio source, given as (PositionX, PositionY, PositionZ), and the orientation of the audio source (that is, the direction in which it&apos;s facing), given as (OrientationX, OrientationY, OrientationZ). public AudioParam PositionY { get; } Property Value AudioParam An AudioParam whose value is the Y coordinate of the audio source&apos;s position, in 3D Cartesian coordinates. Remarks Depending on the directionality of the sound (as specified using the attributes ConeInnerAngle, ConeOuterAngle, and ConeOuterGain), the orientation of the sound may alter the perceived volume of the sound as it&apos;s being played. If the sound is pointing toward the listener, it will be louder than if the sound is pointed away from the listener. The AudioParam contained by this property is read only; however, you can still change the value of the parameter by assigning a new value to its Value property. -Using the Web Audio API -Web Audio spatialization basics -PannerNode See also on MDN PositionZ The positionZ property of the PannerNode interface specifies the Z coordinate of the audio source's position in 3D Cartesian coordinates, corresponding to the depth axis (behind-in front of the listener). The complete vector is defined by the position of the audio source, given as (PositionX, PositionY, {{domxref(\"PannerNode.positionZ\", &quot;positionZ&quot;)}}), and the orientation of the audio source (that is, the direction in which it's facing), given as (OrientationX, OrientationY, OrientationZ). public AudioParam PositionZ { get; } Property Value AudioParam An AudioParam whose value is the Z coordinate of the audio source&apos;s position, in 3D Cartesian coordinates. Remarks Depending on the directionality of the sound (as specified using the attributes ConeInnerAngle, ConeOuterAngle, and ConeOuterGain), the orientation of the sound may alter the perceived volume of the sound as it&apos;s being played. If the sound is pointing toward the listener, it will be louder than if the sound is pointed away from the listener. The AudioParam contained by this property is read only; however, you can still change the value of the parameter by assigning a new value to its Value property. -Using the Web Audio API -Web Audio spatialization basics -PannerNode See also on MDN RefDistance The refDistance property of the PannerNode interface is a double value representing the reference distance for reducing volume as the audio source moves further from the listener – i.e. the distance at which the volume reduction starts taking effect. This value is used by all distance models. public Number RefDistance { get; set; } Property Value Number A non-negative number. If the value is set to less than 0, a RangeError is thrown. Remarks The refDistance property&apos;s default value is 1. -Using the Web Audio API -Web Audio spatialization basics See also on MDN RolloffFactor The rolloffFactor property of the PannerNode interface is a double value describing how quickly the volume is reduced as the source moves away from the listener. This value is used by all distance models. The rolloffFactor property&apos;s default value is 1. public Number RolloffFactor { get; set; } Property Value Number A number whose range depends on the DistanceModel of the panner as follows (negative values are not allowed): Remarks -Using the Web Audio API -Web Audio spatialization basics See also on MDN Methods SetOrientation(Number, Number, Number) IMPORTANT Deprecated NOTE Note: The suggested replacement for this deprecated method is to instead set the orientationX, orientationY, and orientationZ attributes directly. public GlobalObject.Undefined SetOrientation(Number x, Number y, Number z) Parameters x Number y Number z Number Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The setOrientation() method of the PannerNode Interface defines the direction the audio source is playing in. This can have a big effect if the sound is very directional — controlled by the three cone-related attributes ConeInnerAngle, ConeOuterAngle, and ConeOuterGain. In such a case, a sound pointing away from the listener can be very quiet or even silent. The three parameters x, y and z are unitless and describe a direction vector in 3D space using the right-hand Cartesian coordinate system. The default value of the direction vector is (1, 0, 0). -Using the Web Audio API See also on MDN SetPosition(Number, Number, Number) IMPORTANT Deprecated NOTE Note: The suggested replacement for this deprecated method is to instead set the positionX, positionY, and positionZ attributes directly. public GlobalObject.Undefined SetPosition(Number x, Number y, Number z) Parameters x Number y Number z Number Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The setPosition() method of the PannerNode Interface defines the position of the audio source relative to the listener (represented by an AudioListener object stored in the Listener attribute.) The three parameters x, y and z are unitless and describe the source&apos;s position in 3D space using the right-hand Cartesian coordinate system. The setPosition() method&apos;s default value of the position is (0, 0, 0). -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PannerOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PannerOptions.html",
    "title": "Class PannerOptions | CSharpToJavaScript",
    "keywords": "Class PannerOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PannerOptions : AudioNodeOptions Inheritance object AudioNodeOptions PannerOptions Inherited Members AudioNodeOptions.ChannelCount AudioNodeOptions.ChannelCountMode AudioNodeOptions.ChannelInterpretation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ConeInnerAngle public Number ConeInnerAngle Field Value Number ConeOuterAngle public Number ConeOuterAngle Field Value Number ConeOuterGain public Number ConeOuterGain Field Value Number DistanceModel public DistanceModelType DistanceModel Field Value DistanceModelType MaxDistance public Number MaxDistance Field Value Number OrientationX public Number OrientationX Field Value Number OrientationY public Number OrientationY Field Value Number OrientationZ public Number OrientationZ Field Value Number PanningModel public PanningModelType PanningModel Field Value PanningModelType PositionX public Number PositionX Field Value Number PositionY public Number PositionY Field Value Number PositionZ public Number PositionZ Field Value Number RefDistance public Number RefDistance Field Value Number RolloffFactor public Number RolloffFactor Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.PanningModelType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PanningModelType.html",
    "title": "Enum PanningModelType | CSharpToJavaScript",
    "keywords": "Enum PanningModelType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum PanningModelType Fields Equalpower = 0 HRTF = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.ParentNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ParentNode.html",
    "title": "Interface ParentNode | CSharpToJavaScript",
    "keywords": "Interface ParentNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface ParentNode Properties ChildElementCount ulong ChildElementCount { get; } Property Value ulong Children HTMLCollection Children { get; } Property Value HTMLCollection FirstElementChild Element? FirstElementChild { get; } Property Value Element LastElementChild Element? LastElementChild { get; } Property Value Element Methods Append(params Union44[]) GlobalObject.Undefined Append(params Union44[] nodes) Parameters nodes Union44[] Returns GlobalObject.Undefined Prepend(params Union43[]) GlobalObject.Undefined Prepend(params Union43[] nodes) Parameters nodes Union43[] Returns GlobalObject.Undefined QuerySelector(string) Element? QuerySelector(string selectors) Parameters selectors string Returns Element QuerySelectorAll(string) NodeList QuerySelectorAll(string selectors) Parameters selectors string Returns NodeList ReplaceChildren(params Union45[]) GlobalObject.Undefined ReplaceChildren(params Union45[] nodes) Parameters nodes Union45[] Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.PasswordCredential.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PasswordCredential.html",
    "title": "Class PasswordCredential | CSharpToJavaScript",
    "keywords": "Class PasswordCredential Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The interface of the Credential Management API provides information about a username/password pair. In supporting browsers an instance of this class may be passed in the credential member of the init object for global 'fetch'. [To(\"FirstCharToLowerCase\")] public class PasswordCredential : Credential, CredentialUserData Inheritance object Credential PasswordCredential Implements CredentialUserData Inherited Members Credential.Id Credential.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: This interface is restricted to top-level contexts and cannot be used from an iframe. See also on MDN Constructors PasswordCredential() public PasswordCredential() PasswordCredential(HTMLFormElement) The PasswordCredential() constructor creates a new PasswordCredential object. In supporting browsers, an instance of this class may be passed the credential from the init object for global 'fetch'. public PasswordCredential(HTMLFormElement form) Parameters form HTMLFormElement Remarks See also on MDN PasswordCredential(PasswordCredentialData) The PasswordCredential() constructor creates a new PasswordCredential object. In supporting browsers, an instance of this class may be passed the credential from the init object for global 'fetch'. public PasswordCredential(PasswordCredentialData data) Parameters data PasswordCredentialData Remarks See also on MDN Properties Password The password read-only property of the PasswordCredential interface returns a string containing the password of the credential. public string Password { get; } Property Value string A string containing a password. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PasswordCredentialData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PasswordCredentialData.html",
    "title": "Class PasswordCredentialData | CSharpToJavaScript",
    "keywords": "Class PasswordCredentialData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PasswordCredentialData : CredentialData Inheritance object CredentialData PasswordCredentialData Inherited Members CredentialData.Id object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IconURL public string IconURL Field Value string Name public string Name Field Value string Origin public required string Origin Field Value string Password public required string Password Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.Path2D.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Path2D.html",
    "title": "Class Path2D | CSharpToJavaScript",
    "keywords": "Class Path2D Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Path2D interface of the Canvas 2D API is used to declare a path that can then be used on a CanvasRenderingContext2D object. The path methods of the CanvasRenderingContext2D interface are also present on this interface, which gives you the convenience of being able to retain and replay your path whenever desired. [To(\"FirstCharToLowerCase\")] public class Path2D Inheritance object Path2D Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -CanvasRenderingContext2D See also on MDN Constructors Path2D() public Path2D() Path2D(Union21) The Path2D() constructor returns a newly instantiated Path2D object, optionally with another path as an argument (creates a copy), or optionally with a string consisting of SVG path data. public Path2D(Union21 path) Parameters path Union21 Remarks -Path2D, the interface this constructor belongs to See also on MDN Methods AddPath(Path2D, DOMMatrix2DInit) The Path2D.addPath() method of the Canvas 2D API adds one Path2D object to another Path2D object. public GlobalObject.Undefined AddPath(Path2D path, DOMMatrix2DInit transform) Parameters path Path2D transform DOMMatrix2DInit Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The interface defining this method: Path2D See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PaymentCredentialInstrument.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PaymentCredentialInstrument.html",
    "title": "Class PaymentCredentialInstrument | CSharpToJavaScript",
    "keywords": "Class PaymentCredentialInstrument Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PaymentCredentialInstrument Inheritance object PaymentCredentialInstrument Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DisplayName public required string DisplayName Field Value string Icon public required string Icon Field Value string IconMustBeShown public bool IconMustBeShown Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.PaymentRequest.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PaymentRequest.html",
    "title": "Class PaymentRequest | CSharpToJavaScript",
    "keywords": "Class PaymentRequest Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Payment Request API&apos;s PaymentRequest interface is the primary access point into the API, and lets web content and apps accept payments from the end user on behalf of the operator of the site or the publisher of the app. [To(\"FirstCharToLowerCase\")] public class PaymentRequest Inheritance object PaymentRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Methods IsSecurePaymentConfirmationAvailable() public static Task<bool> IsSecurePaymentConfirmationAvailable() Returns Task<bool>"
  },
  "api/CSharpToJavaScript.APIs.JS.Performance.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Performance.html",
    "title": "Class Performance | CSharpToJavaScript",
    "keywords": "Class Performance Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Web performance is the objective measurements and the perceived user experience of load time and runtime. Web performance is how long a site takes to load, become interactive and responsive, and how smooth the content is during user interactions - is the scrolling smooth? are buttons clickable? Are pop-ups quick to load and display, and do they animate smoothly as they do so? Web performance includes both objective measurements like time to load, frames per second, and time to become interactive, and subjective experiences of how long it felt like it took the content to load. [To(\"FirstCharToLowerCase\")] public class Performance Inheritance object Performance Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The longer it takes for a site to respond, the more users will abandon the site. It is important to minimize the loading and response times and add additional features to conceal latency by making the experience as available and interactive as possible, as soon as possible, while asynchronously loading in the longer tail parts of the experience. There are tools, APIs, and best practices that help us measure and improve web performance. We cover them in this section: HTML-The &lt;picture&gt; Element -The &lt;video&gt; Element -The &lt;source&gt; Element -The &lt;img&gt; srcset attribute-Responsive images -Preloading content with rel=&quot;preload&quot; -https://w3c.github.io/preload/ CSS-will-change -GPU v CPU -Measuring layout -Font-loading best practices JavaScript-DOMContentLoaded -Garbage collection -requestAnimationFrame APIs-Performance API -Navigation Timing API -Media Capabilities API -Network Information API -PerformanceNavigationTiming -Battery Status API -Navigator.deviceMemory -Intersection Observer -Using the User Timing API -High Resolution Timing API (https://w3c.github.io/hr-time/) -Resource Timing API -Page Visibility -Cooperative Scheduling of Background Tasks API-requestIdleCallback() -Beacon API -Resource Hints - dns-prefetch, preconnect, prefetch, and prerender -FetchEvent.preloadResponse -Performance Server Timing API Headers-Content-encoding -HTTP/2 -gZip -Client Hints Tools-Performance in Firefox Developer Tools Additional Metrics-Speed Index and Perceptual Speed Index Best Practices-Using Service Workers -Using Web Workers-Web Workers API -Offline and background operation -Caching -Content Delivery Networks (CDN) See also on MDN Properties EventCounts The read-only performance.eventCounts property is an EventCounts map containing the number of events which have been dispatched per event type. public EventCounts EventCounts { get; } Property Value EventCounts An EventCounts map. (A read-only Map without the clear(), delete(), and set() methods). Remarks Not all event types are exposed. You can only get counts for event types supported by the PerformanceEventTiming interface. -EventCounts -PerformanceEventTiming -Map See also on MDN InteractionCount public ulong InteractionCount { get; } Property Value ulong Navigation IMPORTANT Deprecated The legacy PerformanceNavigation interface represents information about how the navigation to the current document was done. public PerformanceNavigation Navigation { get; } Property Value PerformanceNavigation Remarks WARNING Warning: This interface is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. An object of this type can be obtained by calling the Navigation read-only attribute. -The Performance that allows access to an object of this type. -PerformanceNavigationTiming (part of Navigation Timing Level 2) that has superseded this API. See also on MDN Timing IMPORTANT Deprecated WARNING Warning: This interface is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public PerformanceTiming Timing { get; } Property Value PerformanceTiming Remarks The PerformanceTiming interface is a legacy interface kept for backwards compatibility and contains properties that offer performance timing information for various events which occur during the loading and use of the current page. You get a PerformanceTiming object describing your page using the Timing property. -The Timing property that creates such an object. -PerformanceNavigationTiming (part of Navigation Timing Level 2) that has superseded this API. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PerformanceEventTiming.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PerformanceEventTiming.html",
    "title": "Class PerformanceEventTiming | CSharpToJavaScript",
    "keywords": "Class PerformanceEventTiming Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The PerformanceEventTiming interface of the Event Timing API provides insights into the latency of certain event types triggered by user interaction. [To(\"FirstCharToLowerCase\")] public class PerformanceEventTiming Inheritance object PerformanceEventTiming Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Cancelable The read-only cancelable property returns the associated event&apos;s cancelable property, indicating whether the event can be canceled. public bool Cancelable { get; } Property Value bool A boolean. true if the associated event is cancelable, false otherwise. Remarks See also on MDN InteractionId The read-only interactionId property returns an ID that uniquely identifies a user interaction which triggered a series of associated events. public ulong InteractionId { get; } Property Value ulong A number. Remarks See also on MDN ProcessingEnd The read-only processingEnd property returns the time the last event handler finished executing. public Unsupported ProcessingEnd { get; } Property Value Unsupported A DOMHighResTimeStamp timestamp. Remarks It's equal to ProcessingStart when there are no such event handlers. -ProcessingStart See also on MDN ProcessingStart The read-only processingStart property returns the time at which event dispatch started. This is when event handlers are about to be executed. public Unsupported ProcessingStart { get; } Property Value Unsupported A DOMHighResTimeStamp timestamp. Remarks -ProcessingEnd See also on MDN Target The read-only target property returns the associated event&apos;s last target which is the node onto which the event was last dispatched. public Node? Target { get; } Property Value Node A Node onto which the event was last dispatched.Or null if the Node is disconnected from the document&apos;s DOM or is in the shadow DOM. Remarks See also on MDN Methods ToJSON() The toJSON() method of the PerformanceEventTiming interface is a {{Glossary(\"Serialization\",\"serializer\")}}; it returns a JSON representation of the PerformanceEventTiming object. public object ToJSON() Returns object A {{jsxref(\"JSON\")}} object that is the serialization of the PerformanceEventTiming object.The JSON doesn't contain the Target property because it is of type Node, which doesn't provide a toJSON() operation. Remarks -JSON See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PerformanceLongTaskTiming.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PerformanceLongTaskTiming.html",
    "title": "Class PerformanceLongTaskTiming | CSharpToJavaScript",
    "keywords": "Class PerformanceLongTaskTiming Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The PerformanceLongTaskTiming interface provides information about tasks that occupy the UI thread for 50 milliseconds or more. [To(\"FirstCharToLowerCase\")] public class PerformanceLongTaskTiming Inheritance object PerformanceLongTaskTiming Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -TaskAttributionTiming See also on MDN Properties Attribution The attribution readonly property of the PerformanceLongTaskTiming interface returns an array of 'TaskAttributionTiming' objects. public TaskAttributionTiming[] Attribution { get; } Property Value TaskAttributionTiming[] An {{jsxref(\"Array\")}} of 'TaskAttributionTiming' objects. Remarks -'TaskAttributionTiming' See also on MDN Methods ToJSON() The toJSON() method of the PerformanceLongTaskTiming interface is a {{Glossary(\"Serialization\",\"serializer\")}}; it returns a JSON representation of the PerformanceLongTaskTiming object. public object ToJSON() Returns object A {{jsxref(\"JSON\")}} object that is the serialization of the PerformanceLongTaskTiming object. Remarks -JSON See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PerformanceNavigation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PerformanceNavigation.html",
    "title": "Class PerformanceNavigation | CSharpToJavaScript",
    "keywords": "Class PerformanceNavigation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The legacy PerformanceNavigation interface represents information about how the navigation to the current document was done. [To(\"FirstCharToLowerCase\")] public class PerformanceNavigation Inheritance object PerformanceNavigation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks WARNING Warning: This interface is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. An object of this type can be obtained by calling the Navigation read-only attribute. -The Performance that allows access to an object of this type. -PerformanceNavigationTiming (part of Navigation Timing Level 2) that has superseded this API. See also on MDN Fields TYPE_BACK_FORWARD public const ushort TYPE_BACK_FORWARD = 2 Field Value ushort TYPE_NAVIGATE public const ushort TYPE_NAVIGATE = 0 Field Value ushort TYPE_RELOAD public const ushort TYPE_RELOAD = 1 Field Value ushort TYPE_RESERVED public const ushort TYPE_RESERVED = 255 Field Value ushort Properties RedirectCount IMPORTANT Deprecated The legacy PerformanceNavigation.redirectCount read-only property returns an unsigned short representing the number of REDIRECTs done before reaching the page. public ushort RedirectCount { get; } Property Value ushort An unsigned short. Remarks WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. -The PerformanceNavigation interface it belongs to. See also on MDN Type IMPORTANT Deprecated The legacy PerformanceNavigation.type read-only property returns an unsigned short containing a constant describing how the navigation to this page was done. public ushort Type { get; } Property Value ushort An unsigned short.Possible values are: Remarks WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. -The PerformanceNavigation interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PerformanceObserverInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PerformanceObserverInit.html",
    "title": "Class PerformanceObserverInit | CSharpToJavaScript",
    "keywords": "Class PerformanceObserverInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PerformanceObserverInit Inheritance object PerformanceObserverInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DurationThreshold public Unsupported DurationThreshold Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.PerformancePaintTiming.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PerformancePaintTiming.html",
    "title": "Class PerformancePaintTiming | CSharpToJavaScript",
    "keywords": "Class PerformancePaintTiming Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The PerformancePaintTiming interface provides timing information about &quot;paint&quot; (also called &quot;render&quot;) operations during web page construction. &quot;Paint&quot; refers to conversion of the render tree to on-screen pixels. [To(\"FirstCharToLowerCase\")] public class PerformancePaintTiming Inheritance object PerformancePaintTiming Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks There are two key paint moments this API provides: A third key paint moment is provided by the LargestContentfulPaint API: The data this API provides helps you minimize the time that users have to wait before they can see the site&apos;s content start to appear. Decreasing the time until these key paint moments make sites feel more responsive, performant, and engaging for your users. Like other Performance APIs, this API extends PerformanceEntry. -LargestContentfulPaint See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PerformanceTiming.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PerformanceTiming.html",
    "title": "Class PerformanceTiming | CSharpToJavaScript",
    "keywords": "Class PerformanceTiming Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated WARNING Warning: This interface is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. [To(\"FirstCharToLowerCase\")] public class PerformanceTiming Inheritance object PerformanceTiming Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The PerformanceTiming interface is a legacy interface kept for backwards compatibility and contains properties that offer performance timing information for various events which occur during the loading and use of the current page. You get a PerformanceTiming object describing your page using the Timing property. -The Timing property that creates such an object. -PerformanceNavigationTiming (part of Navigation Timing Level 2) that has superseded this API. See also on MDN Properties ConnectEnd IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong ConnectEnd { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.connectEnd read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, where the connection is opened network. If the transport layer reports an error and the connection establishment is started again, the last connection establishment end time is given. If a persistent connection is used, the value will be the same as FetchStart. A connection is considered as opened when all secure connection handshake, or SOCKS authentication, is terminated. -The PerformanceTiming interface it belongs to. See also on MDN ConnectStart IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong ConnectStart { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.connectStart read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, where the request to open a connection is sent to the network. If the transport layer reports an error and the connection establishment is started again, the last connection establishment start time is given. If a persistent connection is used, the value will be the same as FetchStart. -The PerformanceTiming interface it belongs to. See also on MDN DomComplete IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong DomComplete { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.domComplete read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, when the parser finished its work on the main document, that is when its ReadyState changes to &apos;complete&apos; and the corresponding Document/readystatechange_event event is thrown. -The PerformanceTiming interface it belongs to. See also on MDN DomContentLoadedEventEnd IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong DomContentLoadedEventEnd { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.domContentLoadedEventEnd read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, right after all the scripts that need to be executed as soon as possible, in order or not, has been executed. -The PerformanceTiming interface it belongs to. See also on MDN DomContentLoadedEventStart IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong DomContentLoadedEventStart { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.domContentLoadedEventStart read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, right before the parser sent the Document/DOMContentLoaded_event event, that is right after all the scripts that need to be executed right after parsing has been executed. -The PerformanceTiming interface it belongs to. See also on MDN DomInteractive IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong DomInteractive { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.domInteractive read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, when the parser finished its work on the main document, that is when its ReadyState changes to &apos;interactive&apos; and the corresponding Document/readystatechange_event event is thrown. This property can be used to measure the speed of loading websites that users feels. Nevertheless there are a few caveats that happens if scripts are blocking rendering and not loaded asynchronously or with custom Web fonts. Check if you are in one of these cases before using this property as a proxy for the user experience of a website&apos;s speed of loading. -The PerformanceTiming interface it belongs to. -The article &quot;domInteractive: is it? really?&quot; explaining when you can use this property as a proxy for the user experience of loading a website. See also on MDN DomLoading IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong DomLoading { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.domLoading read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, when the parser started its work, that is when its ReadyState changes to &apos;loading&apos; and the corresponding Document/readystatechange_event event is thrown. -The PerformanceTiming interface it belongs to. See also on MDN DomainLookupEnd IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong DomainLookupEnd { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.domainLookupEnd read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, where the domain lookup is finished. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as FetchStart. -The PerformanceTiming interface it belongs to. See also on MDN DomainLookupStart IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong DomainLookupStart { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.domainLookupStart read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, where the domain lookup starts. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as FetchStart. -The PerformanceTiming interface it belongs to. See also on MDN FetchStart IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong FetchStart { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.fetchStart read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, the browser is ready to fetch the document using an HTTP request. This moment is before the check to any application cache. -The PerformanceTiming interface it belongs to.PerformanceTiming.fetchStart See also on MDN LoadEventEnd IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface's PerformanceNavigationTiming.LoadEventEnd read-only property instead. public ulong LoadEventEnd { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.loadEventEnd read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, when the Window/load_event event handler terminated, that is when the load event is completed. If this event has not yet been sent, or is not yet completed, it returns 0. -The PerformanceTiming interface it belongs to. See also on MDN LoadEventStart IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface's PerformanceNavigationTiming.LoadEventStart read-only property instead. public ulong LoadEventStart { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.loadEventStart read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, when the Window/load_event event was sent for the current document. If this event has not yet been sent, it returns 0. -The PerformanceTiming interface it belongs to. See also on MDN NavigationStart IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong NavigationStart { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.navigationStart read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, right after the prompt for unload terminates on the previous document in the same browsing context. If there is no previous document, this value will be the same as FetchStart. -The PerformanceTiming interface it belongs to. See also on MDN RedirectEnd IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong RedirectEnd { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.redirectEnd read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, the last HTTP redirect is completed, that is when the last byte of the HTTP response has been received. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is 0. -The Performance interface it belongs to. See also on MDN RedirectStart IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong RedirectStart { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.redirectStart read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, the first HTTP redirect starts. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is 0. -The PerformanceTiming interface it belongs to. See also on MDN RequestStart IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong RequestStart { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.requestStart read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, when the browser sent the request to obtain the actual document, from the server or from a cache. If the transport layer fails after the start of the request and the connection is reopened, this property will be set to the time corresponding to the new request. -The PerformanceTiming interface it belongs to. See also on MDN ResponseEnd IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong ResponseEnd { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.responseEnd read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, when the browser received the last byte of the response, or when the connection is closed if this happened first, from the server from a cache or from a local resource. -The PerformanceTiming interface it belongs to. See also on MDN ResponseStart IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong ResponseStart { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.responseStart read-only property returns an unsigned long long representing the moment in time (in milliseconds since the UNIX epoch) when the browser received the first byte of the response from the server, cache, or local resource. -The PerformanceTiming interface it belongs to. See also on MDN SecureConnectionStart IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong SecureConnectionStart { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.secureConnectionStart read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, where the secure connection handshake starts. If no such connection is requested, it returns 0. -The PerformanceTiming interface it belongs to. See also on MDN UnloadEventEnd IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong UnloadEventEnd { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.unloadEventEnd read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, the Window/unload_event event handler finishes. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is 0. -The PerformanceTiming interface it belongs to. See also on MDN UnloadEventStart IMPORTANT Deprecated WARNING Warning: This interface of this property is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. public ulong UnloadEventStart { get; } Property Value ulong An unsigned long long. Remarks The legacy PerformanceTiming.unloadEventStart read-only property returns an unsigned long long representing the moment, in milliseconds since the UNIX epoch, the Window/unload_event event has been thrown. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is 0. -The PerformanceTiming interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PeriodicWave.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PeriodicWave.html",
    "title": "Class PeriodicWave | CSharpToJavaScript",
    "keywords": "Class PeriodicWave Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The PeriodicWave interface defines a periodic waveform that can be used to shape the output of an OscillatorNode. [To(\"FirstCharToLowerCase\")] public class PeriodicWave Inheritance object PeriodicWave Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks PeriodicWave has no inputs or outputs; it is used to define custom oscillators when calling SetPeriodicWave(PeriodicWave). The PeriodicWave itself is created/returned by CreatePeriodicWave(List<Number>, List<Number>, PeriodicWaveConstraints). -Using the Web Audio API See also on MDN Constructors PeriodicWave() public PeriodicWave() PeriodicWave(BaseAudioContext, PeriodicWaveOptions) The PeriodicWave() constructor of the Web Audio API creates a new PeriodicWave object instance. public PeriodicWave(BaseAudioContext context, PeriodicWaveOptions options) Parameters context BaseAudioContext options PeriodicWaveOptions Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PeriodicWaveConstraints.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PeriodicWaveConstraints.html",
    "title": "Class PeriodicWaveConstraints | CSharpToJavaScript",
    "keywords": "Class PeriodicWaveConstraints Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PeriodicWaveConstraints Inheritance object PeriodicWaveConstraints Derived PeriodicWaveOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DisableNormalization public bool DisableNormalization Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.PeriodicWaveOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PeriodicWaveOptions.html",
    "title": "Class PeriodicWaveOptions | CSharpToJavaScript",
    "keywords": "Class PeriodicWaveOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PeriodicWaveOptions : PeriodicWaveConstraints Inheritance object PeriodicWaveConstraints PeriodicWaveOptions Inherited Members PeriodicWaveConstraints.DisableNormalization object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Imag public List<Number> Imag Field Value List<Number> Real public List<Number> Real Field Value List<Number>"
  },
  "api/CSharpToJavaScript.APIs.JS.PermissionsPolicy.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PermissionsPolicy.html",
    "title": "Class PermissionsPolicy | CSharpToJavaScript",
    "keywords": "Class PermissionsPolicy Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PermissionsPolicy Inheritance object PermissionsPolicy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AllowedFeatures() public List<string> AllowedFeatures() Returns List<string> AllowsFeature(string, string) public bool AllowsFeature(string feature, string origin) Parameters feature string origin string Returns bool Features() public List<string> Features() Returns List<string> GetAllowlistForFeature(string) public List<string> GetAllowlistForFeature(string feature) Parameters feature string Returns List<string>"
  },
  "api/CSharpToJavaScript.APIs.JS.PermissionsPolicyViolationReportBody.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PermissionsPolicyViolationReportBody.html",
    "title": "Class PermissionsPolicyViolationReportBody | CSharpToJavaScript",
    "keywords": "Class PermissionsPolicyViolationReportBody Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PermissionsPolicyViolationReportBody : ReportBody Inheritance object ReportBody PermissionsPolicyViolationReportBody Inherited Members ReportBody.ToJSON() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ColumnNumber public long? ColumnNumber { get; } Property Value long? Disposition public string Disposition { get; } Property Value string FeatureId public string FeatureId { get; } Property Value string LineNumber public long? LineNumber { get; } Property Value long? SourceFile public string? SourceFile { get; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.PhotoCapabilities.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PhotoCapabilities.html",
    "title": "Class PhotoCapabilities | CSharpToJavaScript",
    "keywords": "Class PhotoCapabilities Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PhotoCapabilities Inheritance object PhotoCapabilities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FillLightMode public List<FillLightMode> FillLightMode Field Value List<FillLightMode> ImageHeight public MediaSettingsRange ImageHeight Field Value MediaSettingsRange ImageWidth public MediaSettingsRange ImageWidth Field Value MediaSettingsRange RedEyeReduction public RedEyeReduction RedEyeReduction Field Value RedEyeReduction"
  },
  "api/CSharpToJavaScript.APIs.JS.PhotoSettings.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PhotoSettings.html",
    "title": "Class PhotoSettings | CSharpToJavaScript",
    "keywords": "Class PhotoSettings Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PhotoSettings Inheritance object PhotoSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FillLightMode public FillLightMode FillLightMode Field Value FillLightMode ImageHeight public Number ImageHeight Field Value Number ImageWidth public Number ImageWidth Field Value Number RedEyeReduction public bool RedEyeReduction Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.PictureInPictureEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PictureInPictureEvent.html",
    "title": "Class PictureInPictureEvent | CSharpToJavaScript",
    "keywords": "Class PictureInPictureEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The PictureInPictureEvent interface represents picture-in-picture-related events, including HTMLVideoElement/enterpictureinpicture_event, HTMLVideoElement/leavepictureinpicture_event and PictureInPictureWindow/resize_event [To(\"FirstCharToLowerCase\")] public class PictureInPictureEvent : Event Inheritance object Event PictureInPictureEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The Event base interface See also on MDN Constructors PictureInPictureEvent() public PictureInPictureEvent() PictureInPictureEvent(string, PictureInPictureEventInit) The PictureInPictureEvent() constructor returns a new PictureInPictureEvent object with an optional EventTarget. When the event has both a source and a destination, the relatedTarget value must be set to the other target. public PictureInPictureEvent(string type, PictureInPictureEventInit eventInitDict) Parameters type string eventInitDict PictureInPictureEventInit Remarks -The PictureInPictureEvent interface it belongs to. See also on MDN Properties PictureInPictureWindow public PictureInPictureWindow PictureInPictureWindow { get; } Property Value PictureInPictureWindow"
  },
  "api/CSharpToJavaScript.APIs.JS.PictureInPictureEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PictureInPictureEventInit.html",
    "title": "Class PictureInPictureEventInit | CSharpToJavaScript",
    "keywords": "Class PictureInPictureEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PictureInPictureEventInit : EventInit Inheritance object EventInit PictureInPictureEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields PictureInPictureWindow public required PictureInPictureWindow PictureInPictureWindow Field Value PictureInPictureWindow"
  },
  "api/CSharpToJavaScript.APIs.JS.PictureInPictureWindow.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PictureInPictureWindow.html",
    "title": "Class PictureInPictureWindow | CSharpToJavaScript",
    "keywords": "Class PictureInPictureWindow Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The PictureInPictureWindow interface represents an object able to programmatically obtain the width and height and resize event of the floating video window. [To(\"FirstCharToLowerCase\")] public class PictureInPictureWindow : EventTarget Inheritance object EventTarget PictureInPictureWindow Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An object with this interface is obtained using the RequestPictureInPicture() promise return value. -Picture-in-Picture_API See also on MDN Properties Height The read-only PictureInPictureWindow property height returns the height of the floating video window in pixels. public long Height { get; } Property Value long An integer value indicating the height of the floating video window in pixels. This property is read-only, and has no default value. Remarks -Picture-in-Picture API -Width See also on MDN Onresize public EventHandlerNonNull Onresize { get; set; } Property Value EventHandlerNonNull Width The read-only PictureInPictureWindow property width returns the width of the floating video window in pixels. public long Width { get; } Property Value long An integer value indicating the width of the floating video window in pixels. This property is read-only, and has no default value. Remarks -Picture-in-Picture API -Height See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PlaneLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PlaneLayout.html",
    "title": "Class PlaneLayout | CSharpToJavaScript",
    "keywords": "Class PlaneLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PlaneLayout Inheritance object PlaneLayout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Offset public required ulong Offset Field Value ulong Stride public required ulong Stride Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.Plugin.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Plugin.html",
    "title": "Class Plugin | CSharpToJavaScript",
    "keywords": "Class Plugin Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The Plugin interface provides information about a browser plugin. [To(\"FirstCharToLowerCase\")] public class Plugin Inheritance object Plugin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: Own properties of Plugin objects are no longer enumerable in the latest browser versions. See also on MDN Properties Description public string Description { get; } Property Value string Filename public string Filename { get; } Property Value string Length public ulong Length { get; } Property Value ulong Name public string Name { get; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.PluginArray.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PluginArray.html",
    "title": "Class PluginArray | CSharpToJavaScript",
    "keywords": "Class PluginArray Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The PluginArray interface is used to store a list of Plugin objects describing the available plugins; it's returned by the Navigator.Plugins property. The PluginArray is not a JavaScript array, but has the length property and supports accessing individual items using bracket notation (plugins[2]), as well as via item(index) and namedItem(&quot;name&quot;) methods. [To(\"FirstCharToLowerCase\")] public class PluginArray Inheritance object PluginArray Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: Own properties of PluginArray objects are no longer enumerable in the latest browser versions. See also on MDN Properties Length public ulong Length { get; } Property Value ulong Methods Refresh() public GlobalObject.Undefined Refresh() Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.Point2D.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Point2D.html",
    "title": "Class Point2D | CSharpToJavaScript",
    "keywords": "Class Point2D Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class Point2D Inheritance object Point2D Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields X public Number X Field Value Number Y public Number Y Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.PopStateEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PopStateEvent.html",
    "title": "Class PopStateEvent | CSharpToJavaScript",
    "keywords": "Class PopStateEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll PopStateEvent is an interface for the popstate event. [To(\"FirstCharToLowerCase\")] public class PopStateEvent : Event Inheritance object Event PopStateEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A popstate event is dispatched to the window every time the active history entry changes between two history entries for the same document. If the history entry being activated was created by a call to history.pushState() or was affected by a call to history.replaceState(), the popstate event&apos;s state property contains a copy of the history entry&apos;s state object. -popstate event -hashchange event See also on MDN Constructors PopStateEvent() public PopStateEvent() PopStateEvent(string, PopStateEventInit) The PopStateEvent() constructor creates a new PopStateEvent object. public PopStateEvent(string type, PopStateEventInit eventInitDict) Parameters type string eventInitDict PopStateEventInit Remarks NOTE Note: A web developer doesn't typically need to call this constructor, as the browser creates these objects itself when firing Window/popstate_event events. -PushState(dynamic, string, string?) -ReplaceState(dynamic, string, string?) -Window/popstate_event event See also on MDN Properties State The state read-only property of the PopStateEvent interface represents the state stored when the event was created. public dynamic State { get; } Property Value dynamic An object, or null. Remarks Practically it is a value provided by the call to PushState(dynamic, string, string?) or ReplaceState(dynamic, string, string?) -PopStateEvent constructor -State See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PopStateEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PopStateEventInit.html",
    "title": "Class PopStateEventInit | CSharpToJavaScript",
    "keywords": "Class PopStateEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PopStateEventInit : EventInit Inheritance object EventInit PopStateEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields State public dynamic State Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.PopoverInvokerElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PopoverInvokerElement.html",
    "title": "Interface PopoverInvokerElement | CSharpToJavaScript",
    "keywords": "Interface PopoverInvokerElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface PopoverInvokerElement Properties PopoverTargetAction string PopoverTargetAction { get; set; } Property Value string PopoverTargetElement Element? PopoverTargetElement { get; set; } Property Value Element"
  },
  "api/CSharpToJavaScript.APIs.JS.PositionAlignSetting.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PositionAlignSetting.html",
    "title": "Enum PositionAlignSetting | CSharpToJavaScript",
    "keywords": "Enum PositionAlignSetting Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum PositionAlignSetting Fields Auto = 3 Center = 1 LineLeft = 0 LineRight = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.PredefinedColorSpace.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PredefinedColorSpace.html",
    "title": "Enum PredefinedColorSpace | CSharpToJavaScript",
    "keywords": "Enum PredefinedColorSpace Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum PredefinedColorSpace Fields DisplayP3 = 1 Srgb = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.PremultiplyAlpha.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PremultiplyAlpha.html",
    "title": "Enum PremultiplyAlpha | CSharpToJavaScript",
    "keywords": "Enum PremultiplyAlpha Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum PremultiplyAlpha Fields Default = 2 None = 0 Premultiply = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.PresentationStyle.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PresentationStyle.html",
    "title": "Enum PresentationStyle | CSharpToJavaScript",
    "keywords": "Enum PresentationStyle Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum PresentationStyle Fields Attachment = 2 Inline = 1 Unspecified = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.ProcessingInstruction.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ProcessingInstruction.html",
    "title": "Class ProcessingInstruction | CSharpToJavaScript",
    "keywords": "Class ProcessingInstruction Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ProcessingInstruction interface represents a processing instruction; that is, a Node which embeds an instruction targeting a specific application but that can be ignored by any other applications which don't recognize the instruction. [To(\"FirstCharToLowerCase\")] public class ProcessingInstruction : CharacterData, NonDocumentTypeChildNode, ChildNode, LinkStyle Inheritance object EventTarget Node CharacterData ProcessingInstruction Implements NonDocumentTypeChildNode ChildNode LinkStyle Inherited Members CharacterData.Data CharacterData.Length CharacterData.SubstringData(ulong, ulong) CharacterData.AppendData(string) CharacterData.InsertData(ulong, string) CharacterData.DeleteData(ulong, ulong) CharacterData.ReplaceData(ulong, ulong, string) Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks WARNING Warning: ProcessingInstruction nodes are only supported in XML documents, not in HTML documents. In these, a process instruction will be considered as a comment and be represented as a Comment object in the tree. A processing instruction may be different than the XML declaration. NOTE Note: User-defined processing instructions cannot begin with &quot;xml&quot;, as xml-prefixed processing-instruction target names are reserved by the XML specification for particular, standard uses (see, for example, &lt;?xml-stylesheet ?&gt;. For example: is a processing instruction whose target is xml. -document.createProcessingInstruction() -The DOM API See also on MDN Properties Target The read-only target property of the ProcessingInstruction interface represent the application to which the ProcessingInstruction is targeted. public string Target { get; } Property Value string A string containing the name of the application. Remarks For example: is a processing instruction whose target is xml. -The DOM API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ProgressEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ProgressEvent.html",
    "title": "Class ProgressEvent | CSharpToJavaScript",
    "keywords": "Class ProgressEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ProgressEvent interface represents events measuring progress of an underlying process, like an HTTP request (for an XMLHttpRequest, or the loading of the underlying resource of an img, audio, video, style or link). [To(\"FirstCharToLowerCase\")] public class ProgressEvent : Event Inheritance object Event ProgressEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The Event base interface. See also on MDN Constructors ProgressEvent() public ProgressEvent() ProgressEvent(string, ProgressEventInit) The ProgressEvent() constructor returns a new ProgressEvent object, representing the current completion of a long process. public ProgressEvent(string type, ProgressEventInit eventInitDict) Parameters type string eventInitDict ProgressEventInit Remarks -The ProgressEvent interface it belongs to. See also on MDN Properties LengthComputable The ProgressEvent.lengthComputable read-only property is a boolean flag indicating if the resource concerned by the ProgressEvent has a length that can be calculated. If not, the Total property has no significant value. public bool LengthComputable { get; } Property Value bool A boolean. Remarks -The ProgressEvent interface it belongs to. See also on MDN Loaded The ProgressEvent.loaded read-only property is an integer representing the amount of work already performed by the underlying process. The ratio of work done can be calculated with the property and ProgressEvent.total. When downloading a resource using HTTP, this value is specified in bytes (not bits), and only represents the part of the content itself, not headers and other overhead. public ulong Loaded { get; } Property Value ulong A number. Remarks -The ProgressEvent interface it belongs to. See also on MDN Total The ProgressEvent.total read-only property is an unsigned 64-bit integer value indicating the total size of the data being processed or transmitted. In the case of an HTTP transmission, this is the size of the body of the message (the Content-Length), and does not include headers and other overhead. public ulong Total { get; } Property Value ulong An integer. Remarks If the event's LengthComputable property is false, this value is meaningless and should be ignored. -The ProgressEvent interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ProgressEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ProgressEventInit.html",
    "title": "Class ProgressEventInit | CSharpToJavaScript",
    "keywords": "Class ProgressEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ProgressEventInit : EventInit Inheritance object EventInit ProgressEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LengthComputable public bool LengthComputable Field Value bool Loaded public ulong Loaded Field Value ulong Total public ulong Total Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.PromiseRejectionEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PromiseRejectionEvent.html",
    "title": "Class PromiseRejectionEvent | CSharpToJavaScript",
    "keywords": "Class PromiseRejectionEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The PromiseRejectionEvent interface represents events which are sent to the global script context when JavaScript Promises are rejected. These events are particularly useful for telemetry and debugging purposes. [To(\"FirstCharToLowerCase\")] public class PromiseRejectionEvent : Event Inheritance object Event PromiseRejectionEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks For details, see Promise rejection events. -Using promises -Promise -Window/rejectionhandled_event -Window/unhandledrejection_event See also on MDN Constructors PromiseRejectionEvent() public PromiseRejectionEvent() PromiseRejectionEvent(string, PromiseRejectionEventInit) The PromiseRejectionEvent() constructor returns a new PromiseRejectionEvent object, which represents events fired when a JavaScript Promise is rejected. public PromiseRejectionEvent(string type, PromiseRejectionEventInit eventInitDict) Parameters type string eventInitDict PromiseRejectionEventInit Remarks With promise rejection events, it becomes possible to detect and report promises which fail and whose failures go unnoticed. It also becomes easier to write a global handler for errors. There are two types of PromiseRejectionEvent: Window.Unhandledrejection_event is sent by the JavaScript runtime when a promise is rejected but the rejection goes unhandled. A Window.Rejectionhandled_eventevent is emitted if a promise is rejected but the rejection is caught by a rejection handler. -Using promises -Promise -PromiseRejectionEvent See also on MDN Properties Promise The PromiseRejectionEvent interface's promise read-only property indicates the JavaScript Promise which was rejected. You can examine the event's Reason property to learn why the promise was rejected. public Task<dynamic> Promise { get; } Property Value Task<dynamic> The JavaScript Promise which was rejected, and whose rejection went unhandled. Remarks -Promise rejection events -Promise -PromiseRejectionEvent -Window.Rejectionhandled_event -Window.Unhandledrejection_event See also on MDN Reason The PromiseRejectionEvent reason read-only property is any JavaScript value or Object which provides the reason passed into PromiseReject. This in theory provides information about why the promise was rejected. public dynamic Reason { get; } Property Value dynamic A value or object which provides information you can use to understand why the promise was rejected. This could be anything from an error code to an object with text, links, and whatever else you might wish to include. Remarks -Promise -PromiseRejectionEvent -Window.Rejectionhandled_event -Window.Unhandledrejection_event See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PromiseRejectionEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PromiseRejectionEventInit.html",
    "title": "Class PromiseRejectionEventInit | CSharpToJavaScript",
    "keywords": "Class PromiseRejectionEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PromiseRejectionEventInit : EventInit Inheritance object EventInit PromiseRejectionEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Promise public required Task<dynamic> Promise Field Value Task<dynamic> Reason public dynamic Reason Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.PropertyDefinition.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PropertyDefinition.html",
    "title": "Class PropertyDefinition | CSharpToJavaScript",
    "keywords": "Class PropertyDefinition Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PropertyDefinition Inheritance object PropertyDefinition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Inherits public required bool Inherits Field Value bool InitialValue public string InitialValue Field Value string Name public required string Name Field Value string Syntax public string Syntax Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.ProximityReadingValues.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ProximityReadingValues.html",
    "title": "Class ProximityReadingValues | CSharpToJavaScript",
    "keywords": "Class ProximityReadingValues Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ProximityReadingValues Inheritance object ProximityReadingValues Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Distance public required Number? Distance Field Value Number Max public required Number? Max Field Value Number Near public required bool? Near Field Value bool?"
  },
  "api/CSharpToJavaScript.APIs.JS.ProximitySensor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ProximitySensor.html",
    "title": "Class ProximitySensor | CSharpToJavaScript",
    "keywords": "Class ProximitySensor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ProximitySensor : Sensor Inheritance object EventTarget Sensor ProximitySensor Inherited Members Sensor.Activated Sensor.HasReading Sensor.Timestamp Sensor.Start() Sensor.Stop() Sensor.Onreading Sensor.Onactivate Sensor.Onerror EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProximitySensor() public ProximitySensor() ProximitySensor(SensorOptions) public ProximitySensor(SensorOptions sensorOptions) Parameters sensorOptions SensorOptions Properties Distance public Number? Distance { get; } Property Value Number Max public Number? Max { get; } Property Value Number Near public bool? Near { get; } Property Value bool?"
  },
  "api/CSharpToJavaScript.APIs.JS.PublicKeyCredential.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PublicKeyCredential.html",
    "title": "Class PublicKeyCredential | CSharpToJavaScript",
    "keywords": "Class PublicKeyCredential Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The PublicKeyCredential interface provides information about a public key / private key pair, which is a credential for logging in to a service using an un-phishable and data-breach resistant asymmetric key pair instead of a password. It inherits from Credential, and is part of the Web Authentication API extension to the Credential Management API. [To(\"FirstCharToLowerCase\")] public class PublicKeyCredential : Credential Inheritance object Credential PublicKeyCredential Inherited Members Credential.Id Credential.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: This API is restricted to top-level contexts. Use from within an iframe element will not have any effect. -The parent interface Credential See also on MDN Properties RawId The rawId read-only property of the PublicKeyCredential interface is an {{jsxref(\"ArrayBuffer\")}} object containing the identifier of the credentials. public byte[] RawId { get; } Property Value byte[] A ArrayBuffer containing the identifier of the credentials. This identifier is expected to be globally unique and is appointed for the current PublicKeyCredential and its associated AuthenticatorAssertionResponse. Remarks The PublicKeyCredential.Id property is a base64url encoded version of this identifier. NOTE Note: This property may only be used in top-level contexts and will not be available in an iframe for example. See also on MDN Response The response read-only property of the PublicKeyCredential interface is an AuthenticatorResponse object which is sent from the authenticator to the user agent for the creation/fetching of credentials. The information contained in this response will be used by the relying party&apos;s server to verify the demand is legitimate. public AuthenticatorResponse Response { get; } Property Value AuthenticatorResponse An AuthenticatorResponse object containing the data a relying party's script will receive and which should be sent to the relying party&apos;s server in order to validate the demand for creation or fetching. This object contains data from the client (AuthenticatorResponse/clientDataJSON) and from the authenticator. Remarks An AuthenticatorResponse is either: In order to validate the creation of credentials, a relying party&apos;s server needs both: NOTE Note: When validating the fetching of existing credentials, the whole PublicKeyCredential object and the client extensions are necessary for the relying party&apos;s server. NOTE Note: This property may only be used in top-level contexts and will not be available in an iframe for example. See also on MDN Methods GetClientExtensionResults() The getClientExtensionResults() method of the PublicKeyCredential interface returns a map between the identifiers of extensions requested during credential creation or authentication, and their results after processing by the user agent. public AuthenticationExtensionsClientOutputs GetClientExtensionResults() Returns AuthenticationExtensionsClientOutputs A Map, with each entry being an extensions' identifier string as the key, and the output from the processing of the extension by the client as the value. Remarks During the creation or fetching of a PublicKeyCredential (via Create(CredentialCreationOptions) and Get(CredentialRequestOptions) respectively), it is possible to request &quot;custom&quot; processing by the client for different extensions, specified in the publicKey option&apos;s extensions property. You can find more information about requesting the different extensions in Web Authentication extensions. NOTE Note: getClientExtensionResults() only returns the results from extensions processed by the user agent (client). The results from extensions processed by the authenticator can be found in the authenticator data available in AuthenticatorData. -The list of the currently defined extensions -AuthenticatorData which contains the result of the authenticator&apos;s extensions processing See also on MDN IsUserVerifyingPlatformAuthenticatorAvailable() public static Task<bool> IsUserVerifyingPlatformAuthenticatorAvailable() Returns Task<bool>"
  },
  "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialCreationOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialCreationOptions.html",
    "title": "Class PublicKeyCredentialCreationOptions | CSharpToJavaScript",
    "keywords": "Class PublicKeyCredentialCreationOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PublicKeyCredentialCreationOptions Inheritance object PublicKeyCredentialCreationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Attestation public AttestationConveyancePreference Attestation Field Value AttestationConveyancePreference AuthenticatorSelection public AuthenticatorSelectionCriteria AuthenticatorSelection Field Value AuthenticatorSelectionCriteria Challenge public required Union67 Challenge Field Value Union67 ExcludeCredentials public List<PublicKeyCredentialDescriptor> ExcludeCredentials Field Value List<PublicKeyCredentialDescriptor> Extensions public AuthenticationExtensionsClientInputs Extensions Field Value AuthenticationExtensionsClientInputs PubKeyCredParams public required List<PublicKeyCredentialParameters> PubKeyCredParams Field Value List<PublicKeyCredentialParameters> Rp public required PublicKeyCredentialRpEntity Rp Field Value PublicKeyCredentialRpEntity Timeout public ulong Timeout Field Value ulong User public required PublicKeyCredentialUserEntity User Field Value PublicKeyCredentialUserEntity"
  },
  "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialDescriptor.html",
    "title": "Class PublicKeyCredentialDescriptor | CSharpToJavaScript",
    "keywords": "Class PublicKeyCredentialDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PublicKeyCredentialDescriptor Inheritance object PublicKeyCredentialDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Id public required Union67 Id Field Value Union67 Transports public List<AuthenticatorTransport> Transports Field Value List<AuthenticatorTransport> Type public required PublicKeyCredentialType Type Field Value PublicKeyCredentialType"
  },
  "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialEntity.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialEntity.html",
    "title": "Class PublicKeyCredentialEntity | CSharpToJavaScript",
    "keywords": "Class PublicKeyCredentialEntity Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PublicKeyCredentialEntity Inheritance object PublicKeyCredentialEntity Derived PublicKeyCredentialRpEntity PublicKeyCredentialUserEntity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Icon public string Icon Field Value string Name public required string Name Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialParameters.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialParameters.html",
    "title": "Class PublicKeyCredentialParameters | CSharpToJavaScript",
    "keywords": "Class PublicKeyCredentialParameters Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PublicKeyCredentialParameters Inheritance object PublicKeyCredentialParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alg public required long Alg Field Value long Type public required PublicKeyCredentialType Type Field Value PublicKeyCredentialType"
  },
  "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialRequestOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialRequestOptions.html",
    "title": "Class PublicKeyCredentialRequestOptions | CSharpToJavaScript",
    "keywords": "Class PublicKeyCredentialRequestOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PublicKeyCredentialRequestOptions Inheritance object PublicKeyCredentialRequestOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AllowCredentials public List<PublicKeyCredentialDescriptor> AllowCredentials Field Value List<PublicKeyCredentialDescriptor> Challenge public required Union67 Challenge Field Value Union67 Extensions public AuthenticationExtensionsClientInputs Extensions Field Value AuthenticationExtensionsClientInputs RpId public string RpId Field Value string Timeout public ulong Timeout Field Value ulong UserVerification public UserVerificationRequirement UserVerification Field Value UserVerificationRequirement"
  },
  "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialRpEntity.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialRpEntity.html",
    "title": "Class PublicKeyCredentialRpEntity | CSharpToJavaScript",
    "keywords": "Class PublicKeyCredentialRpEntity Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PublicKeyCredentialRpEntity : PublicKeyCredentialEntity Inheritance object PublicKeyCredentialEntity PublicKeyCredentialRpEntity Inherited Members PublicKeyCredentialEntity.Name PublicKeyCredentialEntity.Icon object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Id public string Id Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialType.html",
    "title": "Enum PublicKeyCredentialType | CSharpToJavaScript",
    "keywords": "Enum PublicKeyCredentialType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum PublicKeyCredentialType Fields PublicKey = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialUserEntity.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PublicKeyCredentialUserEntity.html",
    "title": "Class PublicKeyCredentialUserEntity | CSharpToJavaScript",
    "keywords": "Class PublicKeyCredentialUserEntity Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PublicKeyCredentialUserEntity : PublicKeyCredentialEntity Inheritance object PublicKeyCredentialEntity PublicKeyCredentialUserEntity Inherited Members PublicKeyCredentialEntity.Name PublicKeyCredentialEntity.Icon object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DisplayName public required string DisplayName Field Value string Id public required Union67 Id Field Value Union67"
  },
  "api/CSharpToJavaScript.APIs.JS.QueuingStrategy.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.QueuingStrategy.html",
    "title": "Class QueuingStrategy | CSharpToJavaScript",
    "keywords": "Class QueuingStrategy Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class QueuingStrategy Inheritance object QueuingStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields HighWaterMark public double HighWaterMark Field Value double Size public QueuingStrategySize Size Field Value QueuingStrategySize"
  },
  "api/CSharpToJavaScript.APIs.JS.QueuingStrategyInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.QueuingStrategyInit.html",
    "title": "Class QueuingStrategyInit | CSharpToJavaScript",
    "keywords": "Class QueuingStrategyInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class QueuingStrategyInit Inheritance object QueuingStrategyInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields HighWaterMark public required double HighWaterMark Field Value double"
  },
  "api/CSharpToJavaScript.APIs.JS.QueuingStrategySize.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.QueuingStrategySize.html",
    "title": "Struct QueuingStrategySize | CSharpToJavaScript",
    "keywords": "Struct QueuingStrategySize Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct QueuingStrategySize Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.RTCDataChannel.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RTCDataChannel.html",
    "title": "Class RTCDataChannel | CSharpToJavaScript",
    "keywords": "Class RTCDataChannel Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The RTCDataChannel interface represents a network channel which can be used for bidirectional peer-to-peer transfers of arbitrary data. Every data channel is associated with an RTCPeerConnection, and each peer connection can have up to a theoretical maximum of 65,534 data channels (the actual limit may vary from browser to browser). [To(\"FirstCharToLowerCase\")] public class RTCDataChannel Inheritance object RTCDataChannel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To create a data channel and ask a remote peer to join you, call the RTCPeerConnection's RTCPeerConnection.CreateDataChannel method. The peer being invited to exchange data receives a RTCPeerConnection.Datachannel_event event (which has type RTCDataChannelEvent) to let it know the data channel has been added to the connection. RTCDataChannel is a transferable object. -WebRTC API See also on MDN Properties Priority public RTCPriorityType Priority { get; } Property Value RTCPriorityType"
  },
  "api/CSharpToJavaScript.APIs.JS.RTCDataChannelInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RTCDataChannelInit.html",
    "title": "Class RTCDataChannelInit | CSharpToJavaScript",
    "keywords": "Class RTCDataChannelInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RTCDataChannelInit Inheritance object RTCDataChannelInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Priority public RTCPriorityType Priority Field Value RTCPriorityType"
  },
  "api/CSharpToJavaScript.APIs.JS.RTCEncodedAudioFrame.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RTCEncodedAudioFrame.html",
    "title": "Class RTCEncodedAudioFrame | CSharpToJavaScript",
    "keywords": "Class RTCEncodedAudioFrame Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RTCEncodedAudioFrame Inheritance object RTCEncodedAudioFrame Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Data public byte[] Data { get; set; } Property Value byte[] Methods GetMetadata() public RTCEncodedAudioFrameMetadata GetMetadata() Returns RTCEncodedAudioFrameMetadata"
  },
  "api/CSharpToJavaScript.APIs.JS.RTCEncodedAudioFrameMetadata.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RTCEncodedAudioFrameMetadata.html",
    "title": "Class RTCEncodedAudioFrameMetadata | CSharpToJavaScript",
    "keywords": "Class RTCEncodedAudioFrameMetadata Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RTCEncodedAudioFrameMetadata Inheritance object RTCEncodedAudioFrameMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ContributingSources public List<ulong> ContributingSources Field Value List<ulong> MimeType public string MimeType Field Value string PayloadType public byte PayloadType Field Value byte RtpTimestamp public ulong RtpTimestamp Field Value ulong SequenceNumber public Number SequenceNumber Field Value Number SynchronizationSource public ulong SynchronizationSource Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.RTCEncodedVideoFrame.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RTCEncodedVideoFrame.html",
    "title": "Class RTCEncodedVideoFrame | CSharpToJavaScript",
    "keywords": "Class RTCEncodedVideoFrame Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RTCEncodedVideoFrame Inheritance object RTCEncodedVideoFrame Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Data public byte[] Data { get; set; } Property Value byte[] Type public RTCEncodedVideoFrameType Type { get; } Property Value RTCEncodedVideoFrameType Methods GetMetadata() public RTCEncodedVideoFrameMetadata GetMetadata() Returns RTCEncodedVideoFrameMetadata"
  },
  "api/CSharpToJavaScript.APIs.JS.RTCEncodedVideoFrameMetadata.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RTCEncodedVideoFrameMetadata.html",
    "title": "Class RTCEncodedVideoFrameMetadata | CSharpToJavaScript",
    "keywords": "Class RTCEncodedVideoFrameMetadata Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RTCEncodedVideoFrameMetadata Inheritance object RTCEncodedVideoFrameMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ContributingSources public List<ulong> ContributingSources Field Value List<ulong> Dependencies public List<ulong> Dependencies Field Value List<ulong> FrameId public ulong FrameId Field Value ulong Height public ushort Height Field Value ushort MimeType public string MimeType Field Value string PayloadType public byte PayloadType Field Value byte RtpTimestamp public ulong RtpTimestamp Field Value ulong SpatialIndex public ulong SpatialIndex Field Value ulong SynchronizationSource public ulong SynchronizationSource Field Value ulong TemporalIndex public ulong TemporalIndex Field Value ulong Timestamp public long Timestamp Field Value long Width public ushort Width Field Value ushort"
  },
  "api/CSharpToJavaScript.APIs.JS.RTCEncodedVideoFrameType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RTCEncodedVideoFrameType.html",
    "title": "Enum RTCEncodedVideoFrameType | CSharpToJavaScript",
    "keywords": "Enum RTCEncodedVideoFrameType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum RTCEncodedVideoFrameType Fields Delta = 2 Empty = 0 Key = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.RTCPriorityType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RTCPriorityType.html",
    "title": "Enum RTCPriorityType | CSharpToJavaScript",
    "keywords": "Enum RTCPriorityType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum RTCPriorityType Fields High = 3 Low = 1 Medium = 2 VeryLow = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.RTCRtpEncodingParameters.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RTCRtpEncodingParameters.html",
    "title": "Class RTCRtpEncodingParameters | CSharpToJavaScript",
    "keywords": "Class RTCRtpEncodingParameters Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll An instance of the WebRTC API&apos;s RTCRtpEncodingParameters dictionary describes a single configuration of a {{Glossary(\"codec\")}} for an RTCRtpSender. [To(\"FirstCharToLowerCase\")] public class RTCRtpEncodingParameters Inheritance object RTCRtpEncodingParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This dictionary is used to describe the configuration of an RTP sender&apos;s encodings when calling RTCRtpSender.GetParameters or RTCRtpSender.SetParameters. -RTCRtpDecodingParameters is used to describe the configuration of an RTP receiver's encodings. -Introduction to the Real-time Transport Protocol (RTP) -RTCRtpSender, RTCRtpReceiver, and RTCRtpTransceiver See also on MDN Fields NetworkPriority public RTCPriorityType NetworkPriority Field Value RTCPriorityType Priority public RTCPriorityType Priority Field Value RTCPriorityType"
  },
  "api/CSharpToJavaScript.APIs.JS.RTCRtpReceiver.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RTCRtpReceiver.html",
    "title": "Class RTCRtpReceiver | CSharpToJavaScript",
    "keywords": "Class RTCRtpReceiver Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The RTCRtpReceiver interface of the WebRTC API manages the reception and decoding of data for a MediaStreamTrack on an RTCPeerConnection. [To(\"FirstCharToLowerCase\")] public class RTCRtpReceiver Inheritance object RTCRtpReceiver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -WebRTC -RTCStatsReport -RTCRtpSender -RTCPeerConnection.GetStats See also on MDN Properties Transform public Union109? Transform { get; set; } Property Value Union109?"
  },
  "api/CSharpToJavaScript.APIs.JS.RTCRtpScriptTransform.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RTCRtpScriptTransform.html",
    "title": "Class RTCRtpScriptTransform | CSharpToJavaScript",
    "keywords": "Class RTCRtpScriptTransform Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RTCRtpScriptTransform Inheritance object RTCRtpScriptTransform Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RTCRtpScriptTransform() public RTCRtpScriptTransform() RTCRtpScriptTransform(Worker, dynamic, List<object>) public RTCRtpScriptTransform(Worker worker, dynamic options, List<object> transfer) Parameters worker Worker options dynamic transfer List<object>"
  },
  "api/CSharpToJavaScript.APIs.JS.RTCRtpScriptTransformer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RTCRtpScriptTransformer.html",
    "title": "Class RTCRtpScriptTransformer | CSharpToJavaScript",
    "keywords": "Class RTCRtpScriptTransformer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RTCRtpScriptTransformer Inheritance object RTCRtpScriptTransformer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Options public dynamic Options { get; } Property Value dynamic Readable public ReadableStream Readable { get; } Property Value ReadableStream Writable public WritableStream Writable { get; } Property Value WritableStream Methods GenerateKeyFrame(string) public Task<ulong> GenerateKeyFrame(string rid) Parameters rid string Returns Task<ulong> SendKeyFrameRequest() public Task<GlobalObject.Undefined> SendKeyFrameRequest() Returns Task<GlobalObject.Undefined>"
  },
  "api/CSharpToJavaScript.APIs.JS.RTCRtpSender.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RTCRtpSender.html",
    "title": "Class RTCRtpSender | CSharpToJavaScript",
    "keywords": "Class RTCRtpSender Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The RTCRtpSender interface provides the ability to control and obtain details about how a particular MediaStreamTrack is encoded and sent to a remote peer. [To(\"FirstCharToLowerCase\")] public class RTCRtpSender Inheritance object RTCRtpSender Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks With it, you can configure the encoding used for the corresponding track, get information about the device's media capabilities, and so forth. You can also obtain access to an RTCDTMFSender which can be used to send {{Glossary(\"DTMF\")}} codes (to simulate the user pressing buttons on a telephone's dial pad) to the remote peer. -WebRTC API -RTCPeerConnection.AddTrack -RTCPeerConnection.GetSenders -RTCRtpReceiver See also on MDN Properties Transform public Union109? Transform { get; set; } Property Value Union109? Methods GenerateKeyFrame(List<string>) public Task<GlobalObject.Undefined> GenerateKeyFrame(List<string> rids) Parameters rids List<string> Returns Task<GlobalObject.Undefined>"
  },
  "api/CSharpToJavaScript.APIs.JS.RTCTransformEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RTCTransformEvent.html",
    "title": "Class RTCTransformEvent | CSharpToJavaScript",
    "keywords": "Class RTCTransformEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RTCTransformEvent : Event Inheritance object Event RTCTransformEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Transformer public RTCRtpScriptTransformer Transformer { get; } Property Value RTCRtpScriptTransformer"
  },
  "api/CSharpToJavaScript.APIs.JS.RadioNodeList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RadioNodeList.html",
    "title": "Class RadioNodeList | CSharpToJavaScript",
    "keywords": "Class RadioNodeList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The RadioNodeList interface represents a collection of radio elements in a form or a fieldset element. [To(\"FirstCharToLowerCase\")] public class RadioNodeList : NodeList Inheritance object NodeList RadioNodeList Inherited Members NodeList.Length NodeList.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The form, fieldset, input elements. See also on MDN Properties Value If the underlying element collection contains radio buttons, the RadioNodeList.value property represents the checked radio button. On retrieving the value property, the value of the currently checked radio button is returned as a string. If the collection does not contain any radio buttons or none of the radio buttons in the collection is in checked state, the empty string is returned. On setting the value property, the first radio button input element whose value property is equal to the new value will be set to checked. public string Value { get; set; } Property Value string Remarks -The form, fieldset, input elements. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Range.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Range.html",
    "title": "Class Range | CSharpToJavaScript",
    "keywords": "Class Range Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Range interface represents a fragment of a document that can contain nodes and parts of text nodes. [To(\"FirstCharToLowerCase\")] public class Range : AbstractRange Inheritance object AbstractRange Range Inherited Members AbstractRange.StartContainer AbstractRange.StartOffset AbstractRange.EndContainer AbstractRange.EndOffset AbstractRange.Collapsed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A range can be created by using the CreateRange() method. Range objects can also be retrieved by using the Selection/getRangeAt method of the Selection object or the Document/caretRangeFromPoint method of the Document object. There also is the Range() constructor available. -The DOM interfaces index See also on MDN Constructors Range() The Range() constructor returns a newly created Range object whose start and end is the global Document object. public Range() Remarks -The DOM interfaces index -CreateRange() See also on MDN Fields END_TO_END public const ushort END_TO_END = 2 Field Value ushort END_TO_START public const ushort END_TO_START = 3 Field Value ushort START_TO_END public const ushort START_TO_END = 1 Field Value ushort START_TO_START public const ushort START_TO_START = 0 Field Value ushort Properties CommonAncestorContainer The Range.commonAncestorContainer read-only property returns the deepest — or furthest down the document tree — Node that contains both boundary points of the Range. This means that if Range.StartContainer and Range.EndContainer both refer to the same node, this node is the common ancestor container. public Node CommonAncestorContainer { get; } Property Value Node A Node object. Remarks Since a Range need not be continuous, and may also partially select nodes, this is a convenient way to find a Node which encloses a Range. This property is read-only. To change the ancestor container of a Node, consider using the various methods available to set the start and end positions of the Range, such as SetStart(Node, ulong) and SetEnd(Node, ulong). -The DOM interfaces index See also on MDN Methods CloneContents() The Range.cloneContents() returns a {{ domxref(\"DocumentFragment\") }} copying the objects of type Node included in the Range. public DocumentFragment CloneContents() Returns DocumentFragment A DocumentFragment object. Remarks Event listeners added using AddEventListener(string, Action?, Union41) are not copied during cloning. HTML attribute events are duplicated as they are for the CloneNode(bool) method. HTML id attributes are also cloned, which can lead to an invalid document through cloning. Partially selected nodes include the parent tags necessary to make the document fragment valid. -The DOM interfaces index See also on MDN CloneRange() The Range.cloneRange() method returns a Range object with boundary points identical to the cloned Range. public Range CloneRange() Returns Range A Range object. Remarks The returned clone is copied by value, not reference, so a change in either Range does not affect the other. -The DOM interfaces index See also on MDN Collapse(bool) The Range.collapse() method collapses the Range to one of its boundary points. public GlobalObject.Undefined Collapse(bool toStart) Parameters toStart bool Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks A collapsed Range is empty, containing no content, specifying a single-point in a DOM tree. To determine if a Range is already collapsed, see the Range.Collapsed property. -The DOM interfaces index See also on MDN CompareBoundaryPoints(ushort, Range) The Range.compareBoundaryPoints() method compares the boundary points of the Range with those of another range. public Number CompareBoundaryPoints(ushort how, Range sourceRange) Parameters how ushort sourceRange Range Returns Number A number, -1, 0, or 1, indicating whether the corresponding boundary-point of the Range is respectively before, equal to, or after the corresponding boundary-point of sourceRange. Remarks -The DOM interfaces index See also on MDN ComparePoint(Node, ulong) The Range.comparePoint() method returns -1, 0, or 1 depending on whether the referenceNode is before, the same as, or after the Range. public Number ComparePoint(Node node, ulong offset) Parameters node Node offset ulong Returns Number Returns -1, 0, or 1. Remarks If the reference node is a Node of type Text, Comment, or CDATASection, then offset is the number of characters from the start of reference node. For other Node types, offset is the number of child nodes between the start of the reference node. -The DOM interfaces index See also on MDN CreateContextualFragment(string) The Range.createContextualFragment() method returns a DocumentFragment by invoking the HTML fragment parsing algorithm or the XML fragment parsing algorithm with the start of the range (the parent of the selected node) as the context node. The HTML fragment parsing algorithm is used if the range belongs to a Document whose HTMLness bit is set. In the HTML case, if the context node would be html, for historical reasons the fragment parsing algorithm is invoked with body as the context instead. public DocumentFragment CreateContextualFragment(string fragment) Parameters fragment string Returns DocumentFragment A DocumentFragment object. Remarks -The DOM interfaces index See also on MDN DeleteContents() The Range.deleteContents() method removes the contents of the Range from the Document. public GlobalObject.Undefined DeleteContents() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Unlike ExtractContents(), this method does not return a DocumentFragment containing the deleted content. -The DOM interfaces index See also on MDN Detach() The Range.detach() method does nothing. It used to disable the Range object and enable the browser to release associated resources. The method has been kept for compatibility. public GlobalObject.Undefined Detach() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The DOM interfaces index See also on MDN ExtractContents() The Range.extractContents() method moves contents of the Range from the document tree into a DocumentFragment. public DocumentFragment ExtractContents() Returns DocumentFragment A DocumentFragment object. Remarks Event listeners added using DOM Events are not retained during extraction. HTML attribute events are retained or duplicated as they are for the CloneNode(bool) method. HTML id attributes are also cloned, which can lead to an invalid document if a partially-selected node is extracted and appended to the document. Partially selected nodes are cloned to include the parent tags necessary to make the document fragment valid. -The DOM interfaces index See also on MDN InsertNode(Node) The Range.insertNode() method inserts a node at the start of the Range. public GlobalObject.Undefined InsertNode(Node node) Parameters node Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The new node is inserted at the start boundary point of the Range. If the new node is to be added to a text Node, that Node is split at the insertion point, and the insertion occurs between the two text nodes. If the new node is a document fragment, the children of the document fragment are inserted instead. -The DOM interfaces index See also on MDN IntersectsNode(Node) The Range.intersectsNode() method returns a boolean indicating whether the given Node intersects the Range. public bool IntersectsNode(Node node) Parameters node Node Returns bool A boolean. Remarks -The DOM interfaces index See also on MDN IsPointInRange(Node, ulong) The Range.isPointInRange() method returns a boolean indicating whether the given point is in the Range. It returns true if the point (cursor position) at offset within ReferenceNode is within this range. public bool IsPointInRange(Node node, ulong offset) Parameters node Node offset ulong Returns bool A boolean. Remarks -The DOM interfaces index See also on MDN SelectNode(Node) The Range.selectNode() method sets the Range to contain the Node and its contents. The parent Node of the start and end of the Range will be the same as the parent of the referenceNode. public GlobalObject.Undefined SelectNode(Node node) Parameters node Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The DOM interfaces index See also on MDN SelectNodeContents(Node) The Range.selectNodeContents() method sets the Range to contain the contents of a Node. public GlobalObject.Undefined SelectNodeContents(Node node) Parameters node Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The parent Node of the start and end of the Range will be the reference node. The startOffset is 0, and the endOffset is the number of child Nodes or number of characters contained in the reference node. -The DOM interfaces index See also on MDN SetEnd(Node, ulong) The Range.setEnd() method sets the end position of a {{ domxref(&quot;Range&quot;) }} to be located at the given offset into the specified node x.Setting the end point above (higher in the document) than the start point will result in a collapsed range with the start and end points both set to the specified end position. public GlobalObject.Undefined SetEnd(Node node, ulong offset) Parameters node Node offset ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The DOM interfaces index See also on MDN SetEndAfter(Node) The Range.setEndAfter() method sets the end position of a Range relative to another Node. The parent Node of end of the Range will be the same as that for the referenceNode. public GlobalObject.Undefined SetEndAfter(Node node) Parameters node Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The DOM interfaces index See also on MDN SetEndBefore(Node) The Range.setEndBefore() method sets the end position of a Range relative to another Node. The parent Node of end of the Range will be the same as that for the referenceNode. public GlobalObject.Undefined SetEndBefore(Node node) Parameters node Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The DOM interfaces index See also on MDN SetStart(Node, ulong) The Range.setStart() method sets the start position of a Range. public GlobalObject.Undefined SetStart(Node node, ulong offset) Parameters node Node offset ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If the startNode is a Node of type Text, Comment, or CDataSection, then startOffset is the number of characters from the start of startNode. For other Node types, startOffset is the number of child nodes between the start of the startNode. Setting the start point below (lower in the document) the end point will result in a collapsed range with the start and end points both set to the specified start position. -The DOM interfaces index See also on MDN SetStartAfter(Node) The Range.setStartAfter() method sets the start position of a Range relative to a Node. The parent Node of the start of the Range will be the same as that for the referenceNode. public GlobalObject.Undefined SetStartAfter(Node node) Parameters node Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The DOM interfaces index See also on MDN SetStartBefore(Node) The Range.setStartBefore() method sets the start position of a Range relative to another Node. The parent Node of the start of the Range will be the same as that for the referenceNode. public GlobalObject.Undefined SetStartBefore(Node node) Parameters node Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The DOM interfaces index See also on MDN SurroundContents(Node) The Range.surroundContents() method moves content of the Range into a new node, placing the new node at the start of the specified range. public GlobalObject.Undefined SurroundContents(Node newParent) Parameters newParent Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method is nearly equivalent to newNode.appendChild(range.extractContents()); range.insertNode(newNode). After surrounding, the boundary points of the range include newNode. An exception will be thrown, however, if the Range splits a non-{{ domxref(&quot;Text&quot;) }} node with only one of its boundary points. That is, unlike the alternative above, if there are partially selected nodes, they will not be cloned and instead the operation will fail. -The DOM interfaces index See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ReadOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReadOptions.html",
    "title": "Class ReadOptions | CSharpToJavaScript",
    "keywords": "Class ReadOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ReadOptions : GeolocationSensorOptions Inheritance object SensorOptions GeolocationSensorOptions ReadOptions Inherited Members SensorOptions.Frequency object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Signal public AbortSignal? Signal Field Value AbortSignal"
  },
  "api/CSharpToJavaScript.APIs.JS.ReadableByteStreamController.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReadableByteStreamController.html",
    "title": "Class ReadableByteStreamController | CSharpToJavaScript",
    "keywords": "Class ReadableByteStreamController Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ReadableByteStreamController interface of the Streams API represents a controller for a readable byte stream. It allows control of the state and internal queue of a ReadableStream with an underlying byte source, and enables efficient zero-copy transfer of data from the underlying source to a consumer when the stream's internal queue is empty. [To(\"FirstCharToLowerCase\")] public class ReadableByteStreamController Inheritance object ReadableByteStreamController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An instance of this controller type is created if an underlyingSource object with the property type=&quot;bytes&quot; is passed as an argument to the ReadableStream() constructor. The underlyingSource object may also define start() and pull() callback functions. These are called with the controller as a parameter, in order to setup the underlying source, and request data when needed. The underlying source uses the controller to supply data to the stream via its byobRequest property or enqueue() method. byobRequest is a ReadableStreamBYOBRequest object that represents a pending request from a consumer to make a zero-copy transfer of data direct to a consumer. byobRequest must be used to copy data if it exists (do not use enqueue() in this case)! If the underlying source needs to pass data to the stream and byobRequest is null then the source can call enqueue() to add the data to the stream&apos;s internal queues. Note that the byobRequest is only created in &quot;BYOB mode&quot; when there is a request from a reader and the stream&apos;s internal queue is empty. \"BYOB mode\" is enabled when using a ReadableStreamBYOBReader (typically constructed by calling GetReader(ReadableStreamGetReaderOptions) with the argument { mode: &apos;byob&apos; }). It is also enabled when using a default reader and autoAllocateChunkSize is specified in the ReadableController() constructor. An underlying byte source can also use the controller to close() the stream when all the data has been sent and report errors from the underlying source using error(). The controller&apos;s desiredSize property is used to apply &quot;backpressure&quot;, informing the underlying source of the size of the internal queue (small values indicate that the queue is filling up, hinting to the underlying source that it is be desirable to pause or throttle the inflow). Note that even though the controller is primarily used by the underlying byte source, there is no reason it cannot be stored used by other parts of the system to signal the stream. -Streams API concepts -Using readable byte streams -ReadableStream -WHATWG Stream Visualizer, for a basic visualization of readable, writable, and transform streams. -Web-streams-polyfill or sd-streams - polyfills See also on MDN Properties ByobRequest The byobRequest read-only property of the ReadableByteStreamController interface returns the current BYOB request, or null if there are no pending requests. public ReadableStreamBYOBRequest? ByobRequest { get; } Property Value ReadableStreamBYOBRequest A ReadableStreamBYOBRequest object instance, or null. Remarks An underlying byte source should check this property, and use it to write data to the stream if it exists (rather than using Enqueue(Union66)). This will result in an efficient zero-byte transfer of the data to the consumer. -Using readable byte streams -ReadableByteStreamController See also on MDN DesiredSize The desiredSize read-only property of the ReadableByteStreamController interface returns the number of bytes required to fill the stream's internal queue to its \"desired size\". public double? DesiredSize { get; } Property Value double? An integer. Note that this can be negative if the queue is over-full.The value will be null if the stream has errored and 0 if it is closed. Remarks The value is used by the stream to indicate a preferred flow rate to the underlying source. Sources that support throttling or pausing their inflow of data (not all do!) should control the inflow such that desiredSize of the stream buffer is kept positive and as close to zero as possible. The desiredSize is used to apply backpressure from downstream consumers. -Using readable byte streams -ReadableByteStreamController See also on MDN Methods Close() The close() method of the ReadableByteStreamController interface closes the associated stream. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This might be called by the underlying source when its data source has been exhausted/completed. NOTE Note: Readers will still be able to read any previously-enqueued chunks from the stream, but once those are read, the stream will become closed. However if there is an outstanding and partially written ByobRequest when close() is called, the stream will be errored. -Using readable byte streams -ReadableByteStreamController See also on MDN Enqueue(Union66) The enqueue() method of the ReadableByteStreamController interface enqueues a given chunk on the associated readable byte stream (the chunk is copied into the stream's internal queues). public GlobalObject.Undefined Enqueue(Union66 chunk) Parameters chunk Union66 Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This should only be used to transfer data to the queue when ByobRequest is null. -Using readable byte streams -ReadableByteStreamController See also on MDN Error(dynamic) The error() method of the ReadableByteStreamController interface causes any future interactions with the associated stream to error with the specified reason. public GlobalObject.Undefined Error(dynamic e) Parameters e dynamic Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This is commonly called by an underlying source to surface an error from the interface where it gets its data (such as a file-read or socket error). It can also be called from elsewhere to trigger a stream error, for example if another part of the system that the stream relies on fails. -Using readable byte streams See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ReadableStream.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReadableStream.html",
    "title": "Class ReadableStream | CSharpToJavaScript",
    "keywords": "Class ReadableStream Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ReadableStream interface of the Streams API represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the Response.Body property of a Response object. [To(\"FirstCharToLowerCase\")] public class ReadableStream Inheritance object ReadableStream Derived WebTransportReceiveStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks ReadableStream is a transferable object. -Streams API concepts -Using readable streams -Using readable byte stream -WHATWG Stream Visualizer, for a basic visualization of readable, writable, and transform streams. -Web-streams-polyfill or sd-streams - polyfills See also on MDN Constructors ReadableStream() public ReadableStream() ReadableStream(object, QueuingStrategy) The ReadableStream() constructor creates and returns a readable stream object from the given handlers. public ReadableStream(object underlyingSource, QueuingStrategy strategy) Parameters underlyingSource object strategy QueuingStrategy Remarks Note that while all parameters are technically optional, omitting the underlyingSource will result in a stream that has no source, and that can&apos;t be read from (readers return a promise that will never be resolved). -ReadableStream -ReadableByteStreamController -ReadableStreamDefaultController -Using readable streams See also on MDN Properties this[int] public dynamic this[int i] { get; set; } Parameters i int Property Value dynamic Locked The locked read-only property of the ReadableStream interface returns whether or not the readable stream is locked to a reader. public bool Locked { get; } Property Value bool A boolean value indicating whether or not the readable stream is locked. Remarks A readable stream can have at most one active reader at a time, and is locked to that reader until it is released. A reader might be obtained using ReadableStream.getReader() and released using the reader&apos;s releaseLock() method. -ReadableStream(object, QueuingStrategy) constructor -Using readable streams See also on MDN Methods Cancel(dynamic) The cancel() method of the ReadableStream interface returns a {{jsxref(\"Promise\")}} that resolves when the stream is canceled. public Task<GlobalObject.Undefined> Cancel(dynamic reason) Parameters reason dynamic Returns Task<GlobalObject.Undefined> A Promise, which fulfills with the value given in the reason parameter. Remarks Cancel is used when you&apos;ve completely finished with the stream and don&apos;t need any more data from it, even if there are chunks enqueued waiting to be read. That data is lost after cancel is called, and the stream is not readable any more. To read those chunks still and not completely get rid of the stream, you&apos;d use Close(). -ReadableStream(object, QueuingStrategy) constructor -Using readable streams See also on MDN From(dynamic) public static ReadableStream From(dynamic asyncIterable) Parameters asyncIterable dynamic Returns ReadableStream GetReader(ReadableStreamGetReaderOptions) The getReader() method of the ReadableStream interface creates a reader and locks the stream to it. While the stream is locked, no other reader can be acquired until this one is released. public Union62 GetReader(ReadableStreamGetReaderOptions options) Parameters options ReadableStreamGetReaderOptions Returns Union62 A ReadableStreamDefaultReader or ReadableStreamBYOBReader object instance, depending on the mode value. Remarks -ReadableStream(object, QueuingStrategy) constructor -ReadableStreamDefaultReader -ReadableStreamBYOBReader -Using readable streams -Using readable byte stream See also on MDN PipeThrough(ReadableWritablePair, StreamPipeOptions) The pipeThrough() method of the ReadableStream interface provides a chainable way of piping the current stream through a transform stream or any other writable/readable pair. public ReadableStream PipeThrough(ReadableWritablePair transform, StreamPipeOptions options) Parameters transform ReadableWritablePair options StreamPipeOptions Returns ReadableStream The readable side of the transformStream. Remarks Piping a stream will generally lock it for the duration of the pipe, preventing other readers from locking it. -ReadableStream(object, QueuingStrategy) constructor -Pipe chains See also on MDN PipeTo(WritableStream, StreamPipeOptions) The pipeTo() method of the ReadableStream interface pipes the current ReadableStream to a given WritableStream and returns a {{jsxref(\"Promise\")}} that fulfills when the piping process completes successfully, or rejects if any errors were encountered. public Task<GlobalObject.Undefined> PipeTo(WritableStream destination, StreamPipeOptions options) Parameters destination WritableStream options StreamPipeOptions Returns Task<GlobalObject.Undefined> A Promise that resolves when the piping process has completed. Remarks Piping a stream will generally lock it for the duration of the pipe, preventing other readers from locking it. -ReadableStream(object, QueuingStrategy) constructor -Pipe chains See also on MDN Tee() The tee() method of the ReadableStream interface tees the current readable stream, returning a two-element array containing the two resulting branches as new ReadableStream instances. public List<ReadableStream> Tee() Returns List<ReadableStream> An {{jsxref(\"Array\")}} containing two ReadableStream instances. Remarks This is useful for allowing two readers to read a stream sequentially or simultaneously, perhaps at different speeds. For example, you might do this in a ServiceWorker if you want to fetch a response from the server and stream it to the browser, but also stream it to the ServiceWorker cache. Since a response body cannot be consumed more than once, you&apos;d need two copies to do this. A teed stream will partially signal backpressure at the rate of the faster consumer of the two ReadableStream branches, and unread data is enqueued internally on the slower consumed ReadableStream without any limit or backpressure. That is, when both branches have an unread element in their internal queue, then the original ReadableStream&apos;s controller&apos;s internal queue will start to fill up, and once its DesiredSize ≤ 0 or byte stream controller DesiredSize ≤ 0, then the controller will stop calling pull(controller) on the underlying source passed to ReadableStream(object, QueuingStrategy). If only one branch is consumed, then the entire body will be enqueued in memory. Therefore, you should not use the built-in tee() to read very large streams in parallel at different speeds. Instead, search for an implementation that fully backpressures to the speed of the slower consumed branch. To cancel the stream you then need to cancel both resulting branches. Teeing a stream will generally lock it for the duration, preventing other readers from locking it. -ReadableStream(object, QueuingStrategy) constructor -Teeing a stream See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ReadableStreamBYOBReader.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReadableStreamBYOBReader.html",
    "title": "Class ReadableStreamBYOBReader | CSharpToJavaScript",
    "keywords": "Class ReadableStreamBYOBReader Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ReadableStreamBYOBReader interface of the Streams API defines a reader for a ReadableStream that supports zero-copy reading from an underlying byte source. It is used for efficient copying from underlying sources where the data is delivered as an &quot;anonymous&quot; sequence of bytes, such as files. [To(\"FirstCharToLowerCase\")] public class ReadableStreamBYOBReader Inheritance object ReadableStreamBYOBReader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An instance of this reader type should usually be obtained by calling GetReader(ReadableStreamGetReaderOptions) on the stream, specifying mode: &quot;byob&quot; in the options parameter. The readable stream must have an underlying byte source. In other words, it must have been constructed specifying an underlying source with type: &quot;bytes&quot;). Using this kind of reader, a read() request when the readable stream&apos;s internal queues are empty will result in a zero copy transfer from the underlying source (bypassing the stream&apos;s internal queues). If the internal queues are not empty, a read() will satisfy the request from the buffered data. Note that the methods and properties are similar to those for the default reader (ReadableStreamDefaultReader). The read() method differs in that it provide a view into which data should be written. -Streams API concepts -Using readable byte stream -ReadableStream -WHATWG Stream Visualizer, for a basic visualization of readable, writable, and transform streams. -Web-streams-polyfill or sd-streams - polyfills See also on MDN Constructors ReadableStreamBYOBReader() public ReadableStreamBYOBReader() ReadableStreamBYOBReader(ReadableStream) The ReadableStreamBYOBReader() constructor creates and returns a ReadableStreamBYOBReader object instance. public ReadableStreamBYOBReader(ReadableStream stream) Parameters stream ReadableStream Remarks NOTE Note: You generally wouldn&apos;t use this constructor manually; instead, you'd use the GetReader(ReadableStreamGetReaderOptions) method with the argument &quot;byob&quot;. -ReadableStreamBYOBReader -Using readable byte stream See also on MDN Methods Read(Union66) The read() method of the ReadableStreamBYOBReader interface is used to read data into a view on a user-supplied buffer from an associated readable byte stream. A request for data will be satisfied from the stream&apos;s internal queues if there is any data present. If the stream queues are empty, the request may be supplied as a zero-copy transfer from the underlying byte source. public Task<ReadableStreamReadResult> Read(Union66 view) Parameters view Union66 Returns Task<ReadableStreamReadResult> A Promise, which fulfills/rejects with a result depending on the state of the stream.The following are possible: Remarks The method takes as an argument a view on a buffer that supplied data is to be read into, and returns a Promise. The promise fulfills with an object that has properties value and done when data comes available, or if the stream is cancelled. If the stream is errored, the promise will be rejected with the relevant error object. If a chunk of data is supplied, the value property will contain a new view. This will be a view over the same buffer/backing memory (and of the same type) as the original view passed to the read() method, now populated with the new chunk of data. Note that once the promise fulfills, the original view passed to the method will be detached and no longer usable. The promise will fulfill with a value: undefined if the stream has been cancelled. In this case the backing memory region of view is discarded and not returned to the caller (all previously read data in the view&apos;s buffer is lost). The done property indicates whether or not more data is expected. The value is set true if the stream is closed or cancelled, and false otherwise. -ReadableStreamBYOBReader(ReadableStream) constructor -Using readable byte stream See also on MDN ReleaseLock() The releaseLock() method of the ReadableStreamBYOBReader interface releases the reader's lock on the stream. After the lock is released, the reader is no longer active. public GlobalObject.Undefined ReleaseLock() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The reader will appear errored if the associated stream is errored when the lock is released; otherwise, the reader will appear closed. If the reader's lock is released while it still has pending read requests then the promises returned by the reader's Read(Union66) method are immediately rejected with a TypeError. Unread chunks remain in the stream&apos;s internal queue and can be read later by acquiring a new reader. -ReadableStreamBYOBReader(ReadableStream) constructor -Using readable byte stream See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ReadableStreamBYOBRequest.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReadableStreamBYOBRequest.html",
    "title": "Class ReadableStreamBYOBRequest | CSharpToJavaScript",
    "keywords": "Class ReadableStreamBYOBRequest Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ReadableStreamBYOBRequest interface of the Streams API represents a &quot;pull request&quot; for data from an underlying source that will made as a zero-copy transfer to a consumer (bypassing the stream&apos;s internal queues). [To(\"FirstCharToLowerCase\")] public class ReadableStreamBYOBRequest Inheritance object ReadableStreamBYOBRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks ReadableStreamBYOBRequest objects are created in &quot;BYOB mode&quot; when a consumer makes a request for data and the stream&apos;s internal queue is empty. (The stream will resolve the consumer&apos;s request directly if it already has buffered data). An underlying byte source can access active BYOB requests through its controller's ByobRequest property, which will be set to null if there is no outstanding request. An underlying source that supports \"BYOB mode\" should check for ByobRequest and must use it for transferring data, if present. If data arrives from the underlying source when ByobRequest is null, it can be queued using Enqueue(Union66). This might happen when an underlying push source receives new data when the stream&apos;s internal buffers are not empty. An underlying source uses the request by writing data to the BYOB request&apos;s view and then calling respond(), or by calling respondWithNewView() and passing a new view as an argument. Note that the &quot;new view&quot; must actually be a view over the same buffer as the original view, starting at the same offset. This might be used to return a shorter buffer if the underlying source is unable to fill the entire original view. Note that a ReadableByteStreamController is only created for underlying sources when type=&quot;bytes&quot; is specified for the source in the ReadableStream() constructor. &quot;BYOB mode&quot; is enabled when either autoAllocateChunkSize is specified in the ReadableController() constructor or when using a ReadableStreamBYOBReader (typically constructed by calling GetReader(ReadableStreamGetReaderOptions) with the argument { mode: &apos;byob&apos; }). -Using readable byte stream See also on MDN Properties View The view getter property of the ReadableStreamBYOBRequest interface returns the current view. public Union66? View { get; } Property Value Union66? A typed array representing the destination region to which the controller can write generated data.null if the request has already been responded to, by calling Respond(ulong) or RespondWithNewView(Union66). Remarks -Using readable byte stream See also on MDN Methods Respond(ulong) The respond() method of the ReadableStreamBYOBRequest interface is used to signal to the associated readable byte stream that the specified number of bytes were written into the View. public GlobalObject.Undefined Respond(ulong bytesWritten) Parameters bytesWritten ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks After this method is called, the ReadableStreamBYOBRequest/view will be transferred and no longer modifiable. -Using readable byte stream See also on MDN RespondWithNewView(Union66) The respondWithNewView() method of the ReadableStreamBYOBRequest interface specifies a new view that the consumer of the associated readable byte stream should write to instead of View. public GlobalObject.Undefined RespondWithNewView(Union66 view) Parameters view Union66 Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The new view must be a {{jsxref(\"TypedArray\")}} or a {{jsxref(\"DataView\")}} that provides a view onto the same backing memory region as View. After this method is called, the view that was passed into the method will be transferred and no longer modifiable. The method is intended for use cases where an underlying byte source needs to transfer a byobRequest.view internally before finishing its response. For example, the source may transfer the BYOB view to a separate worker thread, and wait for the worker to transfer it back once it has been filled. -Using readable byte stream See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ReadableStreamDefaultController.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReadableStreamDefaultController.html",
    "title": "Class ReadableStreamDefaultController | CSharpToJavaScript",
    "keywords": "Class ReadableStreamDefaultController Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ReadableStreamDefaultController interface of the Streams API represents a controller allowing control of a ReadableStream's state and internal queue. Default controllers are for streams that are not byte streams. [To(\"FirstCharToLowerCase\")] public class ReadableStreamDefaultController Inheritance object ReadableStreamDefaultController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Streams API concepts -Using readable streams -ReadableStream -WHATWG Stream Visualizer, for a basic visualization of readable, writable, and transform streams. -Web-streams-polyfill or sd-streams - polyfills See also on MDN Properties DesiredSize The desiredSize read-only property of the ReadableStreamDefaultController interface returns the desired size required to fill the stream&apos;s internal queue. public double? DesiredSize { get; } Property Value double? An integer. Note that this can be negative if the queue is over-full. Remarks -Using readable streams -ReadableStreamDefaultController See also on MDN Methods Close() The close() method of the ReadableStreamDefaultController interface closes the associated stream. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Readers will still be able to read any previously-enqueued chunks from the stream, but once those are read, the stream will become closed. If you want to completely get rid of the stream and discard any enqueued chunks, you&apos;d use Cancel(dynamic) or ReadableStreamDefaultReader.Cancel. -Using readable streams -ReadableStreamDefaultController See also on MDN Enqueue(dynamic) The enqueue() method of the ReadableStreamDefaultController interface enqueues a given chunk in the associated stream. public GlobalObject.Undefined Enqueue(dynamic chunk) Parameters chunk dynamic Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using readable streams -ReadableStreamDefaultController See also on MDN Error(dynamic) The error() method of the ReadableStreamDefaultController interface causes any future interactions with the associated stream to error. public GlobalObject.Undefined Error(dynamic e) Parameters e dynamic Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: The error() method can be called more than once, and can be called when the stream is not readable. -Using readable streams -ReadableStreamDefaultController See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ReadableStreamDefaultReader.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReadableStreamDefaultReader.html",
    "title": "Class ReadableStreamDefaultReader | CSharpToJavaScript",
    "keywords": "Class ReadableStreamDefaultReader Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ReadableStreamDefaultReader interface of the Streams API represents a default reader that can be used to read stream data supplied from a network (such as a fetch request). [To(\"FirstCharToLowerCase\")] public class ReadableStreamDefaultReader Inheritance object ReadableStreamDefaultReader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A ReadableStreamDefaultReader can be used to read from a ReadableStream that has an underlying source of any type (unlike a ReadableStreamBYOBReader, which can only be used with readable streams that have an underlying byte source). Note however that zero-copy transfer from an underlying source is only supported for underlying byte sources that autoallocate buffers. In other words, the stream must have been constructed specifying both type=&quot;bytes&quot; and autoAllocateChunkSize. For any other underlying source, the stream will always satisfy read requests with data from internal queues. -Streams API concepts -Using readable streams -ReadableStream -WHATWG Stream Visualizer, for a basic visualization of readable, writable, and transform streams. -Web-streams-polyfill or sd-streams - polyfills See also on MDN Constructors ReadableStreamDefaultReader() public ReadableStreamDefaultReader() ReadableStreamDefaultReader(ReadableStream) The ReadableStreamDefaultReader() constructor creates and returns a ReadableStreamDefaultReader object instance. public ReadableStreamDefaultReader(ReadableStream stream) Parameters stream ReadableStream Remarks NOTE Note: You generally wouldn&apos;t use this constructor manually; instead, you'd use the GetReader(ReadableStreamGetReaderOptions) method. -Streams API concepts -Using readable streams -ReadableStream -ReadableStreamDefaultController See also on MDN Methods Read() The read() method of the ReadableStreamDefaultReader interface returns a {{jsxref(\"Promise\")}} providing access to the next chunk in the stream's internal queue. public Task<ReadableStreamReadResult> Read() Returns Task<ReadableStreamReadResult> A Promise, which fulfills/rejects with a result depending on the state of the stream. The different possibilities are as follows: Remarks -ReadableStreamDefaultReader(ReadableStream) constructor -Using readable streams See also on MDN ReleaseLock() The releaseLock() method of the ReadableStreamDefaultReader interface releases the reader's lock on the stream. public GlobalObject.Undefined ReleaseLock() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If the associated stream is errored when the lock is released, the reader will appear errored in that same way subsequently; otherwise, the reader will appear closed. If the reader's lock is released while it still has pending read requests then the promises returned by the reader's Read() method are immediately rejected with a TypeError. Unread chunks remain in the stream&apos;s internal queue and can be read later by acquiring a new reader. -ReadableStreamDefaultReader(ReadableStream) constructor -Using readable streams See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ReadableStreamGenericReader.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReadableStreamGenericReader.html",
    "title": "Interface ReadableStreamGenericReader | CSharpToJavaScript",
    "keywords": "Interface ReadableStreamGenericReader Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface ReadableStreamGenericReader Properties Closed Task<GlobalObject.Undefined> Closed { get; } Property Value Task<GlobalObject.Undefined> Methods Cancel(dynamic) Task<GlobalObject.Undefined> Cancel(dynamic reason) Parameters reason dynamic Returns Task<GlobalObject.Undefined>"
  },
  "api/CSharpToJavaScript.APIs.JS.ReadableStreamGetReaderOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReadableStreamGetReaderOptions.html",
    "title": "Class ReadableStreamGetReaderOptions | CSharpToJavaScript",
    "keywords": "Class ReadableStreamGetReaderOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ReadableStreamGetReaderOptions Inheritance object ReadableStreamGetReaderOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Mode public ReadableStreamReaderMode Mode Field Value ReadableStreamReaderMode"
  },
  "api/CSharpToJavaScript.APIs.JS.ReadableStreamIteratorOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReadableStreamIteratorOptions.html",
    "title": "Class ReadableStreamIteratorOptions | CSharpToJavaScript",
    "keywords": "Class ReadableStreamIteratorOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ReadableStreamIteratorOptions Inheritance object ReadableStreamIteratorOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields PreventCancel public bool PreventCancel Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.ReadableStreamReadResult.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReadableStreamReadResult.html",
    "title": "Class ReadableStreamReadResult | CSharpToJavaScript",
    "keywords": "Class ReadableStreamReadResult Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ReadableStreamReadResult Inheritance object ReadableStreamReadResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Done public bool Done Field Value bool Value public dynamic Value Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.ReadableStreamReaderMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReadableStreamReaderMode.html",
    "title": "Enum ReadableStreamReaderMode | CSharpToJavaScript",
    "keywords": "Enum ReadableStreamReaderMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ReadableStreamReaderMode Fields Byob = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.ReadableStreamType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReadableStreamType.html",
    "title": "Enum ReadableStreamType | CSharpToJavaScript",
    "keywords": "Enum ReadableStreamType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ReadableStreamType Fields Bytes = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.ReadableWritablePair.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReadableWritablePair.html",
    "title": "Class ReadableWritablePair | CSharpToJavaScript",
    "keywords": "Class ReadableWritablePair Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ReadableWritablePair Inheritance object ReadableWritablePair Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Readable public required ReadableStream Readable Field Value ReadableStream Writable public required WritableStream Writable Field Value WritableStream"
  },
  "api/CSharpToJavaScript.APIs.JS.RecordingState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RecordingState.html",
    "title": "Enum RecordingState | CSharpToJavaScript",
    "keywords": "Enum RecordingState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum RecordingState Fields Inactive = 0 Paused = 2 Recording = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.RedEyeReduction.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RedEyeReduction.html",
    "title": "Enum RedEyeReduction | CSharpToJavaScript",
    "keywords": "Enum RedEyeReduction Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum RedEyeReduction Fields Always = 1 Controllable = 2 Never = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.ReferrerPolicy.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReferrerPolicy.html",
    "title": "Enum ReferrerPolicy | CSharpToJavaScript",
    "keywords": "Enum ReferrerPolicy Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ReferrerPolicy Fields Empty = 0 NoReferrer = 1 NoReferrerWhenDowngrade = 2 Origin = 4 OriginWhenCrossOrigin = 6 SameOrigin = 3 StrictOrigin = 5 StrictOriginWhenCrossOrigin = 7 UnsafeUrl = 8"
  },
  "api/CSharpToJavaScript.APIs.JS.RegExp.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RegExp.html",
    "title": "Class RegExp | CSharpToJavaScript",
    "keywords": "Class RegExp Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class RegExp : RegExpPrototype Inheritance object RegExpPrototype RegExp Inherited Members RegExpPrototype.DotAll RegExpPrototype.Flags RegExpPrototype.Global RegExpPrototype.HasIndices RegExpPrototype.IgnoreCase RegExpPrototype.Multiline RegExpPrototype.Source RegExpPrototype.Sticky RegExpPrototype.Unicode RegExpPrototype.Exec(string) RegExpPrototype.Test(string) RegExpPrototype.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RegExp(string) public RegExp(string pattern) Parameters pattern string RegExp(string, string) public RegExp(string pattern, string flags) Parameters pattern string flags string Properties Prototype [To(\"FirstCharToLowerCase\")] public static RegExpPrototype Prototype { get; } Property Value RegExpPrototype"
  },
  "api/CSharpToJavaScript.APIs.JS.RegExpPrototype.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RegExpPrototype.html",
    "title": "Class RegExpPrototype | CSharpToJavaScript",
    "keywords": "Class RegExpPrototype Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RegExpPrototype Inheritance object RegExpPrototype Derived RegExp Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RegExpPrototype() public RegExpPrototype() Properties DotAll public bool DotAll { get; } Property Value bool Flags public string Flags { get; } Property Value string Global public bool Global { get; } Property Value bool HasIndices public bool HasIndices { get; } Property Value bool IgnoreCase public bool IgnoreCase { get; } Property Value bool Multiline public bool Multiline { get; } Property Value bool Source public string Source { get; } Property Value string Sticky public bool Sticky { get; } Property Value bool Unicode public bool Unicode { get; } Property Value bool Methods Exec(string) public string[] Exec(string str) Parameters str string Returns string[] Test(string) public bool Test(string S) Parameters S string Returns bool ToString() public string ToString() Returns string"
  },
  "api/CSharpToJavaScript.APIs.JS.RegistrationOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RegistrationOptions.html",
    "title": "Class RegistrationOptions | CSharpToJavaScript",
    "keywords": "Class RegistrationOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RegistrationOptions Inheritance object RegistrationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Scope public string Scope Field Value string Type public WorkerType Type Field Value WorkerType UpdateViaCache public ServiceWorkerUpdateViaCache UpdateViaCache Field Value ServiceWorkerUpdateViaCache"
  },
  "api/CSharpToJavaScript.APIs.JS.RelativeOrientationReadingValues.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RelativeOrientationReadingValues.html",
    "title": "Class RelativeOrientationReadingValues | CSharpToJavaScript",
    "keywords": "Class RelativeOrientationReadingValues Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RelativeOrientationReadingValues : AbsoluteOrientationReadingValues Inheritance object AbsoluteOrientationReadingValues RelativeOrientationReadingValues Inherited Members AbsoluteOrientationReadingValues.Quaternion object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.RelativeOrientationSensor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RelativeOrientationSensor.html",
    "title": "Class RelativeOrientationSensor | CSharpToJavaScript",
    "keywords": "Class RelativeOrientationSensor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The RelativeOrientationSensor interface of the Sensor APIs describes the device&apos;s physical orientation without regard to the Earth&apos;s reference coordinate system. [To(\"FirstCharToLowerCase\")] public class RelativeOrientationSensor : OrientationSensor Inheritance object EventTarget Sensor OrientationSensor RelativeOrientationSensor Inherited Members OrientationSensor.Quaternion OrientationSensor.PopulateMatrix(Union85) Sensor.Activated Sensor.HasReading Sensor.Timestamp Sensor.Start() Sensor.Stop() Sensor.Onreading Sensor.Onactivate Sensor.Onerror EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To use this sensor, the user must grant permission to the &apos;accelerometer&apos;, and &apos;gyroscope&apos; device sensors through the Permissions API. In addition, this feature may be blocked by a Permissions Policy set on your server. See also on MDN Constructors RelativeOrientationSensor() public RelativeOrientationSensor() RelativeOrientationSensor(OrientationSensorOptions) The RelativeOrientationSensor() constructor creates a new RelativeOrientationSensor object which describes the device&apos;s physical orientation. public RelativeOrientationSensor(OrientationSensorOptions sensorOptions) Parameters sensorOptions OrientationSensorOptions Remarks -'sensor.Reading_event' event See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Report.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Report.html",
    "title": "Class Report | CSharpToJavaScript",
    "keywords": "Class Report Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Report interface of the Reporting API represents a single report. [To(\"FirstCharToLowerCase\")] public class Report Inheritance object Report Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Reports can be accessed in a number of ways: -Reporting API See also on MDN Properties Body The ReportBody interface of the 'Reporting API' represents the body of a report. Individual report types inherit from this interface, adding specific attributes relevant to the particular report. public ReportBody? Body { get; } Property Value ReportBody Remarks See also on MDN Type The type read-only property of the Report interface returns the type of report generated, e.g. deprecation or intervention. public string Type { get; } Property Value string A string representing the type of the report. Currently the available types are deprecation, intervention, and crash. Remarks -Reporting API See also on MDN Url The url read-only property of the Report interface returns the URL of the document that generated the report. public string Url { get; } Property Value string A string representing the URL of the document that generated the report. Remarks -Reporting API See also on MDN Methods ToJSON() public object ToJSON() Returns object"
  },
  "api/CSharpToJavaScript.APIs.JS.ReportBody.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReportBody.html",
    "title": "Class ReportBody | CSharpToJavaScript",
    "keywords": "Class ReportBody Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ReportBody interface of the 'Reporting API' represents the body of a report. Individual report types inherit from this interface, adding specific attributes relevant to the particular report. [To(\"FirstCharToLowerCase\")] public class ReportBody Inheritance object ReportBody Derived CSPViolationReportBody PermissionsPolicyViolationReportBody Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Methods ToJSON() The toJSON() method of the ReportBody interface is a serializer, and returns a JSON representation of the ReportBody object. public object ToJSON() Returns object A JSON object that is the serialization of the ReportBody object. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ReportingObserver.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReportingObserver.html",
    "title": "Class ReportingObserver | CSharpToJavaScript",
    "keywords": "Class ReportingObserver Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ReportingObserver interface of the Reporting API allows you to collect and access reports. [To(\"FirstCharToLowerCase\")] public class ReportingObserver Inheritance object ReportingObserver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Reporting API See also on MDN Constructors ReportingObserver() public ReportingObserver() ReportingObserver(ReportingObserverCallback, ReportingObserverOptions) The ReportingObserver() constructor of the Reporting API creates a new ReportingObserver object instance, which can be used to collect and access reports. public ReportingObserver(ReportingObserverCallback callback, ReportingObserverOptions options) Parameters callback ReportingObserverCallback options ReportingObserverOptions Remarks -Reporting API See also on MDN Methods Disconnect() The disconnect() method of the ReportingObserver interface stops a reporting observer that had previously started observing from collecting reports. public GlobalObject.Undefined Disconnect() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks After calling disconnect(), neither TakeRecords() nor the records parameter of the ReportingObserver() callback will return any reports. The associated observer will no longer be active. -Reporting API See also on MDN Observe() The observe() method of the ReportingObserver interface instructs a reporting observer to start collecting reports in its report queue. public GlobalObject.Undefined Observe() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Reporting API See also on MDN TakeRecords() The takeRecords() method of the ReportingObserver interface returns the current list of reports contained in the observer&apos;s report queue, and empties the queue. public List<Report> TakeRecords() Returns List<Report> An array of Report objects. Remarks -Reporting API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ReportingObserverCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReportingObserverCallback.html",
    "title": "Struct ReportingObserverCallback | CSharpToJavaScript",
    "keywords": "Struct ReportingObserverCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct ReportingObserverCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.ReportingObserverOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ReportingObserverOptions.html",
    "title": "Class ReportingObserverOptions | CSharpToJavaScript",
    "keywords": "Class ReportingObserverOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ReportingObserverOptions Inheritance object ReportingObserverOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Buffered public bool Buffered Field Value bool Types public List<string> Types Field Value List<string>"
  },
  "api/CSharpToJavaScript.APIs.JS.Request.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Request.html",
    "title": "Class Request | CSharpToJavaScript",
    "keywords": "Class Request Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Request interface of the Fetch API represents a resource request. [To(\"FirstCharToLowerCase\")] public class Request Inheritance object Request Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can create a new Request object using the Request(Union59, RequestInit) constructor, but you are more likely to encounter a Request object being returned as the result of another API operation, such as a service worker Request. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Constructors Request() public Request() Request(Union59, RequestInit) The Request() constructor creates a new Request object. public Request(Union59 input, RequestInit init) Parameters input Union59 init RequestInit Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Properties Cache The cache read-only property of the Request interface contains the cache mode of the request. It controls how the request will interact with the browser's HTTP cache. public RequestCache Cache { get; } Property Value RequestCache A RequestCache value. The available values are: Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Credentials The credentials read-only property of the Request interface indicates whether the user agent should send or receive cookies from the other domain in the case of cross-origin requests. public RequestCredentials Credentials { get; } Property Value RequestCredentials A RequestCredentials dictionary value indicating whether the user agent should send or receive cookies from the other domain in the case of cross-origin requests. Possible values are:This is similar to XHR&apos;s withCredentials flag, but with three available values instead of two. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Destination The destination read-only property of the Request interface returns a string describing the type of content being requested. public RequestDestination Destination { get; } Property Value RequestDestination A string which indicates the type of content the request is asking for. This type is much broader than the usual document type values (such as &quot;document&quot; or &quot;manifest&quot;), and may include contextual cues such as &quot;image&quot; or &quot;worker&quot; or &quot;audioworklet&quot;.Possible values are: Remarks The string must be one of the audio, audioworklet, document, embed, font, frame, iframe, image, manifest, object, paintworklet, report, script, sharedworker, style, track, video, worker or xslt strings, or the empty string, which is the default value. The destination is used by the user agent to, for example, help determine which set of rules to follow for CORS purposes, or how to navigate any complicated code paths that affect how specific types of request get handled. These destinations vary substantially in how they operate. Some are data receptacles, where the received data is stored for processing later. Others are script-based, in which case the received data is delivered to a script by calling it and passing the data along. Script-based destinations include script elements, as well as any of the Worklet-based destinations (including subclasses like AudioWorklet), and the Worker-based destinations, including ServiceWorker and SharedWorker. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Duplex public RequestDuplex Duplex { get; } Property Value RequestDuplex Headers The headers read-only property of the Request interface contains the Headers object associated with the request. public Headers Headers { get; } Property Value Headers A Headers object. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Integrity The integrity read-only property of the Request interface contains the subresource integrity value of the request. public string Integrity { get; } Property Value string The value that was passed as the options.integrity argument when constructing the Request.If an integrity has not been specified, the property returns &apos;&apos;. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN IsHistoryNavigation public bool IsHistoryNavigation { get; } Property Value bool IsReloadNavigation public bool IsReloadNavigation { get; } Property Value bool Keepalive public bool Keepalive { get; } Property Value bool Method The method read-only property of the Request interface contains the request's method (GET, POST, etc.) public string Method { get; } Property Value string A String indicating the method of the request. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Mode The mode read-only property of the Request interface contains the mode of the request (e.g., cors, no-cors, same-origin, navigate or websocket.) This is used to determine if cross-origin requests lead to valid responses, and which properties of the response are readable. public RequestMode Mode { get; } Property Value RequestMode Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Redirect The redirect read-only property of the Request interface contains the mode for how redirects are handled. public RequestRedirect Redirect { get; } Property Value RequestRedirect A RequestRedirect enum value, which can be one the following strings:If not specified when the request is created, it takes the default value of follow. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Referrer The referrer read-only property of the Request interface is set by the user agent to be the referrer of the Request. (e.g., client, no-referrer, or a URL.) public string Referrer { get; } Property Value string A string representing the request&apos;s referrer. Remarks NOTE Note: If referrer&apos;s value is no-referrer, it returns an empty string. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN ReferrerPolicy The referrerPolicy read-only property of the Request interface returns the referrer policy, which governs what referrer information, sent in the Referer header, should be included with the request. public ReferrerPolicy ReferrerPolicy { get; } Property Value ReferrerPolicy A string representing the request&apos;s referrerPolicy. For more information and possible values, see the Referrer-Policy HTTP header page. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Signal The read-only signal property of the Request interface returns the AbortSignal associated with the request. public AbortSignal Signal { get; } Property Value AbortSignal An AbortSignal object. Remarks See also on MDN Url The url read-only property of the Request interface contains the URL of the request. public string Url { get; } Property Value string A string indicating the URL of the request. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Methods Clone() The clone() method of the Request interface creates a copy of the current Request object. public Request Clone() Returns Request A Request object, which is an exact copy of the Request that clone() was called on. Remarks Like the underlying Tee() api, the Request.Body of a cloned Response will signal backpressure at the rate of the faster consumer of the two bodies, and unread data is enqueued internally on the slower consumed body without any limit or backpressure. Beware when you construct a Request from a stream and then clone it. clone() throws a TypeError if the request body has already been used. In fact, the main reason clone() exists is to allow multiple uses of body objects (when they are one-use only.) If you intend to modify the request, you may prefer the Request constructor. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.RequestCache.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RequestCache.html",
    "title": "Enum RequestCache | CSharpToJavaScript",
    "keywords": "Enum RequestCache Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The cache read-only property of the Request interface contains the cache mode of the request. It controls how the request will interact with the browser's HTTP cache. public enum RequestCache Fields Default = 0 ForceCache = 4 NoCache = 3 NoStore = 1 OnlyIfCached = 5 Reload = 2 Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.RequestCredentials.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RequestCredentials.html",
    "title": "Enum RequestCredentials | CSharpToJavaScript",
    "keywords": "Enum RequestCredentials Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The credentials read-only property of the Request interface indicates whether the user agent should send or receive cookies from the other domain in the case of cross-origin requests. public enum RequestCredentials Fields Include = 2 Omit = 0 SameOrigin = 1 Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.RequestDestination.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RequestDestination.html",
    "title": "Enum RequestDestination | CSharpToJavaScript",
    "keywords": "Enum RequestDestination Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The destination read-only property of the Request interface returns a string describing the type of content being requested. public enum RequestDestination Fields Audio = 1 Audioworklet = 2 Document = 3 Embed = 4 Empty = 0 Font = 5 Frame = 6 Iframe = 7 Image = 8 Manifest = 9 Object = 10 Paintworklet = 11 Report = 12 Script = 13 Sharedworker = 14 Style = 15 Track = 16 Video = 17 Worker = 18 Xslt = 19 Remarks The string must be one of the audio, audioworklet, document, embed, font, frame, iframe, image, manifest, object, paintworklet, report, script, sharedworker, style, track, video, worker or xslt strings, or the empty string, which is the default value. The destination is used by the user agent to, for example, help determine which set of rules to follow for CORS purposes, or how to navigate any complicated code paths that affect how specific types of request get handled. These destinations vary substantially in how they operate. Some are data receptacles, where the received data is stored for processing later. Others are script-based, in which case the received data is delivered to a script by calling it and passing the data along. Script-based destinations include script elements, as well as any of the Worklet-based destinations (including subclasses like AudioWorklet), and the Worker-based destinations, including ServiceWorker and SharedWorker. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.RequestDuplex.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RequestDuplex.html",
    "title": "Enum RequestDuplex | CSharpToJavaScript",
    "keywords": "Enum RequestDuplex Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum RequestDuplex Fields Half = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.RequestInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RequestInit.html",
    "title": "Class RequestInit | CSharpToJavaScript",
    "keywords": "Class RequestInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RequestInit Inheritance object RequestInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Body public Union58? Body Field Value Union58? Cache public RequestCache Cache Field Value RequestCache Credentials public RequestCredentials Credentials Field Value RequestCredentials Duplex public RequestDuplex Duplex Field Value RequestDuplex Headers public Union56 Headers Field Value Union56 Integrity public string Integrity Field Value string Keepalive public bool Keepalive Field Value bool Method public string Method Field Value string Mode public RequestMode Mode Field Value RequestMode Priority public RequestPriority Priority Field Value RequestPriority Redirect public RequestRedirect Redirect Field Value RequestRedirect Referrer public string Referrer Field Value string ReferrerPolicy public ReferrerPolicy ReferrerPolicy Field Value ReferrerPolicy Signal public AbortSignal? Signal Field Value AbortSignal Window public dynamic Window Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.RequestMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RequestMode.html",
    "title": "Enum RequestMode | CSharpToJavaScript",
    "keywords": "Enum RequestMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The mode read-only property of the Request interface contains the mode of the request (e.g., cors, no-cors, same-origin, navigate or websocket.) This is used to determine if cross-origin requests lead to valid responses, and which properties of the response are readable. public enum RequestMode Fields Cors = 3 Navigate = 0 NoCors = 2 SameOrigin = 1 Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.RequestPriority.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RequestPriority.html",
    "title": "Enum RequestPriority | CSharpToJavaScript",
    "keywords": "Enum RequestPriority Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum RequestPriority Fields Auto = 2 High = 0 Low = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.RequestRedirect.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RequestRedirect.html",
    "title": "Enum RequestRedirect | CSharpToJavaScript",
    "keywords": "Enum RequestRedirect Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The redirect read-only property of the Request interface contains the mode for how redirects are handled. public enum RequestRedirect Fields Error = 1 Follow = 0 Manual = 2 Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ResizeObservation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ResizeObservation.html",
    "title": "Class ResizeObservation | CSharpToJavaScript",
    "keywords": "Class ResizeObservation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ResizeObservation Inheritance object ResizeObservation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ResizeObservation() public ResizeObservation() ResizeObservation(Element) public ResizeObservation(Element target) Parameters target Element Properties LastReportedSizes public List<ResizeObserverSize> LastReportedSizes { get; } Property Value List<ResizeObserverSize> ObservedBox public ResizeObserverBoxOptions ObservedBox { get; } Property Value ResizeObserverBoxOptions Target public Element Target { get; } Property Value Element"
  },
  "api/CSharpToJavaScript.APIs.JS.ResizeObserver.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ResizeObserver.html",
    "title": "Class ResizeObserver | CSharpToJavaScript",
    "keywords": "Class ResizeObserver Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ResizeObserver interface reports changes to the dimensions of an 'Element''s content or border box, or the bounding box of an 'SVGElement'. [To(\"FirstCharToLowerCase\")] public class ResizeObserver Inheritance object ResizeObserver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: The content box is the box in which content can be placed, meaning the border box minus the padding and border width. The border box encompasses the content, padding, and border. See The box model for further explanation. -The box model -'PerformanceObserver' -'IntersectionObserver' (part of the Intersection Observer API) -Upcoming container queries may be a viable alternative for implementing responsive design. See also on MDN Constructors ResizeObserver() public ResizeObserver() ResizeObserver(ResizeObserverCallback) The ResizeObserver constructor creates a new ResizeObserver object, which can be used to report changes to the content or border box of an 'Element' or the bounding box of an 'SVGElement'. public ResizeObserver(ResizeObserverCallback callback) Parameters callback ResizeObserverCallback Remarks See also on MDN Methods Disconnect() The disconnect() method of the ResizeObserver interface unobserves all observed 'Element' or 'SVGElement' targets. public GlobalObject.Undefined Disconnect() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Observe(Element, ResizeObserverOptions) The observe() method of the ResizeObserver interface starts observing the specified 'Element' or 'SVGElement'. public GlobalObject.Undefined Observe(Element target, ResizeObserverOptions options) Parameters target Element options ResizeObserverOptions Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Unobserve(Element) The unobserve() method of the ResizeObserver interface ends the observing of a specified 'Element' or 'SVGElement'. public GlobalObject.Undefined Unobserve(Element target) Parameters target Element Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ResizeObserverBoxOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ResizeObserverBoxOptions.html",
    "title": "Enum ResizeObserverBoxOptions | CSharpToJavaScript",
    "keywords": "Enum ResizeObserverBoxOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ResizeObserverBoxOptions Fields BorderBox = 0 ContentBox = 1 DevicePixelContentBox = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.ResizeObserverCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ResizeObserverCallback.html",
    "title": "Struct ResizeObserverCallback | CSharpToJavaScript",
    "keywords": "Struct ResizeObserverCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct ResizeObserverCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.ResizeObserverEntry.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ResizeObserverEntry.html",
    "title": "Class ResizeObserverEntry | CSharpToJavaScript",
    "keywords": "Class ResizeObserverEntry Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ResizeObserverEntry interface represents the object passed to the 'ResizeObserver.ResizeObserver' constructor's callback function, which allows you to access the new dimensions of the Element or SVGElement being observed. [To(\"FirstCharToLowerCase\")] public class ResizeObserverEntry Inheritance object ResizeObserverEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties BorderBoxSize The borderBoxSize read-only property of the ResizeObserverEntry interface returns an array containing the new border box size of the observed element when the callback is run. public List<ResizeObserverSize> BorderBoxSize { get; } Property Value List<ResizeObserverSize> An array containing objects with the new border box size of the observed element. The array is necessary to support elements that have multiple fragments, which occur in multi-column scenarios. Each object in the array contains two properties: NOTE Note: For more explanation of writing modes and block and inline dimensions, read Handling different text directions. Remarks See also on MDN ContentBoxSize The contentBoxSize read-only property of the ResizeObserverEntry interface returns an array containing the new content box size of the observed element when the callback is run. public List<ResizeObserverSize> ContentBoxSize { get; } Property Value List<ResizeObserverSize> An array containing objects with the new content box size of the observed element. The array is necessary to support elements that have multiple fragments, which occur in multi-column scenarios. Each object in the array contains two properties: NOTE Note: For more explanation of writing modes and block and inline dimensions, read Handling different text directions. Remarks See also on MDN ContentRect The contentRect read-only property of the ResizeObserverEntry interface returns a 'DOMRectReadOnly' object containing the new size of the observed element when the callback is run. Note that this is better supported than BorderBoxSize or ContentBoxSize, but it is left over from an earlier implementation of the Resize Observer API, is still included in the spec for web compat reasons, and may be deprecated in future versions. public DOMRectReadOnly ContentRect { get; } Property Value DOMRectReadOnly A 'DOMRectReadOnly' object containing the new size of the element indicated by the Target property.If the target is an HTML Element, the returned contentRect is the element&apos;s content box. If the target is an SVGElement, the returned contentRect is the SVG&apos;s bounding box. Remarks See also on MDN DevicePixelContentBoxSize The devicePixelContentBoxSize read-only property of the ResizeObserverEntry interface returns an array containing the size in device pixels of the observed element when the callback is run. public List<ResizeObserverSize> DevicePixelContentBoxSize { get; } Property Value List<ResizeObserverSize> An array containing objects with the new size of the observed element in device pixels. The array is necessary to support elements that have multiple fragments, which occur in multi-column scenarios. Each object in the array contains two properties: NOTE Note: For more information about writing modes and block and inline dimensions, read Handling different text directions. Remarks See also on MDN Target The target read-only property of the ResizeObserverEntry interface returns a reference to the 'Element' or 'SVGElement' that is being observed. public Element Target { get; } Property Value Element An 'Element' or 'SVGElement' representing the element being observed. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ResizeObserverOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ResizeObserverOptions.html",
    "title": "Class ResizeObserverOptions | CSharpToJavaScript",
    "keywords": "Class ResizeObserverOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ResizeObserverOptions Inheritance object ResizeObserverOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Box public ResizeObserverBoxOptions Box Field Value ResizeObserverBoxOptions"
  },
  "api/CSharpToJavaScript.APIs.JS.ResizeObserverSize.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ResizeObserverSize.html",
    "title": "Class ResizeObserverSize | CSharpToJavaScript",
    "keywords": "Class ResizeObserverSize Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ResizeObserverSize interface of the 'Resize Observer API' is used by the ResizeObserverEntry interface to access the box sizing properties of the element being observed. [To(\"FirstCharToLowerCase\")] public class ResizeObserverSize Inheritance object ResizeObserverSize Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: In multi-column layout, which is a fragmented context, the sizing returned by ResizeObserverSize will be the size of the first column. See also on MDN Properties BlockSize The blockSize read-only property of the ResizeObserverSize interface returns the length of the observed element's border box in the block dimension. For boxes with a horizontal {{cssxref(\"writing-mode\")}}, this is the vertical dimension, or height; if the writing-mode is vertical, this is the horizontal dimension, or width. public double BlockSize { get; } Property Value double A decimal representing the block size in pixels. Remarks NOTE Note: For more explanation of writing modes and block and inline dimensions, read Handling different text directions. See also on MDN InlineSize The inlineSize read-only property of the ResizeObserverSize interface returns the length of the observed element's border box in the inline dimension. For boxes with a horizontal {{cssxref(\"writing-mode\")}}, this is the horizontal dimension, or width; if the writing-mode is vertical, this is the vertical dimension, or height. public double InlineSize { get; } Property Value double A decimal representing the inline size in pixels. Remarks NOTE Note: For more explanation of writing modes and block and inline dimensions, read Handling different text directions. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ResizeQuality.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ResizeQuality.html",
    "title": "Enum ResizeQuality | CSharpToJavaScript",
    "keywords": "Enum ResizeQuality Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ResizeQuality Fields High = 3 Low = 1 Medium = 2 Pixelated = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.Response.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Response.html",
    "title": "Class Response | CSharpToJavaScript",
    "keywords": "Class Response Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Response interface of the Fetch API represents the response to a request. [To(\"FirstCharToLowerCase\")] public class Response Inheritance object Response Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can create a new Response object using the Response(Union58?, ResponseInit) constructor, but you are more likely to encounter a Response object being returned as the result of another API operation—for example, a service worker RespondWith(Task<Response>), or a simple Fetch. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Constructors Response() public Response() Response(Union58?, ResponseInit) The Response() constructor creates a new Response object. public Response(Union58? body, ResponseInit init) Parameters body Union58? init ResponseInit Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Properties Headers The headers read-only property of the Response interface contains the Headers object associated with the response. public Headers Headers { get; } Property Value Headers A Headers object. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Ok The ok read-only property of the Response interface contains a Boolean stating whether the response was successful (status in the range 200-299) or not. public bool Ok { get; } Property Value bool A boolean value. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Redirected The read-only redirected property of the Response interface indicates whether or not the response is the result of a request you made which was redirected. public bool Redirected { get; } Property Value bool A boolean value which is true if the response indicates that your request was redirected. Remarks NOTE Note: Relying on redirected to filter out redirects makes it easy for a forged redirect to prevent your content from working as expected. Instead, you should do the filtering when you call Fetch. See the example Disallowing redirects, which shows this being done. -Fetch API -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Status The status read-only property of the Response interface contains the HTTP status codes of the response. public ushort Status { get; } Property Value ushort An unsigned short number. This is one of the HTTP response status codes. Remarks For example, 200 for success, 404 if the resource could not be found. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN StatusText The statusText read-only property of the Response interface contains the status message corresponding to the HTTP status code in Status. public string StatusText { get; } Property Value string A String containing the HTTP status message associated with the response. The default value is &quot;&quot;.See HTTP response status codes for a list of codes and their associated status messages. Note that HTTP/2 does not support status messages. Remarks For example, this would be OK for a status code 200, Continue for 100, Not Found for 404. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Type The type read-only property of the Response interface contains the type of the response. It can be one of the following: public ResponseType Type { get; } Property Value ResponseType A ResponseType string indicating the type of the response. Remarks NOTE Note: An \"error\" Response never really gets exposed to script: such a response to a Fetch would reject the promise. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Url The url read-only property of the Response interface contains the URL of the response. The value of the url property will be the final URL obtained after any redirects. public string Url { get; } Property Value string A string. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Methods Clone() The clone() method of the Response interface creates a clone of a response object, identical in every way, but stored in a different variable. public Response Clone() Returns Response A Response object. Remarks Like the underlying Tee() api, the Response.Body of a cloned Response will signal backpressure at the rate of the faster consumer of the two bodies, and unread data is enqueued internally on the slower consumed body without any limit or backpressure. Backpressure refers to the mechanism by which the streaming consumer of data (in this case, the code that reads the body) slows down the producer of data (such as the TCP server) so as not to load large amounts of data in memory that is waiting to be used by the application. If only one cloned branch is consumed, then the entire body will be buffered in memory. Therefore, clone() is one way to read a response twice in sequence, but you should not use it to read very large bodies in parallel at different speeds. clone() throws a TypeError if the response body has already been used. In fact, the main reason clone() exists is to allow multiple uses of body objects (when they are one-use only.) -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Error() public static Response Error() Returns Response Json(dynamic, ResponseInit) The json() method of the Response interface takes a Response stream and reads it to completion. It returns a promise which resolves with the result of parsing the body text as JSON. public static Response Json(dynamic data, ResponseInit init) Parameters data dynamic init ResponseInit Returns Response A Promise that resolves to a JavaScript object. This object could be anything that can be represented by JSON — an object, an array, a string, a number… Remarks Note that despite the method being named json(), the result is not JSON but is instead the result of taking JSON as input and parsing it to produce a JavaScript object. -ServiceWorker API -Cross-Origin Resource Sharing (CORS) -HTTP See also on MDN Redirect(string, ushort) public static Response Redirect(string url, ushort status) Parameters url string status ushort Returns Response"
  },
  "api/CSharpToJavaScript.APIs.JS.ResponseInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ResponseInit.html",
    "title": "Class ResponseInit | CSharpToJavaScript",
    "keywords": "Class ResponseInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ResponseInit Inheritance object ResponseInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Headers public Union56 Headers Field Value Union56 Status public ushort Status Field Value ushort StatusText public string StatusText Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.ResponseType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ResponseType.html",
    "title": "Enum ResponseType | CSharpToJavaScript",
    "keywords": "Enum ResponseType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The type read-only property of the Response interface contains the type of the response. It can be one of the following: public enum ResponseType Fields Basic = 0 Cors = 1 Default = 2 Error = 3 Opaque = 4 Opaqueredirect = 5 Remarks NOTE Note: An \"error\" Response never really gets exposed to script: such a response to a Fetch would reject the promise. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.RestrictionCategory.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RestrictionCategory.html",
    "title": "Enum RestrictionCategory | CSharpToJavaScript",
    "keywords": "Enum RestrictionCategory Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum RestrictionCategory Fields None = 0 UserColors = 1 UserFonts = 2 UserMediaSettings = 3 UserScreenReaderSettings = 4"
  },
  "api/CSharpToJavaScript.APIs.JS.RuntimeError.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RuntimeError.html",
    "title": "Class RuntimeError | CSharpToJavaScript",
    "keywords": "Class RuntimeError Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RuntimeError Inheritance object RuntimeError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.SFrameTransform.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SFrameTransform.html",
    "title": "Class SFrameTransform | CSharpToJavaScript",
    "keywords": "Class SFrameTransform Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class SFrameTransform : EventTarget, GenericTransformStream Inheritance object EventTarget SFrameTransform Implements GenericTransformStream Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SFrameTransform() public SFrameTransform() SFrameTransform(SFrameTransformOptions) public SFrameTransform(SFrameTransformOptions options) Parameters options SFrameTransformOptions Properties Onerror public EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull Methods SetEncryptionKey(Unsupported, Union110) public Task<GlobalObject.Undefined> SetEncryptionKey(Unsupported key, Union110 keyID) Parameters key Unsupported keyID Union110 Returns Task<GlobalObject.Undefined>"
  },
  "api/CSharpToJavaScript.APIs.JS.SFrameTransformErrorEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SFrameTransformErrorEvent.html",
    "title": "Class SFrameTransformErrorEvent | CSharpToJavaScript",
    "keywords": "Class SFrameTransformErrorEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class SFrameTransformErrorEvent : Event Inheritance object Event SFrameTransformErrorEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SFrameTransformErrorEvent() public SFrameTransformErrorEvent() SFrameTransformErrorEvent(string, SFrameTransformErrorEventInit) public SFrameTransformErrorEvent(string type, SFrameTransformErrorEventInit eventInitDict) Parameters type string eventInitDict SFrameTransformErrorEventInit Properties ErrorType public SFrameTransformErrorEventType ErrorType { get; } Property Value SFrameTransformErrorEventType Frame public dynamic Frame { get; } Property Value dynamic KeyID public Union110? KeyID { get; } Property Value Union110?"
  },
  "api/CSharpToJavaScript.APIs.JS.SFrameTransformErrorEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SFrameTransformErrorEventInit.html",
    "title": "Class SFrameTransformErrorEventInit | CSharpToJavaScript",
    "keywords": "Class SFrameTransformErrorEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class SFrameTransformErrorEventInit : EventInit Inheritance object EventInit SFrameTransformErrorEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ErrorType public required SFrameTransformErrorEventType ErrorType Field Value SFrameTransformErrorEventType Frame public required dynamic Frame Field Value dynamic KeyID public Union110? KeyID Field Value Union110?"
  },
  "api/CSharpToJavaScript.APIs.JS.SFrameTransformErrorEventType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SFrameTransformErrorEventType.html",
    "title": "Enum SFrameTransformErrorEventType | CSharpToJavaScript",
    "keywords": "Enum SFrameTransformErrorEventType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum SFrameTransformErrorEventType Fields Authentication = 0 KeyID = 1 Syntax = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.SFrameTransformOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SFrameTransformOptions.html",
    "title": "Class SFrameTransformOptions | CSharpToJavaScript",
    "keywords": "Class SFrameTransformOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class SFrameTransformOptions Inheritance object SFrameTransformOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Role public SFrameTransformRole Role Field Value SFrameTransformRole"
  },
  "api/CSharpToJavaScript.APIs.JS.SFrameTransformRole.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SFrameTransformRole.html",
    "title": "Enum SFrameTransformRole | CSharpToJavaScript",
    "keywords": "Enum SFrameTransformRole Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum SFrameTransformRole Fields Decrypt = 1 Encrypt = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGClipPathElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGClipPathElement.html",
    "title": "Class SVGClipPathElement | CSharpToJavaScript",
    "keywords": "Class SVGClipPathElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGClipPathElement interface provides access to the properties of clipPath elements, as well as methods to manipulate them. [To(\"FirstCharToLowerCase\")] public class SVGClipPathElement Inheritance object SVGClipPathElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -clipPath See also on MDN Properties ClipPathUnits The read-only clipPathUnits property of the SVGClipPathElement interface reflects the {{SVGAttr(\"clipPathUnits\")}} attribute of a {{SVGElement(\"clipPath\")}} element which defines the coordinate system to use for the content of the element. public Unsupported ClipPathUnits { get; } Property Value Unsupported An SVGAnimatedEnumeration representing the coordinate system. The possible values are defined in the SVGUnitTypes interface: Remarks NOTE Note: Although this property is read-only, it is merely a container for two values you can modify, SVGAnimatedEnumeration.BaseVal and SVGAnimatedEnumeration.AnimVal. -clipPathUnits -clipPath See also on MDN Transform The read-only transform property of the SVGClipPathElement interface reflects the {{SVGAttr(\"transform\")}} attribute of a {{SVGElement(\"clipPath\")}} element, that is a list of transformations applied to the element. public Unsupported Transform { get; } Property Value Unsupported A SVGTransformList. Remarks -clipPathUnits -clipPath See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGComponentTransferFunctionElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGComponentTransferFunctionElement.html",
    "title": "Class SVGComponentTransferFunctionElement | CSharpToJavaScript",
    "keywords": "Class SVGComponentTransferFunctionElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGComponentTransferFunctionElement interface defines a base interface used by the component transfer function interfaces. [To(\"FirstCharToLowerCase\")] public class SVGComponentTransferFunctionElement Inheritance object SVGComponentTransferFunctionElement Derived SVGFEFuncAElement SVGFEFuncBElement SVGFEFuncGElement SVGFEFuncRElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -SVGFEFuncAElement -SVGFEFuncBElement -SVGFEFuncGElement -SVGFEFuncRElement See also on MDN Fields SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE public const ushort SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE = 3 Field Value ushort SVG_FECOMPONENTTRANSFER_TYPE_GAMMA public const ushort SVG_FECOMPONENTTRANSFER_TYPE_GAMMA = 5 Field Value ushort SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY public const ushort SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY = 1 Field Value ushort SVG_FECOMPONENTTRANSFER_TYPE_LINEAR public const ushort SVG_FECOMPONENTTRANSFER_TYPE_LINEAR = 4 Field Value ushort SVG_FECOMPONENTTRANSFER_TYPE_TABLE public const ushort SVG_FECOMPONENTTRANSFER_TYPE_TABLE = 2 Field Value ushort SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN public const ushort SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN = 0 Field Value ushort Properties Amplitude public Unsupported Amplitude { get; } Property Value Unsupported Exponent public Unsupported Exponent { get; } Property Value Unsupported Intercept public Unsupported Intercept { get; } Property Value Unsupported Offset public Unsupported Offset { get; } Property Value Unsupported Slope public Unsupported Slope { get; } Property Value Unsupported TableValues public Unsupported TableValues { get; } Property Value Unsupported Type public Unsupported Type { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEBlendElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEBlendElement.html",
    "title": "Class SVGFEBlendElement | CSharpToJavaScript",
    "keywords": "Class SVGFEBlendElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEBlendElement interface corresponds to the feBlend element. [To(\"FirstCharToLowerCase\")] public class SVGFEBlendElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFEBlendElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feBlend See also on MDN Fields SVG_FEBLEND_MODE_COLOR public const ushort SVG_FEBLEND_MODE_COLOR = 15 Field Value ushort SVG_FEBLEND_MODE_COLOR_BURN public const ushort SVG_FEBLEND_MODE_COLOR_BURN = 8 Field Value ushort SVG_FEBLEND_MODE_COLOR_DODGE public const ushort SVG_FEBLEND_MODE_COLOR_DODGE = 7 Field Value ushort SVG_FEBLEND_MODE_DARKEN public const ushort SVG_FEBLEND_MODE_DARKEN = 4 Field Value ushort SVG_FEBLEND_MODE_DIFFERENCE public const ushort SVG_FEBLEND_MODE_DIFFERENCE = 11 Field Value ushort SVG_FEBLEND_MODE_EXCLUSION public const ushort SVG_FEBLEND_MODE_EXCLUSION = 12 Field Value ushort SVG_FEBLEND_MODE_HARD_LIGHT public const ushort SVG_FEBLEND_MODE_HARD_LIGHT = 9 Field Value ushort SVG_FEBLEND_MODE_HUE public const ushort SVG_FEBLEND_MODE_HUE = 13 Field Value ushort SVG_FEBLEND_MODE_LIGHTEN public const ushort SVG_FEBLEND_MODE_LIGHTEN = 5 Field Value ushort SVG_FEBLEND_MODE_LUMINOSITY public const ushort SVG_FEBLEND_MODE_LUMINOSITY = 16 Field Value ushort SVG_FEBLEND_MODE_MULTIPLY public const ushort SVG_FEBLEND_MODE_MULTIPLY = 2 Field Value ushort SVG_FEBLEND_MODE_NORMAL public const ushort SVG_FEBLEND_MODE_NORMAL = 1 Field Value ushort SVG_FEBLEND_MODE_OVERLAY public const ushort SVG_FEBLEND_MODE_OVERLAY = 6 Field Value ushort SVG_FEBLEND_MODE_SATURATION public const ushort SVG_FEBLEND_MODE_SATURATION = 14 Field Value ushort SVG_FEBLEND_MODE_SCREEN public const ushort SVG_FEBLEND_MODE_SCREEN = 3 Field Value ushort SVG_FEBLEND_MODE_SOFT_LIGHT public const ushort SVG_FEBLEND_MODE_SOFT_LIGHT = 10 Field Value ushort SVG_FEBLEND_MODE_UNKNOWN public const ushort SVG_FEBLEND_MODE_UNKNOWN = 0 Field Value ushort Properties In1 public Unsupported In1 { get; } Property Value Unsupported In2 public Unsupported In2 { get; } Property Value Unsupported Mode public Unsupported Mode { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEColorMatrixElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEColorMatrixElement.html",
    "title": "Class SVGFEColorMatrixElement | CSharpToJavaScript",
    "keywords": "Class SVGFEColorMatrixElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEColorMatrixElement interface corresponds to the feColorMatrix element. [To(\"FirstCharToLowerCase\")] public class SVGFEColorMatrixElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFEColorMatrixElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feColorMatrix See also on MDN Fields SVG_FECOLORMATRIX_TYPE_HUEROTATE public const ushort SVG_FECOLORMATRIX_TYPE_HUEROTATE = 3 Field Value ushort SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA public const ushort SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA = 4 Field Value ushort SVG_FECOLORMATRIX_TYPE_MATRIX public const ushort SVG_FECOLORMATRIX_TYPE_MATRIX = 1 Field Value ushort SVG_FECOLORMATRIX_TYPE_SATURATE public const ushort SVG_FECOLORMATRIX_TYPE_SATURATE = 2 Field Value ushort SVG_FECOLORMATRIX_TYPE_UNKNOWN public const ushort SVG_FECOLORMATRIX_TYPE_UNKNOWN = 0 Field Value ushort Properties In1 public Unsupported In1 { get; } Property Value Unsupported Type public Unsupported Type { get; } Property Value Unsupported Values public Unsupported Values { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEComponentTransferElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEComponentTransferElement.html",
    "title": "Class SVGFEComponentTransferElement | CSharpToJavaScript",
    "keywords": "Class SVGFEComponentTransferElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEComponentTransferElement interface corresponds to the feComponentTransfer element. [To(\"FirstCharToLowerCase\")] public class SVGFEComponentTransferElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFEComponentTransferElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feComponentTransfer See also on MDN Properties In1 public Unsupported In1 { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFECompositeElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFECompositeElement.html",
    "title": "Class SVGFECompositeElement | CSharpToJavaScript",
    "keywords": "Class SVGFECompositeElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFECompositeElement interface corresponds to the feComposite element. [To(\"FirstCharToLowerCase\")] public class SVGFECompositeElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFECompositeElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feComposite See also on MDN Fields SVG_FECOMPOSITE_OPERATOR_ARITHMETIC public const ushort SVG_FECOMPOSITE_OPERATOR_ARITHMETIC = 6 Field Value ushort SVG_FECOMPOSITE_OPERATOR_ATOP public const ushort SVG_FECOMPOSITE_OPERATOR_ATOP = 4 Field Value ushort SVG_FECOMPOSITE_OPERATOR_IN public const ushort SVG_FECOMPOSITE_OPERATOR_IN = 2 Field Value ushort SVG_FECOMPOSITE_OPERATOR_OUT public const ushort SVG_FECOMPOSITE_OPERATOR_OUT = 3 Field Value ushort SVG_FECOMPOSITE_OPERATOR_OVER public const ushort SVG_FECOMPOSITE_OPERATOR_OVER = 1 Field Value ushort SVG_FECOMPOSITE_OPERATOR_UNKNOWN public const ushort SVG_FECOMPOSITE_OPERATOR_UNKNOWN = 0 Field Value ushort SVG_FECOMPOSITE_OPERATOR_XOR public const ushort SVG_FECOMPOSITE_OPERATOR_XOR = 5 Field Value ushort Properties In1 public Unsupported In1 { get; } Property Value Unsupported In2 public Unsupported In2 { get; } Property Value Unsupported K1 public Unsupported K1 { get; } Property Value Unsupported K2 public Unsupported K2 { get; } Property Value Unsupported K3 public Unsupported K3 { get; } Property Value Unsupported K4 public Unsupported K4 { get; } Property Value Unsupported Operator public Unsupported Operator { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEConvolveMatrixElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEConvolveMatrixElement.html",
    "title": "Class SVGFEConvolveMatrixElement | CSharpToJavaScript",
    "keywords": "Class SVGFEConvolveMatrixElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEConvolveMatrixElement interface corresponds to the feConvolveMatrix element. [To(\"FirstCharToLowerCase\")] public class SVGFEConvolveMatrixElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFEConvolveMatrixElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feConvolveMatrix See also on MDN Fields SVG_EDGEMODE_DUPLICATE public const ushort SVG_EDGEMODE_DUPLICATE = 1 Field Value ushort SVG_EDGEMODE_NONE public const ushort SVG_EDGEMODE_NONE = 3 Field Value ushort SVG_EDGEMODE_UNKNOWN public const ushort SVG_EDGEMODE_UNKNOWN = 0 Field Value ushort SVG_EDGEMODE_WRAP public const ushort SVG_EDGEMODE_WRAP = 2 Field Value ushort Properties Bias public Unsupported Bias { get; } Property Value Unsupported Divisor public Unsupported Divisor { get; } Property Value Unsupported EdgeMode public Unsupported EdgeMode { get; } Property Value Unsupported In1 public Unsupported In1 { get; } Property Value Unsupported KernelMatrix public Unsupported KernelMatrix { get; } Property Value Unsupported KernelUnitLengthX public Unsupported KernelUnitLengthX { get; } Property Value Unsupported KernelUnitLengthY public Unsupported KernelUnitLengthY { get; } Property Value Unsupported OrderX public Unsupported OrderX { get; } Property Value Unsupported OrderY public Unsupported OrderY { get; } Property Value Unsupported PreserveAlpha public Unsupported PreserveAlpha { get; } Property Value Unsupported TargetX public Unsupported TargetX { get; } Property Value Unsupported TargetY public Unsupported TargetY { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEDiffuseLightingElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEDiffuseLightingElement.html",
    "title": "Class SVGFEDiffuseLightingElement | CSharpToJavaScript",
    "keywords": "Class SVGFEDiffuseLightingElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEDiffuseLightingElement interface corresponds to the feDiffuseLighting element. [To(\"FirstCharToLowerCase\")] public class SVGFEDiffuseLightingElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFEDiffuseLightingElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feDiffuseLighting See also on MDN Properties DiffuseConstant public Unsupported DiffuseConstant { get; } Property Value Unsupported In1 public Unsupported In1 { get; } Property Value Unsupported KernelUnitLengthX public Unsupported KernelUnitLengthX { get; } Property Value Unsupported KernelUnitLengthY public Unsupported KernelUnitLengthY { get; } Property Value Unsupported SurfaceScale public Unsupported SurfaceScale { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEDisplacementMapElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEDisplacementMapElement.html",
    "title": "Class SVGFEDisplacementMapElement | CSharpToJavaScript",
    "keywords": "Class SVGFEDisplacementMapElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEDisplacementMapElement interface corresponds to the feDisplacementMap element. [To(\"FirstCharToLowerCase\")] public class SVGFEDisplacementMapElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFEDisplacementMapElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feDisplacementMap See also on MDN Fields SVG_CHANNEL_A public const ushort SVG_CHANNEL_A = 4 Field Value ushort SVG_CHANNEL_B public const ushort SVG_CHANNEL_B = 3 Field Value ushort SVG_CHANNEL_G public const ushort SVG_CHANNEL_G = 2 Field Value ushort SVG_CHANNEL_R public const ushort SVG_CHANNEL_R = 1 Field Value ushort SVG_CHANNEL_UNKNOWN public const ushort SVG_CHANNEL_UNKNOWN = 0 Field Value ushort Properties In1 public Unsupported In1 { get; } Property Value Unsupported In2 public Unsupported In2 { get; } Property Value Unsupported Scale public Unsupported Scale { get; } Property Value Unsupported XChannelSelector public Unsupported XChannelSelector { get; } Property Value Unsupported YChannelSelector public Unsupported YChannelSelector { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEDistantLightElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEDistantLightElement.html",
    "title": "Class SVGFEDistantLightElement | CSharpToJavaScript",
    "keywords": "Class SVGFEDistantLightElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEDistantLightElement interface corresponds to the feDistantLight element. [To(\"FirstCharToLowerCase\")] public class SVGFEDistantLightElement Inheritance object SVGFEDistantLightElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feDistantLight See also on MDN Properties Azimuth public Unsupported Azimuth { get; } Property Value Unsupported Elevation public Unsupported Elevation { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEDropShadowElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEDropShadowElement.html",
    "title": "Class SVGFEDropShadowElement | CSharpToJavaScript",
    "keywords": "Class SVGFEDropShadowElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEDropShadowElement interface corresponds to the feDropShadow element. [To(\"FirstCharToLowerCase\")] public class SVGFEDropShadowElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFEDropShadowElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feDropShadow See also on MDN Properties Dx public Unsupported Dx { get; } Property Value Unsupported Dy public Unsupported Dy { get; } Property Value Unsupported In1 public Unsupported In1 { get; } Property Value Unsupported StdDeviationX public Unsupported StdDeviationX { get; } Property Value Unsupported StdDeviationY public Unsupported StdDeviationY { get; } Property Value Unsupported Methods SetStdDeviation(Number, Number) public GlobalObject.Undefined SetStdDeviation(Number stdDeviationX, Number stdDeviationY) Parameters stdDeviationX Number stdDeviationY Number Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEFloodElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEFloodElement.html",
    "title": "Class SVGFEFloodElement | CSharpToJavaScript",
    "keywords": "Class SVGFEFloodElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEFloodElement interface corresponds to the feFlood element. [To(\"FirstCharToLowerCase\")] public class SVGFEFloodElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFEFloodElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feFlood See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEFuncAElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEFuncAElement.html",
    "title": "Class SVGFEFuncAElement | CSharpToJavaScript",
    "keywords": "Class SVGFEFuncAElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEFuncAElement interface corresponds to the feFuncA element. [To(\"FirstCharToLowerCase\")] public class SVGFEFuncAElement : SVGComponentTransferFunctionElement Inheritance object SVGComponentTransferFunctionElement SVGFEFuncAElement Inherited Members SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_TABLE SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_GAMMA SVGComponentTransferFunctionElement.Type SVGComponentTransferFunctionElement.TableValues SVGComponentTransferFunctionElement.Slope SVGComponentTransferFunctionElement.Intercept SVGComponentTransferFunctionElement.Amplitude SVGComponentTransferFunctionElement.Exponent SVGComponentTransferFunctionElement.Offset object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feFuncA See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEFuncBElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEFuncBElement.html",
    "title": "Class SVGFEFuncBElement | CSharpToJavaScript",
    "keywords": "Class SVGFEFuncBElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEFuncBElement interface corresponds to the feFuncB element. [To(\"FirstCharToLowerCase\")] public class SVGFEFuncBElement : SVGComponentTransferFunctionElement Inheritance object SVGComponentTransferFunctionElement SVGFEFuncBElement Inherited Members SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_TABLE SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_GAMMA SVGComponentTransferFunctionElement.Type SVGComponentTransferFunctionElement.TableValues SVGComponentTransferFunctionElement.Slope SVGComponentTransferFunctionElement.Intercept SVGComponentTransferFunctionElement.Amplitude SVGComponentTransferFunctionElement.Exponent SVGComponentTransferFunctionElement.Offset object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feFuncB See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEFuncGElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEFuncGElement.html",
    "title": "Class SVGFEFuncGElement | CSharpToJavaScript",
    "keywords": "Class SVGFEFuncGElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEFuncGElement interface corresponds to the feFuncG element. [To(\"FirstCharToLowerCase\")] public class SVGFEFuncGElement : SVGComponentTransferFunctionElement Inheritance object SVGComponentTransferFunctionElement SVGFEFuncGElement Inherited Members SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_TABLE SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_GAMMA SVGComponentTransferFunctionElement.Type SVGComponentTransferFunctionElement.TableValues SVGComponentTransferFunctionElement.Slope SVGComponentTransferFunctionElement.Intercept SVGComponentTransferFunctionElement.Amplitude SVGComponentTransferFunctionElement.Exponent SVGComponentTransferFunctionElement.Offset object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feFuncG See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEFuncRElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEFuncRElement.html",
    "title": "Class SVGFEFuncRElement | CSharpToJavaScript",
    "keywords": "Class SVGFEFuncRElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEFuncRElement interface corresponds to the feFuncR element. [To(\"FirstCharToLowerCase\")] public class SVGFEFuncRElement : SVGComponentTransferFunctionElement Inheritance object SVGComponentTransferFunctionElement SVGFEFuncRElement Inherited Members SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_TABLE SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_GAMMA SVGComponentTransferFunctionElement.Type SVGComponentTransferFunctionElement.TableValues SVGComponentTransferFunctionElement.Slope SVGComponentTransferFunctionElement.Intercept SVGComponentTransferFunctionElement.Amplitude SVGComponentTransferFunctionElement.Exponent SVGComponentTransferFunctionElement.Offset object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feFuncR See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEGaussianBlurElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEGaussianBlurElement.html",
    "title": "Class SVGFEGaussianBlurElement | CSharpToJavaScript",
    "keywords": "Class SVGFEGaussianBlurElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEGaussianBlurElement interface corresponds to the feGaussianBlur element. [To(\"FirstCharToLowerCase\")] public class SVGFEGaussianBlurElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFEGaussianBlurElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feGaussianBlur See also on MDN Fields SVG_EDGEMODE_DUPLICATE public const ushort SVG_EDGEMODE_DUPLICATE = 1 Field Value ushort SVG_EDGEMODE_NONE public const ushort SVG_EDGEMODE_NONE = 3 Field Value ushort SVG_EDGEMODE_UNKNOWN public const ushort SVG_EDGEMODE_UNKNOWN = 0 Field Value ushort SVG_EDGEMODE_WRAP public const ushort SVG_EDGEMODE_WRAP = 2 Field Value ushort Properties EdgeMode public Unsupported EdgeMode { get; } Property Value Unsupported In1 public Unsupported In1 { get; } Property Value Unsupported StdDeviationX public Unsupported StdDeviationX { get; } Property Value Unsupported StdDeviationY public Unsupported StdDeviationY { get; } Property Value Unsupported Methods SetStdDeviation(Number, Number) public GlobalObject.Undefined SetStdDeviation(Number stdDeviationX, Number stdDeviationY) Parameters stdDeviationX Number stdDeviationY Number Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEImageElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEImageElement.html",
    "title": "Class SVGFEImageElement | CSharpToJavaScript",
    "keywords": "Class SVGFEImageElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEImageElement interface corresponds to the feImage element. [To(\"FirstCharToLowerCase\")] public class SVGFEImageElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFEImageElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feImage See also on MDN Properties CrossOrigin public Unsupported CrossOrigin { get; } Property Value Unsupported PreserveAspectRatio public Unsupported PreserveAspectRatio { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEMergeElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEMergeElement.html",
    "title": "Class SVGFEMergeElement | CSharpToJavaScript",
    "keywords": "Class SVGFEMergeElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEMergeElement interface corresponds to the feMerge element. [To(\"FirstCharToLowerCase\")] public class SVGFEMergeElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFEMergeElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feMerge See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEMergeNodeElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEMergeNodeElement.html",
    "title": "Class SVGFEMergeNodeElement | CSharpToJavaScript",
    "keywords": "Class SVGFEMergeNodeElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEMergeNodeElement interface corresponds to the feMergeNode element. [To(\"FirstCharToLowerCase\")] public class SVGFEMergeNodeElement Inheritance object SVGFEMergeNodeElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feMergeNode See also on MDN Properties In1 public Unsupported In1 { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEMorphologyElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEMorphologyElement.html",
    "title": "Class SVGFEMorphologyElement | CSharpToJavaScript",
    "keywords": "Class SVGFEMorphologyElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEMorphologyElement interface corresponds to the feMorphology element. [To(\"FirstCharToLowerCase\")] public class SVGFEMorphologyElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFEMorphologyElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feMorphology See also on MDN Fields SVG_MORPHOLOGY_OPERATOR_DILATE public const ushort SVG_MORPHOLOGY_OPERATOR_DILATE = 2 Field Value ushort SVG_MORPHOLOGY_OPERATOR_ERODE public const ushort SVG_MORPHOLOGY_OPERATOR_ERODE = 1 Field Value ushort SVG_MORPHOLOGY_OPERATOR_UNKNOWN public const ushort SVG_MORPHOLOGY_OPERATOR_UNKNOWN = 0 Field Value ushort Properties In1 public Unsupported In1 { get; } Property Value Unsupported Operator public Unsupported Operator { get; } Property Value Unsupported RadiusX public Unsupported RadiusX { get; } Property Value Unsupported RadiusY public Unsupported RadiusY { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEOffsetElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEOffsetElement.html",
    "title": "Class SVGFEOffsetElement | CSharpToJavaScript",
    "keywords": "Class SVGFEOffsetElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEOffsetElement interface corresponds to the feOffset element. [To(\"FirstCharToLowerCase\")] public class SVGFEOffsetElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFEOffsetElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feOffset See also on MDN Properties Dx public Unsupported Dx { get; } Property Value Unsupported Dy public Unsupported Dy { get; } Property Value Unsupported In1 public Unsupported In1 { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFEPointLightElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFEPointLightElement.html",
    "title": "Class SVGFEPointLightElement | CSharpToJavaScript",
    "keywords": "Class SVGFEPointLightElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFEPointLightElement interface corresponds to the fePointLight element. [To(\"FirstCharToLowerCase\")] public class SVGFEPointLightElement Inheritance object SVGFEPointLightElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -fePointLight See also on MDN Properties X public Unsupported X { get; } Property Value Unsupported Y public Unsupported Y { get; } Property Value Unsupported Z public Unsupported Z { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFESpecularLightingElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFESpecularLightingElement.html",
    "title": "Class SVGFESpecularLightingElement | CSharpToJavaScript",
    "keywords": "Class SVGFESpecularLightingElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFESpecularLightingElement interface corresponds to the feSpecularLighting element. [To(\"FirstCharToLowerCase\")] public class SVGFESpecularLightingElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFESpecularLightingElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feSpecularLighting See also on MDN Properties In1 public Unsupported In1 { get; } Property Value Unsupported KernelUnitLengthX public Unsupported KernelUnitLengthX { get; } Property Value Unsupported KernelUnitLengthY public Unsupported KernelUnitLengthY { get; } Property Value Unsupported SpecularConstant public Unsupported SpecularConstant { get; } Property Value Unsupported SpecularExponent public Unsupported SpecularExponent { get; } Property Value Unsupported SurfaceScale public Unsupported SurfaceScale { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFESpotLightElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFESpotLightElement.html",
    "title": "Class SVGFESpotLightElement | CSharpToJavaScript",
    "keywords": "Class SVGFESpotLightElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFESpotLightElement interface corresponds to the feSpotLight element. [To(\"FirstCharToLowerCase\")] public class SVGFESpotLightElement Inheritance object SVGFESpotLightElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feSpotLight See also on MDN Properties LimitingConeAngle public Unsupported LimitingConeAngle { get; } Property Value Unsupported PointsAtX public Unsupported PointsAtX { get; } Property Value Unsupported PointsAtY public Unsupported PointsAtY { get; } Property Value Unsupported PointsAtZ public Unsupported PointsAtZ { get; } Property Value Unsupported SpecularExponent public Unsupported SpecularExponent { get; } Property Value Unsupported X public Unsupported X { get; } Property Value Unsupported Y public Unsupported Y { get; } Property Value Unsupported Z public Unsupported Z { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFETileElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFETileElement.html",
    "title": "Class SVGFETileElement | CSharpToJavaScript",
    "keywords": "Class SVGFETileElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFETileElement interface corresponds to the feTile element. [To(\"FirstCharToLowerCase\")] public class SVGFETileElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFETileElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feTile See also on MDN Properties In1 public Unsupported In1 { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFETurbulenceElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFETurbulenceElement.html",
    "title": "Class SVGFETurbulenceElement | CSharpToJavaScript",
    "keywords": "Class SVGFETurbulenceElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFETurbulenceElement interface corresponds to the feTurbulence element. [To(\"FirstCharToLowerCase\")] public class SVGFETurbulenceElement : SVGFilterPrimitiveStandardAttributes Inheritance object SVGFETurbulenceElement Implements SVGFilterPrimitiveStandardAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -feTurbulence See also on MDN Fields SVG_STITCHTYPE_NOSTITCH public const ushort SVG_STITCHTYPE_NOSTITCH = 2 Field Value ushort SVG_STITCHTYPE_STITCH public const ushort SVG_STITCHTYPE_STITCH = 1 Field Value ushort SVG_STITCHTYPE_UNKNOWN public const ushort SVG_STITCHTYPE_UNKNOWN = 0 Field Value ushort SVG_TURBULENCE_TYPE_FRACTALNOISE public const ushort SVG_TURBULENCE_TYPE_FRACTALNOISE = 1 Field Value ushort SVG_TURBULENCE_TYPE_TURBULENCE public const ushort SVG_TURBULENCE_TYPE_TURBULENCE = 2 Field Value ushort SVG_TURBULENCE_TYPE_UNKNOWN public const ushort SVG_TURBULENCE_TYPE_UNKNOWN = 0 Field Value ushort Properties BaseFrequencyX public Unsupported BaseFrequencyX { get; } Property Value Unsupported BaseFrequencyY public Unsupported BaseFrequencyY { get; } Property Value Unsupported NumOctaves public Unsupported NumOctaves { get; } Property Value Unsupported Seed public Unsupported Seed { get; } Property Value Unsupported StitchTiles public Unsupported StitchTiles { get; } Property Value Unsupported Type public Unsupported Type { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFilterElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFilterElement.html",
    "title": "Class SVGFilterElement | CSharpToJavaScript",
    "keywords": "Class SVGFilterElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGFilterElement interface provides access to the properties of filter elements, as well as methods to manipulate them. [To(\"FirstCharToLowerCase\")] public class SVGFilterElement Inheritance object SVGFilterElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -filter See also on MDN Properties FilterUnits public Unsupported FilterUnits { get; } Property Value Unsupported Height public Unsupported Height { get; } Property Value Unsupported PrimitiveUnits public Unsupported PrimitiveUnits { get; } Property Value Unsupported Width public Unsupported Width { get; } Property Value Unsupported X public Unsupported X { get; } Property Value Unsupported Y public Unsupported Y { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGFilterPrimitiveStandardAttributes.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGFilterPrimitiveStandardAttributes.html",
    "title": "Interface SVGFilterPrimitiveStandardAttributes | CSharpToJavaScript",
    "keywords": "Interface SVGFilterPrimitiveStandardAttributes Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface SVGFilterPrimitiveStandardAttributes Properties Height Unsupported Height { get; } Property Value Unsupported Result Unsupported Result { get; } Property Value Unsupported Width Unsupported Width { get; } Property Value Unsupported X Unsupported X { get; } Property Value Unsupported Y Unsupported Y { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.SVGMaskElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SVGMaskElement.html",
    "title": "Class SVGMaskElement | CSharpToJavaScript",
    "keywords": "Class SVGMaskElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SVGMaskElement interface provides access to the properties of mask elements, as well as methods to manipulate them. [To(\"FirstCharToLowerCase\")] public class SVGMaskElement Inheritance object SVGMaskElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -mask See also on MDN Properties Height The read-only height property of the SVGMaskElement interface returns an SVGAnimatedLength object containing the value of the {{SVGattr(\"height\")}} attribute of the {{SVGElement(\"marker\")}}. public Unsupported Height { get; } Property Value Unsupported An SVGAnimatedLength object. The baseVal property of this object returns an SVGLength, the value of which returns the height value. Remarks NOTE Note: Although this property is read-only, it is merely a container for two values you can modify, SVGAnimatedLength.BaseVal and SVGAnimatedLength.AnimVal. See also on MDN MaskContentUnits The read-only maskContentUnits property of the SVGMaskElement interface reflects the {{SVGAttr(\"maskContentUnits\")}} attribute. It indicates which coordinate system to use for the contents of the {{SVGElement(\"mask\")}} element. public Unsupported MaskContentUnits { get; } Property Value Unsupported An SVGAnimatedEnumeration representing the coordinate system. The possible values are defined in the SVGUnitTypes interface: Remarks NOTE Note: Although this property is read-only, it is merely a container for two values you can modify, SVGAnimatedEnumeration.BaseVal and SVGAnimatedEnumeration.AnimVal. -maskContentUnits -mask See also on MDN MaskUnits The read-only maskUnits property of the SVGMaskElement interface reflects the {{SVGAttr(\"maskUnits\")}} attribute of a {{SVGElement(\"mask\")}} element which defines the coordinate system to use for the mask of the element. public Unsupported MaskUnits { get; } Property Value Unsupported An SVGAnimatedEnumeration representing the coordinate system. The possible values are defined in the SVGUnitTypes interface: Remarks NOTE Note: Although this property is read-only, it is merely a container for two values you can modify, SVGAnimatedEnumeration.BaseVal and SVGAnimatedEnumeration.AnimVal. -maskUnits -mask See also on MDN Width The read-only width property of the SVGMaskElement interface returns an SVGAnimatedLength object containing the value of the {{SVGattr(\"width\")}} attribute of the {{SVGElement(\"marker\")}}. public Unsupported Width { get; } Property Value Unsupported An SVGAnimatedLength object. The baseVal property of this object returns an SVGLength, the value of which returns the width value. Remarks NOTE Note: Although this property is read-only, it is merely a container for two values you can modify, SVGAnimatedLength.BaseVal and SVGAnimatedLength.AnimVal. See also on MDN X The read-only x property of the SVGMaskElement interface returns an SVGAnimatedLength object containing the value of the {{SVGattr(\"x\")}} attribute of the {{SVGElement(\"mask\")}}. It represents the x-axis coordinate of the top-left corner of the masking area. public Unsupported X { get; } Property Value Unsupported An SVGAnimatedLength object in the coordinate system defined by MaskUnits. The baseVal property of this object returns an SVGLength, the value of which returns the initial x value. Remarks NOTE Note: Although this property is read-only, it is merely a container for two values you can modify, SVGAnimatedLength.BaseVal and SVGAnimatedLength.AnimVal. See also on MDN Y The read-only y property of the SVGMaskElement interface returns an SVGAnimatedLength object containing the value of the {{SVGattr(\"y\")}} attribute of the {{SVGElement(\"marker\")}}. It represents the y-axis coordinate of the top-left corner of the masking area. public Unsupported Y { get; } Property Value Unsupported An SVGAnimatedLength object. The baseVal property of this object returns an SVGLength, the value of which returns the y value. Remarks NOTE Note: Although this property is read-only, it is merely a container for two values you can modify, SVGAnimatedLength.BaseVal and SVGAnimatedLength.AnimVal. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Screen.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Screen.html",
    "title": "Class Screen | CSharpToJavaScript",
    "keywords": "Class Screen Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Screen interface represents a screen, usually the one on which the current window is being rendered, and is obtained using Window.Screen. [To(\"FirstCharToLowerCase\")] public class Screen Inheritance object Screen Derived ScreenDetailed Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Note that browsers determine which screen to report as current by detecting which screen has the center of the browser window. See also on MDN Properties IsExtended public bool IsExtended { get; } Property Value bool Onchange public EventHandlerNonNull Onchange { get; set; } Property Value EventHandlerNonNull"
  },
  "api/CSharpToJavaScript.APIs.JS.ScreenDetailed.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ScreenDetailed.html",
    "title": "Class ScreenDetailed | CSharpToJavaScript",
    "keywords": "Class ScreenDetailed Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ScreenDetailed : Screen Inheritance object Screen ScreenDetailed Inherited Members Screen.IsExtended Screen.Onchange object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AvailLeft public long AvailLeft { get; } Property Value long AvailTop public long AvailTop { get; } Property Value long DevicePixelRatio public Number DevicePixelRatio { get; } Property Value Number IsInternal public bool IsInternal { get; } Property Value bool IsPrimary public bool IsPrimary { get; } Property Value bool Label public string Label { get; } Property Value string Left public long Left { get; } Property Value long Top public long Top { get; } Property Value long"
  },
  "api/CSharpToJavaScript.APIs.JS.ScreenDetails.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ScreenDetails.html",
    "title": "Class ScreenDetails | CSharpToJavaScript",
    "keywords": "Class ScreenDetails Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ScreenDetails : EventTarget Inheritance object EventTarget ScreenDetails Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CurrentScreen public ScreenDetailed CurrentScreen { get; } Property Value ScreenDetailed Oncurrentscreenchange public EventHandlerNonNull Oncurrentscreenchange { get; set; } Property Value EventHandlerNonNull Onscreenschange public EventHandlerNonNull Onscreenschange { get; set; } Property Value EventHandlerNonNull Screens public ScreenDetailed[] Screens { get; } Property Value ScreenDetailed[]"
  },
  "api/CSharpToJavaScript.APIs.JS.ScriptProcessorNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ScriptProcessorNode.html",
    "title": "Class ScriptProcessorNode | CSharpToJavaScript",
    "keywords": "Class ScriptProcessorNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The ScriptProcessorNode interface allows the generation, processing, or analyzing of audio using JavaScript. [To(\"FirstCharToLowerCase\")] public class ScriptProcessorNode : AudioNode Inheritance object EventTarget AudioNode ScriptProcessorNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: This feature was replaced by AudioWorklets and the AudioWorkletNode interface. The ScriptProcessorNode interface is an AudioNode audio-processing module that is linked to two buffers, one containing the input audio data, one containing the processed output audio data. An event, implementing the AudioProcessingEvent interface, is sent to the object each time the input buffer contains new data, and the event handler terminates when it has filled the output buffer with data. The ScriptProcessorNode stores the input in a buffer, send the audioprocess event. The EventHandler takes the input buffer and fill the output buffer which is sent to the output by the ScriptProcessorNode. The size of the input and output buffer are defined at the creation time, when the CreateScriptProcessor(ulong, ulong, ulong) method is called (both are defined by CreateScriptProcessor(ulong, ulong, ulong)'s bufferSize parameter). The buffer size must be a power of 2 between 256 and 16384, that is 256, 512, 1024, 2048, 4096, 8192 or 16384. Small numbers lower the latency, but large number may be necessary to avoid audio breakup and glitches. If the buffer size is not defined, which is recommended, the browser will pick one that its heuristic deems appropriate. -Using the Web Audio API See also on MDN Properties BufferSize IMPORTANT Deprecated The bufferSize property of the ScriptProcessorNode interface returns an integer representing both the input and output buffer size, in sample-frames. Its value can be a power of 2 value in the range 256 – 16384. public long BufferSize { get; } Property Value long An integer. Remarks NOTE Note: This feature was replaced by AudioWorklets and the AudioWorkletNode interface. -Using the Web Audio API See also on MDN Onaudioprocess public EventHandlerNonNull Onaudioprocess { get; set; } Property Value EventHandlerNonNull"
  },
  "api/CSharpToJavaScript.APIs.JS.ScrollAxis.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ScrollAxis.html",
    "title": "Enum ScrollAxis | CSharpToJavaScript",
    "keywords": "Enum ScrollAxis Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ScrollAxis Fields Block = 0 Inline = 1 X = 2 Y = 3"
  },
  "api/CSharpToJavaScript.APIs.JS.ScrollRestoration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ScrollRestoration.html",
    "title": "Enum ScrollRestoration | CSharpToJavaScript",
    "keywords": "Enum ScrollRestoration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ScrollRestoration Fields Auto = 0 Manual = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.ScrollSetting.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ScrollSetting.html",
    "title": "Enum ScrollSetting | CSharpToJavaScript",
    "keywords": "Enum ScrollSetting Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ScrollSetting Fields Empty = 0 Up = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.ScrollTimeline.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ScrollTimeline.html",
    "title": "Class ScrollTimeline | CSharpToJavaScript",
    "keywords": "Class ScrollTimeline Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ScrollTimeline interface of the {{domxref(&quot;Web Animations API&quot;, &quot;Web Animations API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a scroll progress timeline (see CSS scroll-driven animations for more details). [To(\"FirstCharToLowerCase\")] public class ScrollTimeline : AnimationTimeline Inheritance object AnimationTimeline ScrollTimeline Derived ViewTimeline Inherited Members AnimationTimeline.GetCurrentTime(AnimationTimeOptions) AnimationTimeline.CurrentTime AnimationTimeline.Duration AnimationTimeline.Play(AnimationEffect) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Pass a ScrollTimeline instance to the Animation() constructor or the Element.Animate method to specify it as the timeline that will control the progress of the animation. -Web Animations API -CSS scroll-driven animations -AnimationTimeline, ViewTimeline See also on MDN Constructors ScrollTimeline() public ScrollTimeline() ScrollTimeline(ScrollTimelineOptions) The ScrollTimeline() constructor creates a new ScrollTimeline object instance. public ScrollTimeline(ScrollTimelineOptions options) Parameters options ScrollTimelineOptions Remarks -Web Animations API -CSS scroll-driven animations -ScrollTimeline -AnimationTimeline, ViewTimeline See also on MDN Properties Axis The axis read-only property of the ScrollTimeline interface returns an enumerated value representing the scroll axis that is driving the progress of the timeline. public ScrollAxis Axis { get; } Property Value ScrollAxis An enumerated value. Possible values are: Remarks -ScrollTimeline -AnimationTimeline, ViewTimeline -Web Animations API -CSS scroll-driven animations See also on MDN Source The source read-only property of the ScrollTimeline interface returns a reference to the scrollable element (scroller) whose scroll position is driving the progress of the timeline and therefore the animation. public Element? Source { get; } Property Value Element An Element. Remarks -Web Animations API -CSS scroll-driven animations -ScrollTimeline -AnimationTimeline, ViewTimeline See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ScrollTimelineOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ScrollTimelineOptions.html",
    "title": "Class ScrollTimelineOptions | CSharpToJavaScript",
    "keywords": "Class ScrollTimelineOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ScrollTimelineOptions Inheritance object ScrollTimelineOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Axis public ScrollAxis Axis Field Value ScrollAxis Source public Element? Source Field Value Element"
  },
  "api/CSharpToJavaScript.APIs.JS.SecurePaymentConfirmationRequest.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SecurePaymentConfirmationRequest.html",
    "title": "Class SecurePaymentConfirmationRequest | CSharpToJavaScript",
    "keywords": "Class SecurePaymentConfirmationRequest Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class SecurePaymentConfirmationRequest Inheritance object SecurePaymentConfirmationRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Challenge public required Union67 Challenge Field Value Union67 CredentialIds public required List<Union67> CredentialIds Field Value List<Union67> Extensions public AuthenticationExtensionsClientInputs Extensions Field Value AuthenticationExtensionsClientInputs Instrument public required PaymentCredentialInstrument Instrument Field Value PaymentCredentialInstrument Locale public List<string> Locale Field Value List<string> PayeeName public string PayeeName Field Value string PayeeOrigin public string PayeeOrigin Field Value string RpId public required string RpId Field Value string ShowOptOut public bool ShowOptOut Field Value bool Timeout public ulong Timeout Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.SecurityPolicyViolationEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SecurityPolicyViolationEvent.html",
    "title": "Class SecurityPolicyViolationEvent | CSharpToJavaScript",
    "keywords": "Class SecurityPolicyViolationEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SecurityPolicyViolationEvent interface inherits from Event, and represents the event object of an event sent on a document or worker when its content security policy is violated. [To(\"FirstCharToLowerCase\")] public class SecurityPolicyViolationEvent : Event Inheritance object Event SecurityPolicyViolationEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Content Security Policy (CSP) See also on MDN Constructors SecurityPolicyViolationEvent() public SecurityPolicyViolationEvent() SecurityPolicyViolationEvent(string, SecurityPolicyViolationEventInit) The SecurityPolicyViolationEvent() constructor creates a new SecurityPolicyViolationEvent object. public SecurityPolicyViolationEvent(string type, SecurityPolicyViolationEventInit eventInitDict) Parameters type string eventInitDict SecurityPolicyViolationEventInit Remarks -Content Security Policy (CSP) See also on MDN Properties BlockedURI The blockedURI read-only property of the SecurityPolicyViolationEvent interface is a string representing the URI of the resource that was blocked because it violates a policy. public string BlockedURI { get; } Property Value string A string representing the URI of the blocked resource. Remarks -Content Security Policy (CSP) See also on MDN ColumnNumber The columnNumber read-only property of the SecurityPolicyViolationEvent interface is the column number in the document or worker at which the violation occurred. public ulong ColumnNumber { get; } Property Value ulong A number representing the column number where the violation occurred. Remarks -Content Security Policy (CSP) See also on MDN Disposition The disposition read-only property of the SecurityPolicyViolationEvent interface indicates how the violated policy is configured to be treated by the user agent. public SecurityPolicyViolationEventDisposition Disposition { get; } Property Value SecurityPolicyViolationEventDisposition A value defined in the SecurityPolicyViolationEventDisposition enum representing the URI of the blocked resource. Possible values are &quot;enforce&quot; or &quot;report&quot; Remarks -Content Security Policy (CSP) See also on MDN DocumentURI The documentURI read-only property of the SecurityPolicyViolationEvent interface is a string representing the URI of the document or worker in which the violation was found. public string DocumentURI { get; } Property Value string A string representing the URI of the document or worker in which the violation was found. Remarks -Content Security Policy (CSP) See also on MDN EffectiveDirective The effectiveDirective read-only property of the SecurityPolicyViolationEvent interface is a string representing the directive whose enforcement uncovered the violation. public string EffectiveDirective { get; } Property Value string A string representing the directive whose enforcement uncovered the violation. Remarks -Content Security Policy (CSP) See also on MDN LineNumber The lineNumber read-only property of the SecurityPolicyViolationEvent interface is the line number in the document or worker at which the violation occurred. public ulong LineNumber { get; } Property Value ulong A number representing the line number at which the violation occurred. Remarks -Content Security Policy (CSP) See also on MDN OriginalPolicy The originalPolicy read-only property of the SecurityPolicyViolationEvent interface is a string containing the policy whose enforcement uncovered the violation. public string OriginalPolicy { get; } Property Value string A string representing the policy whose enforcement uncovered the violation. Remarks -Content Security Policy (CSP) See also on MDN Referrer The referrer read-only property of the SecurityPolicyViolationEvent interface is a string representing the referrer of the resources whose policy was violated. This will be a URL or null. public string Referrer { get; } Property Value string A string representing the URL of the referrer of the violating resources. Remarks -Content Security Policy (CSP) See also on MDN Sample The sample read-only property of the SecurityPolicyViolationEvent interface is a string representing a sample of the resource that caused the violation. public string Sample { get; } Property Value string A string containing a sample of the resource that caused the violation, usually the first 40 characters. This will only be populated if the resource is an inline script, event handler, or style — external resources causing a violation will not generate a sample. Remarks -Content Security Policy (CSP) See also on MDN SourceFile The sourceFile read-only property of the SecurityPolicyViolationEvent interface is a string representing the URI of the document or worker in which the violation was found. public string SourceFile { get; } Property Value string A string representing the URI of the document or worker in which the violation was found. Remarks -Content Security Policy (CSP) See also on MDN StatusCode The statusCode read-only property of the SecurityPolicyViolationEvent interface is a number representing the HTTP status code of the document or worker in which the violation occurred. public ushort StatusCode { get; } Property Value ushort A number representing the status code of the document or worker in which the violation occurred. Remarks -Content Security Policy (CSP) See also on MDN ViolatedDirective The violatedDirective read-only property of the SecurityPolicyViolationEvent interface is a string representing the directive whose enforcement uncovered the violation. public string ViolatedDirective { get; } Property Value string A string representing the directive whose enforcement uncovered the violation. Remarks -Content Security Policy (CSP) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SecurityPolicyViolationEventDisposition.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SecurityPolicyViolationEventDisposition.html",
    "title": "Enum SecurityPolicyViolationEventDisposition | CSharpToJavaScript",
    "keywords": "Enum SecurityPolicyViolationEventDisposition Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The disposition read-only property of the SecurityPolicyViolationEvent interface indicates how the violated policy is configured to be treated by the user agent. public enum SecurityPolicyViolationEventDisposition Fields Enforce = 0 Report = 1 Remarks -Content Security Policy (CSP) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SecurityPolicyViolationEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SecurityPolicyViolationEventInit.html",
    "title": "Class SecurityPolicyViolationEventInit | CSharpToJavaScript",
    "keywords": "Class SecurityPolicyViolationEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class SecurityPolicyViolationEventInit : EventInit Inheritance object EventInit SecurityPolicyViolationEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BlockedURI public string BlockedURI Field Value string ColumnNumber public ulong ColumnNumber Field Value ulong Disposition public required SecurityPolicyViolationEventDisposition Disposition Field Value SecurityPolicyViolationEventDisposition DocumentURI public required string DocumentURI Field Value string EffectiveDirective public required string EffectiveDirective Field Value string LineNumber public ulong LineNumber Field Value ulong OriginalPolicy public required string OriginalPolicy Field Value string Referrer public string Referrer Field Value string Sample public string Sample Field Value string SourceFile public string SourceFile Field Value string StatusCode public required ushort StatusCode Field Value ushort ViolatedDirective public required string ViolatedDirective Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.SelectionMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SelectionMode.html",
    "title": "Enum SelectionMode | CSharpToJavaScript",
    "keywords": "Enum SelectionMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum SelectionMode Fields End = 2 Preserve = 3 Select = 0 Start = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.Sensor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Sensor.html",
    "title": "Class Sensor | CSharpToJavaScript",
    "keywords": "Class Sensor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Sensor interface of the Sensor APIs is the base class for all the other sensor interfaces. This interface cannot be used directly. Instead it provides properties, event handlers, and methods accessed by interfaces that inherit from it. [To(\"FirstCharToLowerCase\")] public class Sensor : EventTarget Inheritance object EventTarget Sensor Derived Accelerometer AmbientLightSensor GeolocationSensor Gyroscope Magnetometer OrientationSensor ProximitySensor UncalibratedMagnetometer Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This feature may be blocked by a Permissions Policy set on your server. When initially created, the Sensor object is idle, meaning it does not take measures. Once the Start() method is called, it prepares itself to read data and, once ready, the Sensor/activate_event event is sent and the sensor becomes activated. It then sends a Sensor/reading_event event each time new data is available. In case of an error, the Sensor/error_event event is sent, reading stops, and the Sensor object becomes idle again. The Start() method needs to be called again before it can read further data. See also on MDN Properties Activated The activated read-only property of the Sensor interface returns a boolean value indicating whether the sensor is active. public bool Activated { get; } Property Value bool A boolean value. Remarks Because 'Sensor' is a base class, activated may only be read from one of its derived classes. See also on MDN HasReading The hasReading read-only property of the Sensor interface returns a boolean value indicating whether the sensor has a reading. public bool HasReading { get; } Property Value bool A boolean value. Remarks Because 'Sensor' is a base class, hasReading may only be read from one of its derived classes. See also on MDN Onactivate public EventHandlerNonNull Onactivate { get; set; } Property Value EventHandlerNonNull Onerror public EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull Onreading public EventHandlerNonNull Onreading { get; set; } Property Value EventHandlerNonNull Timestamp The timestamp read-only property of the Sensor interface returns the timestamp of the latest sensor reading. public Unsupported? Timestamp { get; } Property Value Unsupported A DOMHighResTimeStamp. Remarks Because 'Sensor' is a base class, timestamp may only be read from one of its derived classes. See also on MDN Methods Start() The start method activates one of the sensors based on Sensor. public GlobalObject.Undefined Start() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Stop() The stop method of the Sensor interface deactivates the current sensor. public GlobalObject.Undefined Stop() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SensorErrorEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SensorErrorEvent.html",
    "title": "Class SensorErrorEvent | CSharpToJavaScript",
    "keywords": "Class SensorErrorEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SensorErrorEvent interface of the Sensor APIs provides information about errors thrown by a 'Sensor' or derived interface. [To(\"FirstCharToLowerCase\")] public class SensorErrorEvent : Event Inheritance object Event SensorErrorEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors SensorErrorEvent() public SensorErrorEvent() SensorErrorEvent(string, SensorErrorEventInit) The SensorErrorEvent constructor creates a new SensorErrorEvent object which provides information about errors thrown by any of the interfaces based on 'Sensor'. public SensorErrorEvent(string type, SensorErrorEventInit errorEventInitDict) Parameters type string errorEventInitDict SensorErrorEventInit Remarks See also on MDN Properties Error The error read-only property of the SensorErrorEvent interface returns the 'DOMException' object passed in the event&apos;s constructor. public DOMException Error { get; } Property Value DOMException A 'DOMException'. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SensorErrorEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SensorErrorEventInit.html",
    "title": "Class SensorErrorEventInit | CSharpToJavaScript",
    "keywords": "Class SensorErrorEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class SensorErrorEventInit : EventInit Inheritance object EventInit SensorErrorEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Error public required DOMException Error Field Value DOMException"
  },
  "api/CSharpToJavaScript.APIs.JS.SensorOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SensorOptions.html",
    "title": "Class SensorOptions | CSharpToJavaScript",
    "keywords": "Class SensorOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class SensorOptions Inheritance object SensorOptions Derived AccelerometerSensorOptions GeolocationSensorOptions GyroscopeSensorOptions MagnetometerSensorOptions OrientationSensorOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Frequency public Number Frequency Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.SequenceEffect.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SequenceEffect.html",
    "title": "Class SequenceEffect | CSharpToJavaScript",
    "keywords": "Class SequenceEffect Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class SequenceEffect : GroupEffect Inheritance object GroupEffect SequenceEffect Inherited Members GroupEffect.Children GroupEffect.FirstChild GroupEffect.LastChild GroupEffect.Prepend(params AnimationEffect[]) GroupEffect.Append(params AnimationEffect[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SequenceEffect() public SequenceEffect() SequenceEffect(List<AnimationEffect>?, Union92) public SequenceEffect(List<AnimationEffect>? children, Union92 timing) Parameters children List<AnimationEffect> timing Union92 Methods Clone() public SequenceEffect Clone() Returns SequenceEffect"
  },
  "api/CSharpToJavaScript.APIs.JS.ServiceWorker.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ServiceWorker.html",
    "title": "Class ServiceWorker | CSharpToJavaScript",
    "keywords": "Class ServiceWorker Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ServiceWorker interface of the Service Worker API provides a reference to a service worker. Multiple browsing context (e.g. pages, workers, etc.) can be associated with the same service worker, each through a unique ServiceWorker object. [To(\"FirstCharToLowerCase\")] public class ServiceWorker : EventTarget, AbstractWorker Inheritance object EventTarget ServiceWorker Implements AbstractWorker Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A ServiceWorker object is available in the Active property, and the Controller property — this is a service worker that has been activated and is controlling the page (the service worker has been successfully registered, and the controlled page has been reloaded.) The ServiceWorker interface is dispatched a set of lifecycle events — install and activate — and functional events including fetch. A ServiceWorker object has an associated State, related to its lifecycle. Service workers allow static import of ECMAScript modules, if supported, using import. Dynamic import is disallowed by the specification — calling import() will throw. -The Offline Cookbook(service workers) -Using Service Workers -Service worker basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Properties Onstatechange public EventHandlerNonNull Onstatechange { get; set; } Property Value EventHandlerNonNull ScriptURL Returns the ServiceWorker serialized script URL defined as part of ServiceWorkerRegistration. Must be on the same origin as the document that registers the ServiceWorker. public string ScriptURL { get; } Property Value string A string. Remarks See also on MDN State The state read-only property of the ServiceWorker interface returns a string representing the current state of the service worker. It can be one of the following values: parsed, installing, installed, activating, activated, or redundant. public ServiceWorkerState State { get; } Property Value ServiceWorkerState A String that can take one of the following values: Remarks See also on MDN Methods PostMessage(dynamic, StructuredSerializeOptions) The postMessage() method of the ServiceWorker interface sends a message to the worker. This accepts a single parameter, which is the data to send to the worker. The data may be any JavaScript object which can be handled by the structured clone algorithm. public GlobalObject.Undefined PostMessage(dynamic message, StructuredSerializeOptions options) Parameters message dynamic options StructuredSerializeOptions Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The service worker can send back information to its clients by using the PostMessage(dynamic, List<object>) method. The message will not be sent back to this ServiceWorker object but to the associated ServiceWorkerContainer available via ServiceWorker. -The ServiceWorker interface it belongs to. -Its counterpart, the PostMessage(dynamic, List<object>) method that a service worker must use to send a message back to the associated ServiceWorkerContainer. See also on MDN PostMessage(dynamic, List<object>) The postMessage() method of the ServiceWorker interface sends a message to the worker. This accepts a single parameter, which is the data to send to the worker. The data may be any JavaScript object which can be handled by the structured clone algorithm. public GlobalObject.Undefined PostMessage(dynamic message, List<object> transfer) Parameters message dynamic transfer List<object> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The service worker can send back information to its clients by using the PostMessage(dynamic, List<object>) method. The message will not be sent back to this ServiceWorker object but to the associated ServiceWorkerContainer available via ServiceWorker. -The ServiceWorker interface it belongs to. -Its counterpart, the PostMessage(dynamic, List<object>) method that a service worker must use to send a message back to the associated ServiceWorkerContainer. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ServiceWorkerContainer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ServiceWorkerContainer.html",
    "title": "Class ServiceWorkerContainer | CSharpToJavaScript",
    "keywords": "Class ServiceWorkerContainer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ServiceWorkerContainer interface of the Service Worker API provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations. [To(\"FirstCharToLowerCase\")] public class ServiceWorkerContainer : EventTarget Inheritance object EventTarget ServiceWorkerContainer Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Most importantly, it exposes the Register(string, RegistrationOptions) method used to register service workers, and the Controller property used to determine whether or not the current page is actively controlled. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Properties Controller The controller read-only property of the ServiceWorkerContainer interface returns a ServiceWorker object if its state is activating or activated (the same object returned by Active). This property returns null if the request is a force refresh (Shift + refresh) or if there is no active worker. public ServiceWorker? Controller { get; } Property Value ServiceWorker A ServiceWorker object. Remarks See also on MDN Oncontrollerchange public EventHandlerNonNull Oncontrollerchange { get; set; } Property Value EventHandlerNonNull Onmessage public EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onmessageerror public EventHandlerNonNull Onmessageerror { get; set; } Property Value EventHandlerNonNull Ready The ready read-only property of the ServiceWorkerContainer interface provides a way of delaying code execution until a service worker is active. It returns a Promise that will never reject, and which waits indefinitely until the ServiceWorkerRegistration associated with the current page has an Active worker. Once that condition is met, it resolves with the ServiceWorkerRegistration. public Task<ServiceWorkerRegistration> Ready { get; } Property Value Task<ServiceWorkerRegistration> A Promise that will never reject, and which may eventually resolve with a ServiceWorkerRegistration. Remarks See also on MDN Methods GetRegistration(string) The getRegistration() method of the ServiceWorkerContainer interface gets a ServiceWorkerRegistration object whose scope URL matches the provided client URL. The method returns a Promise that resolves to a ServiceWorkerRegistration or undefined. public Task<ServiceWorkerRegistration> GetRegistration(string clientURL) Parameters clientURL string Returns Task<ServiceWorkerRegistration> A {{jsxref(\"Promise\")}} that resolves to a ServiceWorkerRegistration object or undefined. Remarks See also on MDN GetRegistrations() The getRegistrations() method of the ServiceWorkerContainer interface gets all ServiceWorkerRegistrations associated with a ServiceWorkerContainer, in an array. The method returns a Promise that resolves to an array of ServiceWorkerRegistration. public Task<ServiceWorkerRegistration[]> GetRegistrations() Returns Task<ServiceWorkerRegistration[]> A Promise that resolves to an array of ServiceWorkerRegistration objects. Remarks See also on MDN Register(string, RegistrationOptions) The register() method of the ServiceWorkerContainer interface creates or updates a ServiceWorkerRegistration for the given scriptURL. public Task<ServiceWorkerRegistration> Register(string scriptURL, RegistrationOptions options) Parameters scriptURL string options RegistrationOptions Returns Task<ServiceWorkerRegistration> A {{jsxref(\"Promise\")}} that resolves with a ServiceWorkerRegistration object. Remarks If successful, a service worker registration ties the provided script URL to a scope, which is subsequently used for navigation matching. You can call this method unconditionally from the controlled page. I.e., you don&apos;t need to first check whether there&apos;s an active registration. There is frequent confusion surrounding the meaning and use of scope. Since a service worker can&apos;t have a scope broader than its own location, only use the scope option when you need a scope that is narrower than the default. -ServiceWorkerRegistration: unregister() method -Service worker API -Using service workers See also on MDN StartMessages() The startMessages() method of the ServiceWorkerContainer interface explicitly starts the flow of messages being dispatched from a service worker to pages under its control (e.g. sent via PostMessage(dynamic, List<object>)). This can be used to react to sent messages earlier, even before that page&apos;s content has finished loading. public GlobalObject.Undefined StartMessages() Returns GlobalObject.Undefined undefined. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ServiceWorkerGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ServiceWorkerGlobalScope.html",
    "title": "Class ServiceWorkerGlobalScope | CSharpToJavaScript",
    "keywords": "Class ServiceWorkerGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ServiceWorkerGlobalScope interface of the Service Worker API represents the global execution context of a service worker. [To(\"FirstCharToLowerCase\")] public class ServiceWorkerGlobalScope : WorkerGlobalScope, WindowOrWorkerGlobalScope, FontFaceSource Inheritance object EventTarget WorkerGlobalScope ServiceWorkerGlobalScope Implements WindowOrWorkerGlobalScope FontFaceSource Inherited Members WorkerGlobalScope.Self WorkerGlobalScope.Location WorkerGlobalScope.Navigator WorkerGlobalScope.ImportScripts(params string[]) WorkerGlobalScope.Onerror WorkerGlobalScope.Onlanguagechange WorkerGlobalScope.Onoffline WorkerGlobalScope.Ononline WorkerGlobalScope.Onrejectionhandled WorkerGlobalScope.Onunhandledrejection EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Developers should keep in mind that the ServiceWorker state is not persisted across the termination/restart cycle, so each event handler should assume it&apos;s being invoked with a bare, default global state. Once successfully registered, a service worker can and will be terminated when idle to conserve memory and processor power. An active service worker is automatically restarted to respond to events, such as ServiceWorkerGlobalScope.Fetch_event or ServiceWorkerGlobalScope.Message_event. Additionally, synchronous requests are not allowed from within a service worker — only asynchronous requests, like those initiated via the Fetch method, can be used. This interface inherits from the WorkerGlobalScope interface, and its parent EventTarget. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise See also on MDN Properties Clients The clients read-only property of the ServiceWorkerGlobalScope interface returns the Clients object associated with the service worker. public Clients Clients { get; } Property Value Clients The Clients object associated with the specific worker. Remarks -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Onactivate public EventHandlerNonNull Onactivate { get; set; } Property Value EventHandlerNonNull Onfetch public EventHandlerNonNull Onfetch { get; set; } Property Value EventHandlerNonNull Oninstall public EventHandlerNonNull Oninstall { get; set; } Property Value EventHandlerNonNull Onmessage public EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onmessageerror public EventHandlerNonNull Onmessageerror { get; set; } Property Value EventHandlerNonNull Onnotificationclick public EventHandlerNonNull Onnotificationclick { get; set; } Property Value EventHandlerNonNull Onnotificationclose public EventHandlerNonNull Onnotificationclose { get; set; } Property Value EventHandlerNonNull Registration The registration read-only property of the ServiceWorkerGlobalScope interface returns a reference to the ServiceWorkerRegistration object, which represents the service worker's registration. public ServiceWorkerRegistration Registration { get; } Property Value ServiceWorkerRegistration A ServiceWorkerRegistration object. Remarks -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN ServiceWorker public ServiceWorker ServiceWorker { get; } Property Value ServiceWorker Methods SkipWaiting() The ServiceWorkerGlobalScope.skipWaiting() method of the ServiceWorkerGlobalScope forces the waiting service worker to become the active service worker. public Task<GlobalObject.Undefined> SkipWaiting() Returns Task<GlobalObject.Undefined> A Promise that resolves with undefined after trying to activate the newly installed service worker. Remarks Use this method with Claim() to ensure that updates to the underlying service worker take effect immediately for both the current client and all other active clients. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Claim() -Promise -Using web workers See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ServiceWorkerRegistration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ServiceWorkerRegistration.html",
    "title": "Class ServiceWorkerRegistration | CSharpToJavaScript",
    "keywords": "Class ServiceWorkerRegistration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ServiceWorkerRegistration interface of the Service Worker API represents the service worker registration. You register a service worker to control one or more pages that share the same origin. [To(\"FirstCharToLowerCase\")] public class ServiceWorkerRegistration : EventTarget Inheritance object EventTarget ServiceWorkerRegistration Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The lifetime of a service worker registration is beyond that of the ServiceWorkerRegistration objects that represent them within the lifetime of their corresponding service worker clients. The browser maintains a persistent list of active ServiceWorkerRegistration objects. NOTE Note: This feature is available in Web Workers. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Properties Active The active property of the ServiceWorkerRegistration interface returns a service worker whose State is activating or activated. This property is initially set to null. public ServiceWorker? Active { get; } Property Value ServiceWorker A ServiceWorker object's property, if it is currently in an activating or activated state. Remarks An active worker controls a Client if the client's URL falls within the scope of the registration (the scope option set when Register(string, RegistrationOptions) is first called.) NOTE Note: This feature is available in Web Workers. NOTE Note: Once an active worker is activating, neither a runtime script error nor a force termination of the active worker prevents the active worker from getting activated. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Installing The installing property of the ServiceWorkerRegistration interface returns a service worker whose State is installing. This property is initially set to null. public ServiceWorker? Installing { get; } Property Value ServiceWorker A ServiceWorker object, if it is currently in an installing state. Remarks NOTE Note: This feature is available in Web Workers. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN NavigationPreload The navigationPreload read-only property of the ServiceWorkerRegistration interface returns the NavigationPreloadManager associated with the current service worker registration. public NavigationPreloadManager NavigationPreload { get; } Property Value NavigationPreloadManager An instance of NavigationPreloadManager. Remarks The returned object allows resources managed by a service worker to be preemptively downloaded in parallel with service worker boot up. See also on MDN Onupdatefound public EventHandlerNonNull Onupdatefound { get; set; } Property Value EventHandlerNonNull Scope The scope read-only property of the ServiceWorkerRegistration interface returns a unique identifier for a service worker registration. The service worker must be on the same origin as the document that registers the ServiceWorker. public string Scope { get; } Property Value string A unique identifier. Remarks NOTE Note: This feature is available in Web Workers. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN UpdateViaCache The updateViaCache read-only property of the ServiceWorkerRegistration interface updates the cache using the mode specified in the call to 'ServiceWorkerContainer.Register'. Requests for importScripts still go via the HTTP cache. updateViaCache offers control over this behavior. public ServiceWorkerUpdateViaCache UpdateViaCache { get; } Property Value ServiceWorkerUpdateViaCache Returns one of the following values: Remarks -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Waiting The waiting property of the ServiceWorkerRegistration interface returns a service worker whose State is installed. This property is initially set to null. public ServiceWorker? Waiting { get; } Property Value ServiceWorker A ServiceWorker object, if it is currently in an installed state. Remarks NOTE Note: This feature is available in Web Workers. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Methods GetNotifications(GetNotificationOptions) The getNotifications() method of the ServiceWorkerRegistration interface returns a list of the notifications in the order that they were created from the current origin via the current service worker registration. Origins can have many active but differently-scoped service worker registrations. Notifications created by one service worker on the same origin will not be available to other active services workers on that same origin. public Task<List<Notification>> GetNotifications(GetNotificationOptions filter) Parameters filter GetNotificationOptions Returns Task<List<Notification>> A {{jsxref(\"Promise\")}} that resolves to a list of Notification objects. Remarks See also on MDN ShowNotification(string, NotificationOptions) The showNotification() method of the ServiceWorkerRegistration interface creates a notification on an active service worker. public Task<GlobalObject.Undefined> ShowNotification(string title, NotificationOptions options) Parameters title string options NotificationOptions Returns Task<GlobalObject.Undefined> A 'Promise' that resolves to undefined. Remarks NOTE Note: This feature is available in Web Workers. See also on MDN Unregister() The unregister() method of the ServiceWorkerRegistration interface unregisters the service worker registration and returns a Promise. The promise will resolve to false if no registration was found, otherwise it resolves to true irrespective of whether unregistration happened or not (it may not unregister if someone else just called Register(string, RegistrationOptions) with the same scope.) The service worker will finish any ongoing operations before it is unregistered. public Task<bool> Unregister() Returns Task<bool> Promise resolves with a boolean indicating whether the service worker has unregistered or not. Remarks NOTE Note: This feature is available in Web Workers. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Update() The update() method of the ServiceWorkerRegistration interface attempts to update the service worker. It fetches the worker&apos;s script URL, and if the new worker is not byte-by-byte identical to the current worker, it installs the new worker. The fetch of the worker bypasses any browser caches if the previous fetch occurred over 24 hours ago. public Task<GlobalObject.Undefined> Update() Returns Task<GlobalObject.Undefined> A {{jsxref(\"Promise\")}} that resolves with a ServiceWorkerRegistration object. Remarks NOTE Note: This feature is available in Web Workers. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ServiceWorkerState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ServiceWorkerState.html",
    "title": "Enum ServiceWorkerState | CSharpToJavaScript",
    "keywords": "Enum ServiceWorkerState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The state read-only property of the ServiceWorker interface returns a string representing the current state of the service worker. It can be one of the following values: parsed, installing, installed, activating, activated, or redundant. public enum ServiceWorkerState Fields Activated = 4 Activating = 3 Installed = 2 Installing = 1 Parsed = 0 Redundant = 5 Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ServiceWorkerUpdateViaCache.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ServiceWorkerUpdateViaCache.html",
    "title": "Enum ServiceWorkerUpdateViaCache | CSharpToJavaScript",
    "keywords": "Enum ServiceWorkerUpdateViaCache Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ServiceWorkerUpdateViaCache Fields All = 1 Imports = 0 None = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.ShadowRoot.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ShadowRoot.html",
    "title": "Class ShadowRoot | CSharpToJavaScript",
    "keywords": "Class ShadowRoot Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ShadowRoot interface of the Shadow DOM API is the root node of a DOM subtree that is rendered separately from a document&apos;s main DOM tree. [To(\"FirstCharToLowerCase\")] public class ShadowRoot : DocumentFragment, NonElementParentNode, ParentNode, DocumentOrShadowRoot Inheritance object EventTarget Node DocumentFragment ShadowRoot Implements NonElementParentNode ParentNode DocumentOrShadowRoot Inherited Members Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can retrieve a reference to an element's shadow root using its ShadowRoot property, provided it was created using AttachShadow(ShadowRootInit) with the mode option set to open. See also on MDN Properties DelegatesFocus The delegatesFocus read-only property of the ShadowRoot interface returns true if the shadow root delegates focus, and false otherwise. public bool DelegatesFocus { get; } Property Value bool Remarks If true, when a non-focusable part of the shadow DOM is clicked, or .focus() is called on the host element, the first focusable part is given focus, and the shadow host is given any available :focus styling. Focus is of particular importance for keyboard users (including those using screen readers). delegatesFocus default behavior is to focus the first focusable element — which may be undesirable if that element is not meant to be part of the tabbing order (for example, an element with tabindex=&quot;-1&quot;), or if a more &apos;important&apos; focusable element should receive initial focus (for instance, the first text field rather than the &apos;close&apos; button which precedes it). In such cases, the autofocus attribute can be specified on the element which should receive initial focus. Use the autofocus attribute with caution as it can introduce accessibility issues, such as bypassing important content which may go unnoticed due to focus being set to an element later in the DOM order. The property value is set using the delegatesFocus property of the object passed to AttachShadow(ShadowRootInit)). See also on MDN Host The host read-only property of the ShadowRoot returns a reference to the DOM element the ShadowRoot is attached to. public Element Host { get; } Property Value Element A DOM 'Element'. Remarks See also on MDN Mode The mode read-only property of the ShadowRoot specifies its mode — either open or closed. This defines whether or not the shadow root&apos;s internal features are accessible from JavaScript. public ShadowRootMode Mode { get; } Property Value ShadowRootMode A value defined in the ShadowRootMode enum — either open or closed. Remarks When the mode of a shadow root is &quot;closed&quot;, the shadow root&apos;s implementation internals are inaccessible and unchangeable from JavaScript—in the same way the implementation internals of, for example, the video element are inaccessible and unchangeable from JavaScript. See also on MDN Onslotchange public EventHandlerNonNull Onslotchange { get; set; } Property Value EventHandlerNonNull SlotAssignment The read-only slotAssignment property of the ShadowRoot interface returns the slot assignment mode for the shadow DOM tree. Nodes are either automatically assigned (named) or manually assigned (manual). The value of this property defined using the slotAssignment option when calling AttachShadow(ShadowRootInit). public SlotAssignmentMode SlotAssignment { get; } Property Value SlotAssignmentMode A string that can be one of: Remarks -AttachShadow(ShadowRootInit) -Assign(params Union13[]) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ShadowRootInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ShadowRootInit.html",
    "title": "Class ShadowRootInit | CSharpToJavaScript",
    "keywords": "Class ShadowRootInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ShadowRootInit Inheritance object ShadowRootInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DelegatesFocus public bool DelegatesFocus Field Value bool Mode public required ShadowRootMode Mode Field Value ShadowRootMode SlotAssignment public SlotAssignmentMode SlotAssignment Field Value SlotAssignmentMode"
  },
  "api/CSharpToJavaScript.APIs.JS.ShadowRootMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ShadowRootMode.html",
    "title": "Enum ShadowRootMode | CSharpToJavaScript",
    "keywords": "Enum ShadowRootMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The mode read-only property of the ShadowRoot specifies its mode — either open or closed. This defines whether or not the shadow root&apos;s internal features are accessible from JavaScript. public enum ShadowRootMode Fields Closed = 1 Open = 0 Remarks When the mode of a shadow root is &quot;closed&quot;, the shadow root&apos;s implementation internals are inaccessible and unchangeable from JavaScript—in the same way the implementation internals of, for example, the video element are inaccessible and unchangeable from JavaScript. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SharedWorker.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SharedWorker.html",
    "title": "Class SharedWorker | CSharpToJavaScript",
    "keywords": "Class SharedWorker Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SharedWorker interface represents a specific kind of worker that can be accessed from several browsing contexts, such as several windows, iframes or even workers. They implement an interface different than dedicated workers and have a different global scope, SharedWorkerGlobalScope. [To(\"FirstCharToLowerCase\")] public class SharedWorker : EventTarget, AbstractWorker Inheritance object EventTarget SharedWorker Implements AbstractWorker Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: If SharedWorker can be accessed from several browsing contexts, all those browsing contexts must share the exact same origin (same protocol, host and port). -Worker See also on MDN Constructors SharedWorker() public SharedWorker() SharedWorker(string, Union31) The SharedWorker() constructor creates a SharedWorker object that executes the script at the specified URL. This script must obey the same-origin policy. public SharedWorker(string scriptURL, Union31 options) Parameters scriptURL string options Union31 Remarks NOTE Note: there is disagreement among browser manufacturers about whether a data URL is of the same origin or not. Although Firefox 10.0 and later accept data URLs, that&apos;s not the case in all other browsers. -The SharedWorker interface it belongs to. See also on MDN Properties Port The port property of the SharedWorker interface returns a MessagePort object used to communicate and control the shared worker. public MessagePort Port { get; } Property Value MessagePort A MessagePort object. Remarks -SharedWorker See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SharedWorkerGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SharedWorkerGlobalScope.html",
    "title": "Class SharedWorkerGlobalScope | CSharpToJavaScript",
    "keywords": "Class SharedWorkerGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SharedWorkerGlobalScope object (the SharedWorker global scope) is accessible through the Self keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See the complete list of functions available to workers. [To(\"FirstCharToLowerCase\")] public class SharedWorkerGlobalScope : WorkerGlobalScope, WindowOrWorkerGlobalScope, FontFaceSource Inheritance object EventTarget WorkerGlobalScope SharedWorkerGlobalScope Implements WindowOrWorkerGlobalScope FontFaceSource Inherited Members WorkerGlobalScope.Self WorkerGlobalScope.Location WorkerGlobalScope.Navigator WorkerGlobalScope.ImportScripts(params string[]) WorkerGlobalScope.Onerror WorkerGlobalScope.Onlanguagechange WorkerGlobalScope.Onoffline WorkerGlobalScope.Ononline WorkerGlobalScope.Onrejectionhandled WorkerGlobalScope.Onunhandledrejection EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -SharedWorker -WorkerGlobalScope -Using Web workers -Functions available to workers See also on MDN Properties Name The name read-only property of the SharedWorkerGlobalScope interface returns the name that the SharedWorker was (optionally) given when it was created. This is the name that the SharedWorker(string, Union31) constructor can pass to get a reference to the SharedWorkerGlobalScope. public string Name { get; } Property Value string A string. Remarks -SharedWorkerGlobalScope See also on MDN Onconnect public EventHandlerNonNull Onconnect { get; set; } Property Value EventHandlerNonNull Methods Close() The close() method of the SharedWorkerGlobalScope interface discards any tasks queued in the SharedWorkerGlobalScope&apos;s event loop, effectively closing this particular scope. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks DedicatedWorkerGlobalScope See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SlotAssignmentMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SlotAssignmentMode.html",
    "title": "Enum SlotAssignmentMode | CSharpToJavaScript",
    "keywords": "Enum SlotAssignmentMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum SlotAssignmentMode Fields Manual = 0 Named = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.Slottable.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Slottable.html",
    "title": "Interface Slottable | CSharpToJavaScript",
    "keywords": "Interface Slottable Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface Slottable Properties AssignedSlot HTMLSlotElement? AssignedSlot { get; } Property Value HTMLSlotElement"
  },
  "api/CSharpToJavaScript.APIs.JS.SpatialNavigationDirection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SpatialNavigationDirection.html",
    "title": "Enum SpatialNavigationDirection | CSharpToJavaScript",
    "keywords": "Enum SpatialNavigationDirection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum SpatialNavigationDirection Fields Down = 1 Left = 2 Right = 3 Up = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.SpatialNavigationSearchOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SpatialNavigationSearchOptions.html",
    "title": "Class SpatialNavigationSearchOptions | CSharpToJavaScript",
    "keywords": "Class SpatialNavigationSearchOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class SpatialNavigationSearchOptions Inheritance object SpatialNavigationSearchOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Candidates public List<Node>? Candidates Field Value List<Node> Container public Node? Container Field Value Node"
  },
  "api/CSharpToJavaScript.APIs.JS.StatefulAnimator.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StatefulAnimator.html",
    "title": "Class StatefulAnimator | CSharpToJavaScript",
    "keywords": "Class StatefulAnimator Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class StatefulAnimator Inheritance object StatefulAnimator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StatefulAnimator() public StatefulAnimator() StatefulAnimator(dynamic, dynamic) public StatefulAnimator(dynamic options, dynamic state) Parameters options dynamic state dynamic Methods State() public dynamic State() Returns dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.StatelessAnimator.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StatelessAnimator.html",
    "title": "Class StatelessAnimator | CSharpToJavaScript",
    "keywords": "Class StatelessAnimator Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class StatelessAnimator Inheritance object StatelessAnimator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StatelessAnimator() public StatelessAnimator() StatelessAnimator(dynamic) public StatelessAnimator(dynamic options) Parameters options dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.StaticRange.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StaticRange.html",
    "title": "Class StaticRange | CSharpToJavaScript",
    "keywords": "Class StaticRange Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOM StaticRange interface extends AbstractRange to provide a method to specify a range of content in the DOM whose contents don't update to reflect changes which occur within the DOM tree. [To(\"FirstCharToLowerCase\")] public class StaticRange : AbstractRange Inheritance object AbstractRange StaticRange Inherited Members AbstractRange.StartContainer AbstractRange.StartOffset AbstractRange.EndContainer AbstractRange.EndOffset AbstractRange.Collapsed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface offers the same set of properties and methods as AbstractRange. AbstractRange and StaticRange are not available from web workers. -Live updating range of content within the DOM: Range -AbstractRange, the abstract interface from which all ranges are derived See also on MDN Constructors StaticRange() public StaticRange() StaticRange(StaticRangeInit) The StaticRange() constructor creates a new StaticRange object representing a span of content within the DOM. public StaticRange(StaticRangeInit init) Parameters init StaticRangeInit Remarks This constructor includes properties identifying the standard and end positions of the range as well as a Boolean indicating whether or not the range is collapsed (that is, empty). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.StaticRangeInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StaticRangeInit.html",
    "title": "Class StaticRangeInit | CSharpToJavaScript",
    "keywords": "Class StaticRangeInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class StaticRangeInit Inheritance object StaticRangeInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields EndContainer public required Node EndContainer Field Value Node EndOffset public required ulong EndOffset Field Value ulong StartContainer public required Node StartContainer Field Value Node StartOffset public required ulong StartOffset Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.StereoPannerNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StereoPannerNode.html",
    "title": "Class StereoPannerNode | CSharpToJavaScript",
    "keywords": "Class StereoPannerNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The StereoPannerNode interface of the Web Audio API represents a simple stereo panner node that can be used to pan an audio stream left or right. It is an AudioNode audio-processing module that positions an incoming audio stream in a stereo image using a low-cost equal-power panning algorithm. [To(\"FirstCharToLowerCase\")] public class StereoPannerNode : AudioNode Inheritance object EventTarget AudioNode StereoPannerNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The Pan property takes a unitless value between -1 (full left pan) and 1 (full right pan). This interface was introduced as a much simpler way to apply a simple panning effect than having to use a full PannerNode. The Stereo Panner Node moved the sound&apos;s position from the center of two speakers to the left. -Using the Web Audio API See also on MDN Constructors StereoPannerNode() public StereoPannerNode() StereoPannerNode(BaseAudioContext, StereoPannerOptions) The StereoPannerNode() constructor of the Web Audio API creates a new StereoPannerNode object which is an AudioNode that represents a simple stereo panner node that can be used to pan an audio stream left or right. public StereoPannerNode(BaseAudioContext context, StereoPannerOptions options) Parameters context BaseAudioContext options StereoPannerOptions Remarks See also on MDN Properties Pan The pan property of the StereoPannerNode interface is an a-rate AudioParam representing the amount of panning to apply. The value can range between -1 (full left pan) and 1 (full right pan). public AudioParam Pan { get; } Property Value AudioParam An a-rate AudioParam containing the panning to apply. NOTE Note: Though the AudioParam returned is read-only, the value it represents is not. Remarks -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.StereoPannerOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StereoPannerOptions.html",
    "title": "Class StereoPannerOptions | CSharpToJavaScript",
    "keywords": "Class StereoPannerOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class StereoPannerOptions : AudioNodeOptions Inheritance object AudioNodeOptions StereoPannerOptions Inherited Members AudioNodeOptions.ChannelCount AudioNodeOptions.ChannelCountMode AudioNodeOptions.ChannelInterpretation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Pan public Number Pan Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.Storage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Storage.html",
    "title": "Class Storage | CSharpToJavaScript",
    "keywords": "Class Storage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Storage interface of the Web Storage API provides access to a particular domain&apos;s session or local storage. It allows, for example, the addition, modification, or deletion of stored data items. [To(\"FirstCharToLowerCase\")] public class Storage Inheritance object Storage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To manipulate, for instance, the session storage for a domain, a call to Window.SessionStorage is made; whereas for local storage the call is made to Window.LocalStorage. -Using the Web Storage API -Window.LocalStorage -Window.SessionStorage -CacheStorage See also on MDN Properties Length The length read-only property of the Storage interface returns the number of data items stored in a given Storage object. public ulong Length { get; } Property Value ulong The number of items stored in the Storage object. Remarks -Using the Web Storage API See also on MDN Methods Clear() The clear() method of the Storage interface clears all keys stored in a given Storage object. public GlobalObject.Undefined Clear() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Using the Web Storage API See also on MDN Key(ulong) The key() method of the Storage interface, when passed a number n, returns the name of the nth key in a given Storage object. The order of keys is user-agent defined, so you should not rely on it. public string? Key(ulong index) Parameters index ulong Returns string A string containing the name of the key. If the index does not exist, null is returned. Remarks -Using the Web Storage API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.StorageEstimate.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StorageEstimate.html",
    "title": "Class StorageEstimate | CSharpToJavaScript",
    "keywords": "Class StorageEstimate Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class StorageEstimate Inheritance object StorageEstimate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Quota public ulong Quota Field Value ulong Usage public ulong Usage Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.StorageEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StorageEvent.html",
    "title": "Class StorageEvent | CSharpToJavaScript",
    "keywords": "Class StorageEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The StorageEvent interface is implemented by the Window/storage_event event, which is sent to a window when a storage area the window has access to is changed within the context of another document. [To(\"FirstCharToLowerCase\")] public class StorageEvent : Event Inheritance object Event StorageEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors StorageEvent() public StorageEvent() StorageEvent(string, StorageEventInit) public StorageEvent(string type, StorageEventInit eventInitDict) Parameters type string eventInitDict StorageEventInit Properties Key public string? Key { get; } Property Value string NewValue public string? NewValue { get; } Property Value string OldValue public string? OldValue { get; } Property Value string StorageArea public Storage? StorageArea { get; } Property Value Storage Url public string Url { get; } Property Value string Methods InitStorageEvent(string, bool, bool, string?, string?, string?, string, Storage?) IMPORTANT Deprecated The StorageEvent.initStorageEvent() method is used to initialize the value of a StorageEvent. public GlobalObject.Undefined InitStorageEvent(string type, bool bubbles, bool cancelable, string? key, string? oldValue, string? newValue, string url, Storage? storageArea) Parameters type string bubbles bool cancelable bool key string oldValue string newValue string url string storageArea Storage Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The constructor to use instead of this deprecated method: {{domxref(&quot;StorageEvent.StorageEvent&quot;, &quot;StorageEvent()&quot;)}}. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.StorageEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StorageEventInit.html",
    "title": "Class StorageEventInit | CSharpToJavaScript",
    "keywords": "Class StorageEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class StorageEventInit : EventInit Inheritance object EventInit StorageEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Key public string? Key Field Value string NewValue public string? NewValue Field Value string OldValue public string? OldValue Field Value string StorageArea public Storage? StorageArea Field Value Storage Url public string Url Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.StorageManager.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StorageManager.html",
    "title": "Class StorageManager | CSharpToJavaScript",
    "keywords": "Class StorageManager Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The StorageManager interface of the Storage API provides an interface for managing persistence permissions and estimating available storage. You can get a reference to this interface using either Navigator.Storage or WorkerNavigator.Storage. [To(\"FirstCharToLowerCase\")] public class StorageManager Inheritance object StorageManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Methods Estimate() The estimate() method of the StorageManager interface asks the Storage Manager for how much storage the current origin takes up (usage), and how much space is available (quota). public Task<StorageEstimate> Estimate() Returns Task<StorageEstimate> A 'Promise' that resolves to an object with the following properties: NOTE Note: The returned values are not exact: between compression, deduplication, and obfuscation for security reasons, they will be imprecise. You may find that the quota varies from origin to origin. This variance is based on factors such as: Remarks This method operates asynchronously, so it returns a Promise which resolves once the information is available. The promise's fulfillment handler is called with an object containing the usage and quota data. -Storage API -Storage, the object returned by Window.LocalStorage -StorageManager -Navigator.Storage See also on MDN GetDirectory() The getDirectory() method of the StorageManager interface is used to obtain a reference to a FileSystemDirectoryHandle object allowing access to a directory and its contents, stored in the origin private file system (OPFS). public Task<FileSystemDirectoryHandle> GetDirectory() Returns Task<FileSystemDirectoryHandle> A {{jsxref('Promise')}} that fulfills with a FileSystemDirectoryHandle object. Remarks -StorageManager -Navigator.Storage -FileSystemDirectoryHandle See also on MDN Persist() The persist() method of the StorageManager interface requests permission to use persistent storage, and returns a {{jsxref('Promise')}} that resolves to true if permission is granted and bucket mode is persistent, and false otherwise. public Task<bool> Persist() Returns Task<bool> A 'Promise' that resolves to a 'Boolean'. Remarks See also on MDN Persisted() The persisted() method of the StorageManager interface returns a {{jsxref('Promise')}} that resolves to true if your site&apos;s storage bucket is persistent. public Task<bool> Persisted() Returns Task<bool> A 'Promise' that resolves to a 'Boolean'. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.StreamPipeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StreamPipeOptions.html",
    "title": "Class StreamPipeOptions | CSharpToJavaScript",
    "keywords": "Class StreamPipeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class StreamPipeOptions Inheritance object StreamPipeOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields PreventAbort public bool PreventAbort Field Value bool PreventCancel public bool PreventCancel Field Value bool PreventClose public bool PreventClose Field Value bool Signal public AbortSignal Signal Field Value AbortSignal"
  },
  "api/CSharpToJavaScript.APIs.JS.StructuredSerializeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StructuredSerializeOptions.html",
    "title": "Class StructuredSerializeOptions | CSharpToJavaScript",
    "keywords": "Class StructuredSerializeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class StructuredSerializeOptions Inheritance object StructuredSerializeOptions Derived WindowPostMessageOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Transfer public List<object> Transfer Field Value List<object>"
  },
  "api/CSharpToJavaScript.APIs.JS.StyleSheet.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StyleSheet.html",
    "title": "Class StyleSheet | CSharpToJavaScript",
    "keywords": "Class StyleSheet Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll An object implementing the StyleSheet interface represents a single style sheet. CSS style sheets will further implement the more specialized CSSStyleSheet interface. [To(\"FirstCharToLowerCase\")] public class StyleSheet Inheritance object StyleSheet Derived CSSStyleSheet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -CSSStyleSheet See also on MDN Properties Disabled The disabled property of the StyleSheet interface determines whether the style sheet is prevented from applying to the document. public bool Disabled { get; set; } Property Value bool A boolean. Remarks A style sheet may be disabled by manually setting this property to true or if it&apos;s an inactive alternative style sheet. Note that disabled === false does not guarantee the style sheet is applied (it could be removed from the document, for instance). See also on MDN Href The href property of the StyleSheet interface returns the location of the style sheet. public string? Href { get; } Property Value string A string containing the stylesheet&apos;s URI. Remarks This property is read-only. See also on MDN Media The media property of the StyleSheet interface specifies the intended destination media for style information. It is a read-only, array-like MediaList object and can be removed with deleteMedium() and added with appendMedium(). public MediaList Media { get; } Property Value MediaList A read-only array-like MediaList object. Remarks See also on MDN OwnerNode The ownerNode property of the StyleSheet interface returns the node that associates this style sheet with the document. public Union37? OwnerNode { get; } Property Value Union37? A Node object. Remarks This is usually an HTML &lt;link&gt; or &lt;style&gt; element, but can also return a processing instruction node in the case of &lt;?xml-stylesheet ?&gt;. See also on MDN ParentStyleSheet The parentStyleSheet property of the StyleSheet interface returns the style sheet, if any, that is including the given style sheet. public CSSStyleSheet? ParentStyleSheet { get; } Property Value CSSStyleSheet A StyleSheet object. Remarks See also on MDN Title The title property of the StyleSheet interface returns the advisory title of the current style sheet. public string? Title { get; } Property Value string Remarks The title is often specified in the StyleSheet/OwnerNode. See also on MDN Type The type property of the StyleSheet interface specifies the style sheet language for the given style sheet. public Unsupported Type { get; } Property Value Unsupported A string. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.StyleSheetList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StyleSheetList.html",
    "title": "Class StyleSheetList | CSharpToJavaScript",
    "keywords": "Class StyleSheetList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The StyleSheetList interface represents a list of CSSStyleSheet objects. An instance of this object can be returned by Document.StyleSheets. [To(\"FirstCharToLowerCase\")] public class StyleSheetList Inheritance object StyleSheetList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It is an array-like object but can't be iterated over using Array methods. However it can be iterated over in a standard Statements/for loop over its indices, or converted to an Array. NOTE Note: This interface was an attempt to create an unmodifiable list and only continues to be supported to not break code that&apos;s already using it. Modern APIs use types that wrap around ECMAScript array types instead, so you can treat them like ECMAScript arrays, and at the same time impose additional semantics on their usage (such as making their items read-only). See also on MDN Properties Length The length read-only property of the StyleSheetList interface returns the number of CSSStyleSheet objects in the collection. public ulong Length { get; } Property Value ulong An integer indicating the number of items in the collection. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SubmitEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SubmitEvent.html",
    "title": "Class SubmitEvent | CSharpToJavaScript",
    "keywords": "Class SubmitEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SubmitEvent interface defines the object used to represent an {{Glossary(\"HTML\")}} form's HTMLFormElement.Submit_event event. This event is fired at the {{HTMLElement(\"form\")}} when the form's submit action is invoked. [To(\"FirstCharToLowerCase\")] public class SubmitEvent : Event Inheritance object Event SubmitEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors SubmitEvent() public SubmitEvent() SubmitEvent(string, SubmitEventInit) The SubmitEvent() constructor creates and returns a new SubmitEvent object, which is used to represent a HTMLFormElement.Submit_event event fired at an HTML form. public SubmitEvent(string type, SubmitEventInit eventInitDict) Parameters type string eventInitDict SubmitEventInit Remarks See also on MDN Properties Submitter The read-only submitter property found on the SubmitEvent interface specifies the submit button or other element that was invoked to cause the form to be submitted. public HTMLElement? Submitter { get; } Property Value HTMLElement An element, indicating the element that sent the HTMLFormElement.Submit_event event to the form. While this is often an input element whose type is submit or a button element whose type is submit, it could be some other element which has initiated a submission process.If the submission was not triggered by a button of some kind, the value of submitter is null. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SubmitEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SubmitEventInit.html",
    "title": "Class SubmitEventInit | CSharpToJavaScript",
    "keywords": "Class SubmitEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class SubmitEventInit : EventInit Inheritance object EventInit SubmitEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Submitter public HTMLElement? Submitter Field Value HTMLElement"
  },
  "api/CSharpToJavaScript.APIs.JS.SvcOutputMetadata.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SvcOutputMetadata.html",
    "title": "Class SvcOutputMetadata | CSharpToJavaScript",
    "keywords": "Class SvcOutputMetadata Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class SvcOutputMetadata Inheritance object SvcOutputMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TemporalLayerId public ulong TemporalLayerId Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.Table.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Table.html",
    "title": "Class Table | CSharpToJavaScript",
    "keywords": "Class Table Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class Table Inheritance object Table Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Table() public Table() Table(TableDescriptor) public Table(TableDescriptor descriptor) Parameters descriptor TableDescriptor Properties Length public ulong Length { get; } Property Value ulong Methods Get(ulong) public Function? Get(ulong index) Parameters index ulong Returns Function? Grow(ulong) public ulong Grow(ulong delta) Parameters delta ulong Returns ulong Set(ulong, Function?) public GlobalObject.Undefined Set(ulong index, Function? value) Parameters index ulong value Function? Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.TableDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TableDescriptor.html",
    "title": "Class TableDescriptor | CSharpToJavaScript",
    "keywords": "Class TableDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class TableDescriptor Inheritance object TableDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Element public required TableKind Element Field Value TableKind Initial public required ulong Initial Field Value ulong Maximum public ulong Maximum Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.TableKind.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TableKind.html",
    "title": "Enum TableKind | CSharpToJavaScript",
    "keywords": "Enum TableKind Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum TableKind Fields Anyfunc = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.TaskAttributionTiming.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TaskAttributionTiming.html",
    "title": "Class TaskAttributionTiming | CSharpToJavaScript",
    "keywords": "Class TaskAttributionTiming Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TaskAttributionTiming interface returns information about the work involved in a long task and its associate frame context. The frame context, also called the container, is the iframe, embed or object that is being implicated, on the whole, for a long task. [To(\"FirstCharToLowerCase\")] public class TaskAttributionTiming Inheritance object TaskAttributionTiming Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You usually work with TaskAttributionTiming objects when observing long tasks. TaskAttributionTiming inherits from PerformanceEntry. -PerformanceLongTaskTiming See also on MDN Properties ContainerId The containerId readonly property of the TaskAttributionTiming interface returns the container's id attribute. A container is the iframe, embed or object etc. that is being implicated, on the whole, for a long task. public string ContainerId { get; } Property Value string A string containing the container&apos;s id HTML content attribute. Remarks See also on MDN ContainerName The containerName readonly property of the TaskAttributionTiming interface returns the container's name attribute. A container is the iframe, embed or object etc. that is being implicated, on the whole, for a long task. public string ContainerName { get; } Property Value string A string containing the container&apos;s name HTML content attribute (e.g. &lt;iframe name=&quot;myIframe&quot; or &lt;object name=&quot;myObject&quot;). Remarks See also on MDN ContainerSrc The containerSrc readonly property of the TaskAttributionTiming interface returns the container's src attribute. A container is the iframe, embed or object etc. that is being implicated, on the whole, for a long task. public string ContainerSrc { get; } Property Value string A string containing the container&apos;s src attribute (e.g. &lt;iframe src=&quot;url.html&quot;). Remarks See also on MDN ContainerType The containerType readonly property of the TaskAttributionTiming interface returns the type of the container, one of iframe, embed, or object. public string ContainerType { get; } Property Value string A string containing the container&apos;s type, one of iframe, embed, or object. If no type can be determined, window will be returned. Remarks See also on MDN Methods ToJSON() The toJSON() method of the TaskAttributionTiming interface is a {{Glossary(\"Serialization\",\"serializer\")}}; it returns a JSON representation of the TaskAttributionTiming object. public object ToJSON() Returns object A {{jsxref(\"JSON\")}} object that is the serialization of the TaskAttributionTiming object. Remarks -JSON See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TestUtils.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TestUtils.html",
    "title": "Class TestUtils | CSharpToJavaScript",
    "keywords": "Class TestUtils Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class TestUtils Inheritance object TestUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Gc() public Task<GlobalObject.Undefined> Gc() Returns Task<GlobalObject.Undefined>"
  },
  "api/CSharpToJavaScript.APIs.JS.Text.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Text.html",
    "title": "Class Text | CSharpToJavaScript",
    "keywords": "Class Text Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Text interface represents a text Node in a DOM tree. [To(\"Default\")] public class Text : CharacterData, NonDocumentTypeChildNode, ChildNode, Slottable Inheritance object EventTarget Node CharacterData Text Implements NonDocumentTypeChildNode ChildNode Slottable Derived CDATASection Inherited Members CharacterData.Data CharacterData.Length CharacterData.SubstringData(ulong, ulong) CharacterData.AppendData(string) CharacterData.InsertData(ulong, string) CharacterData.DeleteData(ulong, ulong) CharacterData.ReplaceData(ulong, ulong, string) Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To understand what a text node is, consider the following document: In that document, there are five text nodes, with the following contents: Each of those text nodes is an object that has the properties and methods documented in this article. -The DOM API See also on MDN Constructors Text() public Text() Text(string) The Text() constructor returns a new Text object with the optional string given in parameter as its textual content. public Text(string data) Parameters data string Remarks -The DOM API See also on MDN Properties WholeText The read-only wholeText property of the Text interface returns the full text of all Text nodes logically adjacent to the node. The text is concatenated in document order. This allows specifying any text node and obtaining all adjacent text as a single string. [To(\"FirstCharToLowerCase\")] public string WholeText { get; } Property Value string A string with the concatenated text. Remarks NOTE Note: This is similar to call Normalize() followed by reading the text value, but without modifying the tree. -The Text interface it belongs to. See also on MDN Methods SplitText(ulong) The splitText() method of the Text interface breaks the Text node into two nodes at the specified offset, keeping both nodes in the tree as siblings. [To(\"FirstCharToLowerCase\")] public Text SplitText(ulong offset) Parameters offset ulong Returns Text Returns the newly created Text node that contains the text after the specified offset point. Remarks After the split, the current node contains all the content up to the specified offset point, and a newly created node of the same type contains the remaining text. The newly created node is returned to the caller. If the original node had a parent, the new node is inserted as the next sibling of the original node. If the offset is equal to the length of the original node, the newly created node has no data. Separated text nodes can be concatenated using the Normalize() method. -The Text interface it belongs to. -The opposite method: Normalize(). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextDecodeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextDecodeOptions.html",
    "title": "Class TextDecodeOptions | CSharpToJavaScript",
    "keywords": "Class TextDecodeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class TextDecodeOptions Inheritance object TextDecodeOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Stream [To(\"FirstCharToLowerCase\")] public bool Stream Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.TextDecoder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextDecoder.html",
    "title": "Class TextDecoder | CSharpToJavaScript",
    "keywords": "Class TextDecoder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextDecoder interface represents a decoder for a specific text encoding, such as UTF-8, ISO-8859-2, KOI8-R, GBK, etc. A decoder takes a stream of bytes as input and emits a stream of code points. [To(\"Default\")] public class TextDecoder Inheritance object TextDecoder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -The TextEncoder interface describing the inverse operation. -A shim allowing to use this interface in browsers that do not support it. -Node.js supports global export from v11.0.0 See also on MDN Constructors TextDecoder() public TextDecoder() TextDecoder(string, TextDecoderOptions) The TextDecoder() constructor returns a newly created TextDecoder object for the encoding specified in parameter. public TextDecoder(string label, TextDecoderOptions options) Parameters label string options TextDecoderOptions Remarks -The TextDecoder interface it belongs to. See also on MDN Methods Decode(Union68, TextDecodeOptions) The TextDecoder.decode() method returns a string containing text decoded from the buffer passed as a parameter. [To(\"FirstCharToLowerCase\")] public string Decode(Union68 input, TextDecodeOptions options) Parameters input Union68 options TextDecodeOptions Returns string A string. Remarks The decoding method is defined in the current TextDecoder object. This includes the expected encoding of the data, and how decoding errors are handled. -The TextDecoder interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextDecoderCommon.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextDecoderCommon.html",
    "title": "Interface TextDecoderCommon | CSharpToJavaScript",
    "keywords": "Interface TextDecoderCommon Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface TextDecoderCommon Properties Encoding string Encoding { get; } Property Value string Fatal bool Fatal { get; } Property Value bool IgnoreBOM bool IgnoreBOM { get; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.TextDecoderOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextDecoderOptions.html",
    "title": "Class TextDecoderOptions | CSharpToJavaScript",
    "keywords": "Class TextDecoderOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class TextDecoderOptions Inheritance object TextDecoderOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Fatal [To(\"FirstCharToLowerCase\")] public bool Fatal Field Value bool IgnoreBOM [To(\"FirstCharToLowerCase\")] public bool IgnoreBOM Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.TextDecoderStream.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextDecoderStream.html",
    "title": "Class TextDecoderStream | CSharpToJavaScript",
    "keywords": "Class TextDecoderStream Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextDecoderStream interface of the 'Encoding API' converts a stream of text in a binary encoding, such as UTF-8 etc., to a stream of strings. It is the streaming equivalent of TextDecoder. [To(\"Default\")] public class TextDecoderStream Inheritance object TextDecoderStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -TextEncoderStream -Streams API Concepts -Experimenting with the Streams API See also on MDN Constructors TextDecoderStream() public TextDecoderStream() TextDecoderStream(string, TextDecoderOptions) The TextDecoderStream() constructor creates a new TextDecoderStream object which is used to convert a stream of text in a binary encoding into strings. public TextDecoderStream(string label, TextDecoderOptions options) Parameters label string options TextDecoderOptions Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextEncoder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextEncoder.html",
    "title": "Class TextEncoder | CSharpToJavaScript",
    "keywords": "Class TextEncoder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextEncoder interface takes a stream of code points as input and emits a stream of UTF-8 bytes. [To(\"Default\")] public class TextEncoder Inheritance object TextEncoder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -The TextDecoder interface describing the inverse operation. -Node.js supports global export from v11.0.0 See also on MDN Constructors TextEncoder() The TextEncoder() constructor returns a newly created TextEncoder object that will generate a byte stream with UTF-8 encoding. public TextEncoder() Remarks -The TextEncoder interface it belongs to. See also on MDN Methods Encode(string) The TextEncoder.encode() method takes a string as input, and returns a {{jsxref(\"Global_Objects/Uint8Array\", \"Uint8Array\")}} containing the text given in parameters encoded with the specific method for that TextEncoder object. [To(\"FirstCharToLowerCase\")] public byte Encode(string input) Parameters input string Returns byte A Uint8Array object. Remarks -The TextEncoder interface it belongs to. See also on MDN EncodeInto(string, byte) The TextEncoder.encodeInto() method takes a string to encode and a destination Uint8Array to put resulting UTF-8 encoded text into, and returns a dictionary object indicating the progress of the encoding. This is potentially more performant than the older encode() method — especially when the target buffer is a view into a Wasm heap. [To(\"FirstCharToLowerCase\")] public TextEncoderEncodeIntoResult EncodeInto(string source, byte destination) Parameters source string destination byte Returns TextEncoderEncodeIntoResult An object, which contains two members: Remarks -The TextEncoder interface it belongs to. -Encode(string) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextEncoderCommon.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextEncoderCommon.html",
    "title": "Interface TextEncoderCommon | CSharpToJavaScript",
    "keywords": "Interface TextEncoderCommon Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface TextEncoderCommon Properties Encoding string Encoding { get; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.TextEncoderEncodeIntoResult.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextEncoderEncodeIntoResult.html",
    "title": "Class TextEncoderEncodeIntoResult | CSharpToJavaScript",
    "keywords": "Class TextEncoderEncodeIntoResult Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class TextEncoderEncodeIntoResult Inheritance object TextEncoderEncodeIntoResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Read [To(\"FirstCharToLowerCase\")] public ulong Read Field Value ulong Written [To(\"FirstCharToLowerCase\")] public ulong Written Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.TextEncoderStream.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextEncoderStream.html",
    "title": "Class TextEncoderStream | CSharpToJavaScript",
    "keywords": "Class TextEncoderStream Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextEncoderStream interface of the 'Encoding API' converts a stream of strings into bytes in the UTF-8 encoding. It is the streaming equivalent of TextEncoder. [To(\"Default\")] public class TextEncoderStream Inheritance object TextEncoderStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -TextDecoderStream -Streams API Concepts -Experimenting with the Streams API See also on MDN Constructors TextEncoderStream() The TextEncoderStream() constructor creates a new TextEncoderStream object which is used to convert a stream of strings into bytes using UTF-8 encoding. public TextEncoderStream() Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextMetrics.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextMetrics.html",
    "title": "Class TextMetrics | CSharpToJavaScript",
    "keywords": "Class TextMetrics Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextMetrics interface represents the dimensions of a piece of text in the canvas; a TextMetrics instance can be retrieved using the CanvasRenderingContext2D.MeasureText method. [To(\"Default\")] public class TextMetrics Inheritance object TextMetrics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Creator method in CanvasRenderingContext2D -The {{HTMLElement(\"canvas\")}} element and its associated interface, HTMLCanvasElement See also on MDN Properties ActualBoundingBoxAscent The read-only actualBoundingBoxAscent property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline attribute to the top of the bounding rectangle used to render the text, in CSS pixels. [To(\"FirstCharToLowerCase\")] public Number ActualBoundingBoxAscent { get; } Property Value Number Remarks -TextMetrics See also on MDN ActualBoundingBoxDescent The read-only actualBoundingBoxDescent property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline attribute to the bottom of the bounding rectangle used to render the text, in CSS pixels. [To(\"FirstCharToLowerCase\")] public Number ActualBoundingBoxDescent { get; } Property Value Number Remarks -TextMetrics See also on MDN ActualBoundingBoxLeft The read-only actualBoundingBoxLeft property of the TextMetrics interface is a double giving the distance parallel to the baseline from the alignment point given by the CanvasRenderingContext2D.TextAlign property to the left side of the bounding rectangle of the given text, in CSS pixels; positive numbers indicating a distance going left from the given alignment point. [To(\"FirstCharToLowerCase\")] public Number ActualBoundingBoxLeft { get; } Property Value Number Remarks -TextMetrics See also on MDN ActualBoundingBoxRight The read-only actualBoundingBoxRight property of the TextMetrics interface is a double giving the distance parallel to the baseline from the alignment point given by the CanvasRenderingContext2D.TextAlign property to the right side of the bounding rectangle of the given text, in CSS pixels. [To(\"FirstCharToLowerCase\")] public Number ActualBoundingBoxRight { get; } Property Value Number Remarks -TextMetrics See also on MDN AlphabeticBaseline The read-only alphabeticBaseline property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline property to the alphabetic baseline of the line box, in CSS pixels. [To(\"FirstCharToLowerCase\")] public Number AlphabeticBaseline { get; } Property Value Number Remarks -TextMetrics See also on MDN EmHeightAscent The read-only emHeightAscent property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline property to the top of the em square in the line box, in CSS pixels. [To(\"FirstCharToLowerCase\")] public Number EmHeightAscent { get; } Property Value Number Remarks -TextMetrics See also on MDN EmHeightDescent The read-only emHeightDescent property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline property to the bottom of the em square in the line box, in CSS pixels. [To(\"FirstCharToLowerCase\")] public Number EmHeightDescent { get; } Property Value Number Remarks -TextMetrics See also on MDN FontBoundingBoxAscent The read-only fontBoundingBoxAscent property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline attribute to the top of the highest bounding rectangle of all the fonts used to render the text, in CSS pixels. [To(\"FirstCharToLowerCase\")] public Number FontBoundingBoxAscent { get; } Property Value Number Remarks -TextMetrics See also on MDN FontBoundingBoxDescent The read-only fontBoundingBoxDescent property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline attribute to the bottom of the bounding rectangle of all the fonts used to render the text, in CSS pixels. [To(\"FirstCharToLowerCase\")] public Number FontBoundingBoxDescent { get; } Property Value Number Remarks -TextMetrics See also on MDN HangingBaseline The read-only hangingBaseline property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline property to the hanging baseline of the line box, in CSS pixels. [To(\"FirstCharToLowerCase\")] public Number HangingBaseline { get; } Property Value Number Remarks -TextMetrics See also on MDN IdeographicBaseline The read-only ideographicBaseline property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline property to the ideographic baseline of the line box, in CSS pixels. [To(\"FirstCharToLowerCase\")] public Number IdeographicBaseline { get; } Property Value Number Remarks -TextMetrics See also on MDN Width The read-only width property of the TextMetrics interface contains the text's advance width (the width of that inline box) in CSS pixels. [To(\"FirstCharToLowerCase\")] public Number Width { get; } Property Value Number Remarks -TextMetrics See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextTrack.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextTrack.html",
    "title": "Class TextTrack | CSharpToJavaScript",
    "keywords": "Class TextTrack Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextTrack interface—part of the API for handling WebVTT (text tracks on media presentations)—describes and controls the text track associated with a particular track element. [To(\"Default\")] public class TextTrack : EventTarget Inheritance object EventTarget TextTrack Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -WebVTT -TextTrackCueList -VTTCue -track -HTMLTrackElement See also on MDN Properties ActiveCues The activeCues read-only property of the TextTrack interface returns a TextTrackCueList object listing the currently active cues. [To(\"FirstCharToLowerCase\")] public TextTrackCueList? ActiveCues { get; } Property Value TextTrackCueList A TextTrackCueList object. Remarks See also on MDN Cues The cues read-only property of the TextTrack interface returns a TextTrackCueList object containing all of the track's cues. [To(\"FirstCharToLowerCase\")] public TextTrackCueList? Cues { get; } Property Value TextTrackCueList A TextTrackCueList object. Remarks See also on MDN Id The id read-only property of the TextTrack interface returns the ID of the track if it has one. [To(\"FirstCharToLowerCase\")] public string Id { get; } Property Value string A string containing the ID, or an empty string. Remarks See also on MDN InBandMetadataTrackDispatchType The inBandMetadataTrackDispatchType read-only property of the TextTrack interface returns the text track's in-band metadata dispatch type of the text track represented by the TextTrack object. [To(\"FirstCharToLowerCase\")] public string InBandMetadataTrackDispatchType { get; } Property Value string A string containing the inBandMetadataTrackDispatchType, or an empty string. Remarks An in-band metadata dispatch type is a string extracted from a media resource specifically for in-band metadata tracks. An example of a media resource that might have such tracks is a TV station streaming a broadcast on the web. Text Tracks may be used to include metadata for ad targeting, additional information such as recipe data during a cooking show, or trivia game data during a game show. The value of this attribute could be used to attach these tracks to dedicated script modules as they are loaded. See also on MDN Kind The kind read-only property of the TextTrack interface returns the kind of text track this object represents. This decides how the track will be handled by a user agent. [To(\"FirstCharToLowerCase\")] public TextTrackKind Kind { get; } Property Value TextTrackKind A string. One of: Remarks See also on MDN Label The label read-only property of the TextTrack interface returns a human-readable label for the text track, if it is available. [To(\"FirstCharToLowerCase\")] public string Label { get; } Property Value string A string containing the label, or an empty string. Remarks See also on MDN Language The language read-only property of the TextTrack interface returns the language of the text track. [To(\"FirstCharToLowerCase\")] public string Language { get; } Property Value string A string containing a language identifier. For example, &quot;en-US&quot; for United States English or &quot;pt-BR&quot; for Brazilian Portuguese. Remarks This uses the same values as the HTML lang attribute. These values are documented in {{RFC(5646, \"Tags for Identifying Languages (also known as BCP 47)\")}}. See also on MDN Mode The TextTrack interface's mode property is a string specifying and controlling the text track&apos;s mode: disabled, hidden, or showing. You can read this value to determine the current mode, and you can change this value to switch modes. [To(\"FirstCharToLowerCase\")] public TextTrackMode Mode { get; set; } Property Value TextTrackMode A string which indicates the track&apos;s current mode. One of: Remarks Safari additionally requires the default boolean attribute to be set to true when implementing your own video player controls in order for the subtitles cues to be shown. -WebVTT -TextTrack -TextTrackList -TextTrackCueList -VTTCue -track -HTMLTrackElement See also on MDN Oncuechange [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Oncuechange { get; set; } Property Value EventHandlerNonNull Methods AddCue(TextTrackCue) The addCue() method of the TextTrack interface adds a new cue to the list of cues. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined AddCue(TextTrackCue cue) Parameters cue TextTrackCue Returns GlobalObject.Undefined Undefined. Remarks See also on MDN RemoveCue(TextTrackCue) The removeCue() method of the TextTrack interface removes a cue from the list of cues. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined RemoveCue(TextTrackCue cue) Parameters cue TextTrackCue Returns GlobalObject.Undefined Undefined. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextTrackCue.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextTrackCue.html",
    "title": "Class TextTrackCue | CSharpToJavaScript",
    "keywords": "Class TextTrackCue Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll TextTrackCue is an abstract class which is used as the basis for the various derived cue types, such as VTTCue; you will instead work with those derived types. These cues represent strings of text presented for some duration of time during the performance of a TextTrack. The cue includes the start time (the time at which the text will be displayed) and the end time (the time at which it will be removed from the display), as well as other information. [To(\"Default\")] public class TextTrackCue : EventTarget Inheritance object EventTarget TextTrackCue Derived VTTCue Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties EndTime The endTime property of the TextTrackCue interface returns and sets the end time of the cue. [To(\"FirstCharToLowerCase\")] public double EndTime { get; set; } Property Value double A number representing the end time, in seconds. Remarks See also on MDN Id The id property of the TextTrackCue interface returns and sets the identifier for this cue. [To(\"FirstCharToLowerCase\")] public string Id { get; set; } Property Value string A string containing the ID of this cue. Remarks See also on MDN Onenter [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onenter { get; set; } Property Value EventHandlerNonNull Onexit [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onexit { get; set; } Property Value EventHandlerNonNull PauseOnExit The pauseOnExit property of the TextTrackCue interface returns or sets the flag indicating whether playback of the media should pause when the end of the range to which this cue applies is reached. [To(\"FirstCharToLowerCase\")] public bool PauseOnExit { get; set; } Property Value bool A Boolean, true if the media will pause. Remarks See also on MDN StartTime The startTime property of the TextTrackCue interface returns and sets the start time of the cue. [To(\"FirstCharToLowerCase\")] public Number StartTime { get; set; } Property Value Number A number representing the start time, in seconds. Remarks See also on MDN Track The track read-only property of the TextTrackCue interface returns the TextTrack object that this cue belongs to. [To(\"FirstCharToLowerCase\")] public TextTrack? Track { get; } Property Value TextTrack A TextTrack object. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextTrackCueList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextTrackCueList.html",
    "title": "Class TextTrackCueList | CSharpToJavaScript",
    "keywords": "Class TextTrackCueList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextTrackCueList array-like object represents a dynamically updating list of TextTrackCue objects. [To(\"Default\")] public class TextTrackCueList Inheritance object TextTrackCueList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface has no constructor. Retrieve an instance of this object with 'TextTrack.Cues' which returns all of the cues in a TextTrack object. See also on MDN Properties Length The length read-only property of the TextTrackCueList interface returns the number of cues in the list. [To(\"FirstCharToLowerCase\")] public ulong Length { get; } Property Value ulong An unsigned long which is the number of cues in the list. Remarks See also on MDN Methods GetCueById(string) The getCueById() method of the TextTrackCueList interface returns the first VTTCue in the list represented by the TextTrackCueList object whose identifier matches the value of id. [To(\"FirstCharToLowerCase\")] public TextTrackCue? GetCueById(string id) Parameters id string Returns TextTrackCue A VTTCue object. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextTrackKind.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextTrackKind.html",
    "title": "Enum TextTrackKind | CSharpToJavaScript",
    "keywords": "Enum TextTrackKind Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The kind read-only property of the TextTrack interface returns the kind of text track this object represents. This decides how the track will be handled by a user agent. public enum TextTrackKind Fields Captions = 1 Chapters = 3 Descriptions = 2 Metadata = 4 Subtitles = 0 Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextTrackList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextTrackList.html",
    "title": "Class TextTrackList | CSharpToJavaScript",
    "keywords": "Class TextTrackList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextTrackList interface is used to represent a list of the text tracks defined by the {{HTMLElement(\"track\")}} element, with each track represented by a separate TextTrack object in the list. [To(\"Default\")] public class TextTrackList : EventTarget Inheritance object EventTarget TextTrackList Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Retrieve an instance of this object with the 'HTMLMediaElement.TextTracks' property of an 'HTMLMediaElement' object. For a given 'HTMLMediaElement' object media, the individual tracks can be accessed using: See also on MDN Properties Length The read-only TextTrackList property length returns the number of entries in the TextTrackList, each of which is a TextTrack representing one track in the media element. [To(\"FirstCharToLowerCase\")] public ulong Length { get; } Property Value ulong A number indicating how many text tracks are included in the TextTrackList. Each track can be accessed by treating the TextTrackList as an array of objects of type TextTrack. Remarks A value of 0 indicates that there are no text tracks in the media. See also on MDN Onaddtrack [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onaddtrack { get; set; } Property Value EventHandlerNonNull Onchange [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onchange { get; set; } Property Value EventHandlerNonNull Onremovetrack [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onremovetrack { get; set; } Property Value EventHandlerNonNull Methods GetTrackById(string) The TextTrackList method getTrackById() returns the first TextTrack object from the track list whose id matches the specified string. This lets you find a specified track if you know its ID string. [To(\"FirstCharToLowerCase\")] public TextTrack? GetTrackById(string id) Parameters id string Returns TextTrack A TextTrack object indicating the first track found within the TextTrackList whose id matches the specified string. If no match is found, this method returns null.The tracks are searched in their natural order; that is, in the order defined by the media resource itself, or, if the resource doesn&apos;t define an order, the relative order in which the tracks are declared by the media resource. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextTrackMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextTrackMode.html",
    "title": "Enum TextTrackMode | CSharpToJavaScript",
    "keywords": "Enum TextTrackMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextTrack interface's mode property is a string specifying and controlling the text track&apos;s mode: disabled, hidden, or showing. You can read this value to determine the current mode, and you can change this value to switch modes. public enum TextTrackMode Fields Disabled = 0 Hidden = 1 Showing = 2 Remarks Safari additionally requires the default boolean attribute to be set to true when implementing your own video player controls in order for the subtitles cues to be shown. -WebVTT -TextTrack -TextTrackList -TextTrackCueList -VTTCue -track -HTMLTrackElement See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TimeRanges.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TimeRanges.html",
    "title": "Class TimeRanges | CSharpToJavaScript",
    "keywords": "Class TimeRanges Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll A TimeRanges object includes one or more ranges of time, each specified by a starting time offset and an ending time offset. You reference each time range by using the start() and end() methods, passing the index number of the time range you want to retrieve. [To(\"FirstCharToLowerCase\")] public class TimeRanges Inheritance object TimeRanges Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Length The TimeRanges.length read-only property returns the number of ranges in the object. public ulong Length { get; } Property Value ulong A number. Remarks See also on MDN Methods End(ulong) The end() method of the TimeRanges interface returns the time offset at which a specified time range ends. public Number End(ulong index) Parameters index ulong Returns Number A number. Remarks See also on MDN Start(ulong) The start() method of the TimeRanges interface returns the time offset at which a specified time range begins. public Number Start(ulong index) Parameters index ulong Returns Number A number. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ToggleEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ToggleEvent.html",
    "title": "Class ToggleEvent | CSharpToJavaScript",
    "keywords": "Class ToggleEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ToggleEvent interface represents an event notifying the user when a popover element&apos;s state toggles between showing and hidden. [To(\"FirstCharToLowerCase\")] public class ToggleEvent : Event Inheritance object Event ToggleEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It is the event object for the HTMLElement HTMLElement.Beforetoggle_event and HTMLElement.Toggle_event events, which fire on popovers when they transition between showing and hidden (before and after, respectively). NOTE Note: ToggleEvent is unrelated to the HTMLDetailsElement HTMLDetailsElement.Toggle_event event, which fires on a {{htmlelement(\"details\")}} element when its open/closed state is toggled. Its event object is a generic Event. -Popover API -beforetoggle event -toggle event See also on MDN Constructors ToggleEvent() public ToggleEvent() ToggleEvent(string, ToggleEventInit) The ToggleEvent() constructor creates a new ToggleEvent object. public ToggleEvent(string type, ToggleEventInit eventInitDict) Parameters type string eventInitDict ToggleEventInit Remarks -Popover API See also on MDN Properties NewState The newState read-only property of the ToggleEvent interface is a string representing the state the element is transitioning to. public string NewState { get; } Property Value string A string. Possible values are &quot;open&quot; (the popover is being shown) or &quot;closed&quot; (the popover is being hidden). Remarks -Popover API See also on MDN OldState The oldState read-only property of the ToggleEvent interface is a string representing the state the element is transitioning from. public string OldState { get; } Property Value string A string. Possible values are &quot;open&quot; (the popover is going from showing to hidden) or &quot;closed&quot; (the popover going from hidden to shown). Remarks -Popover API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ToggleEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ToggleEventInit.html",
    "title": "Class ToggleEventInit | CSharpToJavaScript",
    "keywords": "Class ToggleEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ToggleEventInit : EventInit Inheritance object EventInit ToggleEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NewState public string NewState Field Value string OldState public string OldState Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.TokenBinding.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TokenBinding.html",
    "title": "Class TokenBinding | CSharpToJavaScript",
    "keywords": "Class TokenBinding Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class TokenBinding Inheritance object TokenBinding Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Id public string Id Field Value string Status public required TokenBindingStatus Status Field Value TokenBindingStatus"
  },
  "api/CSharpToJavaScript.APIs.JS.TokenBindingStatus.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TokenBindingStatus.html",
    "title": "Enum TokenBindingStatus | CSharpToJavaScript",
    "keywords": "Enum TokenBindingStatus Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum TokenBindingStatus Fields Present = 0 Supported = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.Touch.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Touch.html",
    "title": "Class Touch | CSharpToJavaScript",
    "keywords": "Class Touch Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Touch interface represents a single contact point on a touch-sensitive device. The contact point is commonly a finger or stylus and the device may be a touchscreen or trackpad. [To(\"FirstCharToLowerCase\")] public class Touch Inheritance object Touch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The Touch.RadiusX, Touch.RadiusY, and Touch.RotationAngle describe the area of contact between the user and the screen, the touch area. This can be helpful when dealing with imprecise pointing devices such as fingers. These values are set to describe an ellipse that as closely as possible matches the entire area of contact (such as the user's fingertip). {{experimental_inline}} NOTE Note: Many of the properties&apos; values are hardware-dependent; for example, if the device doesn&apos;t have a way to detect the amount of pressure placed on the surface, the force value will always be 0. This may also be the case for radiusX and radiusY; if the hardware reports only a single point, these values will be 1. -Touch events -CreateTouch(Window, EventTarget, long, long, long, long, long) See also on MDN Properties ClientX The Touch.clientX read-only property returns the X coordinate of the touch point relative to the viewport, not including any scroll offset. public long ClientX { get; } Property Value long A long representing the X coordinate of the touch point relative to the viewport, not including any scroll offset. Remarks See also on MDN ClientY The Touch.clientY read-only property returns the Y coordinate of the touch point relative to the browser&apos;s viewport, not including any scroll offset. public long ClientY { get; } Property Value long A long value representing the Y coordinate of the touch point relative to the viewport, not including any scroll offset. Remarks See also on MDN Identifier The Touch.identifier returns a value uniquely identifying this point of contact with the touch surface. This value remains consistent for every event involving this finger&apos;s (or stylus&apos;s) movement on the surface until it is lifted off the surface. public long Identifier { get; } Property Value long A long that represents the unique ID of the Touch object. Remarks See also on MDN PageX The Touch.pageX read-only property returns the X coordinate of the touch point relative to the viewport, including any scroll offset. public long PageX { get; } Property Value long A long representing the X coordinate of the touch point relative to the viewport, including any scroll offset. Remarks See also on MDN PageY The Touch.pageY read-only property returns the Y coordinate of the touch point relative to the viewport, including any scroll offset. public long PageY { get; } Property Value long A long value that represents the Y coordinate of the touch point relative to the viewport, including any scroll offset. Remarks See also on MDN ScreenX public long ScreenX { get; } Property Value long A number. Remarks See also on MDN ScreenY public long ScreenY { get; } Property Value long A number. Remarks See also on MDN Target The read-only target property of the Touch interface returns the (EventTarget) on which the touch contact started when it was first placed on the surface, even if the touch point has since moved outside the interactive area of that element or even been removed from the document. Note that if the target element is removed from the document, events will still be targeted at it, and hence won't necessarily bubble up to the window or document anymore. If there is any risk of an element being removed while it is being touched, the best practice is to attach the touch listeners directly to the target. public EventTarget Target { get; } Property Value EventTarget The EventTarget the Touch object applies to. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TouchEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TouchEvent.html",
    "title": "Class TouchEvent | CSharpToJavaScript",
    "keywords": "Class TouchEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TouchEvent interface represents an UIEvent which is sent when the state of contacts with a touch-sensitive surface changes. This surface can be a touch screen or trackpad, for example. The event can describe one or more points of contact with the screen and includes support for detecting movement, addition and removal of contact points, and so forth. [To(\"FirstCharToLowerCase\")] public class TouchEvent : UIEvent Inheritance object Event UIEvent TouchEvent Inherited Members UIEvent.View UIEvent.Detail UIEvent.InitUIEvent(string, bool, bool, Window, long) UIEvent.Which Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Touches are represented by the Touch object; each touch is described by a position, size and shape, amount of pressure, and target element. Lists of touches are represented by TouchList objects. -Touch events -GestureEvent See also on MDN Properties AltKey The read-only altKey property of the TouchEvent interface returns a boolean value indicating whether or not the &lt;kbd&gt;alt&lt;/kbd&gt; (Alternate) key is enabled when the touch event is created. If the &lt;kbd&gt;alt&lt;/kbd&gt; key is enabled, the attribute&apos;s value is true. Otherwise, it is false. public bool AltKey { get; } Property Value bool A boolean value that is true if the &lt;kbd&gt;alt&lt;/kbd&gt; key is enabled for this event; and false if the &lt;kbd&gt;alt&lt;/kbd&gt; is not enabled. Remarks This property is {{ReadOnlyInline}}. See also on MDN ChangedTouches The changedTouches read-only property is a TouchList whose touch points (Touch objects) varies depending on the event type, as follows: public TouchList ChangedTouches { get; } Property Value TouchList A TouchList whose Touch objects include all the touch points that contributed to this touch event. Remarks See also on MDN CtrlKey The read-only ctrlKey property of the TouchEvent interface returns a boolean value indicating whether the &lt;kbd&gt;control&lt;/kbd&gt; (Control) key is enabled when the touch event is created. If this key is enabled, the attribute&apos;s value is true. Otherwise, it is false. public bool CtrlKey { get; } Property Value bool A boolean value that is true if the &lt;kbd&gt;control&lt;/kbd&gt; key is enabled for this event; and false if the &lt;kbd&gt;control&lt;/kbd&gt; is not enabled. Remarks This property is {{ReadOnlyInline}}. See also on MDN MetaKey The read-only metaKey property of the TouchEvent interface returns a boolean value indicating whether or not the &lt;kbd&gt;Meta&lt;/kbd&gt; key is enabled when the touch event is created. If this key is enabled, the attribute&apos;s value is true. Otherwise, it is false. public bool MetaKey { get; } Property Value bool A boolean value that is true if the &lt;kbd&gt;Meta&lt;/kbd&gt; key is enabled for this event; and false if the &lt;kbd&gt;Meta&lt;/kbd&gt; is not enabled. Remarks This property is {{ReadOnlyInline}}. NOTE Note: On Macintosh keyboards, this is the &lt;kbd&gt;⌘ Command&lt;/kbd&gt; key. On Windows keyboards, this is the Windows key (&lt;kbd&gt;⊞&lt;/kbd&gt;). See also on MDN ShiftKey The read-only shiftKey property of the TouchEvent interface returns a boolean value indicating whether or not the &lt;kbd&gt;shift&lt;/kbd&gt; key is enabled when the touch event is created. If this key is enabled, the attribute&apos;s value is true. Otherwise, it is false. public bool ShiftKey { get; } Property Value bool The boolean value true if the &lt;kbd&gt;shift&lt;/kbd&gt; key is enabled for this event; and false if the &lt;kbd&gt;shift&lt;/kbd&gt; key is not enabled. Remarks See also on MDN TargetTouches The targetTouches read-only property is a TouchList listing all the Touch objects for touch points that are still in contact with the touch surface and whose Element/touchstart_event event occurred inside the same target Element as the current target element. public TouchList TargetTouches { get; } Property Value TouchList A TouchList listing all the Touch objects for touch points that are still in contact with the touch surface and whose touchstart event occurred inside the same target Element as the current target element. Remarks See also on MDN Touches touches is a read-only TouchList listing all the Touch objects for touch points that are currently in contact with the touch surface, regardless of whether or not they&apos;ve changed or what their target element was at Element/touchstart_event time. public TouchList Touches { get; } Property Value TouchList A TouchList listing all the Touch objects for touch points that are still in contact with the touch surface, regardless of whether or not they've changed or what their target element was at touchstart time. Remarks You can think of it as how many separate fingers are able to be identified as touching the screen. NOTE Note: Touches inside the array are not necessarily ordered by order of occurrences (the i-th element in the array being the i-th touch that happened). You cannot assume a specific order. To determine the order of occurrences of the touches, use the touch object IDs. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TouchList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TouchList.html",
    "title": "Class TouchList | CSharpToJavaScript",
    "keywords": "Class TouchList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TouchList interface represents a list of contact points on a touch surface. For example, if the user has three fingers on the touch surface (such as a screen or trackpad), the corresponding TouchList object would have one Touch object for each finger, for a total of three entries. [To(\"FirstCharToLowerCase\")] public class TouchList Inheritance object TouchList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: This interface was an attempt to create an unmodifiable list and only continues to be supported to not break code that&apos;s already using it. Modern APIs use types that wrap around ECMAScript array types instead, so you can treat them like ECMAScript arrays, and at the same time impose additional semantics on their usage (such as making their items read-only). -Touch events -CreateTouchList(params Touch[]) See also on MDN Properties Length The length read-only property indicates the number of items (touch points) in a given TouchList. public ulong Length { get; } Property Value ulong The number of touch points in touchList. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TrackEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TrackEvent.html",
    "title": "Class TrackEvent | CSharpToJavaScript",
    "keywords": "Class TrackEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TrackEvent interface, which is part of the HTML DOM specification, is used for events which represent changes to a set of available tracks on an HTML media element; these events are addtrack and removetrack. [To(\"FirstCharToLowerCase\")] public class TrackEvent : Event Inheritance object Event TrackEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It&apos;s important not to confuse TrackEvent with the RTCTrackEvent interface, which is used for tracks which are part of an RTCPeerConnection. Events based on TrackEvent are always sent to one of the media track list types: See also on MDN Constructors TrackEvent() public TrackEvent() TrackEvent(string, TrackEventInit) The TrackEvent() constructor creates and returns a new TrackEvent object describing an event which occurred on a list of tracks (AudioTrackList, VideoTrackList, or TextTrackList). public TrackEvent(string type, TrackEventInit eventInitDict) Parameters type string eventInitDict TrackEventInit Remarks See also on MDN Properties Track The read-only track property of the TrackEvent interface specifies the media track object to which the event applies. public Union8? Track { get; } Property Value Union8? An object which is one of the types AudioTrack, VideoTrack, or TextTrack, depending on the type of media represented by the track. This identifies the track to which the event applies. Remarks The media track will be an AudioTrack, VideoTrack, or TextTrack object. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TrackEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TrackEventInit.html",
    "title": "Class TrackEventInit | CSharpToJavaScript",
    "keywords": "Class TrackEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class TrackEventInit : EventInit Inheritance object EventInit TrackEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Track public Union9? Track Field Value Union9?"
  },
  "api/CSharpToJavaScript.APIs.JS.TransferFunction.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TransferFunction.html",
    "title": "Enum TransferFunction | CSharpToJavaScript",
    "keywords": "Enum TransferFunction Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum TransferFunction Fields Hlg = 2 Pq = 1 Srgb = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.TransformStream.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TransformStream.html",
    "title": "Class TransformStream | CSharpToJavaScript",
    "keywords": "Class TransformStream Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TransformStream interface of the Streams API represents a concrete implementation of the pipe chain transform stream concept. [To(\"FirstCharToLowerCase\")] public class TransformStream Inheritance object TransformStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It may be passed to the PipeThrough(ReadableWritablePair, StreamPipeOptions) method in order to transform a stream of data from one format into another. For example, it might be used to decode (or encode) video frames, decompress data, or convert the stream from XML to JSON. A transformation algorithm may be provided as an optional argument to the object constructor. If not supplied, data is not modified when piped through the stream. TransformStream is a transferable object. -WHATWG Stream Visualizer, for a basic visualization of readable, writable, and transform streams. -Streams—The Definitive Guide See also on MDN Constructors TransformStream() public TransformStream() TransformStream(object, QueuingStrategy, QueuingStrategy) The TransformStream() constructor creates a new TransformStream object which represents a pair of streams: a WritableStream representing the writable side, and a ReadableStream representing the readable side. public TransformStream(object transformer, QueuingStrategy writableStrategy, QueuingStrategy readableStrategy) Parameters transformer object writableStrategy QueuingStrategy readableStrategy QueuingStrategy Remarks See also on MDN Properties Readable The readable read-only property of the TransformStream interface returns the ReadableStream instance controlled by this TransformStream. public ReadableStream Readable { get; } Property Value ReadableStream A ReadableStream. Remarks See also on MDN Writable The writable read-only property of the TransformStream interface returns the WritableStream instance controlled by this TransformStream. public WritableStream Writable { get; } Property Value WritableStream A WritableStream. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TransformStreamDefaultController.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TransformStreamDefaultController.html",
    "title": "Class TransformStreamDefaultController | CSharpToJavaScript",
    "keywords": "Class TransformStreamDefaultController Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TransformStreamDefaultController interface of the Streams API provides methods to manipulate the associated ReadableStream and WritableStream. [To(\"FirstCharToLowerCase\")] public class TransformStreamDefaultController Inheritance object TransformStreamDefaultController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks When constructing a TransformStream, the TransformStreamDefaultController is created. It therefore has no constructor. The way to get an instance of TransformStreamDefaultController is via the callback methods of TransformStream(object, QueuingStrategy, QueuingStrategy). See also on MDN Properties DesiredSize The desiredSize read-only property of the TransformStreamDefaultController interface returns the desired size to fill the queue of the associated ReadableStream. public double? DesiredSize { get; } Property Value double? The desired size. Remarks The internal queue of a ReadableStream contains chunks that have been enqueued, but not yet read. The browser determines the desired size to fill the stream, and it is this value returned by the desiredSize property. If the desiredSize is 0 then the queue is full. Therefore you can use this information to manually apply backpressure to manage the queue. See also on MDN Methods Enqueue(dynamic) The enqueue() method of the TransformStreamDefaultController interface enqueues the given chunk in the readable side of the stream. public GlobalObject.Undefined Enqueue(dynamic chunk) Parameters chunk dynamic Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks For more information on readable streams and chunks see Using Readable Streams. See also on MDN Error(dynamic) The error() method of the TransformStreamDefaultController interface errors both sides of the stream. Any further interactions with it will fail with the given error message, and any chunks in the queue will be discarded. public GlobalObject.Undefined Error(dynamic reason) Parameters reason dynamic Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Terminate() The terminate() method of the TransformStreamDefaultController interface closes the readable side and errors the writable side of the stream. public GlobalObject.Undefined Terminate() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Transformer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Transformer.html",
    "title": "Class Transformer | CSharpToJavaScript",
    "keywords": "Class Transformer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class Transformer Inheritance object Transformer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Cancel public TransformerCancelCallback Cancel Field Value TransformerCancelCallback Flush public TransformerFlushCallback Flush Field Value TransformerFlushCallback ReadableType public dynamic ReadableType Field Value dynamic Start public TransformerStartCallback Start Field Value TransformerStartCallback Transform public TransformerTransformCallback Transform Field Value TransformerTransformCallback WritableType public dynamic WritableType Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.TransformerCancelCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TransformerCancelCallback.html",
    "title": "Struct TransformerCancelCallback | CSharpToJavaScript",
    "keywords": "Struct TransformerCancelCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct TransformerCancelCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.TransformerFlushCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TransformerFlushCallback.html",
    "title": "Struct TransformerFlushCallback | CSharpToJavaScript",
    "keywords": "Struct TransformerFlushCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct TransformerFlushCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.TransformerStartCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TransformerStartCallback.html",
    "title": "Struct TransformerStartCallback | CSharpToJavaScript",
    "keywords": "Struct TransformerStartCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct TransformerStartCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.TransformerTransformCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TransformerTransformCallback.html",
    "title": "Struct TransformerTransformCallback | CSharpToJavaScript",
    "keywords": "Struct TransformerTransformCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct TransformerTransformCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.TreeWalker.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TreeWalker.html",
    "title": "Class TreeWalker | CSharpToJavaScript",
    "keywords": "Class TreeWalker Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TreeWalker object represents the nodes of a document subtree and a position within them. [To(\"FirstCharToLowerCase\")] public class TreeWalker Inheritance object TreeWalker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A TreeWalker can be created using the CreateTreeWalker(Node, ulong, NodeFilter?) method. -The creator method: CreateTreeWalker(Node, ulong, NodeFilter?). -Related interfaces: NodeFilter, NodeIterator. See also on MDN Properties CurrentNode The TreeWalker.currentNode property represents the Node which the TreeWalker is currently pointing at. public Node CurrentNode { get; set; } Property Value Node A Node. Remarks -The TreeWalker interface. See also on MDN Filter The TreeWalker.filter read-only property returns a NodeFilter that is the filtering object associated with the TreeWalker. public NodeFilter? Filter { get; } Property Value NodeFilter A NodeFilter object. Remarks When creating the TreeWalker, the filter object is passed in as the third parameter, and its method AcceptNode(Node) is called on every single node to determine whether or not to accept it. -The TreeWalker interface it belongs to. See also on MDN Root The TreeWalker.root read-only property returns the node that is the root of what the TreeWalker traverses. public Node Root { get; } Property Value Node A Node object. Remarks -The TreeWalker interface. See also on MDN WhatToShow The TreeWalker.whatToShow read-only property returns a bitmask that indicates the types of nodes to show. Non-matching nodes are skipped, but their children may be included, if relevant. The possible values are: public ulong WhatToShow { get; } Property Value ulong A bitmask. Remarks -The TreeWalker interface. See also on MDN Methods FirstChild() The TreeWalker.firstChild() method moves the current Node to the first visible child of the current node, and returns the found child. If no such child exists, it returns null and the current node is not changed. public Node? FirstChild() Returns Node A Node object or null. Remarks -The TreeWalker interface it belongs to. See also on MDN LastChild() The TreeWalker.lastChild() method moves the current Node to the last visible child of the current node, and returns the found child. If no such child exists, it returns null and the current node is not changed. public Node? LastChild() Returns Node A Node object or null. Remarks -The TreeWalker interface it belongs to. See also on MDN NextNode() The TreeWalker.nextNode() method moves the current Node to the next visible node in the document order, and returns the found node. If no such node exists, it returns null and the current node is not changed. public Node? NextNode() Returns Node A Node object or null. Remarks -The TreeWalker interface it belongs to. See also on MDN NextSibling() The TreeWalker.nextSibling() method moves the current Node to its next sibling, if any, and returns the found sibling. If there is no such node, it returns null and the current node is not changed. public Node? NextSibling() Returns Node A Node object or null. Remarks -The TreeWalker interface it belongs to. See also on MDN ParentNode() The TreeWalker.parentNode() method moves the current Node to the first visible ancestor node in the document order, and returns the found node. If no such node exists, or if it is above the TreeWalker&apos;s root node, it returns null and the current node is not changed. public Node? ParentNode() Returns Node A Node object or null. Remarks -The TreeWalker interface it belongs to. See also on MDN PreviousNode() The TreeWalker.previousNode() method moves the current Node to the previous visible node in the document order, and returns the found node. If no such node exists, or if it is before that the root node defined at the object construction, it returns null and the current node is not changed. public Node? PreviousNode() Returns Node A Node object or null. Remarks -The TreeWalker interface it belongs to. See also on MDN PreviousSibling() The TreeWalker.previousSibling() method moves the current Node to its previous sibling, if any, and returns the found sibling. If there is no such node, it returns null and the current node is not changed. public Node? PreviousSibling() Returns Node A Node object or null. Remarks -The TreeWalker interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.UIEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UIEvent.html",
    "title": "Class UIEvent | CSharpToJavaScript",
    "keywords": "Class UIEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The UIEvent interface represents simple user interface events. [To(\"FirstCharToLowerCase\")] public class UIEvent : Event Inheritance object Event UIEvent Derived CompositionEvent FocusEvent InputEvent KeyboardEvent MouseEvent NavigationEvent TouchEvent UIRequestEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks UIEvent derives from Event. Although the InitUIEvent(string, bool, bool, Window?, long) method is kept for backward compatibility, you should create a UIEvent object using the UIEvent(string, UIEventInit) constructor. Several interfaces are direct or indirect descendants of this one: MouseEvent, TouchEvent, FocusEvent, KeyboardEvent, WheelEvent, InputEvent, and CompositionEvent. -Introduction to events -Event See also on MDN Constructors UIEvent() public UIEvent() UIEvent(string, UIEventInit) The UIEvent() constructor creates a new UIEvent object. public UIEvent(string type, UIEventInit eventInitDict) Parameters type string eventInitDict UIEventInit Remarks NOTE Note: If you construct a synthetic event using this constructor, that event will not be trusted, for security reasons. Only browser-generated UIEvent objects are trusted and only trusted events trigger default actions. -UIEvent, the interface of the objects it constructs. See also on MDN Properties Detail The UIEvent.detail read-only property, when non-zero, provides the current (or next, depending on the event) click count. public long Detail { get; } Property Value long Remarks For Element/click_event or Element/dblclick_event events, UIEvent.detail is the current click count. For Element/mousedown_event or Element/mouseup_event events, UIEvent.detail is 1 plus the current click count. For all other UIEvent objects, UIEvent.detail is always zero. See also on MDN View The UIEvent.view read-only property returns the WindowProxy object from which the event was generated. In browsers, this is the Window object the event happened in. public Window? View { get; } Property Value Window A reference to an AbstractView object. Remarks See also on MDN Which IMPORTANT Deprecated The UIEvent.which read-only property of the UIEvent interface returns a number that indicates which button was pressed on the mouse, or the numeric keyCode or the character code (charCode) of the key pressed on the keyboard. public ulong Which { get; } Property Value ulong For KeyboardEvent, event.which contains the numeric code for a particular key pressed, depending on whether an alphanumeric or non-alphanumeric key was pressed. Please see deprecated CharCode and KeyCode for more details. NOTE Note: Consider Key or Code for new code. For MouseEvent, event.which is a number representing a given button:For a mouse configured for left-handed use, the button actions are reversed. In this case, the values are read from right to left. NOTE Note: Consider Button for new code. Remarks -KeyboardEvent -MouseEvent See also on MDN Methods InitUIEvent(string, bool, bool, Window?, long) IMPORTANT Deprecated The UIEvent.initUIEvent() method initializes a UI event once it&apos;s been created. public GlobalObject.Undefined InitUIEvent(string typeArg, bool bubblesArg, bool cancelableArg, Window? viewArg, long detailArg) Parameters typeArg string bubblesArg bool cancelableArg bool viewArg Window detailArg long Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Events initialized in this way must have been created with the {{ domxref(&quot;Document.createEvent()&quot;) }} method. This method must be called to set the event before it is dispatched, using DispatchEvent(Event). Once dispatched, it doesn&apos;t do anything anymore. WARNING Warning: Do not use this method anymore as it is deprecated. Instead use specific event constructors, like UIEvent(string, UIEventInit). The page on Creating and triggering events gives more information about the way to use these. -UIEvent -The constructor to use instead of this deprecated method: UIEvent(string, UIEventInit). More specific constructors can be used too. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.UIEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UIEventInit.html",
    "title": "Class UIEventInit | CSharpToJavaScript",
    "keywords": "Class UIEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class UIEventInit : EventInit Inheritance object EventInit UIEventInit Derived CompositionEventInit EventModifierInit FocusEventInit InputEventInit NavigationEventInit UIRequestEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Detail public long Detail Field Value long View public Window? View Field Value Window Which public ulong Which Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.UIRequestEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UIRequestEvent.html",
    "title": "Class UIRequestEvent | CSharpToJavaScript",
    "keywords": "Class UIRequestEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class UIRequestEvent : UIEvent Inheritance object Event UIEvent UIRequestEvent Inherited Members UIEvent.View UIEvent.Detail UIEvent.InitUIEvent(string, bool, bool, Window, long) UIEvent.Which Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UIRequestEvent() public UIRequestEvent() UIRequestEvent(string, UIRequestEventInit) public UIRequestEvent(string typeArg, UIRequestEventInit dictUIRequestEventInit) Parameters typeArg string dictUIRequestEventInit UIRequestEventInit Properties Receiver public EventTarget Receiver { get; } Property Value EventTarget"
  },
  "api/CSharpToJavaScript.APIs.JS.UIRequestEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UIRequestEventInit.html",
    "title": "Class UIRequestEventInit | CSharpToJavaScript",
    "keywords": "Class UIRequestEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class UIRequestEventInit : UIEventInit Inheritance object EventInit UIEventInit UIRequestEventInit Inherited Members UIEventInit.Which EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Bubbles public bool Bubbles Field Value bool Cancelable public bool Cancelable Field Value bool Detail public long Detail Field Value long Receiver public EventTarget Receiver Field Value EventTarget View public Window? View Field Value Window"
  },
  "api/CSharpToJavaScript.APIs.JS.URL.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.URL.html",
    "title": "Class URL | CSharpToJavaScript",
    "keywords": "Class URL Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The URL interface is used to parse, construct, normalize, and encode URL. It works by providing properties which allow you to easily read and modify the components of a URL. [To(\"FirstCharToLowerCase\")] public class URL Inheritance object URL Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You normally create a new URL object by specifying the URL as a string when calling its constructor, or by providing a relative URL and a base URL. You can then easily read the parsed components of the URL or make changes to the URL. If a browser doesn't yet support the URL(string, string) constructor, you can access a URL object using the Window interface's URL property. Be sure to check to see if any of your target browsers require this to be prefixed. AvailableInWorkers -Polyfill of URL in core-js -URL API -What is a URL? -Property to obtain a URL object: URL. -URLSearchParams. See also on MDN Constructors URL() public URL() URL(string, string) The URL() constructor returns a newly created URL object representing the URL defined by the parameters. public URL(string url, string base_) Parameters url string base_ string Remarks If the given base URL or the resulting URL are not valid URLs, the JavaScript TypeError exception is thrown. AvailableInWorkers -Polyfill of URL in core-js -The interface it belongs to: URL. See also on MDN Properties Hash The hash property of the URL interface is a string containing a &apos;#&apos; followed by the fragment identifier of the URL. public string Hash { get; set; } Property Value string A string. Remarks The fragment is not URL decoded. If the URL does not have a fragment identifier, this property contains an empty string — &quot;&quot;. AvailableInWorkers -The URL interface it belongs to. See also on MDN Host The host property of the URL interface is a string containing the host, that is the {{domxref(&quot;URL.hostname&quot;, \"hostname\")}}, and then, if the port of the URL is nonempty, a &apos;:&apos;, followed by the Port of the URL. public string Host { get; set; } Property Value string A string. Remarks AvailableInWorkers -The URL interface it belongs to. See also on MDN Hostname The hostname property of the URL interface is a string containing the domain name of the URL. public string Hostname { get; set; } Property Value string A string. Remarks AvailableInWorkers -The URL interface it belongs to. See also on MDN Href The href property of the URL interface is a string containing the whole URL. public string Href { get; set; } Property Value string A string. Remarks AvailableInWorkers -The URL interface it belongs to. See also on MDN Origin The origin read-only property of the URL interface returns a string containing the Unicode serialization of the origin of the represented URL. public string Origin { get; } Property Value string A string. Remarks The exact structure varies depending on the type of URL: AvailableInWorkers -The URL interface See also on MDN Password The password property of the URL interface is a string containing the password specified before the domain name. public string Password { get; set; } Property Value string A string. Remarks If it is set without first setting the Username property, it silently fails. AvailableInWorkers -The URL interface it belongs to. See also on MDN Pathname The pathname property of the URL interface represents a location in a hierarchical structure. It is a string constructed from a list of path segments, each of which is prefixed by a / character. If the URL has no path segments, the value of its pathname property will be the empty string. public string Pathname { get; set; } Property Value string A string. Remarks URLs such as https and http URLs that have hierarchical schemes (which the URL standard calls &quot;special schemes&quot;) always have at least one (invisible) path segment: the empty string. Thus the pathname value for such &quot;special scheme&quot; URLs can never be the empty string, but will instead always have a least one / character. For example, the URL https://developer.mozilla.org has just one path segment: the empty string, so its pathname value is constructed by prefixing a / character to the empty string. Some systems define the term slug to mean the final segment of a non-empty path if it identifies a page in human-readable keywords. For example, the URL https://example.org/articles/this-that-other-outre-collection has this-that-other-outre-collection as its slug. Some systems use the ; and = characters to delimit parameters and parameter values applicable to a path segment. For example, with the URL https://example.org/users;id=42/tasks;state=open?sort=modified, a system might extract and use the path segment parameters id=42 and state=open from the path segments users;id=42 and tasks;state=open. AvailableInWorkers -The URL interface it belongs to. See also on MDN Port The port property of the URL interface is a string containing the port number of the URL. public string Port { get; set; } Property Value string A string. Remarks NOTE Note: If an input string passed to the URL() constructor doesn&apos;t contain an explicit port number (e.g., https://localhost) or contains a port number that&apos;s the default port number corresponding to the protocol part of the input string (e.g., https://localhost:443), then in the URL object the constructor returns, the value of the port property will be the empty string: &apos;&apos;. AvailableInWorkers -The URL interface it belongs to. See also on MDN Protocol The protocol property of the URL interface is a string representing the protocol scheme of the URL, including the final &apos;:&apos;. public string Protocol { get; set; } Property Value string A string. Remarks AvailableInWorkers -The URL interface it belongs to. See also on MDN Search The search property of the URL interface is a search string, also called a query string, that is a string containing a &apos;?&apos; followed by the parameters of the URL. public string Search { get; set; } Property Value string A string. Remarks Modern browsers provide the SearchParams property to make it easy to parse out the parameters from the query string. AvailableInWorkers -The URL interface it belongs to. See also on MDN SearchParams The URLSearchParams interface defines utility methods to work with the query string of a URL. public URLSearchParams SearchParams { get; } Property Value URLSearchParams Remarks An object implementing URLSearchParams can directly be used in a Statements/forOf structure to iterate over key/value pairs in the same order as they appear in the query string, for example the following two lines are equivalent: availableinworkers -Polyfill of URLSearchParams in core-js -The URL interface. -Google Developers: Easy URL manipulation with URLSearchParams See also on MDN Username The username property of the URL interface is a string containing the username specified before the domain name. public string Username { get; set; } Property Value string A string. Remarks AvailableInWorkers -The URL interface it belongs to. See also on MDN Methods CanParse(string, string) public static bool CanParse(string url, string base_) Parameters url string base_ string Returns bool CreateObjectURL(Union53) public static string CreateObjectURL(Union53 obj) Parameters obj Union53 Returns string RevokeObjectURL(string) public static GlobalObject.Undefined RevokeObjectURL(string url) Parameters url string Returns GlobalObject.Undefined ToJSON() The toJSON() method of the URL interface returns a string containing a serialized version of the URL, although in practice it seems to have the same effect as URL.ToString. public string ToJSON() Returns string A string. Remarks AvailableInWorkers -Polyfill of URL.prototype.toJSON in core-js See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.URLPattern.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.URLPattern.html",
    "title": "Class URLPattern | CSharpToJavaScript",
    "keywords": "Class URLPattern Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The URLPattern interface matches URLs or parts of URLs against a pattern. The pattern can contain capturing groups that extract parts of the matched URL. [To(\"FirstCharToLowerCase\")] public class URLPattern Inheritance object URLPattern Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks More information about the syntax of patterns can be found on the API overview page: URL Pattern API AvailableInWorkers -A polyfill of URLPattern is available on GitHub -The pattern syntax used by URLPattern is similar to the syntax used by path-to-regexp See also on MDN Constructors URLPattern() public URLPattern() URLPattern(Union65, URLPatternOptions) The URLPattern() constructor returns a new URLPattern object representing the url pattern defined by the parameters. public URLPattern(Union65 input, URLPatternOptions options) Parameters input Union65 options URLPatternOptions Remarks AvailableInWorkers -A polyfill of URLPattern is available on GitHub See also on MDN URLPattern(Union65, string, URLPatternOptions) The URLPattern() constructor returns a new URLPattern object representing the url pattern defined by the parameters. public URLPattern(Union65 input, string baseURL, URLPatternOptions options) Parameters input Union65 baseURL string options URLPatternOptions Remarks AvailableInWorkers -A polyfill of URLPattern is available on GitHub See also on MDN Properties Hash The hash property of the URLPattern interface is a string containing the pattern used to match the fragment part of a URL. This value may differ from the input to the constructor due to normalization. public string Hash { get; } Property Value string A string. Remarks AvailableInWorkers See also on MDN Hostname The hostname property of the URLPattern interface is a string containing the pattern used to match the hostname part of a URL. This value may differ from the input to the constructor due to normalization. public string Hostname { get; } Property Value string A string. Remarks AvailableInWorkers See also on MDN Password The password property of the URLPattern interface is a string containing the pattern used to match the password part of a URL. This value may differ from the input to the constructor due to normalization. public string Password { get; } Property Value string A string. Remarks AvailableInWorkers See also on MDN Pathname The pathname property of the URLPattern interface is a string containing the pattern used to match the pathname part of a URL. This value may differ from the input to the constructor due to normalization. public string Pathname { get; } Property Value string A string. Remarks AvailableInWorkers See also on MDN Port The port property of the URLPattern interface is a string containing the pattern used to match the port part of a URL. This value may differ from the input to the constructor due to normalization. public string Port { get; } Property Value string A string. Remarks AvailableInWorkers See also on MDN Protocol The protocol property of the URLPattern interface is a string containing the pattern used to match the protocol part of a URL. This value may differ from the input to the constructor due to normalization. public string Protocol { get; } Property Value string A string. Remarks AvailableInWorkers See also on MDN Search The search property of the URLPattern interface is a string containing the pattern used to match the search part of a URL. This value may differ from the input to the constructor due to normalization. public string Search { get; } Property Value string A string. Remarks AvailableInWorkers See also on MDN Username The username property of the URLPattern interface is a string containing the pattern used to match the username part of a URL. This value may differ from the input to the constructor due to normalization. public string Username { get; } Property Value string A string. Remarks AvailableInWorkers See also on MDN Methods Exec(Union65, string) The exec() method of the URLPattern interface takes a URL or object of URL parts, and returns either an object containing the results of matching the URL to the pattern, or null if the URL does not match the pattern. public URLPatternResult? Exec(Union65 input, string baseURL) Parameters input Union65 baseURL string Returns URLPatternResult An Object with an inputs key containing the array of arguments passed into the function, and keys for each of the URL parts containing the matched input, and matched groups for that part. Remarks AvailableInWorkers -A polyfill of URLPattern is available on GitHub See also on MDN Test(Union65, string) The test() method of the URLPattern interface takes a URL or object of URL parts, and returns a boolean indicating if the given input matches the current pattern. public bool Test(Union65 input, string baseURL) Parameters input Union65 baseURL string Returns bool A Boolean. Remarks AvailableInWorkers -A polyfill of URLPattern is available on GitHub See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.URLPatternComponentResult.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.URLPatternComponentResult.html",
    "title": "Class URLPatternComponentResult | CSharpToJavaScript",
    "keywords": "Class URLPatternComponentResult Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class URLPatternComponentResult Inheritance object URLPatternComponentResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Groups public Dictionary<string, string> Groups Field Value Dictionary<string, string> Input public string Input Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.URLPatternInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.URLPatternInit.html",
    "title": "Class URLPatternInit | CSharpToJavaScript",
    "keywords": "Class URLPatternInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class URLPatternInit Inheritance object URLPatternInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BaseURL public string BaseURL Field Value string Hash public string Hash Field Value string Hostname public string Hostname Field Value string Password public string Password Field Value string Pathname public string Pathname Field Value string Port public string Port Field Value string Protocol public string Protocol Field Value string Search public string Search Field Value string Username public string Username Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.URLPatternOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.URLPatternOptions.html",
    "title": "Class URLPatternOptions | CSharpToJavaScript",
    "keywords": "Class URLPatternOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class URLPatternOptions Inheritance object URLPatternOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IgnoreCase public bool IgnoreCase Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.URLPatternResult.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.URLPatternResult.html",
    "title": "Class URLPatternResult | CSharpToJavaScript",
    "keywords": "Class URLPatternResult Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class URLPatternResult Inheritance object URLPatternResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Hash public URLPatternComponentResult Hash Field Value URLPatternComponentResult Hostname public URLPatternComponentResult Hostname Field Value URLPatternComponentResult Inputs public List<Union65> Inputs Field Value List<Union65> Password public URLPatternComponentResult Password Field Value URLPatternComponentResult Pathname public URLPatternComponentResult Pathname Field Value URLPatternComponentResult Port public URLPatternComponentResult Port Field Value URLPatternComponentResult Protocol public URLPatternComponentResult Protocol Field Value URLPatternComponentResult Search public URLPatternComponentResult Search Field Value URLPatternComponentResult Username public URLPatternComponentResult Username Field Value URLPatternComponentResult"
  },
  "api/CSharpToJavaScript.APIs.JS.URLSearchParams.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.URLSearchParams.html",
    "title": "Class URLSearchParams | CSharpToJavaScript",
    "keywords": "Class URLSearchParams Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The URLSearchParams interface defines utility methods to work with the query string of a URL. [To(\"FirstCharToLowerCase\")] public class URLSearchParams Inheritance object URLSearchParams Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An object implementing URLSearchParams can directly be used in a Statements/forOf structure to iterate over key/value pairs in the same order as they appear in the query string, for example the following two lines are equivalent: availableinworkers -Polyfill of URLSearchParams in core-js -The URL interface. -Google Developers: Easy URL manipulation with URLSearchParams See also on MDN Constructors URLSearchParams() public URLSearchParams() URLSearchParams(Union64) The URLSearchParams() constructor creates and returns a new URLSearchParams object. public URLSearchParams(Union64 init) Parameters init Union64 Remarks availableinworkers See also on MDN Properties this[int] public string this[int i] { get; set; } Parameters i int Property Value string Size The read-only URLSearchParams.size property indicates the total number of search parameter entries. public ulong Size { get; } Property Value ulong A number indicating the total number of search parameter entries in the URLSearchParams object. Remarks -SearchParams -Polyfill of URLSearchParams in core-js See also on MDN Methods Append(string, string) The append() method of the URLSearchParams interface appends a specified key/value pair as a new search parameter. public GlobalObject.Undefined Append(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks As shown in the example below, if the same key is appended multiple times it will appear in the parameter string multiple times for each value. availableinworkers -URL -Google Developers: Easy URL manipulation with URLSearchParams See also on MDN Delete(string, string) The delete() method of the URLSearchParams interface deletes specified parameters and their associated value(s) from the list of all search parameters. public GlobalObject.Undefined Delete(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks A parameter name and optional value are used to match parameters. If only a parameter name is specified, then all search parameters that match the name are deleted, along with their associated values. If both a parameter name and value are specified, then all search parameters that match both the parameter name and value are deleted. AvailableInWorkers -Polyfill of URLSearchParams in core-js See also on MDN Get(string) The get() method of the URLSearchParams interface returns the first value associated to the given search parameter. public string? Get(string name) Parameters name string Returns string A string if the given search parameter is found; otherwise, null. Remarks availableinworkers See also on MDN GetAll(string) The getAll() method of the URLSearchParams interface returns all the values associated with a given search parameter as an array. public List<string> GetAll(string name) Parameters name string Returns List<string> An array of strings. Remarks availableinworkers See also on MDN Has(string, string) The has() method of the URLSearchParams interface returns a boolean value that indicates whether the specified parameter is in the search parameters. public bool Has(string name, string value) Parameters name string value string Returns bool A boolean value. Remarks A parameter name and optional value are used to match parameters. If only a parameter name is specified, then the method will return true if any parameters in the query string match the name, and false otherwise. If both a parameter name and value are specified, then the method will return true if a parameter matches both the name and value. AvailableInWorkers -Polyfill of URLSearchParams in core-js See also on MDN Set(string, string) The set() method of the URLSearchParams interface sets the value associated with a given search parameter to the given value. If there were several matching values, this method deletes the others. If the search parameter doesn&apos;t exist, this method creates it. public GlobalObject.Undefined Set(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks availableinworkers See also on MDN Sort() The URLSearchParams.sort() method sorts all key/value pairs contained in this object in place and returns undefined. The sort order is according to unicode code points of the keys. This method uses a stable sorting algorithm (i.e. the relative order between key/value pairs with equal keys will be preserved). public GlobalObject.Undefined Sort() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks availableinworkers See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.UncalibratedMagnetometer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UncalibratedMagnetometer.html",
    "title": "Class UncalibratedMagnetometer | CSharpToJavaScript",
    "keywords": "Class UncalibratedMagnetometer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class UncalibratedMagnetometer : Sensor Inheritance object EventTarget Sensor UncalibratedMagnetometer Inherited Members Sensor.Activated Sensor.HasReading Sensor.Timestamp Sensor.Start() Sensor.Stop() Sensor.Onreading Sensor.Onactivate Sensor.Onerror EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UncalibratedMagnetometer() public UncalibratedMagnetometer() UncalibratedMagnetometer(MagnetometerSensorOptions) public UncalibratedMagnetometer(MagnetometerSensorOptions sensorOptions) Parameters sensorOptions MagnetometerSensorOptions Properties X public Number? X { get; } Property Value Number XBias public Number? XBias { get; } Property Value Number Y public Number? Y { get; } Property Value Number YBias public Number? YBias { get; } Property Value Number Z public Number? Z { get; } Property Value Number ZBias public Number? ZBias { get; } Property Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.UncalibratedMagnetometerReadingValues.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UncalibratedMagnetometerReadingValues.html",
    "title": "Class UncalibratedMagnetometerReadingValues | CSharpToJavaScript",
    "keywords": "Class UncalibratedMagnetometerReadingValues Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class UncalibratedMagnetometerReadingValues Inheritance object UncalibratedMagnetometerReadingValues Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields X public required Number? X Field Value Number XBias public required Number? XBias Field Value Number Y public required Number? Y Field Value Number YBias public required Number? YBias Field Value Number Z public required Number? Z Field Value Number ZBias public required Number? ZBias Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.UnderlyingSink.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UnderlyingSink.html",
    "title": "Class UnderlyingSink | CSharpToJavaScript",
    "keywords": "Class UnderlyingSink Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class UnderlyingSink Inheritance object UnderlyingSink Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Abort public UnderlyingSinkAbortCallback Abort Field Value UnderlyingSinkAbortCallback Close public UnderlyingSinkCloseCallback Close Field Value UnderlyingSinkCloseCallback Start public UnderlyingSinkStartCallback Start Field Value UnderlyingSinkStartCallback Type public dynamic Type Field Value dynamic Write public UnderlyingSinkWriteCallback Write Field Value UnderlyingSinkWriteCallback"
  },
  "api/CSharpToJavaScript.APIs.JS.UnderlyingSinkAbortCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UnderlyingSinkAbortCallback.html",
    "title": "Struct UnderlyingSinkAbortCallback | CSharpToJavaScript",
    "keywords": "Struct UnderlyingSinkAbortCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct UnderlyingSinkAbortCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.UnderlyingSinkCloseCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UnderlyingSinkCloseCallback.html",
    "title": "Struct UnderlyingSinkCloseCallback | CSharpToJavaScript",
    "keywords": "Struct UnderlyingSinkCloseCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct UnderlyingSinkCloseCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.UnderlyingSinkStartCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UnderlyingSinkStartCallback.html",
    "title": "Struct UnderlyingSinkStartCallback | CSharpToJavaScript",
    "keywords": "Struct UnderlyingSinkStartCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct UnderlyingSinkStartCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.UnderlyingSinkWriteCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UnderlyingSinkWriteCallback.html",
    "title": "Struct UnderlyingSinkWriteCallback | CSharpToJavaScript",
    "keywords": "Struct UnderlyingSinkWriteCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct UnderlyingSinkWriteCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.UnderlyingSource.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UnderlyingSource.html",
    "title": "Class UnderlyingSource | CSharpToJavaScript",
    "keywords": "Class UnderlyingSource Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class UnderlyingSource Inheritance object UnderlyingSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AutoAllocateChunkSize public ulong AutoAllocateChunkSize Field Value ulong Cancel public UnderlyingSourceCancelCallback Cancel Field Value UnderlyingSourceCancelCallback Pull public UnderlyingSourcePullCallback Pull Field Value UnderlyingSourcePullCallback Start public UnderlyingSourceStartCallback Start Field Value UnderlyingSourceStartCallback Type public ReadableStreamType Type Field Value ReadableStreamType"
  },
  "api/CSharpToJavaScript.APIs.JS.UnderlyingSourceCancelCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UnderlyingSourceCancelCallback.html",
    "title": "Struct UnderlyingSourceCancelCallback | CSharpToJavaScript",
    "keywords": "Struct UnderlyingSourceCancelCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct UnderlyingSourceCancelCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.UnderlyingSourcePullCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UnderlyingSourcePullCallback.html",
    "title": "Struct UnderlyingSourcePullCallback | CSharpToJavaScript",
    "keywords": "Struct UnderlyingSourcePullCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct UnderlyingSourcePullCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.UnderlyingSourceStartCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UnderlyingSourceStartCallback.html",
    "title": "Struct UnderlyingSourceStartCallback | CSharpToJavaScript",
    "keywords": "Struct UnderlyingSourceStartCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct UnderlyingSourceStartCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.Union0.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union0.html",
    "title": "Struct Union0 | CSharpToJavaScript",
    "keywords": "Struct Union0 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLCollection or Element public struct Union0 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union0(Element) public static implicit operator Union0(Element value) Parameters value Element Returns Union0 implicit operator Union0(HTMLCollection) public static implicit operator Union0(HTMLCollection value) Parameters value HTMLCollection Returns Union0"
  },
  "api/CSharpToJavaScript.APIs.JS.Union1.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union1.html",
    "title": "Struct Union1 | CSharpToJavaScript",
    "keywords": "Struct Union1 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLCollection or Element public struct Union1 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union1(Element) public static implicit operator Union1(Element value) Parameters value Element Returns Union1 implicit operator Union1(HTMLCollection) public static implicit operator Union1(HTMLCollection value) Parameters value HTMLCollection Returns Union1"
  },
  "api/CSharpToJavaScript.APIs.JS.Union10.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union10.html",
    "title": "Struct Union10 | CSharpToJavaScript",
    "keywords": "Struct Union10 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll RadioNodeList or Element public struct Union10 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union10(Element) public static implicit operator Union10(Element value) Parameters value Element Returns Union10 implicit operator Union10(RadioNodeList) public static implicit operator Union10(RadioNodeList value) Parameters value RadioNodeList Returns Union10"
  },
  "api/CSharpToJavaScript.APIs.JS.Union100.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union100.html",
    "title": "Struct Union100 | CSharpToJavaScript",
    "keywords": "Struct Union100 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll ImageBitmap or ImageData or HTMLImageElement or HTMLVideoElement or VideoFrame or HTMLCanvasElement or OffscreenCanvas public struct Union100 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union100(HTMLCanvasElement) public static implicit operator Union100(HTMLCanvasElement value) Parameters value HTMLCanvasElement Returns Union100 implicit operator Union100(HTMLImageElement) public static implicit operator Union100(HTMLImageElement value) Parameters value HTMLImageElement Returns Union100 implicit operator Union100(HTMLVideoElement) public static implicit operator Union100(HTMLVideoElement value) Parameters value HTMLVideoElement Returns Union100 implicit operator Union100(ImageBitmap) public static implicit operator Union100(ImageBitmap value) Parameters value ImageBitmap Returns Union100 implicit operator Union100(ImageData) public static implicit operator Union100(ImageData value) Parameters value ImageData Returns Union100 implicit operator Union100(OffscreenCanvas) public static implicit operator Union100(OffscreenCanvas value) Parameters value OffscreenCanvas Returns Union100 implicit operator Union100(VideoFrame) public static implicit operator Union100(VideoFrame value) Parameters value VideoFrame Returns Union100"
  },
  "api/CSharpToJavaScript.APIs.JS.Union101.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union101.html",
    "title": "Struct Union101 | CSharpToJavaScript",
    "keywords": "Struct Union101 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLCanvasElement or OffscreenCanvas public struct Union101 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union101(HTMLCanvasElement) public static implicit operator Union101(HTMLCanvasElement value) Parameters value HTMLCanvasElement Returns Union101 implicit operator Union101(OffscreenCanvas) public static implicit operator Union101(OffscreenCanvas value) Parameters value OffscreenCanvas Returns Union101"
  },
  "api/CSharpToJavaScript.APIs.JS.Union102.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union102.html",
    "title": "Struct Union102 | CSharpToJavaScript",
    "keywords": "Struct Union102 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll List{Number} or GPUColorDict public struct Union102 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union102(GPUColorDict) public static implicit operator Union102(GPUColorDict value) Parameters value GPUColorDict Returns Union102 implicit operator Union102(List<Number>) public static implicit operator Union102(List<Number> value) Parameters value List<Number> Returns Union102"
  },
  "api/CSharpToJavaScript.APIs.JS.Union103.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union103.html",
    "title": "Struct Union103 | CSharpToJavaScript",
    "keywords": "Struct Union103 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll List{GPUIntegerCoordinate} or GPUOrigin2DDict public struct Union103 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union103(GPUOrigin2DDict) public static implicit operator Union103(GPUOrigin2DDict value) Parameters value GPUOrigin2DDict Returns Union103 implicit operator Union103(List<ulong>) public static implicit operator Union103(List<ulong> value) Parameters value List<ulong> Returns Union103"
  },
  "api/CSharpToJavaScript.APIs.JS.Union104.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union104.html",
    "title": "Struct Union104 | CSharpToJavaScript",
    "keywords": "Struct Union104 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll List{GPUIntegerCoordinate} or GPUOrigin3DDict public struct Union104 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union104(GPUOrigin3DDict) public static implicit operator Union104(GPUOrigin3DDict value) Parameters value GPUOrigin3DDict Returns Union104 implicit operator Union104(List<ulong>) public static implicit operator Union104(List<ulong> value) Parameters value List<ulong> Returns Union104"
  },
  "api/CSharpToJavaScript.APIs.JS.Union105.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union105.html",
    "title": "Struct Union105 | CSharpToJavaScript",
    "keywords": "Struct Union105 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll List{GPUIntegerCoordinate} or GPUExtent3DDict public struct Union105 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union105(GPUExtent3DDict) public static implicit operator Union105(GPUExtent3DDict value) Parameters value GPUExtent3DDict Returns Union105 implicit operator Union105(List<ulong>) public static implicit operator Union105(List<ulong> value) Parameters value List<ulong> Returns Union105"
  },
  "api/CSharpToJavaScript.APIs.JS.Union106.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union106.html",
    "title": "Struct Union106 | CSharpToJavaScript",
    "keywords": "Struct Union106 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll GPUBuffer or GPUTexture public struct Union106 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union106(GPUBuffer) public static implicit operator Union106(GPUBuffer value) Parameters value GPUBuffer Returns Union106 implicit operator Union106(GPUTexture) public static implicit operator Union106(GPUTexture value) Parameters value GPUTexture Returns Union106"
  },
  "api/CSharpToJavaScript.APIs.JS.Union107.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union107.html",
    "title": "Struct Union107 | CSharpToJavaScript",
    "keywords": "Struct Union107 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Union66 or MLBufferResourceView public struct Union107 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union107(MLBufferResourceView) public static implicit operator Union107(MLBufferResourceView value) Parameters value MLBufferResourceView Returns Union107 implicit operator Union107(Union66) public static implicit operator Union107(Union66 value) Parameters value Union66 Returns Union107"
  },
  "api/CSharpToJavaScript.APIs.JS.Union108.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union108.html",
    "title": "Struct Union108 | CSharpToJavaScript",
    "keywords": "Struct Union108 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll ulong or List{ulong} public struct Union108 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union108(List<ulong>) public static implicit operator Union108(List<ulong> value) Parameters value List<ulong> Returns Union108 implicit operator Union108(ulong) public static implicit operator Union108(ulong value) Parameters value ulong Returns Union108"
  },
  "api/CSharpToJavaScript.APIs.JS.Union109.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union109.html",
    "title": "Struct Union109 | CSharpToJavaScript",
    "keywords": "Struct Union109 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll SFrameTransform or RTCRtpScriptTransform public struct Union109 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union109(RTCRtpScriptTransform) public static implicit operator Union109(RTCRtpScriptTransform value) Parameters value RTCRtpScriptTransform Returns Union109 implicit operator Union109(SFrameTransform) public static implicit operator Union109(SFrameTransform value) Parameters value SFrameTransform Returns Union109"
  },
  "api/CSharpToJavaScript.APIs.JS.Union11.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union11.html",
    "title": "Struct Union11 | CSharpToJavaScript",
    "keywords": "Struct Union11 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLOptionElement or HTMLOptGroupElement public struct Union11 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union11(HTMLOptGroupElement) public static implicit operator Union11(HTMLOptGroupElement value) Parameters value HTMLOptGroupElement Returns Union11 implicit operator Union11(HTMLOptionElement) public static implicit operator Union11(HTMLOptionElement value) Parameters value HTMLOptionElement Returns Union11"
  },
  "api/CSharpToJavaScript.APIs.JS.Union110.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union110.html",
    "title": "Struct Union110 | CSharpToJavaScript",
    "keywords": "Struct Union110 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll ulong or double public struct Union110 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union110(double) public static implicit operator Union110(double value) Parameters value double Returns Union110 implicit operator Union110(ulong) public static implicit operator Union110(ulong value) Parameters value ulong Returns Union110"
  },
  "api/CSharpToJavaScript.APIs.JS.Union111.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union111.html",
    "title": "Struct Union111 | CSharpToJavaScript",
    "keywords": "Struct Union111 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Number or AutoKeyword public struct Union111 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union111(AutoKeyword) public static implicit operator Union111(AutoKeyword value) Parameters value AutoKeyword Returns Union111 implicit operator Union111(Number) public static implicit operator Union111(Number value) Parameters value Number Returns Union111"
  },
  "api/CSharpToJavaScript.APIs.JS.Union112.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union112.html",
    "title": "Struct Union112 | CSharpToJavaScript",
    "keywords": "Struct Union112 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Unsupported /WebGLRenderingContext/ or Unsupported /WebGL2RenderingContext/ public struct Union112 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union112(Unsupported) public static implicit operator Union112(Unsupported value) Parameters value Unsupported Returns Union112"
  },
  "api/CSharpToJavaScript.APIs.JS.Union12.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union12.html",
    "title": "Struct Union12 | CSharpToJavaScript",
    "keywords": "Struct Union12 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLElement or long public struct Union12 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union12(HTMLElement) public static implicit operator Union12(HTMLElement value) Parameters value HTMLElement Returns Union12 implicit operator Union12(long) public static implicit operator Union12(long value) Parameters value long Returns Union12"
  },
  "api/CSharpToJavaScript.APIs.JS.Union13.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union13.html",
    "title": "Struct Union13 | CSharpToJavaScript",
    "keywords": "Struct Union13 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Element or Text public struct Union13 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union13(Element) public static implicit operator Union13(Element value) Parameters value Element Returns Union13 implicit operator Union13(Text) public static implicit operator Union13(Text value) Parameters value Text Returns Union13"
  },
  "api/CSharpToJavaScript.APIs.JS.Union14.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union14.html",
    "title": "Struct Union14 | CSharpToJavaScript",
    "keywords": "Struct Union14 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll CanvasRenderingContext2D or ImageBitmapRenderingContext or Unsupported /WebGLRenderingContext/ or Unsupported /WebGL2RenderingContext/ or GPUCanvasContext public struct Union14 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union14(CanvasRenderingContext2D) public static implicit operator Union14(CanvasRenderingContext2D value) Parameters value CanvasRenderingContext2D Returns Union14 implicit operator Union14(GPUCanvasContext) public static implicit operator Union14(GPUCanvasContext value) Parameters value GPUCanvasContext Returns Union14 implicit operator Union14(ImageBitmapRenderingContext) public static implicit operator Union14(ImageBitmapRenderingContext value) Parameters value ImageBitmapRenderingContext Returns Union14 implicit operator Union14(Unsupported) public static implicit operator Union14(Unsupported value) Parameters value Unsupported Returns Union14"
  },
  "api/CSharpToJavaScript.APIs.JS.Union15.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union15.html",
    "title": "Struct Union15 | CSharpToJavaScript",
    "keywords": "Struct Union15 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLImageElement or Unsupported /SVGImageElement/ public struct Union15 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union15(HTMLImageElement) public static implicit operator Union15(HTMLImageElement value) Parameters value HTMLImageElement Returns Union15 implicit operator Union15(Unsupported) public static implicit operator Union15(Unsupported value) Parameters value Unsupported Returns Union15"
  },
  "api/CSharpToJavaScript.APIs.JS.Union16.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union16.html",
    "title": "Struct Union16 | CSharpToJavaScript",
    "keywords": "Struct Union16 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Union15 or HTMLVideoElement or HTMLCanvasElement or ImageBitmap or OffscreenCanvas or VideoFrame public struct Union16 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union16(HTMLCanvasElement) public static implicit operator Union16(HTMLCanvasElement value) Parameters value HTMLCanvasElement Returns Union16 implicit operator Union16(HTMLVideoElement) public static implicit operator Union16(HTMLVideoElement value) Parameters value HTMLVideoElement Returns Union16 implicit operator Union16(ImageBitmap) public static implicit operator Union16(ImageBitmap value) Parameters value ImageBitmap Returns Union16 implicit operator Union16(OffscreenCanvas) public static implicit operator Union16(OffscreenCanvas value) Parameters value OffscreenCanvas Returns Union16 implicit operator Union16(Union15) public static implicit operator Union16(Union15 value) Parameters value Union15 Returns Union16 implicit operator Union16(VideoFrame) public static implicit operator Union16(VideoFrame value) Parameters value VideoFrame Returns Union16"
  },
  "api/CSharpToJavaScript.APIs.JS.Union17.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union17.html",
    "title": "Struct Union17 | CSharpToJavaScript",
    "keywords": "Struct Union17 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or CanvasGradient or CanvasPattern public struct Union17 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union17(CanvasGradient) public static implicit operator Union17(CanvasGradient value) Parameters value CanvasGradient Returns Union17 implicit operator Union17(CanvasPattern) public static implicit operator Union17(CanvasPattern value) Parameters value CanvasPattern Returns Union17 implicit operator Union17(string) public static implicit operator Union17(string value) Parameters value string Returns Union17"
  },
  "api/CSharpToJavaScript.APIs.JS.Union18.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union18.html",
    "title": "Struct Union18 | CSharpToJavaScript",
    "keywords": "Struct Union18 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or CanvasGradient or CanvasPattern public struct Union18 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union18(CanvasGradient) public static implicit operator Union18(CanvasGradient value) Parameters value CanvasGradient Returns Union18 implicit operator Union18(CanvasPattern) public static implicit operator Union18(CanvasPattern value) Parameters value CanvasPattern Returns Union18 implicit operator Union18(string) public static implicit operator Union18(string value) Parameters value string Returns Union18"
  },
  "api/CSharpToJavaScript.APIs.JS.Union19.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union19.html",
    "title": "Struct Union19 | CSharpToJavaScript",
    "keywords": "Struct Union19 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll double or DOMPointInit or List{Union20} public struct Union19 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union19(DOMPointInit) public static implicit operator Union19(DOMPointInit value) Parameters value DOMPointInit Returns Union19 implicit operator Union19(List<Union20>) public static implicit operator Union19(List<Union20> value) Parameters value List<Union20> Returns Union19 implicit operator Union19(double) public static implicit operator Union19(double value) Parameters value double Returns Union19"
  },
  "api/CSharpToJavaScript.APIs.JS.Union2.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union2.html",
    "title": "Struct Union2 | CSharpToJavaScript",
    "keywords": "Struct Union2 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll RadioNodeList or Element public struct Union2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union2(Element) public static implicit operator Union2(Element value) Parameters value Element Returns Union2 implicit operator Union2(RadioNodeList) public static implicit operator Union2(RadioNodeList value) Parameters value RadioNodeList Returns Union2"
  },
  "api/CSharpToJavaScript.APIs.JS.Union20.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union20.html",
    "title": "Struct Union20 | CSharpToJavaScript",
    "keywords": "Struct Union20 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll double or DOMPointInit public struct Union20 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union20(DOMPointInit) public static implicit operator Union20(DOMPointInit value) Parameters value DOMPointInit Returns Union20 implicit operator Union20(double) public static implicit operator Union20(double value) Parameters value double Returns Union20"
  },
  "api/CSharpToJavaScript.APIs.JS.Union21.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union21.html",
    "title": "Struct Union21 | CSharpToJavaScript",
    "keywords": "Struct Union21 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Path2D or string public struct Union21 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union21(Path2D) public static implicit operator Union21(Path2D value) Parameters value Path2D Returns Union21 implicit operator Union21(string) public static implicit operator Union21(string value) Parameters value string Returns Union21"
  },
  "api/CSharpToJavaScript.APIs.JS.Union22.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union22.html",
    "title": "Struct Union22 | CSharpToJavaScript",
    "keywords": "Struct Union22 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLCanvasElement or OffscreenCanvas public struct Union22 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union22(HTMLCanvasElement) public static implicit operator Union22(HTMLCanvasElement value) Parameters value HTMLCanvasElement Returns Union22 implicit operator Union22(OffscreenCanvas) public static implicit operator Union22(OffscreenCanvas value) Parameters value OffscreenCanvas Returns Union22"
  },
  "api/CSharpToJavaScript.APIs.JS.Union23.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union23.html",
    "title": "Struct Union23 | CSharpToJavaScript",
    "keywords": "Struct Union23 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll OffscreenCanvasRenderingContext2D or ImageBitmapRenderingContext or Unsupported /WebGLRenderingContext/ or Unsupported /WebGL2RenderingContext/ or GPUCanvasContext public struct Union23 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union23(GPUCanvasContext) public static implicit operator Union23(GPUCanvasContext value) Parameters value GPUCanvasContext Returns Union23 implicit operator Union23(ImageBitmapRenderingContext) public static implicit operator Union23(ImageBitmapRenderingContext value) Parameters value ImageBitmapRenderingContext Returns Union23 implicit operator Union23(OffscreenCanvasRenderingContext2D) public static implicit operator Union23(OffscreenCanvasRenderingContext2D value) Parameters value OffscreenCanvasRenderingContext2D Returns Union23 implicit operator Union23(Unsupported) public static implicit operator Union23(Unsupported value) Parameters value Unsupported Returns Union23"
  },
  "api/CSharpToJavaScript.APIs.JS.Union24.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union24.html",
    "title": "Struct Union24 | CSharpToJavaScript",
    "keywords": "Struct Union24 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll CustomElementConstructor or GlobalObject.Undefined public struct Union24 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union24(CustomElementConstructor) public static implicit operator Union24(CustomElementConstructor value) Parameters value CustomElementConstructor Returns Union24 implicit operator Union24(Undefined) public static implicit operator Union24(GlobalObject.Undefined value) Parameters value GlobalObject.Undefined Returns Union24"
  },
  "api/CSharpToJavaScript.APIs.JS.Union25.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union25.html",
    "title": "Struct Union25 | CSharpToJavaScript",
    "keywords": "Struct Union25 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll File or string or FormData public struct Union25 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union25(File) public static implicit operator Union25(File value) Parameters value File Returns Union25 implicit operator Union25(FormData) public static implicit operator Union25(FormData value) Parameters value FormData Returns Union25 implicit operator Union25(string) public static implicit operator Union25(string value) Parameters value string Returns Union25"
  },
  "api/CSharpToJavaScript.APIs.JS.Union26.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union26.html",
    "title": "Struct Union26 | CSharpToJavaScript",
    "keywords": "Struct Union26 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll File or string or FormData public struct Union26 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union26(File) public static implicit operator Union26(File value) Parameters value File Returns Union26 implicit operator Union26(FormData) public static implicit operator Union26(FormData value) Parameters value FormData Returns Union26 implicit operator Union26(string) public static implicit operator Union26(string value) Parameters value string Returns Union26"
  },
  "api/CSharpToJavaScript.APIs.JS.Union27.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union27.html",
    "title": "Struct Union27 | CSharpToJavaScript",
    "keywords": "Struct Union27 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Event or string public struct Union27 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union27(Event) public static implicit operator Union27(Event value) Parameters value Event Returns Union27 implicit operator Union27(string) public static implicit operator Union27(string value) Parameters value string Returns Union27"
  },
  "api/CSharpToJavaScript.APIs.JS.Union28.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union28.html",
    "title": "Struct Union28 | CSharpToJavaScript",
    "keywords": "Struct Union28 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or Function public struct Union28 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union28(Function) public static implicit operator Union28(Function value) Parameters value Function Returns Union28 implicit operator Union28(string) public static implicit operator Union28(string value) Parameters value string Returns Union28"
  },
  "api/CSharpToJavaScript.APIs.JS.Union29.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union29.html",
    "title": "Struct Union29 | CSharpToJavaScript",
    "keywords": "Struct Union29 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Union16 or Blob or ImageData public struct Union29 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union29(Blob) public static implicit operator Union29(Blob value) Parameters value Blob Returns Union29 implicit operator Union29(ImageData) public static implicit operator Union29(ImageData value) Parameters value ImageData Returns Union29 implicit operator Union29(Union16) public static implicit operator Union29(Union16 value) Parameters value Union16 Returns Union29"
  },
  "api/CSharpToJavaScript.APIs.JS.Union3.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union3.html",
    "title": "Struct Union3 | CSharpToJavaScript",
    "keywords": "Struct Union3 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLOptionElement or HTMLOptGroupElement public struct Union3 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union3(HTMLOptGroupElement) public static implicit operator Union3(HTMLOptGroupElement value) Parameters value HTMLOptGroupElement Returns Union3 implicit operator Union3(HTMLOptionElement) public static implicit operator Union3(HTMLOptionElement value) Parameters value HTMLOptionElement Returns Union3"
  },
  "api/CSharpToJavaScript.APIs.JS.Union30.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union30.html",
    "title": "Struct Union30 | CSharpToJavaScript",
    "keywords": "Struct Union30 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Window or MessagePort or ServiceWorker public struct Union30 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union30(MessagePort) public static implicit operator Union30(MessagePort value) Parameters value MessagePort Returns Union30 implicit operator Union30(ServiceWorker) public static implicit operator Union30(ServiceWorker value) Parameters value ServiceWorker Returns Union30 implicit operator Union30(Window) public static implicit operator Union30(Window value) Parameters value Window Returns Union30"
  },
  "api/CSharpToJavaScript.APIs.JS.Union31.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union31.html",
    "title": "Struct Union31 | CSharpToJavaScript",
    "keywords": "Struct Union31 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or WorkerOptions public struct Union31 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union31(WorkerOptions) public static implicit operator Union31(WorkerOptions value) Parameters value WorkerOptions Returns Union31 implicit operator Union31(string) public static implicit operator Union31(string value) Parameters value string Returns Union31"
  },
  "api/CSharpToJavaScript.APIs.JS.Union32.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union32.html",
    "title": "Struct Union32 | CSharpToJavaScript",
    "keywords": "Struct Union32 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll PasswordCredentialData or HTMLFormElement public struct Union32 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union32(HTMLFormElement) public static implicit operator Union32(HTMLFormElement value) Parameters value HTMLFormElement Returns Union32 implicit operator Union32(PasswordCredentialData) public static implicit operator Union32(PasswordCredentialData value) Parameters value PasswordCredentialData Returns Union32"
  },
  "api/CSharpToJavaScript.APIs.JS.Union33.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union33.html",
    "title": "Struct Union33 | CSharpToJavaScript",
    "keywords": "Struct Union33 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll AnimationEffect or List{AnimationEffect} public struct Union33 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union33(AnimationEffect) public static implicit operator Union33(AnimationEffect value) Parameters value AnimationEffect Returns Union33 implicit operator Union33(List<AnimationEffect>) public static implicit operator Union33(List<AnimationEffect> value) Parameters value List<AnimationEffect> Returns Union33"
  },
  "api/CSharpToJavaScript.APIs.JS.Union34.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union34.html",
    "title": "Struct Union34 | CSharpToJavaScript",
    "keywords": "Struct Union34 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll byte[] or Union66 public struct Union34 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union34(Union66) public static implicit operator Union34(Union66 value) Parameters value Union66 Returns Union34 implicit operator Union34(byte[]) public static implicit operator Union34(byte[] value) Parameters value byte[] Returns Union34"
  },
  "api/CSharpToJavaScript.APIs.JS.Union35.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union35.html",
    "title": "Struct Union35 | CSharpToJavaScript",
    "keywords": "Struct Union35 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Unsupported /CSSOMString/ or Union34 public struct Union35 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union35(Union34) public static implicit operator Union35(Union34 value) Parameters value Union34 Returns Union35 implicit operator Union35(Unsupported) public static implicit operator Union35(Unsupported value) Parameters value Unsupported Returns Union35"
  },
  "api/CSharpToJavaScript.APIs.JS.Union36.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union36.html",
    "title": "Struct Union36 | CSharpToJavaScript",
    "keywords": "Struct Union36 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IntrinsicSizesRequest or LayoutFragmentRequest public struct Union36 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union36(IntrinsicSizesRequest) public static implicit operator Union36(IntrinsicSizesRequest value) Parameters value IntrinsicSizesRequest Returns Union36 implicit operator Union36(LayoutFragmentRequest) public static implicit operator Union36(LayoutFragmentRequest value) Parameters value LayoutFragmentRequest Returns Union36"
  },
  "api/CSharpToJavaScript.APIs.JS.Union37.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union37.html",
    "title": "Struct Union37 | CSharpToJavaScript",
    "keywords": "Struct Union37 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Element or ProcessingInstruction public struct Union37 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union37(Element) public static implicit operator Union37(Element value) Parameters value Element Returns Union37 implicit operator Union37(ProcessingInstruction) public static implicit operator Union37(ProcessingInstruction value) Parameters value ProcessingInstruction Returns Union37"
  },
  "api/CSharpToJavaScript.APIs.JS.Union38.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union38.html",
    "title": "Struct Union38 | CSharpToJavaScript",
    "keywords": "Struct Union38 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll MediaList or string public struct Union38 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union38(MediaList) public static implicit operator Union38(MediaList value) Parameters value MediaList Returns Union38 implicit operator Union38(string) public static implicit operator Union38(string value) Parameters value string Returns Union38"
  },
  "api/CSharpToJavaScript.APIs.JS.Union39.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union39.html",
    "title": "Struct Union39 | CSharpToJavaScript",
    "keywords": "Struct Union39 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Element or CSSPseudoElement public struct Union39 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union39(CSSPseudoElement) public static implicit operator Union39(CSSPseudoElement value) Parameters value CSSPseudoElement Returns Union39 implicit operator Union39(Element) public static implicit operator Union39(Element value) Parameters value Element Returns Union39"
  },
  "api/CSharpToJavaScript.APIs.JS.Union4.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union4.html",
    "title": "Struct Union4 | CSharpToJavaScript",
    "keywords": "Struct Union4 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLElement or long public struct Union4 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union4(HTMLElement) public static implicit operator Union4(HTMLElement value) Parameters value HTMLElement Returns Union4 implicit operator Union4(long) public static implicit operator Union4(long value) Parameters value long Returns Union4"
  },
  "api/CSharpToJavaScript.APIs.JS.Union40.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union40.html",
    "title": "Struct Union40 | CSharpToJavaScript",
    "keywords": "Struct Union40 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Event or GlobalObject.Undefined public struct Union40 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union40(Event) public static implicit operator Union40(Event value) Parameters value Event Returns Union40 implicit operator Union40(Undefined) public static implicit operator Union40(GlobalObject.Undefined value) Parameters value GlobalObject.Undefined Returns Union40"
  },
  "api/CSharpToJavaScript.APIs.JS.Union41.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union41.html",
    "title": "Struct Union41 | CSharpToJavaScript",
    "keywords": "Struct Union41 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll AddEventListenerOptions or bool public struct Union41 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union41(AddEventListenerOptions) public static implicit operator Union41(AddEventListenerOptions value) Parameters value AddEventListenerOptions Returns Union41 implicit operator Union41(bool) public static implicit operator Union41(bool value) Parameters value bool Returns Union41"
  },
  "api/CSharpToJavaScript.APIs.JS.Union42.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union42.html",
    "title": "Struct Union42 | CSharpToJavaScript",
    "keywords": "Struct Union42 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll EventListenerOptions or bool public struct Union42 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union42(EventListenerOptions) public static implicit operator Union42(EventListenerOptions value) Parameters value EventListenerOptions Returns Union42 implicit operator Union42(bool) public static implicit operator Union42(bool value) Parameters value bool Returns Union42"
  },
  "api/CSharpToJavaScript.APIs.JS.Union43.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union43.html",
    "title": "Struct Union43 | CSharpToJavaScript",
    "keywords": "Struct Union43 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Node or string public struct Union43 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union43(Node) public static implicit operator Union43(Node value) Parameters value Node Returns Union43 implicit operator Union43(string) public static implicit operator Union43(string value) Parameters value string Returns Union43"
  },
  "api/CSharpToJavaScript.APIs.JS.Union44.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union44.html",
    "title": "Struct Union44 | CSharpToJavaScript",
    "keywords": "Struct Union44 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Node or string public struct Union44 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union44(Node) public static implicit operator Union44(Node value) Parameters value Node Returns Union44 implicit operator Union44(string) public static implicit operator Union44(string value) Parameters value string Returns Union44"
  },
  "api/CSharpToJavaScript.APIs.JS.Union45.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union45.html",
    "title": "Struct Union45 | CSharpToJavaScript",
    "keywords": "Struct Union45 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Node or string public struct Union45 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union45(Node) public static implicit operator Union45(Node value) Parameters value Node Returns Union45 implicit operator Union45(string) public static implicit operator Union45(string value) Parameters value string Returns Union45"
  },
  "api/CSharpToJavaScript.APIs.JS.Union46.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union46.html",
    "title": "Struct Union46 | CSharpToJavaScript",
    "keywords": "Struct Union46 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Node or string public struct Union46 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union46(Node) public static implicit operator Union46(Node value) Parameters value Node Returns Union46 implicit operator Union46(string) public static implicit operator Union46(string value) Parameters value string Returns Union46"
  },
  "api/CSharpToJavaScript.APIs.JS.Union47.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union47.html",
    "title": "Struct Union47 | CSharpToJavaScript",
    "keywords": "Struct Union47 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Node or string public struct Union47 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union47(Node) public static implicit operator Union47(Node value) Parameters value Node Returns Union47 implicit operator Union47(string) public static implicit operator Union47(string value) Parameters value string Returns Union47"
  },
  "api/CSharpToJavaScript.APIs.JS.Union48.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union48.html",
    "title": "Struct Union48 | CSharpToJavaScript",
    "keywords": "Struct Union48 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Node or string public struct Union48 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union48(Node) public static implicit operator Union48(Node value) Parameters value Node Returns Union48 implicit operator Union48(string) public static implicit operator Union48(string value) Parameters value string Returns Union48"
  },
  "api/CSharpToJavaScript.APIs.JS.Union49.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union49.html",
    "title": "Struct Union49 | CSharpToJavaScript",
    "keywords": "Struct Union49 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or ElementCreationOptions public struct Union49 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union49(ElementCreationOptions) public static implicit operator Union49(ElementCreationOptions value) Parameters value ElementCreationOptions Returns Union49 implicit operator Union49(string) public static implicit operator Union49(string value) Parameters value string Returns Union49"
  },
  "api/CSharpToJavaScript.APIs.JS.Union5.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union5.html",
    "title": "Struct Union5 | CSharpToJavaScript",
    "keywords": "Struct Union5 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLScriptElement or Unsupported /SVGScriptElement/ public struct Union5 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union5(HTMLScriptElement) public static implicit operator Union5(HTMLScriptElement value) Parameters value HTMLScriptElement Returns Union5 implicit operator Union5(Unsupported) public static implicit operator Union5(Unsupported value) Parameters value Unsupported Returns Union5"
  },
  "api/CSharpToJavaScript.APIs.JS.Union50.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union50.html",
    "title": "Struct Union50 | CSharpToJavaScript",
    "keywords": "Struct Union50 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or ElementCreationOptions public struct Union50 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union50(ElementCreationOptions) public static implicit operator Union50(ElementCreationOptions value) Parameters value ElementCreationOptions Returns Union50 implicit operator Union50(string) public static implicit operator Union50(string value) Parameters value string Returns Union50"
  },
  "api/CSharpToJavaScript.APIs.JS.Union51.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union51.html",
    "title": "Struct Union51 | CSharpToJavaScript",
    "keywords": "Struct Union51 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Union67 or Blob or string public struct Union51 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union51(Blob) public static implicit operator Union51(Blob value) Parameters value Blob Returns Union51 implicit operator Union51(Union67) public static implicit operator Union51(Union67 value) Parameters value Union67 Returns Union51 implicit operator Union51(string) public static implicit operator Union51(string value) Parameters value string Returns Union51"
  },
  "api/CSharpToJavaScript.APIs.JS.Union52.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union52.html",
    "title": "Struct Union52 | CSharpToJavaScript",
    "keywords": "Struct Union52 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or byte[] public struct Union52 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union52(byte[]) public static implicit operator Union52(byte[] value) Parameters value byte[] Returns Union52 implicit operator Union52(string) public static implicit operator Union52(string value) Parameters value string Returns Union52"
  },
  "api/CSharpToJavaScript.APIs.JS.Union53.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union53.html",
    "title": "Struct Union53 | CSharpToJavaScript",
    "keywords": "Struct Union53 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Blob or Unsupported /MediaSource/ public struct Union53 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union53(Blob) public static implicit operator Union53(Blob value) Parameters value Blob Returns Union53 implicit operator Union53(Unsupported) public static implicit operator Union53(Unsupported value) Parameters value Unsupported Returns Union53"
  },
  "api/CSharpToJavaScript.APIs.JS.Union54.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union54.html",
    "title": "Struct Union54 | CSharpToJavaScript",
    "keywords": "Struct Union54 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or List{double} public struct Union54 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union54(List<double>) public static implicit operator Union54(List<double> value) Parameters value List<double> Returns Union54 implicit operator Union54(string) public static implicit operator Union54(string value) Parameters value string Returns Union54"
  },
  "api/CSharpToJavaScript.APIs.JS.Union55.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union55.html",
    "title": "Struct Union55 | CSharpToJavaScript",
    "keywords": "Struct Union55 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or List{double} public struct Union55 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union55(List<double>) public static implicit operator Union55(List<double> value) Parameters value List<double> Returns Union55 implicit operator Union55(string) public static implicit operator Union55(string value) Parameters value string Returns Union55"
  },
  "api/CSharpToJavaScript.APIs.JS.Union56.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union56.html",
    "title": "Struct Union56 | CSharpToJavaScript",
    "keywords": "Struct Union56 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll List{List{string}} or Dictionary{string, string} public struct Union56 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union56(Dictionary<string, string>) public static implicit operator Union56(Dictionary<string, string> value) Parameters value Dictionary<string, string> Returns Union56 implicit operator Union56(List<List<string>>) public static implicit operator Union56(List<List<string>> value) Parameters value List<List<string>> Returns Union56"
  },
  "api/CSharpToJavaScript.APIs.JS.Union57.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union57.html",
    "title": "Struct Union57 | CSharpToJavaScript",
    "keywords": "Struct Union57 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Blob or Union67 or FormData or URLSearchParams or string public struct Union57 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union57(Blob) public static implicit operator Union57(Blob value) Parameters value Blob Returns Union57 implicit operator Union57(FormData) public static implicit operator Union57(FormData value) Parameters value FormData Returns Union57 implicit operator Union57(URLSearchParams) public static implicit operator Union57(URLSearchParams value) Parameters value URLSearchParams Returns Union57 implicit operator Union57(Union67) public static implicit operator Union57(Union67 value) Parameters value Union67 Returns Union57 implicit operator Union57(string) public static implicit operator Union57(string value) Parameters value string Returns Union57"
  },
  "api/CSharpToJavaScript.APIs.JS.Union58.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union58.html",
    "title": "Struct Union58 | CSharpToJavaScript",
    "keywords": "Struct Union58 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll ReadableStream or Union57 public struct Union58 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union58(ReadableStream) public static implicit operator Union58(ReadableStream value) Parameters value ReadableStream Returns Union58 implicit operator Union58(Union57) public static implicit operator Union58(Union57 value) Parameters value Union57 Returns Union58"
  },
  "api/CSharpToJavaScript.APIs.JS.Union59.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union59.html",
    "title": "Struct Union59 | CSharpToJavaScript",
    "keywords": "Struct Union59 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Request or string public struct Union59 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union59(Request) public static implicit operator Union59(Request value) Parameters value Request Returns Union59 implicit operator Union59(string) public static implicit operator Union59(string value) Parameters value string Returns Union59"
  },
  "api/CSharpToJavaScript.APIs.JS.Union6.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union6.html",
    "title": "Struct Union6 | CSharpToJavaScript",
    "keywords": "Struct Union6 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll bool or double or string public struct Union6 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union6(bool) public static implicit operator Union6(bool value) Parameters value bool Returns Union6 implicit operator Union6(double) public static implicit operator Union6(double value) Parameters value double Returns Union6 implicit operator Union6(string) public static implicit operator Union6(string value) Parameters value string Returns Union6"
  },
  "api/CSharpToJavaScript.APIs.JS.Union60.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union60.html",
    "title": "Struct Union60 | CSharpToJavaScript",
    "keywords": "Struct Union60 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Union67 or Blob or string public struct Union60 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union60(Blob) public static implicit operator Union60(Blob value) Parameters value Blob Returns Union60 implicit operator Union60(Union67) public static implicit operator Union60(Union67 value) Parameters value Union67 Returns Union60 implicit operator Union60(string) public static implicit operator Union60(string value) Parameters value string Returns Union60"
  },
  "api/CSharpToJavaScript.APIs.JS.Union61.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union61.html",
    "title": "Struct Union61 | CSharpToJavaScript",
    "keywords": "Struct Union61 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Union67 or Blob or string or WriteParams public struct Union61 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union61(Blob) public static implicit operator Union61(Blob value) Parameters value Blob Returns Union61 implicit operator Union61(Union67) public static implicit operator Union61(Union67 value) Parameters value Union67 Returns Union61 implicit operator Union61(WriteParams) public static implicit operator Union61(WriteParams value) Parameters value WriteParams Returns Union61 implicit operator Union61(string) public static implicit operator Union61(string value) Parameters value string Returns Union61"
  },
  "api/CSharpToJavaScript.APIs.JS.Union62.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union62.html",
    "title": "Struct Union62 | CSharpToJavaScript",
    "keywords": "Struct Union62 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll ReadableStreamDefaultReader or ReadableStreamBYOBReader public struct Union62 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union62(ReadableStreamBYOBReader) public static implicit operator Union62(ReadableStreamBYOBReader value) Parameters value ReadableStreamBYOBReader Returns Union62 implicit operator Union62(ReadableStreamDefaultReader) public static implicit operator Union62(ReadableStreamDefaultReader value) Parameters value ReadableStreamDefaultReader Returns Union62"
  },
  "api/CSharpToJavaScript.APIs.JS.Union63.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union63.html",
    "title": "Struct Union63 | CSharpToJavaScript",
    "keywords": "Struct Union63 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll ReadableStreamDefaultController or ReadableByteStreamController public struct Union63 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union63(ReadableByteStreamController) public static implicit operator Union63(ReadableByteStreamController value) Parameters value ReadableByteStreamController Returns Union63 implicit operator Union63(ReadableStreamDefaultController) public static implicit operator Union63(ReadableStreamDefaultController value) Parameters value ReadableStreamDefaultController Returns Union63"
  },
  "api/CSharpToJavaScript.APIs.JS.Union64.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union64.html",
    "title": "Struct Union64 | CSharpToJavaScript",
    "keywords": "Struct Union64 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll List{List{string}} or Dictionary{string, string} or string public struct Union64 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union64(Dictionary<string, string>) public static implicit operator Union64(Dictionary<string, string> value) Parameters value Dictionary<string, string> Returns Union64 implicit operator Union64(List<List<string>>) public static implicit operator Union64(List<List<string>> value) Parameters value List<List<string>> Returns Union64 implicit operator Union64(string) public static implicit operator Union64(string value) Parameters value string Returns Union64"
  },
  "api/CSharpToJavaScript.APIs.JS.Union65.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union65.html",
    "title": "Struct Union65 | CSharpToJavaScript",
    "keywords": "Struct Union65 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or URLPatternInit public struct Union65 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union65(URLPatternInit) public static implicit operator Union65(URLPatternInit value) Parameters value URLPatternInit Returns Union65 implicit operator Union65(string) public static implicit operator Union65(string value) Parameters value string Returns Union65"
  },
  "api/CSharpToJavaScript.APIs.JS.Union66.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union66.html",
    "title": "Struct Union66 | CSharpToJavaScript",
    "keywords": "Struct Union66 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll sbyte or short or int or byte or ushort or uint or Unsupported /Uint8ClampedArray/ or long or ulong or float or double or Unsupported /DataView/ public struct Union66 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union66(Unsupported) public static implicit operator Union66(Unsupported value) Parameters value Unsupported Returns Union66 implicit operator Union66(byte) public static implicit operator Union66(byte value) Parameters value byte Returns Union66 implicit operator Union66(double) public static implicit operator Union66(double value) Parameters value double Returns Union66 implicit operator Union66(short) public static implicit operator Union66(short value) Parameters value short Returns Union66 implicit operator Union66(int) public static implicit operator Union66(int value) Parameters value int Returns Union66 implicit operator Union66(long) public static implicit operator Union66(long value) Parameters value long Returns Union66 implicit operator Union66(sbyte) public static implicit operator Union66(sbyte value) Parameters value sbyte Returns Union66 implicit operator Union66(float) public static implicit operator Union66(float value) Parameters value float Returns Union66 implicit operator Union66(ushort) public static implicit operator Union66(ushort value) Parameters value ushort Returns Union66 implicit operator Union66(uint) public static implicit operator Union66(uint value) Parameters value uint Returns Union66 implicit operator Union66(ulong) public static implicit operator Union66(ulong value) Parameters value ulong Returns Union66"
  },
  "api/CSharpToJavaScript.APIs.JS.Union67.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union67.html",
    "title": "Struct Union67 | CSharpToJavaScript",
    "keywords": "Struct Union67 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Union66 or byte[] public struct Union67 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union67(Union66) public static implicit operator Union67(Union66 value) Parameters value Union66 Returns Union67 implicit operator Union67(byte[]) public static implicit operator Union67(byte[] value) Parameters value byte[] Returns Union67"
  },
  "api/CSharpToJavaScript.APIs.JS.Union68.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union68.html",
    "title": "Struct Union68 | CSharpToJavaScript",
    "keywords": "Struct Union68 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll byte[] or Unsupported /SharedArrayBuffer/ or Union66 public struct Union68 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union68(Union66) public static implicit operator Union68(Union66 value) Parameters value Union66 Returns Union68 implicit operator Union68(Unsupported) public static implicit operator Union68(Unsupported value) Parameters value Unsupported Returns Union68 implicit operator Union68(byte[]) public static implicit operator Union68(byte[] value) Parameters value byte[] Returns Union68"
  },
  "api/CSharpToJavaScript.APIs.JS.Union69.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union69.html",
    "title": "Struct Union69 | CSharpToJavaScript",
    "keywords": "Struct Union69 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or List{string} public struct Union69 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union69(List<string>) public static implicit operator Union69(List<string> value) Parameters value List<string> Returns Union69 implicit operator Union69(string) public static implicit operator Union69(string value) Parameters value string Returns Union69"
  },
  "api/CSharpToJavaScript.APIs.JS.Union7.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union7.html",
    "title": "Struct Union7 | CSharpToJavaScript",
    "keywords": "Struct Union7 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Unsupported /MediaStream/ or Unsupported /MediaSource/ or Blob public struct Union7 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union7(Blob) public static implicit operator Union7(Blob value) Parameters value Blob Returns Union7 implicit operator Union7(Unsupported) public static implicit operator Union7(Unsupported value) Parameters value Unsupported Returns Union7"
  },
  "api/CSharpToJavaScript.APIs.JS.Union70.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union70.html",
    "title": "Struct Union70 | CSharpToJavaScript",
    "keywords": "Struct Union70 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Union67 or Blob or string public struct Union70 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union70(Blob) public static implicit operator Union70(Blob value) Parameters value Blob Returns Union70 implicit operator Union70(Union67) public static implicit operator Union70(Union67 value) Parameters value Union67 Returns Union70 implicit operator Union70(string) public static implicit operator Union70(string value) Parameters value string Returns Union70"
  },
  "api/CSharpToJavaScript.APIs.JS.Union71.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union71.html",
    "title": "Struct Union71 | CSharpToJavaScript",
    "keywords": "Struct Union71 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Document or Union57 public struct Union71 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union71(Document) public static implicit operator Union71(Document value) Parameters value Document Returns Union71 implicit operator Union71(Union57) public static implicit operator Union71(Union57 value) Parameters value Union57 Returns Union71"
  },
  "api/CSharpToJavaScript.APIs.JS.Union72.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union72.html",
    "title": "Struct Union72 | CSharpToJavaScript",
    "keywords": "Struct Union72 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll File or string public struct Union72 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union72(File) public static implicit operator Union72(File value) Parameters value File Returns Union72 implicit operator Union72(string) public static implicit operator Union72(string value) Parameters value string Returns Union72"
  },
  "api/CSharpToJavaScript.APIs.JS.Union73.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union73.html",
    "title": "Struct Union73 | CSharpToJavaScript",
    "keywords": "Struct Union73 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IDBObjectStore or IDBIndex or IDBCursor public struct Union73 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union73(IDBCursor) public static implicit operator Union73(IDBCursor value) Parameters value IDBCursor Returns Union73 implicit operator Union73(IDBIndex) public static implicit operator Union73(IDBIndex value) Parameters value IDBIndex Returns Union73 implicit operator Union73(IDBObjectStore) public static implicit operator Union73(IDBObjectStore value) Parameters value IDBObjectStore Returns Union73"
  },
  "api/CSharpToJavaScript.APIs.JS.Union74.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union74.html",
    "title": "Struct Union74 | CSharpToJavaScript",
    "keywords": "Struct Union74 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or List{string} public struct Union74 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union74(List<string>) public static implicit operator Union74(List<string> value) Parameters value List<string> Returns Union74 implicit operator Union74(string) public static implicit operator Union74(string value) Parameters value string Returns Union74"
  },
  "api/CSharpToJavaScript.APIs.JS.Union75.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union75.html",
    "title": "Struct Union75 | CSharpToJavaScript",
    "keywords": "Struct Union75 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or List{string} public struct Union75 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union75(List<string>) public static implicit operator Union75(List<string> value) Parameters value List<string> Returns Union75 implicit operator Union75(string) public static implicit operator Union75(string value) Parameters value string Returns Union75"
  },
  "api/CSharpToJavaScript.APIs.JS.Union76.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union76.html",
    "title": "Struct Union76 | CSharpToJavaScript",
    "keywords": "Struct Union76 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or List{string} public struct Union76 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union76(List<string>) public static implicit operator Union76(List<string> value) Parameters value List<string> Returns Union76 implicit operator Union76(string) public static implicit operator Union76(string value) Parameters value string Returns Union76"
  },
  "api/CSharpToJavaScript.APIs.JS.Union77.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union77.html",
    "title": "Struct Union77 | CSharpToJavaScript",
    "keywords": "Struct Union77 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IDBObjectStore or IDBIndex public struct Union77 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union77(IDBIndex) public static implicit operator Union77(IDBIndex value) Parameters value IDBIndex Returns Union77 implicit operator Union77(IDBObjectStore) public static implicit operator Union77(IDBObjectStore value) Parameters value IDBObjectStore Returns Union77"
  },
  "api/CSharpToJavaScript.APIs.JS.Union78.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union78.html",
    "title": "Struct Union78 | CSharpToJavaScript",
    "keywords": "Struct Union78 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Element or Document public struct Union78 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union78(Document) public static implicit operator Union78(Document value) Parameters value Document Returns Union78 implicit operator Union78(Element) public static implicit operator Union78(Element value) Parameters value Element Returns Union78"
  },
  "api/CSharpToJavaScript.APIs.JS.Union79.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union79.html",
    "title": "Struct Union79 | CSharpToJavaScript",
    "keywords": "Struct Union79 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Element or Document public struct Union79 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union79(Document) public static implicit operator Union79(Document value) Parameters value Document Returns Union79 implicit operator Union79(Element) public static implicit operator Union79(Element value) Parameters value Element Returns Union79"
  },
  "api/CSharpToJavaScript.APIs.JS.Union8.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union8.html",
    "title": "Struct Union8 | CSharpToJavaScript",
    "keywords": "Struct Union8 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll VideoTrack or AudioTrack or TextTrack public struct Union8 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union8(AudioTrack) public static implicit operator Union8(AudioTrack value) Parameters value AudioTrack Returns Union8 implicit operator Union8(TextTrack) public static implicit operator Union8(TextTrack value) Parameters value TextTrack Returns Union8 implicit operator Union8(VideoTrack) public static implicit operator Union8(VideoTrack value) Parameters value VideoTrack Returns Union8"
  },
  "api/CSharpToJavaScript.APIs.JS.Union80.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union80.html",
    "title": "Struct Union80 | CSharpToJavaScript",
    "keywords": "Struct Union80 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Number or List{Number} public struct Union80 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union80(Number) public static implicit operator Union80(Number value) Parameters value Number Returns Union80 implicit operator Union80(List<Number>) public static implicit operator Union80(List<Number> value) Parameters value List<Number> Returns Union80"
  },
  "api/CSharpToJavaScript.APIs.JS.Union81.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union81.html",
    "title": "Struct Union81 | CSharpToJavaScript",
    "keywords": "Struct Union81 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll bool or Unsupported /ConstrainDouble/ public struct Union81 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union81(Unsupported) public static implicit operator Union81(Unsupported value) Parameters value Unsupported Returns Union81 implicit operator Union81(bool) public static implicit operator Union81(bool value) Parameters value bool Returns Union81"
  },
  "api/CSharpToJavaScript.APIs.JS.Union82.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union82.html",
    "title": "Struct Union82 | CSharpToJavaScript",
    "keywords": "Struct Union82 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll bool or Unsupported /ConstrainDouble/ public struct Union82 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union82(Unsupported) public static implicit operator Union82(Unsupported value) Parameters value Unsupported Returns Union82 implicit operator Union82(bool) public static implicit operator Union82(bool value) Parameters value bool Returns Union82"
  },
  "api/CSharpToJavaScript.APIs.JS.Union83.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union83.html",
    "title": "Struct Union83 | CSharpToJavaScript",
    "keywords": "Struct Union83 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll bool or Unsupported /ConstrainDouble/ public struct Union83 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union83(Unsupported) public static implicit operator Union83(Unsupported value) Parameters value Unsupported Returns Union83 implicit operator Union83(bool) public static implicit operator Union83(bool value) Parameters value bool Returns Union83"
  },
  "api/CSharpToJavaScript.APIs.JS.Union84.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union84.html",
    "title": "Struct Union84 | CSharpToJavaScript",
    "keywords": "Struct Union84 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll List{Point2D} or ConstrainPoint2DParameters public struct Union84 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union84(ConstrainPoint2DParameters) public static implicit operator Union84(ConstrainPoint2DParameters value) Parameters value ConstrainPoint2DParameters Returns Union84 implicit operator Union84(List<Point2D>) public static implicit operator Union84(List<Point2D> value) Parameters value List<Point2D> Returns Union84"
  },
  "api/CSharpToJavaScript.APIs.JS.Union85.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union85.html",
    "title": "Struct Union85 | CSharpToJavaScript",
    "keywords": "Struct Union85 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll float or double or DOMMatrix public struct Union85 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union85(DOMMatrix) public static implicit operator Union85(DOMMatrix value) Parameters value DOMMatrix Returns Union85 implicit operator Union85(double) public static implicit operator Union85(double value) Parameters value double Returns Union85 implicit operator Union85(float) public static implicit operator Union85(float value) Parameters value float Returns Union85"
  },
  "api/CSharpToJavaScript.APIs.JS.Union86.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union86.html",
    "title": "Struct Union86 | CSharpToJavaScript",
    "keywords": "Struct Union86 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or List{Union87} public struct Union86 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union86(List<Union87>) public static implicit operator Union86(List<Union87> value) Parameters value List<Union87> Returns Union86 implicit operator Union86(string) public static implicit operator Union86(string value) Parameters value string Returns Union86"
  },
  "api/CSharpToJavaScript.APIs.JS.Union87.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union87.html",
    "title": "Struct Union87 | CSharpToJavaScript",
    "keywords": "Struct Union87 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Unsupported /CSSNumericValue/ or Unsupported /CSSKeywordValue/ public struct Union87 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union87(Unsupported) public static implicit operator Union87(Unsupported value) Parameters value Unsupported Returns Union87"
  },
  "api/CSharpToJavaScript.APIs.JS.Union88.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union88.html",
    "title": "Struct Union88 | CSharpToJavaScript",
    "keywords": "Struct Union88 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Client or ServiceWorker or MessagePort public struct Union88 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union88(Client) public static implicit operator Union88(Client value) Parameters value Client Returns Union88 implicit operator Union88(MessagePort) public static implicit operator Union88(MessagePort value) Parameters value MessagePort Returns Union88 implicit operator Union88(ServiceWorker) public static implicit operator Union88(ServiceWorker value) Parameters value ServiceWorker Returns Union88"
  },
  "api/CSharpToJavaScript.APIs.JS.Union89.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union89.html",
    "title": "Struct Union89 | CSharpToJavaScript",
    "keywords": "Struct Union89 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Client or ServiceWorker or MessagePort public struct Union89 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union89(Client) public static implicit operator Union89(Client value) Parameters value Client Returns Union89 implicit operator Union89(MessagePort) public static implicit operator Union89(MessagePort value) Parameters value MessagePort Returns Union89 implicit operator Union89(ServiceWorker) public static implicit operator Union89(ServiceWorker value) Parameters value ServiceWorker Returns Union89"
  },
  "api/CSharpToJavaScript.APIs.JS.Union9.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union9.html",
    "title": "Struct Union9 | CSharpToJavaScript",
    "keywords": "Struct Union9 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll VideoTrack or AudioTrack or TextTrack public struct Union9 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union9(AudioTrack) public static implicit operator Union9(AudioTrack value) Parameters value AudioTrack Returns Union9 implicit operator Union9(TextTrack) public static implicit operator Union9(TextTrack value) Parameters value TextTrack Returns Union9 implicit operator Union9(VideoTrack) public static implicit operator Union9(VideoTrack value) Parameters value VideoTrack Returns Union9"
  },
  "api/CSharpToJavaScript.APIs.JS.Union90.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union90.html",
    "title": "Struct Union90 | CSharpToJavaScript",
    "keywords": "Struct Union90 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll double or Unsupported /CSSNumericValue/ or string public struct Union90 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union90(Unsupported) public static implicit operator Union90(Unsupported value) Parameters value Unsupported Returns Union90 implicit operator Union90(double) public static implicit operator Union90(double value) Parameters value double Returns Union90 implicit operator Union90(string) public static implicit operator Union90(string value) Parameters value string Returns Union90"
  },
  "api/CSharpToJavaScript.APIs.JS.Union91.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union91.html",
    "title": "Struct Union91 | CSharpToJavaScript",
    "keywords": "Struct Union91 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll double or EffectTiming public struct Union91 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union91(EffectTiming) public static implicit operator Union91(EffectTiming value) Parameters value EffectTiming Returns Union91 implicit operator Union91(double) public static implicit operator Union91(double value) Parameters value double Returns Union91"
  },
  "api/CSharpToJavaScript.APIs.JS.Union92.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union92.html",
    "title": "Struct Union92 | CSharpToJavaScript",
    "keywords": "Struct Union92 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll double or EffectTiming public struct Union92 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union92(EffectTiming) public static implicit operator Union92(EffectTiming value) Parameters value EffectTiming Returns Union92 implicit operator Union92(double) public static implicit operator Union92(double value) Parameters value double Returns Union92"
  },
  "api/CSharpToJavaScript.APIs.JS.Union93.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union93.html",
    "title": "Struct Union93 | CSharpToJavaScript",
    "keywords": "Struct Union93 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Element or CSSPseudoElement public struct Union93 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union93(CSSPseudoElement) public static implicit operator Union93(CSSPseudoElement value) Parameters value CSSPseudoElement Returns Union93 implicit operator Union93(Element) public static implicit operator Union93(Element value) Parameters value Element Returns Union93"
  },
  "api/CSharpToJavaScript.APIs.JS.Union94.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union94.html",
    "title": "Struct Union94 | CSharpToJavaScript",
    "keywords": "Struct Union94 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll AudioContextLatencyCategory or Number public struct Union94 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union94(AudioContextLatencyCategory) public static implicit operator Union94(AudioContextLatencyCategory value) Parameters value AudioContextLatencyCategory Returns Union94 implicit operator Union94(Number) public static implicit operator Union94(Number value) Parameters value Number Returns Union94"
  },
  "api/CSharpToJavaScript.APIs.JS.Union95.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union95.html",
    "title": "Struct Union95 | CSharpToJavaScript",
    "keywords": "Struct Union95 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Union67 or ReadableStream public struct Union95 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union95(ReadableStream) public static implicit operator Union95(ReadableStream value) Parameters value ReadableStream Returns Union95 implicit operator Union95(Union67) public static implicit operator Union95(Union67 value) Parameters value Union67 Returns Union95"
  },
  "api/CSharpToJavaScript.APIs.JS.Union96.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union96.html",
    "title": "Struct Union96 | CSharpToJavaScript",
    "keywords": "Struct Union96 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLVideoElement or VideoFrame public struct Union96 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union96(HTMLVideoElement) public static implicit operator Union96(HTMLVideoElement value) Parameters value HTMLVideoElement Returns Union96 implicit operator Union96(VideoFrame) public static implicit operator Union96(VideoFrame value) Parameters value VideoFrame Returns Union96"
  },
  "api/CSharpToJavaScript.APIs.JS.Union97.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union97.html",
    "title": "Struct Union97 | CSharpToJavaScript",
    "keywords": "Struct Union97 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll GPUSampler or GPUTextureView or GPUBufferBinding or GPUExternalTexture public struct Union97 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union97(GPUBufferBinding) public static implicit operator Union97(GPUBufferBinding value) Parameters value GPUBufferBinding Returns Union97 implicit operator Union97(GPUExternalTexture) public static implicit operator Union97(GPUExternalTexture value) Parameters value GPUExternalTexture Returns Union97 implicit operator Union97(GPUSampler) public static implicit operator Union97(GPUSampler value) Parameters value GPUSampler Returns Union97 implicit operator Union97(GPUTextureView) public static implicit operator Union97(GPUTextureView value) Parameters value GPUTextureView Returns Union97"
  },
  "api/CSharpToJavaScript.APIs.JS.Union98.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union98.html",
    "title": "Struct Union98 | CSharpToJavaScript",
    "keywords": "Struct Union98 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll GPUPipelineLayout or GPUAutoLayoutMode public struct Union98 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union98(GPUAutoLayoutMode) public static implicit operator Union98(GPUAutoLayoutMode value) Parameters value GPUAutoLayoutMode Returns Union98 implicit operator Union98(GPUPipelineLayout) public static implicit operator Union98(GPUPipelineLayout value) Parameters value GPUPipelineLayout Returns Union98"
  },
  "api/CSharpToJavaScript.APIs.JS.Union99.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union99.html",
    "title": "Struct Union99 | CSharpToJavaScript",
    "keywords": "Struct Union99 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll GPUPipelineLayout or GPUAutoLayoutMode public struct Union99 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union99(GPUAutoLayoutMode) public static implicit operator Union99(GPUAutoLayoutMode value) Parameters value GPUAutoLayoutMode Returns Union99 implicit operator Union99(GPUPipelineLayout) public static implicit operator Union99(GPUPipelineLayout value) Parameters value GPUPipelineLayout Returns Union99"
  },
  "api/CSharpToJavaScript.APIs.JS.UpdateCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UpdateCallback.html",
    "title": "Struct UpdateCallback | CSharpToJavaScript",
    "keywords": "Struct UpdateCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct UpdateCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.UserActivation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UserActivation.html",
    "title": "Class UserActivation | CSharpToJavaScript",
    "keywords": "Class UserActivation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The UserActivation interface allows querying information about a window&apos;s user activation state. [To(\"FirstCharToLowerCase\")] public class UserActivation Inheritance object UserActivation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A user activation either implies that the user is currently interacting with the page, or has completed an interaction since page load. Typically, this is a click on a button or some other user interaction with the UI. There are two kinds of window user activation states: See Features gated by user activation for more information and a list of APIs that require either sticky or transient user activation. This API is only available in the window context and not exposed to workers. -UserActivation -Features gated by user activation See also on MDN Properties HasBeenActive The read-only hasBeenActive property of the UserActivation interface indicates whether the current window has sticky user activation (see {{Glossary(\"sticky activation\")}}). public bool HasBeenActive { get; } Property Value bool A boolean. Remarks -UserActivation -IsActive -Features gated by user activation See also on MDN IsActive The read-only isActive property of the UserActivation interface indicates whether the current window has transient user activation (see {{Glossary(\"transient activation\")}}). public bool IsActive { get; } Property Value bool A boolean. Remarks -UserActivation -HasBeenActive -Features gated by user activation See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.UserSettingListener.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UserSettingListener.html",
    "title": "Interface UserSettingListener | CSharpToJavaScript",
    "keywords": "Interface UserSettingListener Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface UserSettingListener Methods HandleUserSettingChanged(string) GlobalObject.Undefined HandleUserSettingChanged(string key) Parameters key string Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.UserVerificationRequirement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.UserVerificationRequirement.html",
    "title": "Enum UserVerificationRequirement | CSharpToJavaScript",
    "keywords": "Enum UserVerificationRequirement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum UserVerificationRequirement Fields Discouraged = 2 Preferred = 1 Required = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.VTTCue.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VTTCue.html",
    "title": "Class VTTCue | CSharpToJavaScript",
    "keywords": "Class VTTCue Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The VTTCue interface—part of the API for handling WebVTT (text tracks on media presentations)—describes and controls the text track associated with a particular track element. [To(\"FirstCharToLowerCase\")] public class VTTCue : TextTrackCue Inheritance object EventTarget TextTrackCue VTTCue Inherited Members TextTrackCue.Track TextTrackCue.Id TextTrackCue.StartTime TextTrackCue.EndTime TextTrackCue.PauseOnExit TextTrackCue.Onenter TextTrackCue.Onexit EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors VTTCue() public VTTCue() VTTCue(Number, Number, string) The VTTCue() constructor creates and returns a new VTTCue object. public VTTCue(Number startTime, Number endTime, string text) Parameters startTime Number endTime Number text string Remarks See also on MDN Properties Align The align property of the VTTCue interface represents the alignment of all of the lines of text in the text box. public AlignSetting Align { get; set; } Property Value AlignSetting A string containing one of the following values: Remarks See also on MDN Line The line property of the VTTCue interface represents the cue line of this WebVTT cue. public Union111 Line { get; set; } Property Value Union111 A number, or &quot;auto&quot; representing the cue line of this WebVTT cue. Remarks See also on MDN LineAlign The lineAlign property of the VTTCue interface represents the alignment of this VTT cue. public LineAlignSetting LineAlign { get; set; } Property Value LineAlignSetting A string containing one of the following values: Remarks See also on MDN Position The position property of the VTTCue interface represents the indentation of the cue within the line. public Union111 Position { get; set; } Property Value Union111 A number, or &quot;auto&quot; representing the indentation of the cue within the line. Remarks See also on MDN PositionAlign The positionAlign property of the VTTCue interface is used to determine what Position is anchored to. public PositionAlignSetting PositionAlign { get; set; } Property Value PositionAlignSetting A string containing one of the following values: Remarks See also on MDN Region The region property of the VTTCue interface returns and sets the VTTRegion that this cue belongs to. public VTTRegion? Region { get; set; } Property Value VTTRegion A VTTRegion object. Remarks See also on MDN Size The size property of the VTTCue interface represents the size of the cue as a percentage of the video size. public Number Size { get; set; } Property Value Number A number representing the size of the cue as a percentage of the video size. Remarks See also on MDN SnapToLines The snapToLines property of the VTTCue interface is a {{jsxref(\"Boolean\")}} indicating if the Line property is an integer number of lines, or a percentage of the video size. public bool SnapToLines { get; set; } Property Value bool A Boolean. Remarks See also on MDN Text The text property of the VTTCue interface represents the text contents of the cue. public string Text { get; set; } Property Value string A string containing the raw text of the cue. Remarks See also on MDN Vertical The vertical property of the VTTCue interface is a string representing the cue's writing direction. public DirectionSetting Vertical { get; set; } Property Value DirectionSetting A string containing one of the following values: Remarks See also on MDN Methods GetCueAsHTML() The getCueAsHTML() method of the VTTCue interface returns a DocumentFragment containing the cue content. public DocumentFragment GetCueAsHTML() Returns DocumentFragment A DocumentFragment . Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.VTTRegion.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VTTRegion.html",
    "title": "Class VTTRegion | CSharpToJavaScript",
    "keywords": "Class VTTRegion Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The VTTRegion interface—part of the API for handling WebVTT (text tracks on media presentations)—describes a portion of the video to render a VTTCue onto. [To(\"FirstCharToLowerCase\")] public class VTTRegion Inheritance object VTTRegion Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors VTTRegion() public VTTRegion() Properties Id public string Id { get; set; } Property Value string Lines public ulong Lines { get; set; } Property Value ulong RegionAnchorX public Number RegionAnchorX { get; set; } Property Value Number RegionAnchorY public Number RegionAnchorY { get; set; } Property Value Number Scroll public ScrollSetting Scroll { get; set; } Property Value ScrollSetting ViewportAnchorX public Number ViewportAnchorX { get; set; } Property Value Number ViewportAnchorY public Number ViewportAnchorY { get; set; } Property Value Number Width public Number Width { get; set; } Property Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.ValidityState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ValidityState.html",
    "title": "Class ValidityState | CSharpToJavaScript",
    "keywords": "Class ValidityState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ValidityState interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element&apos;s value fails to validate, if it&apos;s not valid. [To(\"FirstCharToLowerCase\")] public class ValidityState Inheritance object ValidityState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Guide: Constraint validation -Tutorial: Form data validation See also on MDN Properties BadInput The read-only badInput property of a ValidityState object indicates if the user has provided input that the browser is unable to convert. For example, if you have a number input element whose content is a string. public bool BadInput { get; } Property Value bool A boolean. Remarks -Guide: Constraint validation -Tutorial: Form data validation See also on MDN CustomError public bool CustomError { get; } Property Value bool PatternMismatch The read-only patternMismatch property of a ValidityState object indicates if the value of an input, after having been edited by the user, does not conform to the constraints set by the element's pattern attribute. public bool PatternMismatch { get; } Property Value bool Remarks The patternMismatch property will be true if and only if the following conditions are all true: -Constraint validation -Forms: Data form validation -Regular Expressions See also on MDN RangeOverflow The read-only rangeOverflow property of a ValidityState object indicates if the value of an input, after having been edited by the user, does not conform to the constraints set by the element's max attribute. public bool RangeOverflow { get; } Property Value bool Remarks If the field is numeric in nature, including the input/date, input/month, input/week, input/time, input/datetime-local, input/number and input/range types and a max value is set, if the value doesn&apos;t conform to the constraints set by the max value, the rangeOverflow property will be true. Given the following: if value &gt; 40, rangeOverflow will be true. When true, the element matches the :invalid and :out-of-range CSS pseudo-classes. -RangeUnderflow -Constraint validation -Forms: Data form validation -step attribute -min attribute See also on MDN RangeUnderflow The read-only rangeUnderflow property of a ValidityState object indicates if the value of an input, after having been edited by the user, does not conform to the constraints set by the element's min attribute. public bool RangeUnderflow { get; } Property Value bool Remarks If the field is numeric in nature, including the input/date, input/month, input/week, input/time, input/datetime-local, input/number and input/range types and a min value is set, if the value doesn&apos;t conform to the constraints set by the min value, the rangeUnderflow property will be true. Given the following: if value &lt; 20, rangeUnderflow will be true. When true, the element matches the :invalid and :out-of-range CSS pseudo-classes. -RangeOverflow -Constraint validation -Forms: Data form validation -step attribute -max attribute See also on MDN StepMismatch The read-only stepMismatch property of a ValidityState object indicates if the value of an input, after having been edited by the user, does not conform to the constraints set by the element's step attribute. public bool StepMismatch { get; } Property Value bool Remarks If the field is numeric in nature, including the input/date, input/month, input/week, input/time, input/datetime-local, input/number and input/range types and the step value is not any, if the value don&apos;t doesn&apos;t conform to the constraints set by the step and min values, then stepMismatch will be true. If the remainder of the form control&apos;s value less the min value, divided by the step value (which defaults to 1 if omitted) is not zero, there is a mismatch. Given the following: if (value - min) % 2 !== 0, stepMismatch will be true. If true, the element matches the :invalid and :out-of-range CSS pseudo-classes. -Constraint validation -Forms: Data form validation -step attribute See also on MDN TooLong The read-only tooLong property of a ValidityState object indicates if the value of an input or textarea, after having been edited by the user, exceeds the maximum code-unit length established by the element's maxlength attribute. public bool TooLong { get; } Property Value bool Remarks -Constraint validation -Forms: Data form validation See also on MDN TooShort The read-only tooShort property of a ValidityState object indicates if the value of an input, button, select, output, fieldset or textarea, after having been edited by the user, is less than the minimum code-unit length established by the element's minlength attribute. public bool TooShort { get; } Property Value bool Remarks -Guide: Constraint validation -Tutorial: Form data validation See also on MDN TypeMismatch The read-only typeMismatch property of a ValidityState object indicates if the value of an input, after having been edited by the user, does not conform to the constraints set by the element's type attribute. public bool TypeMismatch { get; } Property Value bool Remarks If the type attribute expects specific strings, such as the input/email and input/url types and the value doesn't conform to the constraints set by the type, the typeMismatch property will be true. The input/email input type expects one or more valid email addresses, depending on whether the multiple attribute is present. A valid email address includes an email prefix and a domain, with or without a top level domain. If the value of the email input is not an empty string, a single valid email address, or one or more comma separated email address if the multiple attribute is present, there is a typeMismatch. The input/url input type expects one or more valid URLs, depending on whether the multiple attribute is present. A valid URL includes a protocol, optionally with an IP address, or an optional subdomain, domain, and top level domain combination. If the value of the URL input is not an empty string, a single valid URL, or one or more comma separated URLS if the multiple attribute is present, there is a typeMismatch. Input type Value Expected value input/email x_y or x_y.z email address, with or without TLD input/url x: or x://y.z protocol or full URL with protocol -Constraint validation -Forms: Data form validation -Regular Expressions See also on MDN Valid public bool Valid { get; } Property Value bool ValueMissing The read-only valueMissing property of a ValidityState object indicates if a required control, such as an input, select, or textarea, has an empty value. public bool ValueMissing { get; } Property Value bool Remarks If the required attribute is set, and no option is selected or a &lt;textarea&gt; or user-editable &lt;input&gt; is empty, the valueMissing property will be true. The property is only true if the field is required and has no value; if the field is not required, or if the field is required and has a value, the value is false. -Constraint validation -Forms: Data form validation -Regular Expressions See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ValidityStateFlags.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ValidityStateFlags.html",
    "title": "Class ValidityStateFlags | CSharpToJavaScript",
    "keywords": "Class ValidityStateFlags Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ValidityStateFlags Inheritance object ValidityStateFlags Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BadInput public bool BadInput Field Value bool CustomError public bool CustomError Field Value bool PatternMismatch public bool PatternMismatch Field Value bool RangeOverflow public bool RangeOverflow Field Value bool RangeUnderflow public bool RangeUnderflow Field Value bool StepMismatch public bool StepMismatch Field Value bool TooLong public bool TooLong Field Value bool TooShort public bool TooShort Field Value bool TypeMismatch public bool TypeMismatch Field Value bool ValueMissing public bool ValueMissing Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.ValueType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ValueType.html",
    "title": "Enum ValueType | CSharpToJavaScript",
    "keywords": "Enum ValueType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ValueType Fields F32 = 2 F64 = 3 I32 = 0 I64 = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoColorPrimaries.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoColorPrimaries.html",
    "title": "Enum VideoColorPrimaries | CSharpToJavaScript",
    "keywords": "Enum VideoColorPrimaries Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum VideoColorPrimaries Fields Bt2020 = 3 Bt470bg = 1 Bt709 = 0 Smpte170m = 2 Smpte432 = 4"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoColorSpace.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoColorSpace.html",
    "title": "Class VideoColorSpace | CSharpToJavaScript",
    "keywords": "Class VideoColorSpace Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The VideoColorSpace interface of the 'WebCodecs API' represents the color space of a video. [To(\"FirstCharToLowerCase\")] public class VideoColorSpace Inheritance object VideoColorSpace Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors VideoColorSpace() public VideoColorSpace() VideoColorSpace(VideoColorSpaceInit) The VideoColorSpace() constructor creates a new VideoColorSpace object which represents a video color space. public VideoColorSpace(VideoColorSpaceInit init) Parameters init VideoColorSpaceInit Remarks See also on MDN Properties FullRange The fullRange read-only property of the VideoColorSpace interface returns true if full-range color values are used. public bool? FullRange { get; } Property Value bool? A Boolean, true if full-range color values are used. Remarks See also on MDN Matrix The matrix read-only property of the VideoColorSpace interface returns the matrix coefficient of the video. Matrix coefficients describe the relationship between sample component values and color coordinates. public VideoMatrixCoefficients? Matrix { get; } Property Value VideoMatrixCoefficients? A string containing one of the following values: Remarks See also on MDN Primaries The primaries read-only property of the VideoColorSpace interface returns the color {{glossary(\"gamut\")}} of the video. public VideoColorPrimaries? Primaries { get; } Property Value VideoColorPrimaries? A string containing one of the following values: Remarks See also on MDN Transfer The transfer read-only property of the VideoColorSpace interface returns the opto-electronic transfer characteristics of the video. public VideoTransferCharacteristics? Transfer { get; } Property Value VideoTransferCharacteristics? A string containing one of the following values: Remarks See also on MDN Methods ToJSON() The toJSON() method of the VideoColorSpace interface is a serializer that returns a JSON representation of the VideoColorSpace object. public VideoColorSpaceInit ToJSON() Returns VideoColorSpaceInit A JSON object. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoColorSpaceInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoColorSpaceInit.html",
    "title": "Class VideoColorSpaceInit | CSharpToJavaScript",
    "keywords": "Class VideoColorSpaceInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class VideoColorSpaceInit Inheritance object VideoColorSpaceInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FullRange public bool? FullRange Field Value bool? Matrix public VideoMatrixCoefficients? Matrix Field Value VideoMatrixCoefficients? Primaries public VideoColorPrimaries? Primaries Field Value VideoColorPrimaries? Transfer public VideoTransferCharacteristics? Transfer Field Value VideoTransferCharacteristics?"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoConfiguration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoConfiguration.html",
    "title": "Class VideoConfiguration | CSharpToJavaScript",
    "keywords": "Class VideoConfiguration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class VideoConfiguration Inheritance object VideoConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Bitrate public required ulong Bitrate Field Value ulong ColorGamut public ColorGamut ColorGamut Field Value ColorGamut ContentType public required string ContentType Field Value string Framerate public required Number Framerate Field Value Number HasAlphaChannel public bool HasAlphaChannel Field Value bool HdrMetadataType public HdrMetadataType HdrMetadataType Field Value HdrMetadataType Height public required ulong Height Field Value ulong ScalabilityMode public string ScalabilityMode Field Value string SpatialScalability public bool SpatialScalability Field Value bool TransferFunction public TransferFunction TransferFunction Field Value TransferFunction Width public required ulong Width Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoDecoder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoDecoder.html",
    "title": "Class VideoDecoder | CSharpToJavaScript",
    "keywords": "Class VideoDecoder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The VideoDecoder interface of the 'WebCodecs API' decodes chunks of video. [To(\"FirstCharToLowerCase\")] public class VideoDecoder : EventTarget Inheritance object EventTarget VideoDecoder Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Video processing with WebCodecs -WebCodecs API Samples See also on MDN Constructors VideoDecoder() public VideoDecoder() VideoDecoder(VideoDecoderInit) The VideoDecoder() constructor creates a new VideoDecoder object with the provided init.output callback assigned as the output callback, the provided init.error callback as the error callback, and the State set to &quot;unconfigured&quot;. public VideoDecoder(VideoDecoderInit init) Parameters init VideoDecoderInit Remarks See also on MDN Properties DecodeQueueSize The decodeQueueSize read-only property of the VideoDecoder interface returns the number of pending decode requests in the queue. public ulong DecodeQueueSize { get; } Property Value ulong An integer containing the number of requests. Remarks See also on MDN Ondequeue public EventHandlerNonNull Ondequeue { get; set; } Property Value EventHandlerNonNull State The state property of the VideoDecoder interface returns the current state of the underlying codec. public CodecState State { get; } Property Value CodecState A string containing one of the following values: Remarks See also on MDN Methods Close() The close() method of the VideoDecoder interface ends all pending work and releases system resources. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Configure(VideoDecoderConfig) The configure() method of the VideoDecoder interface enqueues a control message to configure the video decoder for decoding chunks. public GlobalObject.Undefined Configure(VideoDecoderConfig config) Parameters config VideoDecoderConfig Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Decode(EncodedVideoChunk) The decode() method of the VideoDecoder interface enqueues a control message to decode a given chunk of video. public GlobalObject.Undefined Decode(EncodedVideoChunk chunk) Parameters chunk EncodedVideoChunk Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Flush() The flush() method of the VideoDecoder interface returns a Promise that resolves once all pending messages in the queue have been completed. public Task<GlobalObject.Undefined> Flush() Returns Task<GlobalObject.Undefined> A Promise that resolves with undefined. Remarks See also on MDN IsConfigSupported(VideoDecoderConfig) public static Task<VideoDecoderSupport> IsConfigSupported(VideoDecoderConfig config) Parameters config VideoDecoderConfig Returns Task<VideoDecoderSupport> Reset() The reset() method of the VideoDecoder interface resets all states including configuration, control messages in the control message queue, and all pending callbacks. public GlobalObject.Undefined Reset() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoDecoderConfig.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoDecoderConfig.html",
    "title": "Class VideoDecoderConfig | CSharpToJavaScript",
    "keywords": "Class VideoDecoderConfig Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class VideoDecoderConfig Inheritance object VideoDecoderConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Codec public required string Codec Field Value string CodedHeight public ulong CodedHeight Field Value ulong CodedWidth public ulong CodedWidth Field Value ulong ColorSpace public VideoColorSpaceInit ColorSpace Field Value VideoColorSpaceInit Description public Union68 Description Field Value Union68 DisplayAspectHeight public ulong DisplayAspectHeight Field Value ulong DisplayAspectWidth public ulong DisplayAspectWidth Field Value ulong HardwareAcceleration public HardwareAcceleration HardwareAcceleration Field Value HardwareAcceleration OptimizeForLatency public bool OptimizeForLatency Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoDecoderInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoDecoderInit.html",
    "title": "Class VideoDecoderInit | CSharpToJavaScript",
    "keywords": "Class VideoDecoderInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class VideoDecoderInit Inheritance object VideoDecoderInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Error public required WebCodecsErrorCallback Error Field Value WebCodecsErrorCallback Output public required VideoFrameOutputCallback Output Field Value VideoFrameOutputCallback"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoDecoderSupport.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoDecoderSupport.html",
    "title": "Class VideoDecoderSupport | CSharpToJavaScript",
    "keywords": "Class VideoDecoderSupport Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class VideoDecoderSupport Inheritance object VideoDecoderSupport Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Config public VideoDecoderConfig Config Field Value VideoDecoderConfig Supported public bool Supported Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoEncoder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoEncoder.html",
    "title": "Class VideoEncoder | CSharpToJavaScript",
    "keywords": "Class VideoEncoder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The VideoEncoder interface of the 'WebCodecs API' encodes VideoFrame objects into EncodedVideoChunks. [To(\"FirstCharToLowerCase\")] public class VideoEncoder : EventTarget Inheritance object EventTarget VideoEncoder Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Video processing with WebCodecs See also on MDN Constructors VideoEncoder() public VideoEncoder() VideoEncoder(VideoEncoderInit) The VideoEncoder() constructor creates a new VideoEncoder object with the provided options.output callback assigned as the output callback, the provided options.error callback as the error callback, and sets the State to &quot;unconfigured&quot;. public VideoEncoder(VideoEncoderInit init) Parameters init VideoEncoderInit Remarks See also on MDN Properties EncodeQueueSize The encodeQueueSize read-only property of the VideoEncoder interface returns the number of pending encode requests in the queue. public ulong EncodeQueueSize { get; } Property Value ulong An integer containing the number of requests. Remarks See also on MDN Ondequeue public EventHandlerNonNull Ondequeue { get; set; } Property Value EventHandlerNonNull State The state read-only property of the VideoEncoder interface returns the current state of the underlying codec. public CodecState State { get; } Property Value CodecState A string containing one of the following values: Remarks See also on MDN Methods Close() The close() method of the VideoEncoder interface ends all pending work and releases system resources. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Configure(VideoEncoderConfig) The configure() method of the VideoEncoder interface changes the State of the encoder to \"configured\" and asynchronously prepares the encoder to accept VideoEncoders for encoding with the specified parameters. If the encoder doesn't support the specified parameters or can't be initialized for other reasons an error will be reported via the error callback provided to the VideoEncoder constructor. public GlobalObject.Undefined Configure(VideoEncoderConfig config) Parameters config VideoEncoderConfig Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If the VideoEncoder has been previously configured, the new configuration will not be applied until all previous tasks have completed. See also on MDN Encode(VideoFrame, VideoEncoderEncodeOptions) The encode() method of the VideoEncoder interface asynchronously encodes a VideoFrame. Encoded data (EncodedVideoChunk) or an error will eventually be returned via the callbacks provided to the VideoEncoder constructor. public GlobalObject.Undefined Encode(VideoFrame frame, VideoEncoderEncodeOptions options) Parameters frame VideoFrame options VideoEncoderEncodeOptions Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Flush() The flush() method of the VideoEncoder interface forces all pending encodes to complete. public Task<GlobalObject.Undefined> Flush() Returns Task<GlobalObject.Undefined> A {{jsxref(\"Promise\")}} that resolves once the encoder's initialization is completed and all pending EncodedVideoChunks are returned. Remarks See also on MDN IsConfigSupported(VideoEncoderConfig) public static Task<VideoEncoderSupport> IsConfigSupported(VideoEncoderConfig config) Parameters config VideoEncoderConfig Returns Task<VideoEncoderSupport> Reset() The reset() method of the VideoEncoder interface synchronously cancels all pending encodes and callbacks, frees all underlying resources and sets the State to \"unconfigured\". After calling Reset(), Configure(VideoEncoderConfig) must be called before resuming Encode(VideoFrame, VideoEncoderEncodeOptions) calls. public GlobalObject.Undefined Reset() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: To avoid discarding frames queued via Encode(VideoFrame, VideoEncoderEncodeOptions), Flush() should be called and completed before calling Reset(). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoEncoderBitrateMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoEncoderBitrateMode.html",
    "title": "Enum VideoEncoderBitrateMode | CSharpToJavaScript",
    "keywords": "Enum VideoEncoderBitrateMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum VideoEncoderBitrateMode Fields Constant = 0 Quantizer = 2 Variable = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoEncoderConfig.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoEncoderConfig.html",
    "title": "Class VideoEncoderConfig | CSharpToJavaScript",
    "keywords": "Class VideoEncoderConfig Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class VideoEncoderConfig Inheritance object VideoEncoderConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alpha public AlphaOption Alpha Field Value AlphaOption Bitrate public ulong Bitrate Field Value ulong BitrateMode public VideoEncoderBitrateMode BitrateMode Field Value VideoEncoderBitrateMode Codec public required string Codec Field Value string DisplayHeight public ulong DisplayHeight Field Value ulong DisplayWidth public ulong DisplayWidth Field Value ulong Framerate public Number Framerate Field Value Number HardwareAcceleration public HardwareAcceleration HardwareAcceleration Field Value HardwareAcceleration Height public required ulong Height Field Value ulong LatencyMode public LatencyMode LatencyMode Field Value LatencyMode ScalabilityMode public string ScalabilityMode Field Value string Width public required ulong Width Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoEncoderEncodeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoEncoderEncodeOptions.html",
    "title": "Class VideoEncoderEncodeOptions | CSharpToJavaScript",
    "keywords": "Class VideoEncoderEncodeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class VideoEncoderEncodeOptions Inheritance object VideoEncoderEncodeOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields KeyFrame public bool KeyFrame Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoEncoderInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoEncoderInit.html",
    "title": "Class VideoEncoderInit | CSharpToJavaScript",
    "keywords": "Class VideoEncoderInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class VideoEncoderInit Inheritance object VideoEncoderInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Error public required WebCodecsErrorCallback Error Field Value WebCodecsErrorCallback Output public required EncodedVideoChunkOutputCallback Output Field Value EncodedVideoChunkOutputCallback"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoEncoderSupport.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoEncoderSupport.html",
    "title": "Class VideoEncoderSupport | CSharpToJavaScript",
    "keywords": "Class VideoEncoderSupport Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class VideoEncoderSupport Inheritance object VideoEncoderSupport Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Config public VideoEncoderConfig Config Field Value VideoEncoderConfig Supported public bool Supported Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoFrame.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoFrame.html",
    "title": "Class VideoFrame | CSharpToJavaScript",
    "keywords": "Class VideoFrame Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The VideoFrame interface of the Web Codecs API represents a frame of a video. [To(\"FirstCharToLowerCase\")] public class VideoFrame Inheritance object VideoFrame Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks VideoFrame is a transferable object. -Video processing with WebCodecs -WebCodecs examples See also on MDN Constructors VideoFrame() public VideoFrame() VideoFrame(Union16, VideoFrameInit) The VideoFrame() constructor creates a new VideoFrame object representing a frame of a video. public VideoFrame(Union16 image, VideoFrameInit init) Parameters image Union16 init VideoFrameInit Remarks See also on MDN VideoFrame(Union68, VideoFrameBufferInit) The VideoFrame() constructor creates a new VideoFrame object representing a frame of a video. public VideoFrame(Union68 data, VideoFrameBufferInit init) Parameters data Union68 init VideoFrameBufferInit Remarks See also on MDN Properties CodedHeight The codedHeight property of the VideoFrame interface returns the height of the VideoFrame in pixels, potentially including non-visible padding, and prior to considering potential ratio adjustments. public ulong CodedHeight { get; } Property Value ulong An integer. Remarks See also on MDN CodedRect The codedRect property of the VideoFrame interface returns a DOMRectReadOnly with the width and height matching CodedWidth and CodedHeight. public DOMRectReadOnly? CodedRect { get; } Property Value DOMRectReadOnly A DOMRectReadOnly. Remarks See also on MDN CodedWidth The codedWidth property of the VideoFrame interface returns the width of the VideoFrame in pixels, potentially including non-visible padding, and prior to considering potential ratio adjustments. public ulong CodedWidth { get; } Property Value ulong An integer. Remarks See also on MDN ColorSpace The colorSpace property of the VideoFrame interface returns a VideoColorSpace object representing the color space of the video. public VideoColorSpace ColorSpace { get; } Property Value VideoColorSpace A VideoColorSpace object. Remarks See also on MDN DisplayHeight The displayHeight property of the VideoFrame interface returns the height of the VideoFrame after applying aspect ratio adjustments. public ulong DisplayHeight { get; } Property Value ulong An integer. Remarks See also on MDN DisplayWidth The displayWidth property of the VideoFrame interface returns the width of the VideoFrame after applying aspect ratio adjustments. public ulong DisplayWidth { get; } Property Value ulong An integer. Remarks See also on MDN Duration The duration property of the VideoFrame interface returns an integer indicating the duration of the video in microseconds. public ulong? Duration { get; } Property Value ulong? An integer. Remarks See also on MDN Format The format property of the VideoFrame interface returns the pixel format of the VideoFrame. public VideoPixelFormat? Format { get; } Property Value VideoPixelFormat? A string containing a video pixel format, one of: Remarks See also on MDN Timestamp The timestamp property of the VideoFrame interface returns an integer indicating the timestamp of the video in microseconds. public long Timestamp { get; } Property Value long An integer. Remarks See also on MDN VisibleRect The visibleRect property of the VideoFrame interface returns a DOMRectReadOnly describing the visible rectangle of pixels for this VideoFrame. public DOMRectReadOnly? VisibleRect { get; } Property Value DOMRectReadOnly A DOMRectReadOnly. Remarks See also on MDN Methods AllocationSize(VideoFrameCopyToOptions) The allocationSize() method of the VideoFrame interface returns the number of bytes required to hold the video as filtered by options passed into the method. public ulong AllocationSize(VideoFrameCopyToOptions options) Parameters options VideoFrameCopyToOptions Returns ulong An integer containing the number of bytes needed to hold the frame as specified by options. Remarks See also on MDN Clone() The clone() method of the VideoFrame interface creates a new VideoFrame object with reference to the same media resource as the original. public VideoFrame Clone() Returns VideoFrame The cloned VideoData object. Remarks See also on MDN Close() The close() method of the VideoFrame interface clears all states and releases the reference to the media resource. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined Undefined. Remarks See also on MDN CopyTo(Union68, VideoFrameCopyToOptions) The copyTo() method of the VideoFrame interface copies the contents of the VideoFrame to an ArrayBuffer. public Task<List<PlaneLayout>> CopyTo(Union68 destination, VideoFrameCopyToOptions options) Parameters destination Union68 options VideoFrameCopyToOptions Returns Task<List<PlaneLayout>> A Promise that resolves to the layout of the copy when the copy has completed. Remarks See also on MDN Metadata() public VideoFrameMetadata Metadata() Returns VideoFrameMetadata"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoFrameBufferInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoFrameBufferInit.html",
    "title": "Class VideoFrameBufferInit | CSharpToJavaScript",
    "keywords": "Class VideoFrameBufferInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class VideoFrameBufferInit Inheritance object VideoFrameBufferInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CodedHeight public required ulong CodedHeight Field Value ulong CodedWidth public required ulong CodedWidth Field Value ulong ColorSpace public VideoColorSpaceInit ColorSpace Field Value VideoColorSpaceInit DisplayHeight public ulong DisplayHeight Field Value ulong DisplayWidth public ulong DisplayWidth Field Value ulong Duration public ulong Duration Field Value ulong Format public required VideoPixelFormat Format Field Value VideoPixelFormat Layout public List<PlaneLayout> Layout Field Value List<PlaneLayout> Timestamp public required long Timestamp Field Value long Transfer public List<byte[]> Transfer Field Value List<byte[]> VisibleRect public DOMRectInit VisibleRect Field Value DOMRectInit"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoFrameCopyToOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoFrameCopyToOptions.html",
    "title": "Class VideoFrameCopyToOptions | CSharpToJavaScript",
    "keywords": "Class VideoFrameCopyToOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class VideoFrameCopyToOptions Inheritance object VideoFrameCopyToOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Layout public List<PlaneLayout> Layout Field Value List<PlaneLayout> Rect public DOMRectInit Rect Field Value DOMRectInit"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoFrameInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoFrameInit.html",
    "title": "Class VideoFrameInit | CSharpToJavaScript",
    "keywords": "Class VideoFrameInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class VideoFrameInit Inheritance object VideoFrameInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alpha public AlphaOption Alpha Field Value AlphaOption DisplayHeight public ulong DisplayHeight Field Value ulong DisplayWidth public ulong DisplayWidth Field Value ulong Duration public ulong Duration Field Value ulong Metadata public VideoFrameMetadata Metadata Field Value VideoFrameMetadata Timestamp public long Timestamp Field Value long VisibleRect public DOMRectInit VisibleRect Field Value DOMRectInit"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoFrameMetadata.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoFrameMetadata.html",
    "title": "Class VideoFrameMetadata | CSharpToJavaScript",
    "keywords": "Class VideoFrameMetadata Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class VideoFrameMetadata Inheritance object VideoFrameMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoFrameOutputCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoFrameOutputCallback.html",
    "title": "Struct VideoFrameOutputCallback | CSharpToJavaScript",
    "keywords": "Struct VideoFrameOutputCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct VideoFrameOutputCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoMatrixCoefficients.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoMatrixCoefficients.html",
    "title": "Enum VideoMatrixCoefficients | CSharpToJavaScript",
    "keywords": "Enum VideoMatrixCoefficients Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum VideoMatrixCoefficients Fields Bt2020Ncl = 4 Bt470bg = 2 Bt709 = 1 Rgb = 0 Smpte170m = 3"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoPixelFormat.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoPixelFormat.html",
    "title": "Enum VideoPixelFormat | CSharpToJavaScript",
    "keywords": "Enum VideoPixelFormat Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum VideoPixelFormat Fields BGRA = 7 BGRX = 8 I420 = 0 I420A = 1 I422 = 2 I444 = 3 NV12 = 4 RGBA = 5 RGBX = 6"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoTrack.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoTrack.html",
    "title": "Class VideoTrack | CSharpToJavaScript",
    "keywords": "Class VideoTrack Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The VideoTrack interface represents a single video track from a {{HTMLElement(\"video\")}} element. [To(\"FirstCharToLowerCase\")] public class VideoTrack Inheritance object VideoTrack Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The most common use for accessing a VideoTrack object is to toggle its Selected property in order to make it the active video track for its {{HTMLElement(\"video\")}} element. See also on MDN Properties Id The id property contains a string which uniquely identifies the track represented by the VideoTrack. public string Id { get; } Property Value string A string which identifies the track, suitable for use when calling GetTrackById(string) on an VideoTrackList such as the one specified by a media element's VideoTracks property. Remarks This ID can be used with the GetTrackById(string) method to locate a specific track within the media associated with a media element. The track ID can also be used as the fragment of a URL that loads the specific track (if the media supports media fragments). See also on MDN Kind The kind property contains a string indicating the category of video contained in the VideoTrack. public string Kind { get; } Property Value string A string specifying the type of content the media represents. The string is one of those found in Video track kind strings below. Remarks The kind can be used to determine the scenarios in which specific tracks should be enabled or disabled. See Video track kind strings for a list of the kinds available for video tracks. See also on MDN Label The read-only VideoTrack property label returns a string specifying the video track&apos;s human-readable label, if one is available; otherwise, it returns an empty string. public string Label { get; } Property Value string A string specifying the track&apos;s human-readable label, if one is available in the track metadata. Otherwise, an empty string (&quot;&quot;) is returned.For example, a track whose Kind is &quot;sign&quot; might have a label such as &quot;A sign-language interpretation.&quot;. Remarks See also on MDN Language The read-only VideoTrack property language returns a string identifying the language used in the video track. public string Language { get; } Property Value string A string specifying the BCP 47 ({{RFC(5646)}}) format language tag of the primary language used in the video track, or an empty string (&quot;&quot;) if the language is not specified or known, or if the track doesn&apos;t contain speech.For example, if the primary language used in the track is United States English, this value would be &quot;en-US&quot;. For Brazilian Portuguese, the value would be &quot;pt-BR&quot;. Remarks For tracks that include multiple languages (such as a movie in English in which a few lines are spoken in other languages), this should be the video&apos;s primary language. See also on MDN Selected The VideoTrack property selected controls whether or not a particular video track is active. public bool Selected { get; set; } Property Value bool The selected property is a Boolean whose value is true if the track is active. Only a single video track can be active at any given time, so setting this property to true for one track while another track is active will make that other track inactive. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoTrackGenerator.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoTrackGenerator.html",
    "title": "Class VideoTrackGenerator | CSharpToJavaScript",
    "keywords": "Class VideoTrackGenerator Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class VideoTrackGenerator Inheritance object VideoTrackGenerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VideoTrackGenerator() public VideoTrackGenerator() Properties Muted public bool Muted { get; set; } Property Value bool Track public Unsupported Track { get; } Property Value Unsupported Writable public WritableStream Writable { get; } Property Value WritableStream"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoTrackList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoTrackList.html",
    "title": "Class VideoTrackList | CSharpToJavaScript",
    "keywords": "Class VideoTrackList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The VideoTrackList interface is used to represent a list of the video tracks contained within a {{HTMLElement(\"video\")}} element, with each track represented by a separate VideoTrack object in the list. [To(\"FirstCharToLowerCase\")] public class VideoTrackList : EventTarget Inheritance object EventTarget VideoTrackList Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Retrieve an instance of this object with 'HTMLMediaElement.VideoTracks'. The individual tracks can be accessed using array syntax or functions such as {{jsxref(\"Array.forEach\", \"forEach()\")}} for example. See also on MDN Properties Length The read-only VideoTrackList property length returns the number of entries in the VideoTrackList, each of which is a VideoTrack representing one video track in the media element. public ulong Length { get; } Property Value ulong A number indicating how many video tracks are included in the VideoTrackList. Each track can be accessed by treating the VideoTrackList as an array of objects of type VideoTrack. Remarks A value of 0 indicates that there are no video tracks in the media. See also on MDN Onaddtrack public EventHandlerNonNull Onaddtrack { get; set; } Property Value EventHandlerNonNull Onchange public EventHandlerNonNull Onchange { get; set; } Property Value EventHandlerNonNull Onremovetrack public EventHandlerNonNull Onremovetrack { get; set; } Property Value EventHandlerNonNull SelectedIndex The read-only VideoTrackList property selectedIndex returns the index of the currently selected track, if any, or -1 otherwise. public long SelectedIndex { get; } Property Value long A number indicating the index of the currently selected track, if any, or -1 otherwise. Remarks See also on MDN Methods GetTrackById(string) The VideoTrackList method getTrackById() returns the first VideoTrack object from the track list whose {{domxref(\"VideoTrack.id\", &quot;id&quot;)}} matches the specified string. public VideoTrack? GetTrackById(string id) Parameters id string Returns VideoTrack A VideoTrack object indicating the first track found within the VideoTrackList whose id matches the specified string. If no match is found, this method returns null.The tracks are searched in their natural order; that is, in the order defined by the media resource itself, or, if the resource doesn&apos;t define an order, the relative order in which the tracks are declared by the media resource. Remarks This lets you find a specified track if you know its ID string. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoTransferCharacteristics.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoTransferCharacteristics.html",
    "title": "Enum VideoTransferCharacteristics | CSharpToJavaScript",
    "keywords": "Enum VideoTransferCharacteristics Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum VideoTransferCharacteristics Fields Bt709 = 0 Hlg = 5 Iec6196621 = 2 Linear = 3 Pq = 4 Smpte170m = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.ViewTimeline.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ViewTimeline.html",
    "title": "Class ViewTimeline | CSharpToJavaScript",
    "keywords": "Class ViewTimeline Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ViewTimeline interface of the {{domxref(&quot;Web Animations API&quot;, &quot;Web Animations API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a view progress timeline (see CSS scroll-driven animations for more details). [To(\"FirstCharToLowerCase\")] public class ViewTimeline : ScrollTimeline Inheritance object AnimationTimeline ScrollTimeline ViewTimeline Inherited Members ScrollTimeline.Source ScrollTimeline.Axis AnimationTimeline.GetCurrentTime(AnimationTimeOptions) AnimationTimeline.CurrentTime AnimationTimeline.Duration AnimationTimeline.Play(AnimationEffect) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Pass a ViewTimeline instance to the Animation() constructor or the Element.Animate method to specify it as the timeline that will control the progress of the animation. -Web Animations API -CSS scroll-driven animations -AnimationTimeline, ScrollTimeline See also on MDN Constructors ViewTimeline() public ViewTimeline() ViewTimeline(ViewTimelineOptions) The ViewTimeline() constructor creates a new ViewTimeline object instance. public ViewTimeline(ViewTimelineOptions options) Parameters options ViewTimelineOptions Remarks -Web Animations API -CSS scroll-driven animations -ViewTimeline -AnimationTimeline, ScrollTimeline See also on MDN Properties EndOffset The endOffset read-only property of the ViewTimeline interface returns a CSSNumericValue representing the ending (100% progress) scroll position of the timeline as an offset from the start of the overflowing section of content in the scroller. public Unsupported EndOffset { get; } Property Value Unsupported A CSSNumericValue. Remarks -Web Animations API -CSS scroll-driven animations -ViewTimeline -AnimationTimeline, ScrollTimeline See also on MDN StartOffset The startOffset read-only property of the ViewTimeline interface returns a CSSNumericValue representing the starting (0% progress) scroll position of the timeline as an offset from the start of the overflowing section of content in the scroller. public Unsupported StartOffset { get; } Property Value Unsupported A CSSNumericValue. Remarks -Web Animations API -CSS scroll-driven animations -ViewTimeline -AnimationTimeline, ScrollTimeline See also on MDN Subject The subject read-only property of the ViewTimeline interface returns a reference to the subject element whose visibility within its nearest ancestor scrollable element (scroller) is driving the progress of the timeline. public Element Subject { get; } Property Value Element An Element. Remarks -Web Animations API -CSS scroll-driven animations -ViewTimeline -AnimationTimeline, ScrollTimeline See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ViewTimelineOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ViewTimelineOptions.html",
    "title": "Class ViewTimelineOptions | CSharpToJavaScript",
    "keywords": "Class ViewTimelineOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ViewTimelineOptions Inheritance object ViewTimelineOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Axis public ScrollAxis Axis Field Value ScrollAxis Inset public Union86 Inset Field Value Union86 Subject public Element Subject Field Value Element"
  },
  "api/CSharpToJavaScript.APIs.JS.ViewTransition.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ViewTransition.html",
    "title": "Class ViewTransition | CSharpToJavaScript",
    "keywords": "Class ViewTransition Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ViewTransition interface of the {{domxref(&quot;View Transitions API&quot;, &quot;View Transitions API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a view transition, and provides functionality to react to the transition reaching different states (e.g. ready to run the animation, or animation finished) or skip the transition altogether. [To(\"FirstCharToLowerCase\")] public class ViewTransition Inheritance object ViewTransition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This object type is returned by the StartViewTransition(UpdateCallback?) method. When startViewTransition() is invoked, a sequence of steps is followed as explained in The view transition process. This also explains when the different promises fulfill. -Smooth and simple transitions with the View Transitions API See also on MDN Properties Finished The finished read-only property of the ViewTransition interface is a {{jsxref(\"Promise\")}} that fulfills once the transition animation is finished, and the new page view is visible and interactive to the user. public Task<GlobalObject.Undefined> Finished { get; } Property Value Task<GlobalObject.Undefined> A promise. Remarks finished only rejects if the callback passed to StartViewTransition(UpdateCallback?)throws or returns a promise that rejects, which indicates that the new state of the page wasn't created. If a transition animation fails to start, or is skipped during the animation using SkipTransition(), the end state is still reached therefore finished still fulfills. -Smooth and simple transitions with the View Transitions API See also on MDN Ready The ready read-only property of the ViewTransition interface is a {{jsxref(\"Promise\")}} that fulfills once the pseudo-element tree is created and the transition animation is about to start. public Task<GlobalObject.Undefined> Ready { get; } Property Value Task<GlobalObject.Undefined> A promise. Remarks ready will reject if the transition cannot begin. This can be due to misconfiguration, for example duplicate {{cssxref(\"view-transition-name\")}}s, or if the callback passed to StartViewTransition(UpdateCallback?) throws or returns a promise that rejects. -Smooth and simple transitions with the View Transitions API See also on MDN UpdateCallbackDone The updateCallbackDone read-only property of the ViewTransition interface is a {{jsxref(\"Promise\")}} that fulfills when the promise returned by the StartViewTransition(UpdateCallback?)'s callback fulfills, or rejects when it rejects. public Task<GlobalObject.Undefined> UpdateCallbackDone { get; } Property Value Task<GlobalObject.Undefined> A promise. Remarks updateCallbackDone is useful when you don&apos;t care about the success/failure of the transition animation, and just want to know if and when the DOM is updated. -Smooth and simple transitions with the View Transitions API See also on MDN Methods SkipTransition() The skipTransition() method of the ViewTransition interface skips the animation part of the view transition, but doesn't skip running the StartViewTransition(UpdateCallback?) callback that updates the DOM. public GlobalObject.Undefined SkipTransition() Returns GlobalObject.Undefined undefined. Remarks -Smooth and simple transitions with the View Transitions API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.VisibilityStateEntry.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VisibilityStateEntry.html",
    "title": "Class VisibilityStateEntry | CSharpToJavaScript",
    "keywords": "Class VisibilityStateEntry Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The VisibilityStateEntry interface provides timings of page visibility state changes, i.e., when a tab changes from the foreground to the background or vice versa. [To(\"FirstCharToLowerCase\")] public class VisibilityStateEntry Inheritance object VisibilityStateEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This can be used to pinpoint visibility changes on the performance timeline, and cross-reference them against other performance entries such as \"first-contentful-paint\" (see PerformancePaintTiming). There are two key visibility state change times that this API reports on: The performance timeline will always have a &quot;visibility-state&quot; entry with a startTime of 0 and a name representing the initial page visibility state. NOTE Note: Like other Performance APIs, this API extends PerformanceEntry. Page Visibility API See also on MDN Properties Duration public ulong Duration { get; } Property Value ulong EntryType public string EntryType { get; } Property Value string Name public string Name { get; } Property Value string StartTime public Unsupported StartTime { get; } Property Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.VoidFunction.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VoidFunction.html",
    "title": "Struct VoidFunction | CSharpToJavaScript",
    "keywords": "Struct VoidFunction Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct VoidFunction Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.WGSLLanguageFeatures.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WGSLLanguageFeatures.html",
    "title": "Class WGSLLanguageFeatures | CSharpToJavaScript",
    "keywords": "Class WGSLLanguageFeatures Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WGSLLanguageFeatures interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} is a setlike object that reports the WGSL language extensions supported by the WebGPU implementation. [To(\"FirstCharToLowerCase\")] public class WGSLLanguageFeatures Inheritance object WGSLLanguageFeatures Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The WGSLLanguageFeatures object is accessed via the WgslLanguageFeatures property. NOTE Note: Not all WGSL language extensions are available to WebGPU in all browsers that support the API. We recommend you thoroughly test any extensions you choose to use. -WebGPU API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WaveShaperNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WaveShaperNode.html",
    "title": "Class WaveShaperNode | CSharpToJavaScript",
    "keywords": "Class WaveShaperNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WaveShaperNode interface represents a non-linear distorter. [To(\"FirstCharToLowerCase\")] public class WaveShaperNode : AudioNode Inheritance object EventTarget AudioNode WaveShaperNode Inherited Members AudioNode.Connect(AudioNode, ulong, ulong) AudioNode.Connect(AudioParam, ulong) AudioNode.Disconnect() AudioNode.Disconnect(ulong) AudioNode.Disconnect(AudioNode) AudioNode.Disconnect(AudioNode, ulong) AudioNode.Disconnect(AudioNode, ulong, ulong) AudioNode.Disconnect(AudioParam) AudioNode.Disconnect(AudioParam, ulong) AudioNode.Context AudioNode.NumberOfInputs AudioNode.NumberOfOutputs AudioNode.ChannelCount AudioNode.ChannelCountMode AudioNode.ChannelInterpretation EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It is an AudioNode that uses a curve to apply a wave shaping distortion to the signal. Beside obvious distortion effects, it is often used to add a warm feeling to the signal. A WaveShaperNode always has exactly one input and one output. -Using the Web Audio API See also on MDN Constructors WaveShaperNode() public WaveShaperNode() WaveShaperNode(BaseAudioContext, WaveShaperOptions) The WaveShaperNode() constructor of the Web Audio API creates a new WaveShaperNode object which is an AudioNode that represents a non-linear distorter. public WaveShaperNode(BaseAudioContext context, WaveShaperOptions options) Parameters context BaseAudioContext options WaveShaperOptions Remarks See also on MDN Properties Curve The curve property of the WaveShaperNode interface is a {{jsxref(\"Float32Array\")}} of numbers describing the distortion to apply. public float? Curve { get; set; } Property Value float? A Float32Array. Remarks The mid-element of the array is applied to any signal value of 0, the first one to signal values of -1, and the last to signal values of 1; values lower than -1 or greater than 1 are treated like -1 or 1 respectively. If necessary, intermediate values of the distortion curve are linearly interpolated. NOTE Note: The array can be a null value: in that case, no distortion is applied to the input signal. -Using the Web Audio API See also on MDN Oversample The oversample property of the WaveShaperNode interface is an enumerated value indicating if oversampling must be used. Oversampling is a technique for creating more samples (up-sampling) before applying a distortion effect to the audio signal. public OverSampleType Oversample { get; set; } Property Value OverSampleType One of &apos;none&apos;, &apos;2x&apos;, or &apos;4x&apos;. Remarks Once applied, the number of samples is reduced to its initial numbers. This leads to better results by avoiding some aliasing, but comes at the expense of a lower precision shaping curve. The possible oversample values are: Value Effect &apos;none&apos; Do not perform any oversampling. &apos;2x&apos; Double the amount of samples before applying the shaping curve. &apos;4x&apos; Multiply by 4 the amount of samples before applying the shaping curve. -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WaveShaperOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WaveShaperOptions.html",
    "title": "Class WaveShaperOptions | CSharpToJavaScript",
    "keywords": "Class WaveShaperOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WaveShaperOptions : AudioNodeOptions Inheritance object AudioNodeOptions WaveShaperOptions Inherited Members AudioNodeOptions.ChannelCount AudioNodeOptions.ChannelCountMode AudioNodeOptions.ChannelInterpretation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Curve public List<Number> Curve Field Value List<Number> Oversample public OverSampleType Oversample Field Value OverSampleType"
  },
  "api/CSharpToJavaScript.APIs.JS.WebAssembly.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebAssembly.html",
    "title": "Class WebAssembly | CSharpToJavaScript",
    "keywords": "Class WebAssembly Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WebAssembly Inheritance object WebAssembly Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Compile(Union67) public Task<Module> Compile(Union67 bytes) Parameters bytes Union67 Returns Task<Module> CompileStreaming(Task<Response>) public Task<Module> CompileStreaming(Task<Response> source) Parameters source Task<Response> Returns Task<Module> Instantiate(Module, object) public Task<Instance> Instantiate(Module moduleObject, object importObject) Parameters moduleObject Module importObject object Returns Task<Instance> Instantiate(Union67, object) public Task<WebAssemblyInstantiatedSource> Instantiate(Union67 bytes, object importObject) Parameters bytes Union67 importObject object Returns Task<WebAssemblyInstantiatedSource> InstantiateStreaming(Task<Response>, object) public Task<WebAssemblyInstantiatedSource> InstantiateStreaming(Task<Response> source, object importObject) Parameters source Task<Response> importObject object Returns Task<WebAssemblyInstantiatedSource> Validate(Union67) public bool Validate(Union67 bytes) Parameters bytes Union67 Returns bool"
  },
  "api/CSharpToJavaScript.APIs.JS.WebAssemblyInstantiatedSource.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebAssemblyInstantiatedSource.html",
    "title": "Class WebAssemblyInstantiatedSource | CSharpToJavaScript",
    "keywords": "Class WebAssemblyInstantiatedSource Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WebAssemblyInstantiatedSource Inheritance object WebAssemblyInstantiatedSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Instance public required Instance Instance Field Value Instance Module public required Module Module Field Value Module"
  },
  "api/CSharpToJavaScript.APIs.JS.WebCodecsErrorCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebCodecsErrorCallback.html",
    "title": "Struct WebCodecsErrorCallback | CSharpToJavaScript",
    "keywords": "Struct WebCodecsErrorCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct WebCodecsErrorCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.WebGLContextAttributes.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebGLContextAttributes.html",
    "title": "Class WebGLContextAttributes | CSharpToJavaScript",
    "keywords": "Class WebGLContextAttributes Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WebGLContextAttributes Inheritance object WebGLContextAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields XrCompatible public bool XrCompatible Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.WebGLRenderingContextBase.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebGLRenderingContextBase.html",
    "title": "Interface WebGLRenderingContextBase | CSharpToJavaScript",
    "keywords": "Interface WebGLRenderingContextBase Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface WebGLRenderingContextBase Methods MakeXRCompatible() Task<GlobalObject.Undefined> MakeXRCompatible() Returns Task<GlobalObject.Undefined>"
  },
  "api/CSharpToJavaScript.APIs.JS.WebSocket.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebSocket.html",
    "title": "Class WebSocket | CSharpToJavaScript",
    "keywords": "Class WebSocket Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebSocket object provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection. [To(\"FirstCharToLowerCase\")] public class WebSocket : EventTarget Inheritance object EventTarget WebSocket Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To construct a WebSocket, use the WebSocket() constructor. AvailableInWorkers -Writing WebSocket client applications See also on MDN Constructors WebSocket() public WebSocket() WebSocket(string, Union69) The WebSocket() constructor returns a new WebSocket object. public WebSocket(string url, Union69 protocols) Parameters url string protocols Union69 Remarks -RFC 6455 (the WebSocket Protocol specification) See also on MDN Fields CLOSED public const ushort CLOSED = 3 Field Value ushort CLOSING public const ushort CLOSING = 2 Field Value ushort CONNECTING public const ushort CONNECTING = 0 Field Value ushort OPEN public const ushort OPEN = 1 Field Value ushort Properties BinaryType The WebSocket.binaryType property controls the type of binary data being received over the WebSocket connection. public BinaryType BinaryType { get; set; } Property Value BinaryType A string: Remarks See also on MDN BufferedAmount The WebSocket.bufferedAmount read-only property returns the number of bytes of data that have been queued using calls to send() but not yet transmitted to the network. This value resets to zero once all queued data has been sent. This value does not reset to zero when the connection is closed; if you keep calling send(), this will continue to climb. public ulong BufferedAmount { get; } Property Value ulong An unsigned long. Remarks See also on MDN Extensions The WebSocket.extensions read-only property returns the extensions selected by the server. This is currently only the empty string or a list of extensions as negotiated by the connection. public string Extensions { get; } Property Value string A string. Remarks See also on MDN Onclose public EventHandlerNonNull Onclose { get; set; } Property Value EventHandlerNonNull Onerror public EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull Onmessage public EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onopen public EventHandlerNonNull Onopen { get; set; } Property Value EventHandlerNonNull Protocol The WebSocket.protocol read-only property returns the name of the sub-protocol the server selected; this will be one of the strings specified in the protocols parameter when creating the WebSocket object, or the empty string if no connection is established. public string Protocol { get; } Property Value string A string. Remarks See also on MDN ReadyState The WebSocket.readyState read-only property returns the current state of the WebSocket connection. public ushort ReadyState { get; } Property Value ushort One of the following unsigned short values: Value State Description 0 CONNECTING Socket has been created. The connection is not yet open. 1 OPEN The connection is open and ready to communicate. 2 CLOSING The connection is in the process of closing. 3 CLOSED The connection is closed or couldn&apos;t be opened. Remarks See also on MDN Url The WebSocket.url read-only property returns the absolute URL of the WebSocket as resolved by the constructor. public string Url { get; } Property Value string A string. Remarks See also on MDN Methods Close(ushort, string) The WebSocket.close() method closes the WebSocket connection or connection attempt, if any. If the connection is already CLOSED, this method does nothing. public GlobalObject.Undefined Close(ushort code, string reason) Parameters code ushort reason string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: The process of closing the connection begins with a closing handshake, and the close() method does not discard previously-sent messages before starting that closing handshake; even if the user agent is still busy sending those messages, the handshake will only start after the messages are sent. -RFC 6455 (the WebSocket Protocol specification) See also on MDN Send(Union70) The WebSocket.send() method enqueues the specified data to be transmitted to the server over the WebSocket connection, increasing the value of bufferedAmount by the number of bytes needed to contain the data. If the data can&apos;t be sent (for example, because it needs to be buffered but the buffer is full), the socket is closed automatically. The browser will throw an exception if you call send() when the connection is in the CONNECTING state. If you call send() when the connection is in the CLOSING or CLOSED states, the browser will silently discard the data. public GlobalObject.Undefined Send(Union70 data) Parameters data Union70 Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransport.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransport.html",
    "title": "Class WebTransport | CSharpToJavaScript",
    "keywords": "Class WebTransport Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebTransport interface of the {{domxref(&quot;WebTransport API&quot;, &quot;WebTransport API&quot;, &quot;&quot;, &quot;nocode&quot;)}} provides functionality to enable a user agent to connect to an HTTP/3 server, initiate reliable and unreliable transport in either or both directions, and close the connection once it is no longer needed. [To(\"FirstCharToLowerCase\")] public class WebTransport Inheritance object WebTransport Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN Constructors WebTransport() public WebTransport() WebTransport(string, WebTransportOptions) The WebTransport() constructor creates a new WebTransport object instance. public WebTransport(string url, WebTransportOptions options) Parameters url string options WebTransportOptions Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN Properties Closed The closed read-only property of the WebTransport interface returns a promise that resolves when the transport is closed. public Task<WebTransportCloseInfo> Closed { get; } Property Value Task<WebTransportCloseInfo> A Promise that resolves to an object containing the following properties: Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN CongestionControl The congestionControl read-only property of the WebTransport interface indicates the application's preference for either high throughput or low-latency when sending data. public WebTransportCongestionControl CongestionControl { get; } Property Value WebTransportCongestionControl A string with one of the following values: Remarks The value is set in the WebTransport() constructor options. AvailableInWorkers See also on MDN Datagrams The datagrams read-only property of the WebTransport interface returns a WebTransportDatagramDuplexStream instance that can be used to send and receive datagrams — unreliable data transmission. public WebTransportDatagramDuplexStream Datagrams { get; } Property Value WebTransportDatagramDuplexStream A WebTransportDatagramDuplexStream object. Remarks &quot;Unreliable&quot; means that transmission of data is not guaranteed, nor is arrival in a specific order. This is fine in some situations and provides very fast delivery. For example, you might want to transmit regular game state updates where each message supersedes the last one that arrives, and order is not important. AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN Draining public Task<GlobalObject.Undefined> Draining { get; } Property Value Task<GlobalObject.Undefined> IncomingBidirectionalStreams The incomingBidirectionalStreams read-only property of the WebTransport interface represents one or more bidirectional streams opened by the server. Returns a ReadableStream of WebTransportBidirectionalStream objects. Each one can be used to reliably read data from the server and write data back to it. public ReadableStream IncomingBidirectionalStreams { get; } Property Value ReadableStream A ReadableStream of WebTransportBidirectionalStream objects. Remarks \"Reliable\" means that transmission and order of data are guaranteed. This provides slower delivery (albeit faster than with WebSockets) than Datagrams, but is needed in situations where reliability and ordering are important, like chat applications. AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN IncomingUnidirectionalStreams The incomingUnidirectionalStreams read-only property of the WebTransport interface represents one or more unidirectional streams opened by the server. Returns a ReadableStream of WebTransportReceiveStream objects. Each one can be used to reliably read data from the server. public ReadableStream IncomingUnidirectionalStreams { get; } Property Value ReadableStream A ReadableStream of WebTransportReceiveStream objects. Remarks \"Reliable\" means that transmission and order of data are guaranteed. This provides slower delivery (albeit faster than with WebSockets) than Datagrams, but is needed in situations where reliability and ordering are important, like chat applications. AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN Ready The ready read-only property of the WebTransport interface returns a promise that resolves when the transport is ready to use. public Task<GlobalObject.Undefined> Ready { get; } Property Value Task<GlobalObject.Undefined> A Promise that resolves to undefined. Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN Reliability The reliability read-only property of the WebTransport interface indicates whether the connection supports reliable transports only, or whether it also supports unreliable transports (such as UDP). public WebTransportReliabilityMode Reliability { get; } Property Value WebTransportReliabilityMode A string with one of the following values: Remarks AvailableInWorkers See also on MDN Methods Close(WebTransportCloseInfo) The close() method of the WebTransport interface closes an ongoing WebTransport session. public GlobalObject.Undefined Close(WebTransportCloseInfo closeInfo) Parameters closeInfo WebTransportCloseInfo Returns GlobalObject.Undefined undefined. Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN CreateBidirectionalStream(WebTransportSendStreamOptions) The createBidirectionalStream() method of the WebTransport interface asynchronously opens and returns a bidirectional stream. public Task<WebTransportBidirectionalStream> CreateBidirectionalStream(WebTransportSendStreamOptions options) Parameters options WebTransportSendStreamOptions Returns Task<WebTransportBidirectionalStream> A {{jsxref(\"Promise\")}} that resolves to a WebTransportBidirectionalStream object. Remarks The method returns a {{jsxref(\"Promise\")}} that resolves to a WebTransportBidirectionalStream object, which has readable and writable properties that can be used to reliably read from and write to the server. &quot;Reliable&quot; means that transmission and order of data are guaranteed. This provides slower delivery (albeit faster than with WebSockets) than Datagrams, but is needed in situations where reliability and ordering are important, like chat applications. AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN CreateUnidirectionalStream(WebTransportSendStreamOptions) The createUnidirectionalStream() method of the WebTransport interface asynchronously opens a unidirectional stream. public Task<WebTransportSendStream> CreateUnidirectionalStream(WebTransportSendStreamOptions options) Parameters options WebTransportSendStreamOptions Returns Task<WebTransportSendStream> A {{jsxref(\"Promise\")}} that resolves to a WritableStream object. Remarks The method returns a {{jsxref(\"Promise\")}} that resolves to a WritableStream object, which can be used to reliably write data to the server. \"Reliable\" means that transmission and order of data are guaranteed. This provides slower delivery (albeit faster than with WebSockets) than Datagrams, but is needed in situations where reliability and ordering are important, like chat applications. AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN GetStats() The getStats() method of the WebTransport interface asynchronously returns an object containing HTTP/3 connection statistics. public Task<WebTransportStats> GetStats() Returns Task<WebTransportStats> A Promise that resolves to a object containing HTTP/3 connection statistics. The returned object may have the following properties/statistics: Remarks AvailableInWorkers See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportBidirectionalStream.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportBidirectionalStream.html",
    "title": "Class WebTransportBidirectionalStream | CSharpToJavaScript",
    "keywords": "Class WebTransportBidirectionalStream Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebTransportBidirectionalStream interface of the {{domxref(&quot;WebTransport API&quot;, &quot;WebTransport API&quot;, &quot;&quot;, \"nocode\")}} represents a bidirectional stream created by a server or a client that can be used for reliable transport. Provides access to a ReadableStream for reading incoming data, and a WritableStream for writing outgoing data. [To(\"FirstCharToLowerCase\")] public class WebTransportBidirectionalStream Inheritance object WebTransportBidirectionalStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN Properties Readable The readable read-only property of the WebTransportBidirectionalStream interface returns a ReadableStream instance that can be used to reliably read incoming data. public WebTransportReceiveStream Readable { get; } Property Value WebTransportReceiveStream A ReadableStream. Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN Writable The writable read-only property of the WebTransportBidirectionalStream interface returns a WritableStream instance that can be used to write outgoing data. public WebTransportSendStream Writable { get; } Property Value WebTransportSendStream A WritableStream. Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportCloseInfo.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportCloseInfo.html",
    "title": "Class WebTransportCloseInfo | CSharpToJavaScript",
    "keywords": "Class WebTransportCloseInfo Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WebTransportCloseInfo Inheritance object WebTransportCloseInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CloseCode public ulong CloseCode Field Value ulong Reason public string Reason Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportCongestionControl.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportCongestionControl.html",
    "title": "Enum WebTransportCongestionControl | CSharpToJavaScript",
    "keywords": "Enum WebTransportCongestionControl Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The congestionControl read-only property of the WebTransport interface indicates the application's preference for either high throughput or low-latency when sending data. public enum WebTransportCongestionControl Fields Default = 0 LowLatency = 2 Throughput = 1 Remarks The value is set in the WebTransport() constructor options. AvailableInWorkers See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportDatagramDuplexStream.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportDatagramDuplexStream.html",
    "title": "Class WebTransportDatagramDuplexStream | CSharpToJavaScript",
    "keywords": "Class WebTransportDatagramDuplexStream Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebTransportDatagramDuplexStream interface of the {{domxref(&quot;WebTransport API&quot;, &quot;WebTransport API&quot;, &quot;&quot;, \"nocode\")}} represents a duplex stream that can be used for unreliable transport of datagrams between client and server. Provides access to a ReadableStream for reading incoming datagrams, a WritableStream for writing outgoing datagrams, and various settings and statistics related to the stream. [To(\"FirstCharToLowerCase\")] public class WebTransportDatagramDuplexStream Inheritance object WebTransportDatagramDuplexStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This is accessed via the Datagrams property. &quot;Unreliable&quot; means that transmission of data is not guaranteed, nor is arrival in a specific order. This is fine in some situations and provides very fast delivery. For example, you might want to transmit regular game state updates where each message supersedes the last one that arrives, and order is not important. AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN Properties IncomingHighWaterMark The incomingHighWaterMark property of the WebTransportDatagramDuplexStream interface gets or sets the high water mark for incoming chunks of data — this is the maximum size, in chunks, that the incoming ReadableStream's internal queue can reach before it is considered full. See Internal queues and queuing strategies for more information. public double IncomingHighWaterMark { get; set; } Property Value double A number. Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN IncomingMaxAge The incomingMaxAge property of the WebTransportDatagramDuplexStream interface gets or sets the maximum age for incoming datagrams, in milliseconds. public double IncomingMaxAge { get; set; } Property Value double A number, or null if no maximum age has been set. Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN MaxDatagramSize The maxDatagramSize read-only property of the WebTransportDatagramDuplexStream interface returns the maximum allowable size of outgoing datagrams, in bytes, that can be written to Writable. public ulong MaxDatagramSize { get; } Property Value ulong A number. Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN OutgoingHighWaterMark The outgoingHighWaterMark property of the WebTransportDatagramDuplexStream interface gets or sets the high water mark for outgoing chunks of data — this is the maximum size, in chunks, that the outgoing WritableStream's internal queue can reach before it is considered full. See Internal queues and queuing strategies for more information. public double OutgoingHighWaterMark { get; set; } Property Value double A number. Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN OutgoingMaxAge The outgoingMaxAge property of the WebTransportDatagramDuplexStream interface gets or sets the maximum age for outgoing datagrams, in milliseconds. public double OutgoingMaxAge { get; set; } Property Value double A number, or null if no maximum age has been set. Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN Readable The readable read-only property of the WebTransportDatagramDuplexStream interface returns a ReadableStream instance that can be used to unreliably read incoming datagrams from the stream. public ReadableStream Readable { get; } Property Value ReadableStream A ReadableStream. Remarks &quot;Unreliably&quot; means that transmission of data is not guaranteed, nor is arrival in a specific order. This is fine in some situations and provides very fast delivery. For example, you might want to transmit regular game state updates where each message supersedes the last one that arrives, and order is not important. AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN Writable The writable read-only property of the WebTransportDatagramDuplexStream interface returns a WritableStream instance that can be used to unreliably write outgoing datagrams to the stream. public WritableStream Writable { get; } Property Value WritableStream A WritableStream. Remarks &quot;Unreliably&quot; means that transmission of data is not guaranteed, nor is arrival in a specific order. This is fine in some situations and provides very fast delivery. For example, you might want to transmit regular game state updates where each message supersedes the last one that arrives, and order is not important. AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportDatagramStats.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportDatagramStats.html",
    "title": "Class WebTransportDatagramStats | CSharpToJavaScript",
    "keywords": "Class WebTransportDatagramStats Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WebTransportDatagramStats Inheritance object WebTransportDatagramStats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DroppedIncoming public ulong DroppedIncoming Field Value ulong ExpiredOutgoing public ulong ExpiredOutgoing Field Value ulong LostOutgoing public ulong LostOutgoing Field Value ulong Timestamp public Unsupported Timestamp Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportError.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportError.html",
    "title": "Class WebTransportError | CSharpToJavaScript",
    "keywords": "Class WebTransportError Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebTransportError interface of the {{domxref(&quot;WebTransport API&quot;, &quot;WebTransport API&quot;, &quot;&quot;, \"nocode\")}} represents an error related to the API, which can arise from server errors, network connection problems, or client-initiated abort operations (for example, arising from a Abort(dynamic) call). [To(\"FirstCharToLowerCase\")] public class WebTransportError : DOMException Inheritance object DOMException WebTransportError Inherited Members DOMException.Name DOMException.Message DOMException.Code DOMException.INDEX_SIZE_ERR DOMException.DOMSTRING_SIZE_ERR DOMException.HIERARCHY_REQUEST_ERR DOMException.WRONG_DOCUMENT_ERR DOMException.INVALID_CHARACTER_ERR DOMException.NO_DATA_ALLOWED_ERR DOMException.NO_MODIFICATION_ALLOWED_ERR DOMException.NOT_FOUND_ERR DOMException.NOT_SUPPORTED_ERR DOMException.INUSE_ATTRIBUTE_ERR DOMException.INVALID_STATE_ERR DOMException.SYNTAX_ERR DOMException.INVALID_MODIFICATION_ERR DOMException.NAMESPACE_ERR DOMException.INVALID_ACCESS_ERR DOMException.VALIDATION_ERR DOMException.TYPE_MISMATCH_ERR DOMException.SECURITY_ERR DOMException.NETWORK_ERR DOMException.ABORT_ERR DOMException.URL_MISMATCH_ERR DOMException.QUOTA_EXCEEDED_ERR DOMException.TIMEOUT_ERR DOMException.INVALID_NODE_TYPE_ERR DOMException.DATA_CLONE_ERR object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN Constructors WebTransportError() public WebTransportError() WebTransportError(string, WebTransportErrorOptions) The WebTransportError() constructor creates a new WebTransportError object instance. public WebTransportError(string message, WebTransportErrorOptions options) Parameters message string options WebTransportErrorOptions Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN Properties Source The source read-only property of the WebTransportError interface returns an enumerated value indicating the source of the error. public WebTransportErrorSource Source { get; } Property Value WebTransportErrorSource An enumerated value; can be either stream or session. Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN StreamErrorCode The streamErrorCode read-only property of the WebTransportError interface returns a number in the range 0-255 indicating the application protocol error code for this error, or null if one is not available. public ulong? StreamErrorCode { get; } Property Value ulong? A number, or null. Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportErrorOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportErrorOptions.html",
    "title": "Class WebTransportErrorOptions | CSharpToJavaScript",
    "keywords": "Class WebTransportErrorOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WebTransportErrorOptions Inheritance object WebTransportErrorOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Source public WebTransportErrorSource Source Field Value WebTransportErrorSource StreamErrorCode public ulong? StreamErrorCode Field Value ulong?"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportErrorSource.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportErrorSource.html",
    "title": "Enum WebTransportErrorSource | CSharpToJavaScript",
    "keywords": "Enum WebTransportErrorSource Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The source read-only property of the WebTransportError interface returns an enumerated value indicating the source of the error. public enum WebTransportErrorSource Fields Session = 1 Stream = 0 Remarks AvailableInWorkers -Using WebTransport -{{domxref(&quot;WebSockets API&quot;, &quot;WebSockets API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportHash.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportHash.html",
    "title": "Class WebTransportHash | CSharpToJavaScript",
    "keywords": "Class WebTransportHash Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WebTransportHash Inheritance object WebTransportHash Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Algorithm public string Algorithm Field Value string Value public Union67 Value Field Value Union67"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportOptions.html",
    "title": "Class WebTransportOptions | CSharpToJavaScript",
    "keywords": "Class WebTransportOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WebTransportOptions Inheritance object WebTransportOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AllowPooling public bool AllowPooling Field Value bool CongestionControl public WebTransportCongestionControl CongestionControl Field Value WebTransportCongestionControl RequireUnreliable public bool RequireUnreliable Field Value bool ServerCertificateHashes public List<WebTransportHash> ServerCertificateHashes Field Value List<WebTransportHash>"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportReceiveStream.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportReceiveStream.html",
    "title": "Class WebTransportReceiveStream | CSharpToJavaScript",
    "keywords": "Class WebTransportReceiveStream Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebTransportReceiveStream interface of the {{domxref(&quot;WebTransport API&quot;, &quot;WebTransport API&quot;, &quot;&quot;, \"nocode\")}} is a ReadableStream that can be used to read from an incoming unidirectional or bidirectional WebTransport stream from a server. [To(\"FirstCharToLowerCase\")] public class WebTransportReceiveStream : ReadableStream Inheritance object ReadableStream WebTransportReceiveStream Inherited Members ReadableStream.From(dynamic) ReadableStream.Locked ReadableStream.Cancel(dynamic) ReadableStream.GetReader(ReadableStreamGetReaderOptions) ReadableStream.PipeThrough(ReadableWritablePair, StreamPipeOptions) ReadableStream.PipeTo(WritableStream, StreamPipeOptions) ReadableStream.Tee() ReadableStream.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The stream is a readable byte stream of Uint8Array, and can be consumed using either a BYOB reader (ReadableStreamBYOBReader) or the default reader (ReadableStreamDefaultReader). Objects of this type are not constructed directly. Instead they are obtained using the WebTransport.incomingUnidirectionalStream property. WebTransportReceiveStream is a transferable object. AvailableInWorkers -Using WebTransport -{{domxref(&quot;Streams API&quot;, &quot;Streams API&quot;, &quot;&quot;, &quot;nocode&quot;)}} -WebTransport over HTTP/3 See also on MDN Methods GetStats() The getStats() method of the WebTransportReceiveStream interface asynchronously returns an object containing statistics for the current stream. public Task<WebTransportReceiveStreamStats> GetStats() Returns Task<WebTransportReceiveStreamStats> A Promise that resolves to a object containing statistics about the current stream. The returned object has the following properties: Remarks The statistics include the total number of ordered bytes that have arrived on this stream (ignoring network overhead, up until the first missing byte) and the total number that have been read by the application. It therefore provides a measure of how quickly the application is consuming bytes from the server on this particular stream. AvailableInWorkers See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportReceiveStreamStats.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportReceiveStreamStats.html",
    "title": "Class WebTransportReceiveStreamStats | CSharpToJavaScript",
    "keywords": "Class WebTransportReceiveStreamStats Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WebTransportReceiveStreamStats Inheritance object WebTransportReceiveStreamStats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BytesRead public ulong BytesRead Field Value ulong BytesReceived public ulong BytesReceived Field Value ulong Timestamp public Unsupported Timestamp Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportReliabilityMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportReliabilityMode.html",
    "title": "Enum WebTransportReliabilityMode | CSharpToJavaScript",
    "keywords": "Enum WebTransportReliabilityMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum WebTransportReliabilityMode Fields Pending = 0 ReliableOnly = 1 SupportsUnreliable = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportSendStream.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportSendStream.html",
    "title": "Class WebTransportSendStream | CSharpToJavaScript",
    "keywords": "Class WebTransportSendStream Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WebTransportSendStream : WritableStream Inheritance object WritableStream WebTransportSendStream Inherited Members WritableStream.Locked WritableStream.Abort(dynamic) WritableStream.Close() WritableStream.GetWriter() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties SendOrder public long? SendOrder { get; set; } Property Value long? Methods GetStats() public Task<WebTransportSendStreamStats> GetStats() Returns Task<WebTransportSendStreamStats>"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportSendStreamOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportSendStreamOptions.html",
    "title": "Class WebTransportSendStreamOptions | CSharpToJavaScript",
    "keywords": "Class WebTransportSendStreamOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WebTransportSendStreamOptions Inheritance object WebTransportSendStreamOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields SendOrder public long? SendOrder Field Value long?"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportSendStreamStats.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportSendStreamStats.html",
    "title": "Class WebTransportSendStreamStats | CSharpToJavaScript",
    "keywords": "Class WebTransportSendStreamStats Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WebTransportSendStreamStats Inheritance object WebTransportSendStreamStats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BytesAcknowledged public ulong BytesAcknowledged Field Value ulong BytesSent public ulong BytesSent Field Value ulong BytesWritten public ulong BytesWritten Field Value ulong Timestamp public Unsupported Timestamp Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.WebTransportStats.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WebTransportStats.html",
    "title": "Class WebTransportStats | CSharpToJavaScript",
    "keywords": "Class WebTransportStats Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WebTransportStats Inheritance object WebTransportStats Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BytesReceived public ulong BytesReceived Field Value ulong BytesSent public ulong BytesSent Field Value ulong Datagrams public WebTransportDatagramStats Datagrams Field Value WebTransportDatagramStats EstimatedSendRate public ulong? EstimatedSendRate Field Value ulong? MinRtt public Unsupported MinRtt Field Value Unsupported NumIncomingStreamsCreated public ulong NumIncomingStreamsCreated Field Value ulong NumOutgoingStreamsCreated public ulong NumOutgoingStreamsCreated Field Value ulong PacketsLost public ulong PacketsLost Field Value ulong PacketsReceived public ulong PacketsReceived Field Value ulong PacketsSent public ulong PacketsSent Field Value ulong RttVariation public Unsupported RttVariation Field Value Unsupported SmoothedRtt public Unsupported SmoothedRtt Field Value Unsupported Timestamp public Unsupported Timestamp Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.WheelEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WheelEvent.html",
    "title": "Class WheelEvent | CSharpToJavaScript",
    "keywords": "Class WheelEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WheelEvent interface represents events that occur due to the user moving a mouse wheel or similar input device. [To(\"FirstCharToLowerCase\")] public class WheelEvent : MouseEvent Inheritance object Event UIEvent MouseEvent WheelEvent Inherited Members MouseEvent.ScreenX MouseEvent.ScreenY MouseEvent.ClientX MouseEvent.ClientY MouseEvent.LayerX MouseEvent.LayerY MouseEvent.CtrlKey MouseEvent.ShiftKey MouseEvent.AltKey MouseEvent.MetaKey MouseEvent.Button MouseEvent.Buttons MouseEvent.RelatedTarget MouseEvent.GetModifierState(string) MouseEvent.InitMouseEvent(string, bool, bool, Window, long, long, long, long, long, bool, bool, bool, bool, Number, EventTarget) UIEvent.View UIEvent.Detail UIEvent.InitUIEvent(string, bool, bool, Window, long) UIEvent.Which Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: This is the standard wheel event interface to use. Old versions of browsers implemented the non-standard and non-cross-browser-compatible MouseWheelEvent and MouseScrollEvent interfaces. Use this interface and avoid the non-standard ones. NOTE Note: Do not confuse the Element/wheel_event event with the Element/scroll_event event. The default action of a wheel event is implementation-defined. Thus, a wheel event doesn&apos;t necessarily dispatch a scroll event. Even when it does, that doesn&apos;t mean that the delta* values in the wheel event necessarily reflect the content&apos;s scrolling direction. Therefore, do not rely on delta* properties to get the content's scrolling direction. Instead, detect value changes to Element.ScrollLeft and Element.ScrollTop of the target in the scroll event. -Element/wheel_event event -Interfaces replaced by this one:-Gecko's legacy mouse wheel event object: MouseScrollEvent See also on MDN Constructors WheelEvent() public WheelEvent() WheelEvent(string, WheelEventInit) The WheelEvent() constructor returns a new WheelEvent object. public WheelEvent(string type, WheelEventInit eventInitDict) Parameters type string eventInitDict WheelEventInit Remarks NOTE Note: If you construct a synthetic event using this constructor, that event will not be trusted, for security reasons. Only browser-generated WheelEvent objects are trusted and only trusted events trigger default actions. -The WheelEvent interface it belongs to. See also on MDN Fields DOM_DELTA_LINE public const ulong DOM_DELTA_LINE = 1 Field Value ulong DOM_DELTA_PAGE public const ulong DOM_DELTA_PAGE = 2 Field Value ulong DOM_DELTA_PIXEL public const ulong DOM_DELTA_PIXEL = 0 Field Value ulong Properties DeltaMode The WheelEvent.deltaMode read-only property returns an unsigned long representing the unit of the delta values scroll amount. Permitted values are: public ulong DeltaMode { get; } Property Value ulong An unsigned long. Remarks Constant Value Description DOM_DELTA_PIXEL 0x00 The delta values are specified in pixels. DOM_DELTA_LINE 0x01 The delta values are specified in lines. DOM_DELTA_PAGE 0x02 The delta values are specified in pages. -Element/wheel_event -WheelEvent See also on MDN DeltaX The WheelEvent.deltaX read-only property is a double representing the horizontal scroll amount in the DeltaMode unit. public Number DeltaX { get; } Property Value Number A number. Remarks -Element/wheel_event -WheelEvent See also on MDN DeltaY The WheelEvent.deltaY read-only property is a double representing the vertical scroll amount in the DeltaMode unit. public Number DeltaY { get; } Property Value Number A number. Remarks -Element/wheel_event -WheelEvent See also on MDN DeltaZ The WheelEvent.deltaZ read-only property is a double representing the scroll amount along the z-axis, in the DeltaMode unit. public Number DeltaZ { get; } Property Value Number A number. Remarks -Element/wheel_event -WheelEvent See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WheelEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WheelEventInit.html",
    "title": "Class WheelEventInit | CSharpToJavaScript",
    "keywords": "Class WheelEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WheelEventInit : MouseEventInit Inheritance object EventInit UIEventInit EventModifierInit MouseEventInit WheelEventInit Inherited Members MouseEventInit.ScreenX MouseEventInit.ScreenY MouseEventInit.ClientX MouseEventInit.ClientY MouseEventInit.Button MouseEventInit.Buttons MouseEventInit.RelatedTarget EventModifierInit.CtrlKey EventModifierInit.ShiftKey EventModifierInit.AltKey EventModifierInit.MetaKey EventModifierInit.ModifierAltGraph EventModifierInit.ModifierCapsLock EventModifierInit.ModifierFn EventModifierInit.ModifierFnLock EventModifierInit.ModifierHyper EventModifierInit.ModifierNumLock EventModifierInit.ModifierScrollLock EventModifierInit.ModifierSuper EventModifierInit.ModifierSymbol EventModifierInit.ModifierSymbolLock UIEventInit.View UIEventInit.Detail UIEventInit.Which EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DeltaMode public ulong DeltaMode Field Value ulong DeltaX public Number DeltaX Field Value Number DeltaY public Number DeltaY Field Value Number DeltaZ public Number DeltaZ Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.Window.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Window.html",
    "title": "Class Window | CSharpToJavaScript",
    "keywords": "Class Window Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Window interface represents a window containing a DOM document; the document property points to the DOM document loaded in that window. [To(\"Default\")] public class Window : EventTarget, GlobalEventHandlers, WindowEventHandlers, WindowOrWorkerGlobalScope, AnimationFrameProvider, WindowSessionStorage, WindowLocalStorage Inheritance object EventTarget Window Implements GlobalEventHandlers WindowEventHandlers WindowOrWorkerGlobalScope AnimationFrameProvider WindowSessionStorage WindowLocalStorage Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A window for a given document can be obtained using the DefaultView property. A global variable, window, representing the window in which the script is running, is exposed to JavaScript code. The Window interface is home to a variety of functions, namespaces, objects, and constructors which are not necessarily directly associated with the concept of a user interface window. However, the Window interface is a suitable place to include these items that need to be globally available. Many of these are documented in the JavaScript Reference and the DOM Reference. In a tabbed browser, each tab is represented by its own Window object; the global window seen by JavaScript code running within a given tab always represents the tab in which the code is running. That said, even in a tabbed browser, some properties and methods still apply to the overall window that contains the tab, such as Window.ResizeTo and Window.InnerHeight. Generally, anything that can't reasonably pertain to a tab pertains to the window instead. See also on MDN Properties ClientInformation [To(\"FirstCharToLowerCase\")] public Navigator ClientInformation { get; } Property Value Navigator Closed The Window.closed read-only property indicates whether the referenced window is closed or not. [To(\"FirstCharToLowerCase\")] public bool Closed { get; } Property Value bool A boolean value. Possible values: Remarks See also on MDN CustomElements The customElements read-only property of the Window interface returns a reference to the CustomElementRegistry object, which can be used to register new custom elements and get information about previously registered custom elements. [To(\"FirstCharToLowerCase\")] public CustomElementRegistry CustomElements { get; } Property Value CustomElementRegistry Remarks See also on MDN Document window.document returns a reference to the document contained in the window. [To(\"FirstCharToLowerCase\")] public Document Document { get; } Property Value Document A document object. Remarks See also on MDN Event IMPORTANT Deprecated The read-only Window property event returns the Event which is currently being handled by the site's code. Outside the context of an event handler, the value is always undefined. [To(\"FirstCharToLowerCase\")] public Union40 Event { get; } Property Value Union40 Remarks You should avoid using this property in new code, and should instead use the Event passed into the event handler function. This property is not universally supported and even when supported introduces potential fragility to your code. NOTE Note: This property can be fragile, in that there may be situations in which the returned Event is not the expected value. In addition, Window.event is not accurate for events dispatched within shadow tree. -SrcElement See also on MDN External IMPORTANT Deprecated The external property of the Window API returns an instance of the External interface, which was intended to contain functions related to adding external search providers to the browser. However, this is now deprecated, and the contained methods are now dummy functions that do nothing as per spec. [To(\"FirstCharToLowerCase\")] public External External { get; } Property Value External Remarks See also on MDN FrameElement The Window.frameElement property returns the element (such as iframe or object) in which the window is embedded. [To(\"FirstCharToLowerCase\")] public Element? FrameElement { get; } Property Value Element The element which the window is embedded into. If the window isn&apos;t embedded into another document, or if the document into which it&apos;s embedded has a different origin, the value is null instead. Remarks NOTE Note: Despite this property&apos;s name, it works for documents embedded within any embedding point, including object, iframe, or embed. -Frames returns an array-like object, listing the direct sub-frames of the current window. -Parent returns the parent window, which is the window containing the frameElement of the child window. See also on MDN Frames Returns the window itself, which is an array-like object, listing the direct sub-frames of the current window. [To(\"FirstCharToLowerCase\")] public Window Frames { get; } Property Value Window A list of frame objects. It is similar to an array in that it has a length property and its items can be accessed using the [i] notation. Remarks See also on MDN History The Window.history read-only property returns a reference to the History object, which provides an interface for manipulating the browser session history (pages visited in the tab or frame that the current page is loaded in). [To(\"FirstCharToLowerCase\")] public History History { get; } Property Value History A reference to the History object. Remarks See Manipulating the browser history for examples and details. In particular, that article explains security features of the PushState(dynamic, string, string?) and ReplaceState(dynamic, string, string?) methods that you should be aware of before using them. See also on MDN Length [To(\"FirstCharToLowerCase\")] public ulong Length { get; } Property Value ulong A number. Remarks See also on MDN Location The Window.location read-only property returns a Location object with information about the current location of the document. [To(\"FirstCharToLowerCase\")] public Location Location { get; } Property Value Location A Location object. Remarks Though Window.location is a read-only Location object, you can also assign a string to it. This means that you can work with location as if it were a string in most cases: location = &apos;http://www.example.com&apos; is a synonym of location.href = &apos;http://www.example.com&apos;. See Location for all available properties. -The interface of the returned value, Location -A similar information, but attached to the document, Location -Manipulating the browser history -Window/hashchange_event See also on MDN Locationbar Returns the locationbar object. [To(\"FirstCharToLowerCase\")] public BarProp Locationbar { get; } Property Value BarProp An object containing a single property: Remarks This is one of a group of Window properties that contain a boolean visible property, that used to represent whether or not a particular part of a web browser&apos;s user interface was visible. For privacy and interoperability reasons, the value of the visible property is now false if this Window is a popup, and true otherwise. -Menubar -Personalbar -Scrollbars -Statusbar -Toolbar See also on MDN Menubar Returns the menubar object. [To(\"FirstCharToLowerCase\")] public BarProp Menubar { get; } Property Value BarProp An object containing a single property: Remarks This is one of a group of Window properties that contain a boolean visible property, that used to represent whether or not a particular part of a web browser&apos;s user interface was visible. For privacy and interoperability reasons, the value of the visible property is now false if this Window is a popup, and true otherwise. -Locationbar -Personalbar -Scrollbars -Statusbar -Toolbar See also on MDN Name The Window.name property gets/sets the name of the window&apos;s browsing context. [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string A string. Remarks See also on MDN Navigation The navigation read-only property of the Window interface returns the current window's associated Navigation object. [To(\"FirstCharToLowerCase\")] public Navigation Navigation { get; } Property Value Navigation A Navigation object instance. Remarks The entry point for the Navigation API. -Modern client-side routing: the Navigation API -Navigation API explainer -Domenic Denicola&apos;s Navigation API live demo See also on MDN Navigator The Window.navigator read-only property returns a reference to the Navigator object, which has methods and properties about the application running the script. [To(\"FirstCharToLowerCase\")] public Navigator Navigator { get; } Property Value Navigator The Navigator object. Remarks See also on MDN Ondevicemotion [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Ondevicemotion { get; set; } Property Value EventHandlerNonNull Ondeviceorientation [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Ondeviceorientation { get; set; } Property Value EventHandlerNonNull Ondeviceorientationabsolute [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Ondeviceorientationabsolute { get; set; } Property Value EventHandlerNonNull Onorientationchange [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onorientationchange { get; set; } Property Value EventHandlerNonNull Opener The Window interface's opener property returns a reference to the window that opened the window, either with Open(string, string, string), or by navigating a link with a target attribute. [To(\"FirstCharToLowerCase\")] public dynamic Opener { get; set; } Property Value dynamic A Window-like object referring to the window that opened the current window (using Open(string, string, string), or by a link with target attribute set). If this window was not opened by being linked to or created by another, returns null.If the opener is not on the same origin as the current page, functionality of the opener object is limited. For example, variables and functions on the window object are not accessible. However, navigation of the opener window is possible, which means that the opened page can open a URL in the original tab or window. In some cases, this makes phishing attacks possible, where a trusted page that is opened in the original window is replaced by a phishing page by the newly opened page.In the following cases, the browser does not populate window.opener, but leaves it null: Remarks In other words, if window A opens window B, B.opener returns A. See also on MDN Orientation IMPORTANT Deprecated Returns the orientation in degrees (in 90-degree increments) of the viewport relative to the device&apos;s natural orientation. [To(\"FirstCharToLowerCase\")] public Number Orientation { get; } Property Value Number Remarks Its only possible values are -90, 0, 90, and 180. Positive values are counterclockwise; negative values are clockwise. This property is deprecated. Use the Screen.Orientation property instead, available on the Window.Screen property. See also on MDN OriginAgentCluster [To(\"FirstCharToLowerCase\")] public bool OriginAgentCluster { get; } Property Value bool Parent The Window.parent property is a reference to the parent of the current window or subframe. [To(\"FirstCharToLowerCase\")] public Window? Parent { get; } Property Value Window A Window or iframe object. Remarks If a window does not have a parent, its parent property is a reference to itself. When a window is loaded in an iframe, object, or frame, its parent is the window with the element embedding the window. -FrameElement returns the specific element (such as &lt;iframe&gt;) the window is embedded into. -Top returns a reference to the top-level window. See also on MDN Performance [To(\"FirstCharToLowerCase\")] public Performance Performance { get; } Property Value Performance Personalbar Returns the personalbar object. [To(\"FirstCharToLowerCase\")] public BarProp Personalbar { get; } Property Value BarProp An object containing a single property: Remarks This is one of a group of Window properties that contain a boolean visible property, that used to represent whether or not a particular part of a web browser&apos;s user interface was visible. For privacy and interoperability reasons, the value of the visible property is now false if this Window is a popup, and true otherwise. -Locationbar -Menubar -Scrollbars -Statusbar -Toolbar See also on MDN Scrollbars Returns the scrollbars object. [To(\"FirstCharToLowerCase\")] public BarProp Scrollbars { get; } Property Value BarProp An object containing a single property: Remarks This is one of a group of Window properties that contain a boolean visible property, that used to represent whether or not a particular part of a web browser&apos;s user interface was visible. For privacy and interoperability reasons, the value of the visible property is now false if this Window is a popup, and true otherwise. -Locationbar -Menubar -Personalbar -Statusbar -Toolbar See also on MDN Self The Window.self read-only property returns the window itself, as a WindowProxy. It can be used with dot notation on a window object (that is, window.self) or standalone (self). The advantage of the standalone notation is that a similar notation exists for non-window contexts, such as in {{domxref(&quot;Worker&quot;, &quot;Web Workers&quot;, &quot;&quot;, 1)}}. By using self, you can refer to the global scope in a way that will work not only in a window context (self will resolve to window.self) but also in a worker context (self will then resolve to Self). [To(\"FirstCharToLowerCase\")] public Window Self { get; } Property Value Window A WindowProxy object. Remarks -Its Worker equivalent, Self. See also on MDN Status IMPORTANT Deprecated The status property of the Window interface was originally intended to set the text in the status bar at the bottom of the browser window. However, the HTML standard now requires setting window.status to have no effect on the text displayed in the status bar. [To(\"FirstCharToLowerCase\")] public string Status { get; set; } Property Value string A string. Remarks See also on MDN Statusbar Returns the statusbar object. [To(\"FirstCharToLowerCase\")] public BarProp Statusbar { get; } Property Value BarProp An object containing a single property: Remarks This is one of a group of Window properties that contain a boolean visible property, that used to represent whether or not a particular part of a web browser&apos;s user interface was visible. For privacy and interoperability reasons, the value of the visible property is now false if this Window is a popup, and true otherwise. -Locationbar -Menubar -Personalbar -Scrollbars -Toolbar See also on MDN Toolbar Returns the toolbar object. [To(\"FirstCharToLowerCase\")] public BarProp Toolbar { get; } Property Value BarProp An object containing a single property: Remarks This is one of a group of Window properties that contain a boolean visible property, that used to represent whether or not a particular part of a web browser&apos;s user interface was visible. For privacy and interoperability reasons, the value of the visible property is now false if this Window is a popup, and true otherwise. -Locationbar -Menubar -Personalbar -Scrollbars -Statusbar See also on MDN Top Returns a reference to the topmost window in the window hierarchy. [To(\"FirstCharToLowerCase\")] public Window? Top { get; } Property Value Window The reference to the topmost window. Remarks See also on MDN _window The window property of a Window object points to the window object itself. [To(\"FirstCharToLowerCase\")] public Window _window { get; } Property Value Window Remarks Thus, the following expressions all return the same window object: In web pages, the window object is also a global object. This means: The point of having the window property refer to the object itself, was likely to make it easy to refer to the global object. Otherwise, you&apos;d have to do a manual let window = this; assignment at the top of your script. Another reason, is that without this property you wouldn't be able to write, for example, \"Open(string, string, string)\". You'd have to use \"open('http://google.com/&apos;)&quot; instead. Yet another reason to use this property, is for libraries which wish to offer OOP-versions, and non-OOP versions (especially JavaScript modules). For example, if we refer to &quot;this.window.location.href&quot;, a JavaScript module could define a property called &quot;window&quot; inside of a class it defined (since no global &quot;window&quot; variable exists for it by default) which could be created after passing in a window object to the module class&apos; constructor. Thus, &quot;this.window&quot; inside of its functions would refer to that window object. In the non-namespaced version, &quot;this.window&quot; would refer back to &quot;window&quot;, and also be able to readily get the document location. Another advantage, is that the objects of such a class (even if the class were defined outside of a module) could change their reference to the window at will, they would not be able to do this if they had hard-coded a reference to &quot;window&quot;. The default in the class could still be set as the current window object. See also on MDN Methods AddUserSettingListener(string, UserSettingListener) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined AddUserSettingListener(string key, UserSettingListener callback) Parameters key string callback UserSettingListener Returns GlobalObject.Undefined Alert() window.alert() instructs the browser to display a dialog with an optional message, and to wait until the user dismisses the dialog. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Alert() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Under some conditions — for example, when the user switches tabs — the browser may not actually display a dialog, or may not wait for the user to dismiss the dialog. -dialog element -Confirm(string) -Prompt(string, string) See also on MDN Alert(string) window.alert() instructs the browser to display a dialog with an optional message, and to wait until the user dismisses the dialog. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Alert(string message) Parameters message string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Under some conditions — for example, when the user switches tabs — the browser may not actually display a dialog, or may not wait for the user to dismiss the dialog. -dialog element -Confirm(string) -Prompt(string, string) See also on MDN Blur() Shifts focus away from the window. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Blur() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN CaptureEvents() IMPORTANT Deprecated The Window.captureEvents() method does nothing. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined CaptureEvents() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: This is an method long removed from the specification. It is kept in browsers to prevent code breakage but does nothing. See also on MDN Close() The Window.close() method closes the current window, or the window on which it was called. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method can only be called on windows that were opened by a script using the Open(string, string, string) method, or on top-level windows that have a single history entry. If the window doesn't match these requirements, an error similar to this one appears in the console: Scripts may not close windows that were not opened by script. Note also that close() has no effect when called on Window objects returned by HTMLIFrameElement.contentWindow. See also on MDN Confirm(string) window.confirm() instructs the browser to display a dialog with an optional message, and to wait until the user either confirms or cancels the dialog. [To(\"FirstCharToLowerCase\")] public bool Confirm(string message) Parameters message string Returns bool A boolean indicating whether OK (true) or Cancel (false) was selected. If a browser is ignoring in-page dialogs, then the returned value is always false. Remarks Under some conditions — for example, when the user switches tabs — the browser may not actually display a dialog, or may not wait for the user to confirm or cancel the dialog. -dialog element -Alert() -Prompt(string, string) See also on MDN Focus() Makes a request to bring the window to the front. It may fail due to user settings and the window isn&apos;t guaranteed to be frontmost before this method returns. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Focus() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN GetComputedStyle(Element, Unsupported?) The Window.getComputedStyle() method returns an object containing the values of all CSS properties of an element, after applying active stylesheets and resolving any basic computation those values may contain. [To(\"FirstCharToLowerCase\")] public CSSStyleDeclaration GetComputedStyle(Element elt, Unsupported? pseudoElt) Parameters elt Element pseudoElt Unsupported Returns CSSStyleDeclaration A live CSSStyleDeclaration object, which updates automatically when the element&apos;s styles are changed. Remarks Individual CSS property values are accessed through APIs provided by the object, or by indexing with CSS property names. -Window.GetDefaultComputedStyle -resolved_value See also on MDN GetScreenDetails() [To(\"FirstCharToLowerCase\")] public Task<ScreenDetails> GetScreenDetails() Returns Task<ScreenDetails> Navigate(SpatialNavigationDirection) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Navigate(SpatialNavigationDirection dir) Parameters dir SpatialNavigationDirection Returns GlobalObject.Undefined Open(string, string, string) The open() method of the Window interface loads a specified resource into a new or existing browsing context (that is, a tab, a window, or an iframe) under a specified name. [To(\"FirstCharToLowerCase\")] public Window? Open(string url, string target, string features) Parameters url string target string features string Returns Window A WindowProxy object. The returned reference can be used to access properties and methods of the new window as long as it complies with the same-origin policy security requirements. Remarks -target attribute documentation:-&lt;a&gt; -&lt;form&gt; -window.close() -window.closed -window.focus() -window.opener -rel=&quot;opener&quot; and rel=&quot;noopener&quot; -Same-origin policy See also on MDN PostMessage(dynamic, WindowPostMessageOptions) The window.postMessage() method safely enables cross-origin communication between Window objects; e.g., between a page and a pop-up that it spawned, or between a page and an iframe embedded within it. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined PostMessage(dynamic message, WindowPostMessageOptions options) Parameters message dynamic options WindowPostMessageOptions Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Normally, scripts on different pages are allowed to access each other if and only if the pages they originate from share the same protocol, port number, and host (also known as the &quot;same-origin policy&quot;). window.postMessage() provides a controlled mechanism to securely circumvent this restriction (if used properly). Broadly, one window may obtain a reference to another (e.g., via targetWindow = window.opener), and then dispatch a MessageEvent on it with targetWindow.postMessage(). The receiving window is then free to handle this event as needed. The arguments passed to window.postMessage() (i.e., the &quot;message&quot;) are exposed to the receiving window through the event object. -Domain -CustomEvent -BroadcastChannel - For same-origin communication. See also on MDN PostMessage(dynamic, string, List<object>) The window.postMessage() method safely enables cross-origin communication between Window objects; e.g., between a page and a pop-up that it spawned, or between a page and an iframe embedded within it. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined PostMessage(dynamic message, string targetOrigin, List<object> transfer) Parameters message dynamic targetOrigin string transfer List<object> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Normally, scripts on different pages are allowed to access each other if and only if the pages they originate from share the same protocol, port number, and host (also known as the &quot;same-origin policy&quot;). window.postMessage() provides a controlled mechanism to securely circumvent this restriction (if used properly). Broadly, one window may obtain a reference to another (e.g., via targetWindow = window.opener), and then dispatch a MessageEvent on it with targetWindow.postMessage(). The receiving window is then free to handle this event as needed. The arguments passed to window.postMessage() (i.e., the &quot;message&quot;) are exposed to the receiving window through the event object. -Domain -CustomEvent -BroadcastChannel - For same-origin communication. See also on MDN Print() Opens the print dialog to print the current document. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Print() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If the document is still loading when this function is called, then the document will finish loading before opening the print dialog. This method will block while the print dialog is open. -Printing -Window.Beforeprint_event event -Window.Afterprint_event event See also on MDN Prompt(string, string) window.prompt() instructs the browser to display a dialog with an optional message prompting the user to input some text, and to wait until the user either submits the text or cancels the dialog. [To(\"FirstCharToLowerCase\")] public string? Prompt(string message, string default_) Parameters message string default_ string Returns string A string containing the text entered by the user, or null. Remarks Under some conditions — for example, when the user switches tabs — the browser may not actually display a dialog, or may not wait for the user to submit text or to cancel the dialog. -dialog element -Alert() -Confirm(string) See also on MDN ReleaseEvents() IMPORTANT Deprecated Releases the window from trapping events of a specific type. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined ReleaseEvents() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN RemoveUserSettingListener(string, UserSettingListener) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined RemoveUserSettingListener(string key, UserSettingListener callback) Parameters key string callback UserSettingListener Returns GlobalObject.Undefined Stop() The window.stop() stops further resource loading in the current browsing context, equivalent to the stop button in the browser. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Stop() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Because of how scripts are executed, this method cannot interrupt its parent document&apos;s loading, but it will stop its images, new windows, and other still-loading objects. See also on MDN UserSetting(string) [To(\"FirstCharToLowerCase\")] public Unsupported? UserSetting(string key) Parameters key string Returns Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.WindowClient.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WindowClient.html",
    "title": "Class WindowClient | CSharpToJavaScript",
    "keywords": "Class WindowClient Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WindowClient interface of the ServiceWorker API represents the scope of a service worker client that is a document in a browsing context, controlled by an active worker. The service worker client independently selects and uses a service worker for its own loading and sub-resources. [To(\"FirstCharToLowerCase\")] public class WindowClient : Client Inheritance object Client WindowClient Inherited Members Client.Url Client.FrameType Client.Id Client.Type Client.PostMessage(dynamic, List<object>) Client.PostMessage(dynamic, StructuredSerializeOptions) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promises -Using web workers -Channel Messaging API See also on MDN Properties AncestorOrigins public string[] AncestorOrigins { get; } Property Value string[] Focused The focused read-only property of the WindowClient interface is a boolean value that indicates whether the current client has focus. public bool Focused { get; } Property Value bool A boolean value. Remarks See also on MDN VisibilityState The visibilityState read-only property of the WindowClient interface indicates the visibility of the current client. This value can be one of &quot;hidden&quot;, &quot;visible&quot;, or &quot;prerender&quot;. public Unsupported VisibilityState { get; } Property Value Unsupported A string (See VisibilityState for values). Remarks See also on MDN Methods Focus() The focus() method of the WindowClient interface gives user input focus to the current client and returns a Promise that resolves to the existing WindowClient. public Task<WindowClient> Focus() Returns Task<WindowClient> A {{jsxref(\"Promise\")}} that resolves to the existing WindowClient. Remarks See also on MDN Navigate(string) The navigate() method of the WindowClient interface loads a specified URL into a controlled client page then returns a {{jsxref(\"Promise\")}} that resolves to the existing WindowClient. public Task<WindowClient?> Navigate(string url) Parameters url string Returns Task<WindowClient> A {{jsxref(\"Promise\")}} that resolves to the existing WindowClient. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WindowEventHandlers.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WindowEventHandlers.html",
    "title": "Interface WindowEventHandlers | CSharpToJavaScript",
    "keywords": "Interface WindowEventHandlers Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface WindowEventHandlers Properties Onafterprint EventHandlerNonNull Onafterprint { get; set; } Property Value EventHandlerNonNull Onbeforeprint EventHandlerNonNull Onbeforeprint { get; set; } Property Value EventHandlerNonNull Onbeforeunload OnBeforeUnloadEventHandlerNonNull Onbeforeunload { get; set; } Property Value OnBeforeUnloadEventHandlerNonNull Onhashchange EventHandlerNonNull Onhashchange { get; set; } Property Value EventHandlerNonNull Onlanguagechange EventHandlerNonNull Onlanguagechange { get; set; } Property Value EventHandlerNonNull Onmessage EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onmessageerror EventHandlerNonNull Onmessageerror { get; set; } Property Value EventHandlerNonNull Onoffline EventHandlerNonNull Onoffline { get; set; } Property Value EventHandlerNonNull Ononline EventHandlerNonNull Ononline { get; set; } Property Value EventHandlerNonNull Onpagehide EventHandlerNonNull Onpagehide { get; set; } Property Value EventHandlerNonNull Onpageshow EventHandlerNonNull Onpageshow { get; set; } Property Value EventHandlerNonNull Onpopstate EventHandlerNonNull Onpopstate { get; set; } Property Value EventHandlerNonNull Onrejectionhandled EventHandlerNonNull Onrejectionhandled { get; set; } Property Value EventHandlerNonNull Onstorage EventHandlerNonNull Onstorage { get; set; } Property Value EventHandlerNonNull Onunhandledrejection EventHandlerNonNull Onunhandledrejection { get; set; } Property Value EventHandlerNonNull Onunload EventHandlerNonNull Onunload { get; set; } Property Value EventHandlerNonNull"
  },
  "api/CSharpToJavaScript.APIs.JS.WindowLocalStorage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WindowLocalStorage.html",
    "title": "Interface WindowLocalStorage | CSharpToJavaScript",
    "keywords": "Interface WindowLocalStorage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The localStorage read-only property of the Window interface allows you to access a Storage object for the Document's {{glossary(\"origin\")}}; the stored data is saved across browser sessions. [To(\"FirstCharToLowerCase\")] public interface WindowLocalStorage Remarks localStorage is similar to Window.SessionStorage, except that while localStorage data has no expiration time, sessionStorage data gets cleared when the page session ends — that is, when the page is closed. (localStorage data for a document loaded in a &quot;private browsing&quot; or &quot;incognito&quot; session is cleared when the last &quot;private&quot; tab is closed.) -Using the Web Storage API -Window.SessionStorage See also on MDN Properties LocalStorage Storage LocalStorage { get; } Property Value Storage"
  },
  "api/CSharpToJavaScript.APIs.JS.WindowOrWorkerGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WindowOrWorkerGlobalScope.html",
    "title": "Interface WindowOrWorkerGlobalScope | CSharpToJavaScript",
    "keywords": "Interface WindowOrWorkerGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface WindowOrWorkerGlobalScope Properties Caches CacheStorage Caches { get; } Property Value CacheStorage CrossOriginIsolated bool CrossOriginIsolated { get; } Property Value bool IndexedDB IDBFactory IndexedDB { get; } Property Value IDBFactory IsSecureContext bool IsSecureContext { get; } Property Value bool Origin string Origin { get; } Property Value string Methods Atob(string) string Atob(string data) Parameters data string Returns string Btoa(string) string Btoa(string data) Parameters data string Returns string ClearInterval(long) GlobalObject.Undefined ClearInterval(long id) Parameters id long Returns GlobalObject.Undefined ClearTimeout(long) GlobalObject.Undefined ClearTimeout(long id) Parameters id long Returns GlobalObject.Undefined CreateImageBitmap(Union29, ImageBitmapOptions) Task<ImageBitmap> CreateImageBitmap(Union29 image, ImageBitmapOptions options) Parameters image Union29 options ImageBitmapOptions Returns Task<ImageBitmap> CreateImageBitmap(Union29, long, long, long, long, ImageBitmapOptions) Task<ImageBitmap> CreateImageBitmap(Union29 image, long sx, long sy, long sw, long sh, ImageBitmapOptions options) Parameters image Union29 sx long sy long sw long sh long options ImageBitmapOptions Returns Task<ImageBitmap> Fetch(Union59, RequestInit) Task<Response> Fetch(Union59 input, RequestInit init) Parameters input Union59 init RequestInit Returns Task<Response> Fetch(string) Task<Response> Fetch(string input) Parameters input string Returns Task<Response> QueueMicrotask(VoidFunction) GlobalObject.Undefined QueueMicrotask(VoidFunction callback) Parameters callback VoidFunction Returns GlobalObject.Undefined ReportError(dynamic) GlobalObject.Undefined ReportError(dynamic e) Parameters e dynamic Returns GlobalObject.Undefined SetInterval(Union28, long, params dynamic[]) long SetInterval(Union28 handler, long timeout, params dynamic[] arguments) Parameters handler Union28 timeout long arguments dynamic[] Returns long SetInterval(Action, long, params dynamic[]) long SetInterval(Action handler, long timeout, params dynamic[] arguments) Parameters handler Action timeout long arguments dynamic[] Returns long SetTimeout(Union28, long, params dynamic[]) long SetTimeout(Union28 handler, long timeout, params dynamic[] arguments) Parameters handler Union28 timeout long arguments dynamic[] Returns long SetTimeout(Action, long, params dynamic[]) long SetTimeout(Action handler, long timeout, params dynamic[] arguments) Parameters handler Action timeout long arguments dynamic[] Returns long StructuredClone(dynamic, StructuredSerializeOptions) dynamic StructuredClone(dynamic value, StructuredSerializeOptions options) Parameters value dynamic options StructuredSerializeOptions Returns dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.WindowPostMessageOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WindowPostMessageOptions.html",
    "title": "Class WindowPostMessageOptions | CSharpToJavaScript",
    "keywords": "Class WindowPostMessageOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WindowPostMessageOptions : StructuredSerializeOptions Inheritance object StructuredSerializeOptions WindowPostMessageOptions Inherited Members StructuredSerializeOptions.Transfer object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TargetOrigin public string TargetOrigin Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.WindowSessionStorage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WindowSessionStorage.html",
    "title": "Interface WindowSessionStorage | CSharpToJavaScript",
    "keywords": "Interface WindowSessionStorage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The read-only sessionStorage property accesses a session Storage object for the current origin. sessionStorage is similar to Window.LocalStorage; the difference is that while data in localStorage doesn&apos;t expire, data in sessionStorage is cleared when the page session ends. [To(\"FirstCharToLowerCase\")] public interface WindowSessionStorage Remarks Data stored in sessionStorage is specific to the protocol of the page. In particular, data stored by a script on a site accessed with HTTP (e.g., http://example.com) is put in a different sessionStorage object from the same site accessed with HTTPS (e.g., https://example.com). The keys and the values are always in the UTF-16 string format, which uses two bytes per character. As with objects, integer keys are automatically converted to strings. -Using the Web Storage API -Window.LocalStorage See also on MDN Properties SessionStorage Storage SessionStorage { get; } Property Value Storage"
  },
  "api/CSharpToJavaScript.APIs.JS.Worker.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Worker.html",
    "title": "Class Worker | CSharpToJavaScript",
    "keywords": "Class Worker Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Worker interface of the Web Workers API represents a background task that can be created via script, which can send messages back to its creator. [To(\"FirstCharToLowerCase\")] public class Worker : EventTarget, AbstractWorker Inheritance object EventTarget Worker Implements AbstractWorker Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Creating a worker is done by calling the Worker(&quot;path/to/worker/script&quot;) constructor. Workers may themselves spawn new workers, as long as those workers are hosted at the same origin as the parent page. Not all interfaces and functions are available to scripts inside a Worker. Workers may use XMLHttpRequest for network communication, but its responseXML and channel attributes are always null. (fetch is also available, with no such restrictions.) -Using Web Workers -Functions and classes available to Web Workers -Other kind of workers: SharedWorker and Service Worker. -OffscreenCanvas interface See also on MDN Constructors Worker() public Worker() Worker(string, WorkerOptions) The Worker() constructor creates a Worker object that executes the script at the specified URL. This script must obey the same-origin policy. public Worker(string scriptURL, WorkerOptions options) Parameters scriptURL string options WorkerOptions Remarks NOTE Note: that there is a disagreement among browser manufacturers about whether a data URL is of the same origin or not. Though Firefox 10 and later accept data URLs, that&apos;s not the case in all other browsers. The Worker interface it belongs to. See also on MDN Properties Onmessage public EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onmessageerror public EventHandlerNonNull Onmessageerror { get; set; } Property Value EventHandlerNonNull Methods PostMessage(dynamic, StructuredSerializeOptions) The postMessage() method of the Worker interface sends a message to the worker. The first parameter is the data to send to the worker. The data may be any JavaScript object that can be handled by the structured clone algorithm. public GlobalObject.Undefined PostMessage(dynamic message, StructuredSerializeOptions options) Parameters message dynamic options StructuredSerializeOptions Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The Worker postMessage() method delegates to the MessagePort PostMessage(dynamic, List<object>) method, which adds a task on the event loop corresponding to the receiving MessagePort. The Worker can send back information to the thread that spawned it using the PostMessage(dynamic, List<object>) method. -The Worker interface it belongs to. See also on MDN PostMessage(dynamic, List<object>) The postMessage() method of the Worker interface sends a message to the worker. The first parameter is the data to send to the worker. The data may be any JavaScript object that can be handled by the structured clone algorithm. public GlobalObject.Undefined PostMessage(dynamic message, List<object> transfer) Parameters message dynamic transfer List<object> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The Worker postMessage() method delegates to the MessagePort PostMessage(dynamic, List<object>) method, which adds a task on the event loop corresponding to the receiving MessagePort. The Worker can send back information to the thread that spawned it using the PostMessage(dynamic, List<object>) method. -The Worker interface it belongs to. See also on MDN Terminate() The terminate() method of the Worker interface immediately terminates the Worker. This does not offer the worker an opportunity to finish its operations; it is stopped at once. public GlobalObject.Undefined Terminate() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Worker interface -Close() -Close() See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkerGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkerGlobalScope.html",
    "title": "Class WorkerGlobalScope | CSharpToJavaScript",
    "keywords": "Class WorkerGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WorkerGlobalScope interface of the Web Workers API is an interface representing the scope of any worker. Workers have no browsing context; this scope contains the information usually conveyed by Window objects — in this case event handlers, the console or the associated WorkerNavigator object. Each WorkerGlobalScope has its own event loop. [To(\"FirstCharToLowerCase\")] public class WorkerGlobalScope : EventTarget, WindowOrWorkerGlobalScope, FontFaceSource Inheritance object EventTarget WorkerGlobalScope Implements WindowOrWorkerGlobalScope FontFaceSource Derived DedicatedWorkerGlobalScope ServiceWorkerGlobalScope SharedWorkerGlobalScope Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface is usually specialized by each worker type: DedicatedWorkerGlobalScope for dedicated workers, SharedWorkerGlobalScope for shared workers, and ServiceWorkerGlobalScope for ServiceWorker. The self property returns the specialized scope for each context. -Other global object interface: Window, DedicatedWorkerGlobalScope, SharedWorkerGlobalScope, ServiceWorkerGlobalScope -Other Worker-related interfaces: Worker, WorkerLocation, WorkerGlobalScope, and ServiceWorkerGlobalScope -Using web workers See also on MDN Properties Location The location read-only property of the WorkerGlobalScope interface returns the WorkerLocation associated with the worker. It is a specific location object, mostly a subset of the Location for browsing scopes, but adapted to workers. public WorkerLocation Location { get; } Property Value WorkerLocation A WorkerLocation object. Remarks WorkerGlobalScope See also on MDN Navigator The navigator read-only property of the WorkerGlobalScope interface returns the WorkerNavigator associated with the worker. It is a specific navigator object, mostly a subset of the Navigator for browsing scopes, but adapted to workers. public WorkerNavigator Navigator { get; } Property Value WorkerNavigator A WorkerNavigator object. Remarks WorkerNavigator See also on MDN Onerror public OnErrorEventHandlerNonNull Onerror { get; set; } Property Value OnErrorEventHandlerNonNull Onlanguagechange public EventHandlerNonNull Onlanguagechange { get; set; } Property Value EventHandlerNonNull Onoffline public EventHandlerNonNull Onoffline { get; set; } Property Value EventHandlerNonNull Ononline public EventHandlerNonNull Ononline { get; set; } Property Value EventHandlerNonNull Onrejectionhandled public EventHandlerNonNull Onrejectionhandled { get; set; } Property Value EventHandlerNonNull Onunhandledrejection public EventHandlerNonNull Onunhandledrejection { get; set; } Property Value EventHandlerNonNull Self The self read-only property of the WorkerGlobalScope interface returns a reference to the WorkerGlobalScope itself. Most of the time it is a specific scope like DedicatedWorkerGlobalScope, SharedWorkerGlobalScope, or ServiceWorkerGlobalScope. public WorkerGlobalScope Self { get; } Property Value WorkerGlobalScope A global scope object (differs depending on the type of worker you are dealing with, as indicated above). Remarks WorkerGlobalScope See also on MDN Methods ImportScripts(params string[]) The importScripts() method of the WorkerGlobalScope interface synchronously imports one or more scripts into the worker's scope. public GlobalObject.Undefined ImportScripts(params string[] urls) Parameters urls string[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -WorkerGlobalScope See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkerLocation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkerLocation.html",
    "title": "Class WorkerLocation | CSharpToJavaScript",
    "keywords": "Class WorkerLocation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WorkerLocation interface defines the absolute location of the script executed by the Worker. Such an object is initialized for each worker and is available via the Location property obtained by calling self.location. [To(\"FirstCharToLowerCase\")] public class WorkerLocation Inheritance object WorkerLocation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface is only visible from inside a JavaScript script executed in the context of a Web worker. -Other Worker-related interfaces: Worker, WorkerNavigator, and WorkerGlobalScope -Using web workers See also on MDN Properties Hash The hash property of a WorkerLocation object returns the Hash part of the worker's location. public string Hash { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Host The host property of a WorkerLocation object returns the Host part of the worker's location. public string Host { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Hostname The hostname property of a WorkerLocation object returns the Hostname part of the worker's location. public string Hostname { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Href The href property of a WorkerLocation object returns a string containing the serialized URL for the worker's location. public string Href { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Origin The origin property of a WorkerLocation object returns the worker's Origin. public string Origin { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Pathname The pathname property of a WorkerLocation object returns the Pathname part of the worker's location. public string Pathname { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Port The port property of a WorkerLocation object returns the Port part of the worker's location. public string Port { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Protocol The protocol property of a WorkerLocation object returns the Protocol part of the worker's location. public string Protocol { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Search The search property of a WorkerLocation object returns the Search part of the worker's location. public string Search { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkerNavigator.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkerNavigator.html",
    "title": "Class WorkerNavigator | CSharpToJavaScript",
    "keywords": "Class WorkerNavigator Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WorkerNavigator interface represents a subset of the Navigator interface allowed to be accessed from a Worker. Such an object is initialized for each worker and is available via the Navigator property. [To(\"FirstCharToLowerCase\")] public class WorkerNavigator Inheritance object WorkerNavigator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Other Worker-related interfaces: Worker, WorkerLocation, and WorkerGlobalScope -Using web workers See also on MDN Properties MediaCapabilities The read-only WorkerNavigator.mediaCapabilities property returns a MediaCapabilities object that can expose information about the decoding and encoding capabilities for a given format and output capabilities as defined by the Media Capabilities API. public MediaCapabilities MediaCapabilities { get; } Property Value MediaCapabilities A MediaCapabilities object. Remarks -Media Capabilities API -WorkerNavigator See also on MDN ServiceWorker public ServiceWorkerContainer ServiceWorker { get; } Property Value ServiceWorkerContainer"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkerOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkerOptions.html",
    "title": "Class WorkerOptions | CSharpToJavaScript",
    "keywords": "Class WorkerOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WorkerOptions Inheritance object WorkerOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Credentials public RequestCredentials Credentials Field Value RequestCredentials Name public string Name Field Value string Type public WorkerType Type Field Value WorkerType"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkerType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkerType.html",
    "title": "Enum WorkerType | CSharpToJavaScript",
    "keywords": "Enum WorkerType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum WorkerType Fields Classic = 0 Module = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.Worklet.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Worklet.html",
    "title": "Class Worklet | CSharpToJavaScript",
    "keywords": "Class Worklet Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Worklet interface is a lightweight version of Worker and gives developers access to low-level parts of the rendering pipeline. [To(\"FirstCharToLowerCase\")] public class Worklet Inheritance object Worklet Derived AudioWorklet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks With Worklets, you can run JavaScript and WebAssembly code to do graphics rendering or audio processing where high performance is required. Worklets allow static import of ECMAScript modules, if supported, using import. Dynamic import is disallowed by the specification — calling import() will throw. -Houdini: Demystifying CSS on Google Developers (2016) -AudioWorklet :: What, Why, and How on YouTube (2017) -Enter AudioWorklet on Google Developers (2017) -Animation Worklet - HTTP203 Advent on YouTube (2017) See also on MDN Methods AddModule(string, WorkletOptions) The addModule() method of the Worklet interface loads the module in the given JavaScript file and adds it to the current Worklet. public Task<GlobalObject.Undefined> AddModule(string moduleURL, WorkletOptions options) Parameters moduleURL string options WorkletOptions Returns Task<GlobalObject.Undefined> A Promise that resolves once the module from the given URL has been added. The promise doesn&apos;t return any value. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkletAnimation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkletAnimation.html",
    "title": "Class WorkletAnimation | CSharpToJavaScript",
    "keywords": "Class WorkletAnimation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WorkletAnimation : Animation Inheritance object Animation WorkletAnimation Inherited Members Animation.StartTime Animation.CurrentTime object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WorkletAnimation() public WorkletAnimation() WorkletAnimation(string, Union33?, AnimationTimeline?, dynamic) public WorkletAnimation(string animatorName, Union33? effects, AnimationTimeline? timeline, dynamic options) Parameters animatorName string effects Union33? timeline AnimationTimeline options dynamic Properties AnimatorName public string AnimatorName { get; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkletGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkletGlobalScope.html",
    "title": "Class WorkletGlobalScope | CSharpToJavaScript",
    "keywords": "Class WorkletGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WorkletGlobalScope interface is an abstract class that specific worklet scope classes inherit from. Each WorkletGlobalScope defines a new global environment. [To(\"FirstCharToLowerCase\")] public class WorkletGlobalScope Inheritance object WorkletGlobalScope Derived AnimationWorkletGlobalScope AudioWorkletGlobalScope LayoutWorkletGlobalScope PaintWorkletGlobalScope Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: You don't normally need to interact with this interface. It is a base interface intended to be subclassed. You will encounter the subclasses AudioWorkletGlobalScope inside AudioWorklet objects, or PaintWorkletGlobalScope inside PaintWorklet objects. -AudioWorkletGlobalScope -PaintWorkletGlobalScope See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkletGroupEffect.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkletGroupEffect.html",
    "title": "Class WorkletGroupEffect | CSharpToJavaScript",
    "keywords": "Class WorkletGroupEffect Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WorkletGroupEffect Inheritance object WorkletGroupEffect Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetChildren() public List<AnimationEffect> GetChildren() Returns List<AnimationEffect>"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkletOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkletOptions.html",
    "title": "Class WorkletOptions | CSharpToJavaScript",
    "keywords": "Class WorkletOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WorkletOptions Inheritance object WorkletOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Credentials public RequestCredentials Credentials Field Value RequestCredentials"
  },
  "api/CSharpToJavaScript.APIs.JS.WritableStream.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WritableStream.html",
    "title": "Class WritableStream | CSharpToJavaScript",
    "keywords": "Class WritableStream Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WritableStream interface of the Streams API provides a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing. [To(\"FirstCharToLowerCase\")] public class WritableStream Inheritance object WritableStream Derived FileSystemWritableFileStream WebTransportSendStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks WritableStream is a transferable object. -WHATWG Stream Visualizer, for a basic visualization of readable, writable, and transform streams. See also on MDN Constructors WritableStream() public WritableStream() WritableStream(object, QueuingStrategy) The WritableStream() constructor creates a new WritableStream object instance. public WritableStream(object underlyingSink, QueuingStrategy strategy) Parameters underlyingSink object strategy QueuingStrategy Remarks See also on MDN Properties Locked The locked read-only property of the WritableStream interface returns a boolean indicating whether the WritableStream is locked to a writer. public bool Locked { get; } Property Value bool A boolean value indicating whether or not the writable stream is locked. Remarks See also on MDN Methods Abort(dynamic) The abort() method of the WritableStream interface aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be immediately moved to an error state, with any queued writes discarded. public Task<GlobalObject.Undefined> Abort(dynamic reason) Parameters reason dynamic Returns Task<GlobalObject.Undefined> A Promise, which fulfills with the value given in the reason parameter. Remarks See also on MDN Close() The close() method of the WritableStream interface closes the associated stream. All chunks written before this method is called are sent before the returned promise is fulfilled. public Task<GlobalObject.Undefined> Close() Returns Task<GlobalObject.Undefined> A Promise which fulfills with the undefined when all remaining chunks were successfully written before the close, or rejects with an error if a problem was encountered during the process. Remarks This is equivalent to getting a WritableStreamDefaultWriter with GetWriter(), calling Close() on it. See also on MDN GetWriter() The getWriter() method of the WritableStream interface returns a new instance of WritableStreamDefaultWriter and locks the stream to that instance. While the stream is locked, no other writer can be acquired until this one is released. public WritableStreamDefaultWriter GetWriter() Returns WritableStreamDefaultWriter A WritableStreamDefaultWriter object instance. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WritableStreamDefaultController.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WritableStreamDefaultController.html",
    "title": "Class WritableStreamDefaultController | CSharpToJavaScript",
    "keywords": "Class WritableStreamDefaultController Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WritableStreamDefaultController interface of the Streams API represents a controller allowing control of a WritableStream's state. When constructing a WritableStream, the underlying sink is given a corresponding WritableStreamDefaultController instance to manipulate. [To(\"FirstCharToLowerCase\")] public class WritableStreamDefaultController Inheritance object WritableStreamDefaultController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Signal The read-only signal property of the WritableStreamDefaultController interface returns the AbortSignal associated with the controller. public AbortSignal Signal { get; } Property Value AbortSignal An AbortSignal object. Remarks See also on MDN Methods Error(dynamic) The error() method of the WritableStreamDefaultController interface causes any future interactions with the associated stream to error. public GlobalObject.Undefined Error(dynamic e) Parameters e dynamic Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying sink&apos;s methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the normal lifecycle of interactions with the underlying sink. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WritableStreamDefaultWriter.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WritableStreamDefaultWriter.html",
    "title": "Class WritableStreamDefaultWriter | CSharpToJavaScript",
    "keywords": "Class WritableStreamDefaultWriter Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WritableStreamDefaultWriter interface of the Streams API is the object returned by GetWriter() and once created locks the writer to the WritableStream ensuring that no other streams can write to the underlying sink. [To(\"FirstCharToLowerCase\")] public class WritableStreamDefaultWriter Inheritance object WritableStreamDefaultWriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors WritableStreamDefaultWriter() public WritableStreamDefaultWriter() WritableStreamDefaultWriter(WritableStream) The WritableStreamDefaultWriter() constructor creates a new WritableStreamDefaultWriter object instance. public WritableStreamDefaultWriter(WritableStream stream) Parameters stream WritableStream Remarks NOTE Note: You generally wouldn&apos;t use this constructor manually; instead, you'd use the GetWriter() method. See also on MDN Properties Closed The closed read-only property of the WritableStreamDefaultWriter interface returns a Promise that fulfills if the stream becomes closed, or rejects if the stream errors or the writer&apos;s lock is released. public Task<GlobalObject.Undefined> Closed { get; } Property Value Task<GlobalObject.Undefined> A Promise. Remarks See also on MDN DesiredSize The desiredSize read-only property of the WritableStreamDefaultWriter interface returns the desired size required to fill the stream&apos;s internal queue. public double? DesiredSize { get; } Property Value double? An integer. Note that this can be negative if the queue is over-full.The value will be null if the stream cannot be successfully written to (due to either being errored, or having an abort queued up), and zero if the stream is closed. Remarks See also on MDN Ready The ready read-only property of the WritableStreamDefaultWriter interface returns a {{jsxref(\"Promise\")}} that resolves when the desired size of the stream&apos;s internal queue transitions from non-positive to positive, signaling that it is no longer applying backpressure. public Task<GlobalObject.Undefined> Ready { get; } Property Value Task<GlobalObject.Undefined> A Promise. Remarks See also on MDN Methods Abort(dynamic) The abort() method of the WritableStreamDefaultWriter interface aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be immediately moved to an error state, with any queued writes discarded. public Task<GlobalObject.Undefined> Abort(dynamic reason) Parameters reason dynamic Returns Task<GlobalObject.Undefined> A Promise, which fulfills with the value given in the reason parameter. Remarks If the writer is active, the abort() method behaves the same as that for the associated stream (Abort(dynamic)). If not, it returns a rejected promise. See also on MDN Close() The close() method of the WritableStreamDefaultWriter interface closes the associated writable stream. public Task<GlobalObject.Undefined> Close() Returns Task<GlobalObject.Undefined> A Promise, which fulfills with the undefined if all remaining chunks were successfully written before the close, or rejects with an error if a problem was encountered during the process. Remarks The underlying sink will finish processing any previously-written chunks, before invoking the close behavior. During this time any further attempts to write will fail (without erroring the stream). See also on MDN ReleaseLock() The releaseLock() method of the WritableStreamDefaultWriter interface releases the writer's lock on the corresponding stream. After the lock is released, the writer is no longer active. If the associated stream is errored when the lock is released, the writer will appear errored in the same way from now on; otherwise, the writer will appear closed. public GlobalObject.Undefined ReleaseLock() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Write(dynamic) The write() method of the WritableStreamDefaultWriter interface writes a passed chunk of data to a WritableStream and its underlying sink, then returns a Promise that resolves to indicate the success or failure of the write operation. public Task<GlobalObject.Undefined> Write(dynamic chunk) Parameters chunk dynamic Returns Task<GlobalObject.Undefined> A Promise, which fulfills with the undefined upon a successful write, or rejects if the write fails or stream becomes errored before the writing process is initiated. Remarks Note that what &quot;success&quot; means is up to the underlying sink; it might indicate that the chunk has been accepted, and not necessarily that it is safely saved to its ultimate destination. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WriteCommandType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WriteCommandType.html",
    "title": "Enum WriteCommandType | CSharpToJavaScript",
    "keywords": "Enum WriteCommandType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum WriteCommandType Fields Seek = 1 Truncate = 2 Write = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.WriteParams.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WriteParams.html",
    "title": "Class WriteParams | CSharpToJavaScript",
    "keywords": "Class WriteParams Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WriteParams Inheritance object WriteParams Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Data public Union60? Data Field Value Union60? Position public ulong? Position Field Value ulong? Size public ulong? Size Field Value ulong? Type public required WriteCommandType Type Field Value WriteCommandType"
  },
  "api/CSharpToJavaScript.APIs.JS.XMLDocument.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XMLDocument.html",
    "title": "Class XMLDocument | CSharpToJavaScript",
    "keywords": "Class XMLDocument Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XMLDocument interface represents an XML document. It inherits from the generic Document and does not add any specific methods or properties to it: nevertheless, several algorithms behave differently with the two types of documents. [To(\"FirstCharToLowerCase\")] public class XMLDocument : Document Inheritance object EventTarget Node Document XMLDocument Inherited Members Document.CreateElement(string, string) Document.Location Document.Domain Document.Referrer Document.Cookie Document.LastModified Document.ReadyState Document.Title Document.Dir Document.Body Document.Head Document.Images Document.Embeds Document.Plugins Document.Links Document.Forms Document.Scripts Document.GetElementsByName(string) Document.CurrentScript Document.Open(string, string) Document.Open(string, string, string) Document.Close() Document.Write(params string[]) Document.Writeln(params string[]) Document.DefaultView Document.HasFocus() Document.DesignMode Document.ExecCommand(string, bool, string) Document.QueryCommandEnabled(string) Document.QueryCommandIndeterm(string) Document.QueryCommandState(string) Document.QueryCommandSupported(string) Document.QueryCommandValue(string) Document.Hidden Document.VisibilityState Document.Onreadystatechange Document.Onvisibilitychange Document.FgColor Document.LinkColor Document.VlinkColor Document.AlinkColor Document.BgColor Document.Anchors Document.Applets Document.Clear() Document.CaptureEvents() Document.ReleaseEvents() Document.All Document.StartViewTransition(UpdateCallback?) Document.Implementation Document.URL Document.DocumentURI Document.CompatMode Document.CharacterSet Document.Charset Document.InputEncoding Document.ContentType Document.Doctype Document.DocumentElement Document.GetElementsByTagName(string) Document.GetElementsByTagNameNS(string, string) Document.GetElementsByClassName(string) Document.CreateElement(string, Union49) Document.CreateElementNS(string, string, Union50) Document.CreateDocumentFragment() Document.CreateTextNode(string) Document.CreateCDATASection(string) Document.CreateComment(string) Document.CreateProcessingInstruction(string, string) Document.ImportNode(Node, bool) Document.AdoptNode(Node) Document.CreateAttribute(string) Document.CreateAttributeNS(string, string) Document.CreateEvent(string) Document.CreateRange() Document.CreateNodeIterator(Node, ulong, NodeFilter) Document.CreateTreeWalker(Node, ulong, NodeFilter) Document.FullscreenEnabled Document.Fullscreen Document.ExitFullscreen() Document.Onfullscreenchange Document.Onfullscreenerror Document.PermissionsPolicy Document.PictureInPictureEnabled Document.ExitPictureInPicture() Document.CreateTouch(Window, EventTarget, long, long, long, long, long) Document.CreateTouchList(params Touch[]) Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The Document Object Model (DOM) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XMLHttpRequest.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XMLHttpRequest.html",
    "title": "Class XMLHttpRequest | CSharpToJavaScript",
    "keywords": "Class XMLHttpRequest Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll XMLHttpRequest (XHR) objects are used to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing. [To(\"FirstCharToLowerCase\")] public class XMLHttpRequest : XMLHttpRequestEventTarget Inheritance object EventTarget XMLHttpRequestEventTarget XMLHttpRequest Inherited Members XMLHttpRequestEventTarget.Onloadstart XMLHttpRequestEventTarget.Onprogress XMLHttpRequestEventTarget.Onabort XMLHttpRequestEventTarget.Onerror XMLHttpRequestEventTarget.Onload XMLHttpRequestEventTarget.Ontimeout XMLHttpRequestEventTarget.Onloadend EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks XMLHttpRequest is used heavily in AJAX programming. Despite its name, XMLHttpRequest can be used to retrieve any type of data, not just XML. If your communication needs to involve receiving event data or message data from a server, consider using server-sent events through the EventSource interface. For full-duplex communication, WebSockets may be a better choice. AvailableInWorkers(\"notservice\") -XMLSerializer: Serializing a DOM tree into XML -MDN tutorials covering XMLHttpRequest:-Ajax -Using XMLHttpRequest -HTML in XMLHttpRequest -Fetch API -New Tricks in XMLHttpRequest2 (2011) See also on MDN Constructors XMLHttpRequest() The XMLHttpRequest() constructor creates a new XMLHttpRequest. public XMLHttpRequest() Remarks For details about how to use XMLHttpRequest, see Using XMLHttpRequest. -Using XMLHttpRequest -HTML in XMLHttpRequest See also on MDN Fields DONE public const ushort DONE = 4 Field Value ushort HEADERS_RECEIVED public const ushort HEADERS_RECEIVED = 2 Field Value ushort LOADING public const ushort LOADING = 3 Field Value ushort OPENED public const ushort OPENED = 1 Field Value ushort UNSENT public const ushort UNSENT = 0 Field Value ushort Properties Onreadystatechange public EventHandlerNonNull Onreadystatechange { get; set; } Property Value EventHandlerNonNull ReadyState The XMLHttpRequest.readyState property returns the state an XMLHttpRequest client is in. An XHR client exists in one of the following states: public ushort ReadyState { get; } Property Value ushort Remarks Value State Description 0 UNSENT Client has been created. open() not called yet. 1 OPENED open() has been called. 2 HEADERS_RECEIVED send() has been called, and headers and status are available. 3 LOADING Downloading; responseText holds partial data. 4 DONE The operation is complete. See also on MDN Response The XMLHttpRequest response property returns the response&apos;s body content as an {{jsxref(\"ArrayBuffer\")}}, a Blob, a Document, a JavaScript Object, or a string, depending on the value of the request's ResponseType property. public dynamic Response { get; } Property Value dynamic An appropriate object based on the value of {{domxref(&quot;XMLHttpRequest.responseType&quot;, &quot;responseType&quot;)}}. You may attempt to request the data be provided in a specific format by setting the value of responseType after calling Open(string, string) to initialize the request but before calling Send(Union71?) to send the request to the server.The value is null if the request is not yet complete or was unsuccessful, with the exception that when reading text data using a responseType of &quot;text&quot; or the empty string (&quot;&quot;), the response can contain the response so far while the request is still in the LOADING ReadyState (3). Remarks -Using XMLHttpRequest -Getting text and HTML/XML data: ResponseText and ResponseXML See also on MDN ResponseText The read-only XMLHttpRequest property responseText returns the text received from a server following a request being sent. public string ResponseText { get; } Property Value string A string which contains either the textual data received using the XMLHttpRequest or null if the request failed or &quot;&quot; if the request has not yet been sent by calling Send(Union71?).While handling an asynchronous request, the value of responseText always has the current content received from the server, even if it&apos;s incomplete because the data has not been completely received yet.You know the entire content has been received when the value of ReadyState becomes XMLHttpRequest.DONE (4), and Status becomes 200 (&quot;OK&quot;). Remarks See also on MDN ResponseType The XMLHttpRequest property responseType is an enumerated string value specifying the type of data contained in the response. public XMLHttpRequestResponseType ResponseType { get; set; } Property Value XMLHttpRequestResponseType A string which specifies what type of data the response contains. It can take the following values: NOTE Note: When setting responseType to a particular value, the author should make sure that the server is actually sending a response compatible with that format. If the server returns data that is not compatible with the responseType that was set, the value of Response will be null. Remarks It also lets the author change the response type. If an empty string is set as the value of responseType, the default value of text is used. -Using XMLHttpRequest -HTML in XMLHttpRequest -The response data: Response, ResponseText, and ResponseXML See also on MDN ResponseURL The read-only XMLHttpRequest.responseURL property returns the serialized URL of the response or the empty string if the URL is null. If the URL is returned, any URL fragment present in the URL will be stripped away. The value of responseURL will be the final URL obtained after any redirects. public string ResponseURL { get; } Property Value string Remarks See also on MDN ResponseXML The XMLHttpRequest.responseXML read-only property returns a Document containing the HTML or XML retrieved by the request; or null if the request was unsuccessful, has not yet been sent, or if the data can&apos;t be parsed as XML or HTML. public Document? ResponseXML { get; } Property Value Document A Document from parsing the XML or HTML received using XMLHttpRequest, or null if no data was received or if the data is not XML/HTML. Remarks NOTE Note: The name responseXML is an artifact of this property&apos;s history; it works for both HTML and XML. Usually, the response is parsed as &quot;text/xml&quot;. If the ResponseType is set to &quot;document&quot; and the request was made asynchronously, instead the response is parsed as &quot;text/html&quot;. responseXML is null for any other types of data, as well as for data: URLs. If the server doesn't specify the Content-Type as &quot;text/xml&quot; or &quot;application/xml&quot;, you can use OverrideMimeType(string) to parse it as XML anyway. This property isn&apos;t available to workers. -XMLHttpRequest -Response -ResponseType -Parsing and serializing XML -Parsing XML into a DOM tree: DOMParser -Serializing a DOM tree into XML: XMLSerializer (specifically, the SerializeToString(Node) method) See also on MDN Status The read-only XMLHttpRequest.status property returns the numerical HTTP status code of the XMLHttpRequest&apos;s response. public ushort Status { get; } Property Value ushort A number. Remarks Before the request completes, the value of status is 0. Browsers also report a status of 0 in case of XMLHttpRequest errors. -List of HTTP status -HTTP See also on MDN StatusText The read-only XMLHttpRequest.statusText property returns a string containing the response&apos;s status message as returned by the HTTP server. Unlike XMLHTTPRequest.status which indicates a numerical status code, this property contains the text of the response status, such as &quot;OK&quot; or &quot;Not Found&quot;. If the request&apos;s readyState is in UNSENT or OPENED state, the value of statusText will be an empty string. public string StatusText { get; } Property Value string A string. Remarks If the server response doesn&apos;t explicitly specify a status text, statusText will assume the default value &quot;OK&quot;. NOTE Note: Responses over an HTTP/2 connection will always have an empty string as status message as HTTP/2 does not support them. -List of HTTP status -HTTP -WHATWG Fetch Living Standard See also on MDN Timeout The XMLHttpRequest.timeout property is an unsigned long representing the number of milliseconds a request can take before automatically being terminated. The default value is 0, which means there is no timeout. Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a 'document environment' or it will throw an InvalidAccessError exception. When a timeout happens, a timeout event is fired. public ulong Timeout { get; set; } Property Value ulong Remarks NOTE Note: You may not use a timeout for synchronous requests with an owning window. Using a timeout with an asynchronous request See also on MDN Upload The XMLHttpRequestUpload interface represents the upload process for a specific XMLHttpRequest. It is an opaque object that represents the underlying, browser-dependant, upload process. It is XMLHttpRequestEventTarget and is can be obtained by calling Upload. public XMLHttpRequestUpload Upload { get; } Property Value XMLHttpRequestUpload Remarks AvailableInWorkers(\"notservice\") -XMLHttpRequest See also on MDN WithCredentials The XMLHttpRequest.withCredentials property is a boolean value that indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates. Setting withCredentials has no effect on same-origin requests. public bool WithCredentials { get; set; } Property Value bool A boolean. Remarks In addition, this flag is also used to indicate when cookies are to be ignored in the response. The default is false. XMLHttpRequest responses from a different domain cannot set cookie values for their own domain unless withCredentials is set to true before making the request. The third-party cookies obtained by setting withCredentials to true will still honor same-origin policy and hence can not be accessed by the requesting script through document.cookie or from response headers. NOTE Note: This never affects same-origin requests. NOTE Note: XMLHttpRequest responses from a different domain cannot set cookie values for their own domain unless withCredentials is set to true before making the request, regardless of Access-Control- header values. See also on MDN Methods Abort() The XMLHttpRequest.abort() method aborts the request if it has already been sent. When a request is aborted, its ReadyState is changed to XMLHttpRequest.UNSENT (0) and the request&apos;s Status code is set to 0. public GlobalObject.Undefined Abort() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using XMLHttpRequest See also on MDN GetAllResponseHeaders() The XMLHttpRequest method getAllResponseHeaders() returns all the response headers, separated by 'CRLF', as a string, or returns null if no response has been received. public string GetAllResponseHeaders() Returns string A string representing all of the response&apos;s headers (except those whose field name is Set-Cookie) separated by 'CRLF', or null if no response has been received. If a network error happened, an empty string is returned.An example of what a raw header string looks like:Each line is terminated by both carriage return and line feed characters (\\r\\n). These are essentially delimiters separating each of the headers. NOTE Note: In modern browsers, the header names are returned in all lower case, as per the latest spec. Remarks If a network error happened, an empty string is returned. NOTE Note: For multipart requests, this returns the headers from the current part of the request, not from the original channel. -Using XMLHttpRequest -Setting request headers: {{domxref(&quot;XMLHttpRequest.setRequestHeader&quot;, &quot;setRequestHeader()&quot;)}} See also on MDN GetResponseHeader(string) The XMLHttpRequest method getResponseHeader() returns the string containing the text of a particular header&apos;s value. public string? GetResponseHeader(string name) Parameters name string Returns string A string representing the header&apos;s text value, or null if either the response has not yet been received or the header doesn&apos;t exist in the response. Remarks If there are multiple response headers with the same name, then their values are returned as a single concatenated string, where each value is separated from the previous one by a pair of comma and space. The getResponseHeader() method returns the value as a UTF byte sequence. NOTE Note: The search for the header name is case-insensitive. If you need to get the raw string of all of the headers, use the GetAllResponseHeaders() method, which returns the entire raw header string. -Using XMLHttpRequest -HTTP headers -GetAllResponseHeaders() -Response -Setting request headers: {{DOMxRef(&quot;XMLHttpRequest.setRequestHeader&quot;, &quot;setRequestHeader()&quot;)}} See also on MDN Open(string, string) The XMLHttpRequest method open() initializes a newly-created request, or re-initializes an existing one. public GlobalObject.Undefined Open(string method, string url) Parameters method string url string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: Calling this method for an already active request (one for which open() has already been called) is the equivalent of calling Abort(). -Using XMLHttpRequest -Related XMLHttpRequest methods: {{domxref(&quot;XMLHttpRequest.setRequestHeader&quot;, \"setRequestHeader()\")}}, Send(Union71?), and Abort() See also on MDN Open(string, string, bool, string?, string?) The XMLHttpRequest method open() initializes a newly-created request, or re-initializes an existing one. public GlobalObject.Undefined Open(string method, string url, bool async, string? username, string? password) Parameters method string url string async bool username string password string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: Calling this method for an already active request (one for which open() has already been called) is the equivalent of calling Abort(). -Using XMLHttpRequest -Related XMLHttpRequest methods: {{domxref(&quot;XMLHttpRequest.setRequestHeader&quot;, \"setRequestHeader()\")}}, Send(Union71?), and Abort() See also on MDN OverrideMimeType(string) The XMLHttpRequest method overrideMimeType() specifies a MIME type other than the one provided by the server to be used instead when interpreting the data being transferred in a request. public GlobalObject.Undefined OverrideMimeType(string mime) Parameters mime string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This may be used, for example, to force a stream to be treated and parsed as &quot;text/xml&quot;, even if the server does not report it as such. This method must be called before calling {{domxref(&quot;XMLHttpRequest.send&quot;, &quot;send()&quot;)}}. -Using XMLHttpRequest -ResponseType See also on MDN Send(Union71?) The XMLHttpRequest method send() sends the request to the server. public GlobalObject.Undefined Send(Union71? body) Parameters body Union71? Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If the request is asynchronous (which is the default), this method returns as soon as the request is sent and the result is delivered using events. If the request is synchronous, this method doesn&apos;t return until the response has arrived. send() accepts an optional parameter which lets you specify the request&apos;s body; this is primarily used for requests such as {{HTTPMethod(\"PUT\")}}. If the request method is {{HTTPMethod(\"GET\")}} or {{HTTPMethod(\"HEAD\")}}, the body parameter is ignored and the request body is set to null. If no Accept header has been set using the SetRequestHeader(string, string), an Accept header with the type &quot;*/*&quot; (any type) is sent. -Using XMLHttpRequest -HTML in XMLHttpRequest See also on MDN SetRequestHeader(string, string) The XMLHttpRequest method setRequestHeader() sets the value of an HTTP request header. When using setRequestHeader(), you must call it after calling Open(string, string), but before calling Send(Union71?). If this method is called several times with the same header, the values are merged into one single request header. public GlobalObject.Undefined SetRequestHeader(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Each time you call setRequestHeader() after the first time you call it, the specified text is appended to the end of the existing header&apos;s content. If no Accept header has been set using this, an Accept header with the type &quot;*/*&quot; is sent with the request when Send(Union71?) is called. For security reasons, there are several Forbidden_header_name whose values are controlled by the user agent. Any attempt to set a value for one of those headers from frontend JavaScript code will be ignored without warning or error. In addition, the Authorization HTTP header may be added to a request, but will be removed if the request is redirected cross-origin. NOTE Note: For your custom fields, you may encounter a &quot;not allowed by Access-Control-Allow-Headers in preflight response&quot; exception when you send requests across domains. In this situation, you need to set up the Access-Control-Allow-Headers in your response header at server side. -Using XMLHttpRequest -HTML in XMLHttpRequest See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XMLHttpRequestEventTarget.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XMLHttpRequestEventTarget.html",
    "title": "Class XMLHttpRequestEventTarget | CSharpToJavaScript",
    "keywords": "Class XMLHttpRequestEventTarget Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll XMLHttpRequestEventTarget is the interface that describes the event handlers shared on XMLHttpRequest and XMLHttpRequestUpload. [To(\"FirstCharToLowerCase\")] public class XMLHttpRequestEventTarget : EventTarget Inheritance object EventTarget XMLHttpRequestEventTarget Derived XMLHttpRequest XMLHttpRequestUpload Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You don&apos;t use XMLHttpRequestEventTarget directly; instead you interact with the sub classes. -XMLHttpRequest -XMLHttpRequestUpload See also on MDN Properties Onabort public EventHandlerNonNull Onabort { get; set; } Property Value EventHandlerNonNull Onerror public EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull Onload public EventHandlerNonNull Onload { get; set; } Property Value EventHandlerNonNull Onloadend public EventHandlerNonNull Onloadend { get; set; } Property Value EventHandlerNonNull Onloadstart public EventHandlerNonNull Onloadstart { get; set; } Property Value EventHandlerNonNull Onprogress public EventHandlerNonNull Onprogress { get; set; } Property Value EventHandlerNonNull Ontimeout public EventHandlerNonNull Ontimeout { get; set; } Property Value EventHandlerNonNull"
  },
  "api/CSharpToJavaScript.APIs.JS.XMLHttpRequestResponseType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XMLHttpRequestResponseType.html",
    "title": "Enum XMLHttpRequestResponseType | CSharpToJavaScript",
    "keywords": "Enum XMLHttpRequestResponseType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XMLHttpRequest property responseType is an enumerated string value specifying the type of data contained in the response. public enum XMLHttpRequestResponseType Fields Arraybuffer = 1 Blob = 2 Document = 3 Empty = 0 Json = 4 Text = 5 Remarks It also lets the author change the response type. If an empty string is set as the value of responseType, the default value of text is used. -Using XMLHttpRequest -HTML in XMLHttpRequest -The response data: Response, ResponseText, and ResponseXML See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XMLHttpRequestUpload.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XMLHttpRequestUpload.html",
    "title": "Class XMLHttpRequestUpload | CSharpToJavaScript",
    "keywords": "Class XMLHttpRequestUpload Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XMLHttpRequestUpload interface represents the upload process for a specific XMLHttpRequest. It is an opaque object that represents the underlying, browser-dependant, upload process. It is XMLHttpRequestEventTarget and is can be obtained by calling Upload. [To(\"FirstCharToLowerCase\")] public class XMLHttpRequestUpload : XMLHttpRequestEventTarget Inheritance object EventTarget XMLHttpRequestEventTarget XMLHttpRequestUpload Inherited Members XMLHttpRequestEventTarget.Onloadstart XMLHttpRequestEventTarget.Onprogress XMLHttpRequestEventTarget.Onabort XMLHttpRequestEventTarget.Onerror XMLHttpRequestEventTarget.Onload XMLHttpRequestEventTarget.Ontimeout XMLHttpRequestEventTarget.Onloadend EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers(\"notservice\") -XMLHttpRequest See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XMLSerializer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XMLSerializer.html",
    "title": "Class XMLSerializer | CSharpToJavaScript",
    "keywords": "Class XMLSerializer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XMLSerializer interface provides the SerializeToString(Node) method to construct an XML string representing a {{Glossary(\"DOM\")}} tree. [To(\"FirstCharToLowerCase\")] public class XMLSerializer Inheritance object XMLSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Parsing and serializing XML -XMLHttpRequest -DOMParser See also on MDN Constructors XMLSerializer() The XMLSerializer() constructor creates a new XMLSerializer. public XMLSerializer() Remarks See also on MDN Methods SerializeToString(Node) The XMLSerializer method serializeToString() constructs a string representing the specified DOM tree in XML form. public string SerializeToString(Node root) Parameters root Node Returns string A string containing the XML representation of the specified DOM tree. Remarks -Parsing and serializing XML -Serializing to HTML: InnerHTML and OuterHTML -Parsing HTML or XML to create a DOM tree: DOMParser See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XPathEvaluator.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XPathEvaluator.html",
    "title": "Class XPathEvaluator | CSharpToJavaScript",
    "keywords": "Class XPathEvaluator Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XPathEvaluator interface allows to compile and evaluate XPath expressions. [To(\"FirstCharToLowerCase\")] public class XPathEvaluator Inheritance object XPathEvaluator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Document.CreateExpression -XPathExpression See also on MDN Constructors XPathEvaluator() The XPathEvaluator() constructor creates a new XPathEvaluator. public XPathEvaluator() Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XPathEvaluatorBase.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XPathEvaluatorBase.html",
    "title": "Interface XPathEvaluatorBase | CSharpToJavaScript",
    "keywords": "Interface XPathEvaluatorBase Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface XPathEvaluatorBase Methods CreateExpression(string, XPathNSResolver?) XPathExpression CreateExpression(string expression, XPathNSResolver? resolver) Parameters expression string resolver XPathNSResolver Returns XPathExpression CreateNSResolver(Node) Node CreateNSResolver(Node nodeResolver) Parameters nodeResolver Node Returns Node Evaluate(string, Node, XPathNSResolver?, ushort, XPathResult?) XPathResult Evaluate(string expression, Node contextNode, XPathNSResolver? resolver, ushort type, XPathResult? result) Parameters expression string contextNode Node resolver XPathNSResolver type ushort result XPathResult Returns XPathResult"
  },
  "api/CSharpToJavaScript.APIs.JS.XPathExpression.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XPathExpression.html",
    "title": "Class XPathExpression | CSharpToJavaScript",
    "keywords": "Class XPathExpression Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll This is useful when an expression will be reused in an application, because it is just compiled once and all namespace prefixes which occur within the expression are preresolved. [To(\"FirstCharToLowerCase\")] public class XPathExpression Inheritance object XPathExpression Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Objects of this type are created by calling XPathEvaluator.CreateExpression. -Document.CreateExpression -XPathResult See also on MDN Methods Evaluate(Node, ushort, XPathResult?) The evaluate() method of the XPathExpression interface executes an XPath expression on the given node or document and returns an XPathResult. public XPathResult Evaluate(Node contextNode, ushort type, XPathResult? result) Parameters contextNode Node type ushort result XPathResult Returns XPathResult An XPathResult object representing the result of evaluating the XPath expression. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XPathNSResolver.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XPathNSResolver.html",
    "title": "Interface XPathNSResolver | CSharpToJavaScript",
    "keywords": "Interface XPathNSResolver Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XPathNSResolver interface permits prefix strings in an XPath expression to be properly bound to namespace URI strings. [To(\"FirstCharToLowerCase\")] public interface XPathNSResolver Remarks The XPathEvaluator interface can construct an implementation of XPathNSResolver from a node, or the interface may be implemented by any application. -XPathEvaluator See also on MDN Methods LookupNamespaceURI(string?) The lookupNamespaceURI method looks up the namespace URI associated to the given namespace prefix within an XPath expression evaluated by the XPathEvaluator interface. string? LookupNamespaceURI(string? prefix) Parameters prefix string Returns string A string representing the associated namespace URI or null if none is found. Remarks -XPathEvaluator -LookupNamespaceURI(string?) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XPathResult.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XPathResult.html",
    "title": "Class XPathResult | CSharpToJavaScript",
    "keywords": "Class XPathResult Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XPathResult interface represents the results generated by evaluating an XPath expression within the context of a given node. [To(\"FirstCharToLowerCase\")] public class XPathResult Inheritance object XPathResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Since XPath expressions can result in a variety of result types, this interface makes it possible to determine and handle the type and value of the result. -Document.Evaluate -XPathExpression -Dottoro Web Reference - XPathResult object See also on MDN Fields ANY_TYPE public const ushort ANY_TYPE = 0 Field Value ushort ANY_UNORDERED_NODE_TYPE public const ushort ANY_UNORDERED_NODE_TYPE = 8 Field Value ushort BOOLEAN_TYPE public const ushort BOOLEAN_TYPE = 3 Field Value ushort FIRST_ORDERED_NODE_TYPE public const ushort FIRST_ORDERED_NODE_TYPE = 9 Field Value ushort NUMBER_TYPE public const ushort NUMBER_TYPE = 1 Field Value ushort ORDERED_NODE_ITERATOR_TYPE public const ushort ORDERED_NODE_ITERATOR_TYPE = 5 Field Value ushort ORDERED_NODE_SNAPSHOT_TYPE public const ushort ORDERED_NODE_SNAPSHOT_TYPE = 7 Field Value ushort STRING_TYPE public const ushort STRING_TYPE = 2 Field Value ushort UNORDERED_NODE_ITERATOR_TYPE public const ushort UNORDERED_NODE_ITERATOR_TYPE = 4 Field Value ushort UNORDERED_NODE_SNAPSHOT_TYPE public const ushort UNORDERED_NODE_SNAPSHOT_TYPE = 6 Field Value ushort Properties BooleanValue The read-only booleanValue property of the XPathResult interface returns the boolean value of a result with ResultType being BOOLEAN_TYPE. public bool BooleanValue { get; } Property Value bool The return value is the boolean value of the XPathResult returned by Document.Evaluate. Remarks AvailableInWorkers See also on MDN InvalidIteratorState The read-only invalidIteratorState property of the XPathResult interface signifies that the iterator has become invalid. It is true if ResultType is UNORDERED_NODE_ITERATOR_TYPE or ORDERED_NODE_ITERATOR_TYPE and the document has been modified since this result was returned. public bool InvalidIteratorState { get; } Property Value bool A boolean value indicating whether the iterator has become invalid. Remarks AvailableInWorkers See also on MDN NumberValue The read-only numberValue property of the XPathResult interface returns the numeric value of a result with ResultType being NUMBER_TYPE. public double NumberValue { get; } Property Value double The return value is the numeric value of the XPathResult returned by Document.Evaluate. Remarks AvailableInWorkers See also on MDN ResultType The read-only resultType property of the XPathResult interface represents the type of the result, as defined by the type constants. public ushort ResultType { get; } Property Value ushort An integer value representing the type of the result, as defined by the type constants. Remarks AvailableInWorkers See also on MDN SingleNodeValue The read-only singleNodeValue property of the XPathResult interface returns a Node value or null in case no node was matched of a result with ResultType being ANY_UNORDERED_NODE_TYPE or FIRST_ORDERED_NODE_TYPE. public Node? SingleNodeValue { get; } Property Value Node The return value is the Node value of the XPathResult returned by Document.Evaluate. Remarks See also on MDN SnapshotLength The read-only snapshotLength property of the XPathResult interface represents the number of nodes in the result snapshot. public ulong SnapshotLength { get; } Property Value ulong An integer value representing the number of nodes in the result snapshot. Remarks AvailableInWorkers See also on MDN StringValue The read-only stringValue property of the XPathResult interface returns the string value of a result with ResultType being STRING_TYPE. public string StringValue { get; } Property Value string The return value is the string value of the XPathResult returned by Document.Evaluate. Remarks AvailableInWorkers See also on MDN Methods IterateNext() The iterateNext() method of the XPathResult interface iterates over a node set result and returns the next node from it or null if there are no more nodes. public Node? IterateNext() Returns Node The next Node within the node set of the XPathResult. Remarks See also on MDN SnapshotItem(ulong) The snapshotItem() method of the XPathResult interface returns an item of the snapshot collection or null in case the index is not within the range of nodes. Unlike the iterator result, the snapshot does not become invalid, but may not correspond to the current document if it is mutated. public Node? SnapshotItem(ulong index) Parameters index ulong Returns Node The Node at the given index within the node set of the XPathResult. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRBoundedReferenceSpace.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRBoundedReferenceSpace.html",
    "title": "Class XRBoundedReferenceSpace | CSharpToJavaScript",
    "keywords": "Class XRBoundedReferenceSpace Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebXR Device API&apos;s XRBoundedReferenceSpace interface describes a virtual world reference space which has preset boundaries. This extends XRReferenceSpace, which describes an essentially unrestricted space around the viewer's position. These bounds are defined using an array of points, each of which defines a vertex in a polygon inside which the user is allowed to move. [To(\"FirstCharToLowerCase\")] public class XRBoundedReferenceSpace : XRReferenceSpace Inheritance object EventTarget XRSpace XRReferenceSpace XRBoundedReferenceSpace Inherited Members XRReferenceSpace.GetOffsetReferenceSpace(XRRigidTransform) XRReferenceSpace.Onreset EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This is typically used when the XR system is capable of tracking the user&apos;s physical movement within a limited distance of their starting position. The specified bounds may, in fact, describe the shape and size of the room the user is located in, in order to let the WebXR site or application prevent the user from colliding with the walls or other obstacles in the real world. At a minimum, the boundaries indicate the area in which the XR device is capable of tracking the user&apos;s movement. See the article Using bounded reference spaces for details on how bounded spaces work and why they&apos;re useful. -WebXR Device API -Geometry and reference spaces in WebXR -Viewpoints and viewers: simulating cameras in WebXR See also on MDN Properties BoundsGeometry The read-only XRBoundedReferenceSpace property boundsGeometry is an array of DOMPointReadOnly objects which specifies the points making up a polygon inside which the viewer is allowed to move. Each point is treated as a two-dimensional point, and must be located at ground level (that is, its y coordinate must be 0). public DOMPointReadOnly[] BoundsGeometry { get; } Property Value DOMPointReadOnly[] The boundsGeometry property is an array of DOMPointReadOnly objects, each of which defines one vertex in a polygon inside which the viewer is required to remain. Each point must be at floor level, with its y coordinate&apos;s value set to 0. Additionally, the value of w is always 1 in every point in the array. Additionally, the points must be listed in clockwise order.Each entry in boundsGeometry is equal to an entry in the list of native bounds geometry points for the room, premultiplied by the inverse of the origin offset. In other words, the bounds are the physical limitations of the available space, shifted so that the reference space&apos;s bounds points are all defined relative to the XRBoundedReferenceSpace&apos;s effective origin. Remarks This boundary is typically configured by the user, using the software that controls their XR hardware. This may be done by walking the border of the space they wish to use, or by drawing the shape of their room using their XR input device. Theoretically, a more advanced system might use sensors or other detection methods to determine the bounds of a dedicated XR room (notice how we carefully don&apos;t call it a holodeck?). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRCPUDepthInformation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRCPUDepthInformation.html",
    "title": "Class XRCPUDepthInformation | CSharpToJavaScript",
    "keywords": "Class XRCPUDepthInformation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRCPUDepthInformation interface contains depth information from the CPU (returned by GetDepthInformation(XRView)). [To(\"FirstCharToLowerCase\")] public class XRCPUDepthInformation : XRDepthInformation Inheritance object XRDepthInformation XRCPUDepthInformation Inherited Members XRDepthInformation.Width XRDepthInformation.Height XRDepthInformation.NormDepthBufferFromNormView XRDepthInformation.RawValueToMeters object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface inherits properties from its parent, XRDepthInformation. -XRDepthInformation -XRWebGLDepthInformation -GetDepthInformation(XRView) See also on MDN Properties Data The read-only data property of the XRCPUDepthInformation interface is an {{jsxref(\"ArrayBuffer\")}} containing depth-buffer information in raw format. public byte[] Data { get; } Property Value byte[] An ArrayBuffer. Remarks The data is stored in row-major format, without padding, with each entry corresponding to distance from the view's near plane to the users' environment, in unspecified units. The size of each data entry and the type is determined by DepthDataFormat. The values can be converted from unspecified units to meters by multiplying them by RawValueToMeters. The NormDepthBufferFromNormView property can be used to transform from normalized view coordinates (an origin in the top left corner of the view, with X axis growing to the right, and Y axis growing downward) into the depth buffer's coordinate system. See also on MDN Methods GetDepthInMeters(Number, Number) The getDepthInMeters() method of the XRCPUDepthInformation interface returns the depth in meters at (x, y) in normalized view coordinates (origin in the top left corner). public Number GetDepthInMeters(Number x, Number y) Parameters x Number y Number Returns Number None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRCompositionLayer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRCompositionLayer.html",
    "title": "Class XRCompositionLayer | CSharpToJavaScript",
    "keywords": "Class XRCompositionLayer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRCompositionLayer interface of the WebXR Device API is a base class that defines a set of common properties and behaviors for WebXR layer types. It is not constructable on its own. [To(\"FirstCharToLowerCase\")] public class XRCompositionLayer : XRLayer Inheritance object EventTarget XRLayer XRCompositionLayer Derived XRCubeLayer XRCylinderLayer XREquirectLayer XRProjectionLayer XRQuadLayer Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Several layer types inherit from XRCompositionLayer: XRCompositionLayer itself inherits from the general XRLayer class (which inherits from EventTarget). -XRLayer -EventTarget -XREquirectLayer -XRCubeLayer -XRCylinderLayer -XRProjectionLayer -XRQuadLayer See also on MDN Properties BlendTextureSourceAlpha The blendTextureSourceAlpha property of the XRCompositionLayer interface is a boolean enabling the layer's texture {{Glossary(\"Alpha\", \"alpha channel\")}}. public bool BlendTextureSourceAlpha { get; set; } Property Value bool A boolean. true enables the alpha channel, false disables it. Remarks -Alpha See also on MDN ForceMonoPresentation public bool ForceMonoPresentation { get; set; } Property Value bool Layout The read-only layout property of the XRCompositionLayer interface is the layout type of the layer. public XRLayerLayout Layout { get; } Property Value XRLayerLayout A string. Possible values: Remarks To specify the layout type of a layer, use one of the layer creation methods and their layout option: -XRSubImage -CreateQuadLayer(XRQuadLayerInit) -CreateCylinderLayer(XRCylinderLayerInit) -CreateEquirectLayer(XREquirectLayerInit) -CreateCubeLayer(XRCubeLayerInit) See also on MDN MipLevels The read-only mipLevels property of the XRCompositionLayer interface is a layer's number of mip levels in the color and texture data. See also Mipmap on Wikipedia. public ulong MipLevels { get; } Property Value ulong A number equal or smaller to the requested mip levels when a layer has been created. Remarks The desired number of mip levels can be specified when creating layers. However, if the user agent can&apos;t create the requested number, it can create less. Use mipLevels to determine the actual number of mip levels for a layer. The viewPixelWidth and viewPixelHeight need to be powers of two as they get successively halved at each mip level. -Mipmap on Wikipedia See also on MDN NeedsRedraw The read-only needsRedraw property of the XRCompositionLayer interface is a boolean signaling that the layer should be re-rendered in the next frame. public bool NeedsRedraw { get; } Property Value bool A boolean. true indicates a rerendering is needed in the next frame, false indicates no re-rendering is needed. Remarks The need for redrawing can occur when the underlying resources of a layer are lost due to textures that might have been freed by the compositor under the hood. This might happen when the device falls asleep or when the browser switches context (to an operating system dialog or similar) and then comes back. Redrawing is not a problem for layers which are updated with every frame. However, for layers updated infrequently, or for static layers (where you can only draw once after creation or after a redraw event), the layer&apos;s content might be lost and need to be redrawn. If the layer&apos;s resources are lost, the needsRedraw property will be true and a redraw event is fired on the layer. -XREquirectLayer: XREquirectLayer.Redraw_event event -XRCubeLayer: XRCubeLayer.Redraw_event event -XRCylinderLayer: XRCylinderLayer.Redraw_event event -XRQuadLayer: XRQuadLayer.Redraw_event event See also on MDN Opacity public Number Opacity { get; set; } Property Value Number Quality public XRLayerQuality Quality { get; set; } Property Value XRLayerQuality Methods Destroy() The destroy() method of the XRCompositionLayer interface deletes the references to the underlying graphics library for the layer. It also sets the color textures and depth stencil texture arrays to an empty array. public GlobalObject.Undefined Destroy() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRCubeLayer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRCubeLayer.html",
    "title": "Class XRCubeLayer | CSharpToJavaScript",
    "keywords": "Class XRCubeLayer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRCubeLayer interface of the WebXR Device API is a layer that renders directly from a cubemap and projects it onto the inside faces of a cube. [To(\"FirstCharToLowerCase\")] public class XRCubeLayer : XRCompositionLayer Inheritance object EventTarget XRLayer XRCompositionLayer XRCubeLayer Inherited Members XRCompositionLayer.Layout XRCompositionLayer.BlendTextureSourceAlpha XRCompositionLayer.ForceMonoPresentation XRCompositionLayer.Opacity XRCompositionLayer.MipLevels XRCompositionLayer.Quality XRCompositionLayer.NeedsRedraw XRCompositionLayer.Destroy() EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks XRCubeLayer requires the layers feature to be enabled for the XRSession. You can request it in RequestSession(XRSessionMode, XRSessionInit). To create a new XRCubeLayer, call CreateCubeLayer(XRCubeLayerInit). To present layers to the XR device, add them to the layers render state using UpdateRenderState(XRRenderStateInit). -XRLayer -EventTarget -XRCompositionLayer -XREquirectLayer -XRQuadLayer -XRCylinderLayer -XRProjectionLayer See also on MDN Properties Onredraw public EventHandlerNonNull Onredraw { get; set; } Property Value EventHandlerNonNull Orientation The orientation property of the XRCubeLayer interface represents the orientation relative to the space property. public DOMPointReadOnly Orientation { get; set; } Property Value DOMPointReadOnly A DOMPointReadOnly. Remarks -DOMPointReadOnly -XRSpace -CreateCubeLayer(XRCubeLayerInit) See also on MDN Space The space property of the XRCubeLayer interface represents the layer's spatial relationship with the user's physical environment. public XRSpace Space { get; set; } Property Value XRSpace An XRSpace. Remarks -XRSpace -CreateCubeLayer(XRCubeLayerInit) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRCubeLayerInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRCubeLayerInit.html",
    "title": "Class XRCubeLayerInit | CSharpToJavaScript",
    "keywords": "Class XRCubeLayerInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRCubeLayerInit : XRLayerInit Inheritance object XRLayerInit XRCubeLayerInit Inherited Members XRLayerInit.Space XRLayerInit.ColorFormat XRLayerInit.DepthFormat XRLayerInit.MipLevels XRLayerInit.ViewPixelWidth XRLayerInit.ViewPixelHeight XRLayerInit.Layout XRLayerInit.IsStatic XRLayerInit.ClearOnAccess object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Orientation public DOMPointReadOnly? Orientation Field Value DOMPointReadOnly"
  },
  "api/CSharpToJavaScript.APIs.JS.XRCylinderLayer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRCylinderLayer.html",
    "title": "Class XRCylinderLayer | CSharpToJavaScript",
    "keywords": "Class XRCylinderLayer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRCylinderLayer interface of the WebXR Device API is a layer that takes up a curved rectangular space in the virtual environment. Only the front of the layer is visible. [To(\"FirstCharToLowerCase\")] public class XRCylinderLayer : XRCompositionLayer Inheritance object EventTarget XRLayer XRCompositionLayer XRCylinderLayer Inherited Members XRCompositionLayer.Layout XRCompositionLayer.BlendTextureSourceAlpha XRCompositionLayer.ForceMonoPresentation XRCompositionLayer.Opacity XRCompositionLayer.MipLevels XRCompositionLayer.Quality XRCompositionLayer.NeedsRedraw XRCompositionLayer.Destroy() EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks XRCylinderLayer requires the layers feature to be enabled for the XRSession. You can request it in RequestSession(XRSessionMode, XRSessionInit). To create a new XRCylinderLayer, call either: To present layers to the XR device, add them to the layers render state using UpdateRenderState(XRRenderStateInit). -XRLayer -EventTarget -XRCompositionLayer -XREquirectLayer -XRCubeLayer -XRQuadLayer -XRProjectionLayer See also on MDN Properties AspectRatio The aspectRatio property of the XRCylinderLayer interface represents the ratio of the visible cylinder section. It is the ratio of the width of the visible section of the cylinder divided by its height. The width is calculated by multiplying the Radius with the CentralAngle. public Number AspectRatio { get; set; } Property Value Number A number representing the ratio of the visible cylinder section. Remarks -CentralAngle -Radius See also on MDN CentralAngle The centralAngle property of the XRCylinderLayer interface represents the angle in radians of the visible section of the cylinder. public Number CentralAngle { get; set; } Property Value Number A number representing the angle in radians of the visible section of the cylinder. Remarks -AspectRatio -Radius -MathPI See also on MDN Onredraw public EventHandlerNonNull Onredraw { get; set; } Property Value EventHandlerNonNull Radius The radius property of the XRCylinderLayer interface represents the radius of the cylinder. public Number Radius { get; set; } Property Value Number A number representing the radius of the cylinder. Remarks -AspectRatio -CentralAngle -MathPI See also on MDN Space The space property of the XRCylinderLayer interface represents the layer's spatial relationship with the user's physical environment. public XRSpace Space { get; set; } Property Value XRSpace An XRSpace. Remarks -XRSpace -CreateCylinderLayer(XRCylinderLayerInit) See also on MDN Transform The transform property of the XRCylinderLayer interface represents the offset and orientation relative to the layer's Space. public XRRigidTransform Transform { get; set; } Property Value XRRigidTransform An XRRigidTransform. Remarks -XRRigidTransform -Space See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRCylinderLayerInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRCylinderLayerInit.html",
    "title": "Class XRCylinderLayerInit | CSharpToJavaScript",
    "keywords": "Class XRCylinderLayerInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRCylinderLayerInit : XRLayerInit Inheritance object XRLayerInit XRCylinderLayerInit Inherited Members XRLayerInit.Space XRLayerInit.ColorFormat XRLayerInit.DepthFormat XRLayerInit.MipLevels XRLayerInit.ViewPixelWidth XRLayerInit.ViewPixelHeight XRLayerInit.Layout XRLayerInit.IsStatic XRLayerInit.ClearOnAccess object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AspectRatio public Number AspectRatio Field Value Number CentralAngle public Number CentralAngle Field Value Number Radius public Number Radius Field Value Number TextureType public XRTextureType TextureType Field Value XRTextureType Transform public XRRigidTransform? Transform Field Value XRRigidTransform"
  },
  "api/CSharpToJavaScript.APIs.JS.XRDOMOverlayInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRDOMOverlayInit.html",
    "title": "Class XRDOMOverlayInit | CSharpToJavaScript",
    "keywords": "Class XRDOMOverlayInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRDOMOverlayInit Inheritance object XRDOMOverlayInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Root public required Element Root Field Value Element"
  },
  "api/CSharpToJavaScript.APIs.JS.XRDOMOverlayState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRDOMOverlayState.html",
    "title": "Class XRDOMOverlayState | CSharpToJavaScript",
    "keywords": "Class XRDOMOverlayState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRDOMOverlayState Inheritance object XRDOMOverlayState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Type public XRDOMOverlayType Type Field Value XRDOMOverlayType"
  },
  "api/CSharpToJavaScript.APIs.JS.XRDOMOverlayType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRDOMOverlayType.html",
    "title": "Enum XRDOMOverlayType | CSharpToJavaScript",
    "keywords": "Enum XRDOMOverlayType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRDOMOverlayType Fields Floating = 1 HeadLocked = 2 Screen = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.XRDepthDataFormat.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRDepthDataFormat.html",
    "title": "Enum XRDepthDataFormat | CSharpToJavaScript",
    "keywords": "Enum XRDepthDataFormat Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRDepthDataFormat Fields Float32 = 1 LuminanceAlpha = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.XRDepthInformation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRDepthInformation.html",
    "title": "Class XRDepthInformation | CSharpToJavaScript",
    "keywords": "Class XRDepthInformation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRDepthInformation interface contains information about the distance from the user&apos;s device to the real-world geometry in the user&apos;s environment. [To(\"FirstCharToLowerCase\")] public class XRDepthInformation Inheritance object XRDepthInformation Derived XRCPUDepthInformation XRWebGLDepthInformation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface is the parent of: You will usually interact with these child interfaces. However, XRDepthInformation provides some useful properties that are inherited: -XRCPUDepthInformation -XRWebGLDepthInformation -GetDepthInformation(XRView) See also on MDN Properties Height The read-only height property of the XRDepthInformation interface contains the height of the depth buffer (number of rows). public ulong Height { get; } Property Value ulong An unsigned long integer. Remarks See also on MDN NormDepthBufferFromNormView The read-only normDepthBufferFromNormView property of the XRDepthInformation interface contains the 3D geometric transform that needs to be applied when indexing into the depth buffer. public XRRigidTransform NormDepthBufferFromNormView { get; } Property Value XRRigidTransform An XRRigidTransform that needs to be applied when indexing into the depth buffer. The transformation that the matrix represents changes the coordinate system from normalized view coordinates to normalized depth-buffer coordinates that can then be scaled by depth buffer's width and height to obtain the absolute depth buffer coordinates. Remarks See also on MDN RawValueToMeters The read-only rawValueToMeters property of the XRDepthInformation interface contains the scale factor by which the raw depth values must be multiplied in order to get the depths in meters. public Number RawValueToMeters { get; } Property Value Number A number. Remarks For CPU depth information, see also the GetDepthInMeters(Number, Number) method. See also on MDN Width The read-only width property of the XRDepthInformation interface contains the width of the depth buffer (number of columns). public ulong Width { get; } Property Value ulong An unsigned long integer. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRDepthStateInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRDepthStateInit.html",
    "title": "Class XRDepthStateInit | CSharpToJavaScript",
    "keywords": "Class XRDepthStateInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRDepthStateInit Inheritance object XRDepthStateInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DataFormatPreference public required List<XRDepthDataFormat> DataFormatPreference Field Value List<XRDepthDataFormat> UsagePreference public required List<XRDepthUsage> UsagePreference Field Value List<XRDepthUsage>"
  },
  "api/CSharpToJavaScript.APIs.JS.XRDepthUsage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRDepthUsage.html",
    "title": "Enum XRDepthUsage | CSharpToJavaScript",
    "keywords": "Enum XRDepthUsage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRDepthUsage Fields CpuOptimized = 0 GpuOptimized = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.XREnvironmentBlendMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XREnvironmentBlendMode.html",
    "title": "Enum XREnvironmentBlendMode | CSharpToJavaScript",
    "keywords": "Enum XREnvironmentBlendMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XREnvironmentBlendMode Fields Additive = 2 AlphaBlend = 1 Opaque = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.XREquirectLayer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XREquirectLayer.html",
    "title": "Class XREquirectLayer | CSharpToJavaScript",
    "keywords": "Class XREquirectLayer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XREquirectLayer interface of the WebXR Device API is a layer that maps equirectangular coded data onto the inside of a sphere. [To(\"FirstCharToLowerCase\")] public class XREquirectLayer : XRCompositionLayer Inheritance object EventTarget XRLayer XRCompositionLayer XREquirectLayer Inherited Members XRCompositionLayer.Layout XRCompositionLayer.BlendTextureSourceAlpha XRCompositionLayer.ForceMonoPresentation XRCompositionLayer.Opacity XRCompositionLayer.MipLevels XRCompositionLayer.Quality XRCompositionLayer.NeedsRedraw XRCompositionLayer.Destroy() EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks XREquirectLayer requires the layers feature to be enabled for the XRSession. You can request it in RequestSession(XRSessionMode, XRSessionInit). To create a new XREquirectLayer, call either: To present layers to the XR device, add them to the layers render state using UpdateRenderState(XRRenderStateInit). -XRLayer -EventTarget -XRCompositionLayer -XRCylinderLayer -XRCubeLayer -XRQuadLayer -XRProjectionLayer See also on MDN Properties CentralHorizontalAngle The centralHorizontalAngle property of the XREquirectLayer interface represents the central horizontal angle in radians for the sphere. public Number CentralHorizontalAngle { get; set; } Property Value Number A number representing the central horizontal angle in radians for the sphere. Setting centralHorizontalAngle to a value less than 0 will set it to 0 and setting it to a value higher than 2π will set it to 2π. Remarks -Radius -LowerVerticalAngle -UpperVerticalAngle See also on MDN LowerVerticalAngle The lowerVerticalAngle property of the XREquirectLayer interface represents the lower vertical angle in radians for the sphere. public Number LowerVerticalAngle { get; set; } Property Value Number A number representing the lower vertical angle in radians for the sphere. Setting lowerVerticalAngle to a value less than -π/2 will set it to -π/2 and setting it to a value higher than π/2 will set it to π/2. Remarks -Radius -CentralHorizontalAngle -UpperVerticalAngle See also on MDN Onredraw public EventHandlerNonNull Onredraw { get; set; } Property Value EventHandlerNonNull Radius The radius property of the XREquirectLayer interface represents the radius of the sphere. public Number Radius { get; set; } Property Value Number A number representing the non-negative radius (in meters) of the sphere. Values of zero or infinity are treated as representing an infinite sphere. Setting radius to a value less than 0 will set it to 0. Remarks -CentralHorizontalAngle -LowerVerticalAngle -UpperVerticalAngle See also on MDN Space The space property of the XREquirectLayer interface represents the layer's spatial relationship with the user's physical environment. public XRSpace Space { get; set; } Property Value XRSpace An XRSpace. Remarks -XRSpace -CreateEquirectLayer(XREquirectLayerInit) See also on MDN Transform The transform property of the XREquirectLayer interface represents the offset and orientation relative to the layer's Space. public XRRigidTransform Transform { get; set; } Property Value XRRigidTransform An XRRigidTransform. Remarks -XRRigidTransform -Space See also on MDN UpperVerticalAngle The upperVerticalAngle property of the XREquirectLayer interface represents the upper vertical angle in radians for the sphere. public Number UpperVerticalAngle { get; set; } Property Value Number A number representing the upper vertical angle in radians for the sphere. Setting upperVerticalAngle to a value less than -π/2 will set it to -π/2 and setting it to a value higher than π/2 will set it to π/2. Remarks -Radius -CentralHorizontalAngle -LowerVerticalAngle See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XREquirectLayerInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XREquirectLayerInit.html",
    "title": "Class XREquirectLayerInit | CSharpToJavaScript",
    "keywords": "Class XREquirectLayerInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XREquirectLayerInit : XRLayerInit Inheritance object XRLayerInit XREquirectLayerInit Inherited Members XRLayerInit.Space XRLayerInit.ColorFormat XRLayerInit.DepthFormat XRLayerInit.MipLevels XRLayerInit.ViewPixelWidth XRLayerInit.ViewPixelHeight XRLayerInit.Layout XRLayerInit.IsStatic XRLayerInit.ClearOnAccess object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CentralHorizontalAngle public Number CentralHorizontalAngle Field Value Number LowerVerticalAngle public Number LowerVerticalAngle Field Value Number Radius public Number Radius Field Value Number TextureType public XRTextureType TextureType Field Value XRTextureType Transform public XRRigidTransform? Transform Field Value XRRigidTransform UpperVerticalAngle public Number UpperVerticalAngle Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.XREye.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XREye.html",
    "title": "Enum XREye | CSharpToJavaScript",
    "keywords": "Enum XREye Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XREye Fields Left = 1 None = 0 Right = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.XRFrame.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRFrame.html",
    "title": "Class XRFrame | CSharpToJavaScript",
    "keywords": "Class XRFrame Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll A WebXR Device API XRFrame object is passed into the RequestAnimationFrame(XRFrameRequestCallback) callback function and provides access to the information needed in order to render a single frame of animation for an XRSession describing a VR or AR scene. Events which communicate the tracking state of objects also provide an XRFrame reference as part of their structure. [To(\"FirstCharToLowerCase\")] public class XRFrame Inheritance object XRFrame Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks In addition to providing a reference to the XRSession for which this frame is to be rendered, the GetViewerPose(XRReferenceSpace) method is provided to obtain the XRViewerPose describing the viewer's position and orientation in space, and GetPose(XRSpace, XRSpace) can be used to create an XRPose describing the relative position of one XRSpace relative to another. -WebXR Device API -Spatial tracking in WebXR See also on MDN Properties PredictedDisplayTime public Unsupported PredictedDisplayTime { get; } Property Value Unsupported Session An XRFrame object&apos;s read-only session property returns the XRSession object that generated the frame. public XRSession Session { get; } Property Value XRSession A XRSession object representing the WebXR session for which this XRFrame describes the object positions and orientations. Remarks See also on MDN Methods FillJointRadii(List<XRJointSpace>, float) The fillJointRadii() method of the XRFrame interface populates a {{jsxref(\"Float32Array\")}} with radii for a list of hand joint spaces and returns true if successful for all spaces. public bool FillJointRadii(List<XRJointSpace> jointSpaces, float radii) Parameters jointSpaces List<XRJointSpace> radii float Returns bool A boolean indicating if all of the spaces have a valid pose. Remarks -XRHand -XRJointSpace -Float32Array See also on MDN FillPoses(List<XRSpace>, XRSpace, float) The fillPoses() method of the XRFrame interface populates a {{jsxref(\"Float32Array\")}} with the matrices of the poses relative to a given base space and returns true if successful for all spaces. public bool FillPoses(List<XRSpace> spaces, XRSpace baseSpace, float transforms) Parameters spaces List<XRSpace> baseSpace XRSpace transforms float Returns bool A boolean indicating if all of the spaces have a valid pose. Remarks -XRHand -XRJointSpace -Float32Array See also on MDN GetDepthInformation(XRView) The getDepthInformation() method of the XRFrame interface returns an XRCPUDepthInformation object containing CPU depth information for the active and animated frame. public XRCPUDepthInformation? GetDepthInformation(XRView view) Parameters view XRView Returns XRCPUDepthInformation An XRCPUDepthInformation object. Remarks See also on MDN GetHitTestResults(XRHitTestSource) The getHitTestResults() method of the XRFrame interface returns an array of XRHitTestResult objects containing hit test results for a given XRHitTestSource. public XRHitTestResult[] GetHitTestResults(XRHitTestSource hitTestSource) Parameters hitTestSource XRHitTestSource Returns XRHitTestResult[] An array of XRHitTestResult objects. Remarks -XRHitTestResult -XRHitTestSource -XRRay See also on MDN GetHitTestResultsForTransientInput(XRTransientInputHitTestSource) The getHitTestResultsForTransientInput() method of the XRFrame interface returns an array of XRTransientInputHitTestResult objects containing transient input hit test results for a given XRTransientInputHitTestSource. public XRTransientInputHitTestResult[] GetHitTestResultsForTransientInput(XRTransientInputHitTestSource hitTestSource) Parameters hitTestSource XRTransientInputHitTestSource Returns XRTransientInputHitTestResult[] An array of XRTransientInputHitTestResult objects. Remarks -XRTransientInputHitTestResult -XRTransientInputHitTestSource -XRRay See also on MDN GetJointPose(XRJointSpace, XRSpace) The getJointPose() method of the XRFrame interface returns an XRJointPose object providing the pose of a hand joint (see XRHand) relative to a given base space. public XRJointPose? GetJointPose(XRJointSpace joint, XRSpace baseSpace) Parameters joint XRJointSpace baseSpace XRSpace Returns XRJointPose An XRJointPose object specifying the position and orientation of the hand joint, relative to the XRSpace indicated by baseSpace. Remarks -XRHand -XRJointSpace -XRSpace See also on MDN GetLightEstimate(XRLightProbe) The getLightEstimate() method of the XRFrame interface returns an XRLightEstimate object containing estimated lighting values for a given XRLightProbe. public XRLightEstimate? GetLightEstimate(XRLightProbe lightProbe) Parameters lightProbe XRLightProbe Returns XRLightEstimate An XRLightEstimate object or null if the device cannot estimate lighting for this frame. Remarks -XRLightEstimate -XRLightProbe See also on MDN GetPose(XRSpace, XRSpace) The XRFrame method getPose() returns the relative position and orientation—the pose—of one XRSpace to that of another space. With this, you can observe the motion of objects relative to each other and to fixed locations throughout the scene. public XRPose? GetPose(XRSpace space, XRSpace baseSpace) Parameters space XRSpace baseSpace XRSpace Returns XRPose An XRPose object specifying the position and orientation, relative to the XRSpace indicated by baseSpace. Remarks For example, to get the position of a controller relative to the viewer's head, you would compare the controller's GripSpace to the XRReferenceSpace of type viewer. See also on MDN GetViewerPose(XRReferenceSpace) The getViewerPose() method, a member of the XRFrame interface, returns a XRViewerPose object which describes the viewer's pose (position and orientation) relative to the specified reference space. public XRViewerPose? GetViewerPose(XRReferenceSpace referenceSpace) Parameters referenceSpace XRReferenceSpace Returns XRViewerPose A XRViewerPose describing the viewer's position and orientation relative to the specified reference space. Remarks See the GetPose(XRSpace, XRSpace) method for a way to calculate a pose that represents the difference between two spaces. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRFrameRequestCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRFrameRequestCallback.html",
    "title": "Struct XRFrameRequestCallback | CSharpToJavaScript",
    "keywords": "Struct XRFrameRequestCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct XRFrameRequestCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.XRHand.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRHand.html",
    "title": "Class XRHand | CSharpToJavaScript",
    "keywords": "Class XRHand Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRHand interface is pair iterator (an ordered map) with the key being the hand joints and the value being an XRJointSpace. [To(\"FirstCharToLowerCase\")] public class XRHand Inheritance object XRHand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks XRHand is returned by Hand. -Hand See also on MDN Properties this[int] public XRHandJoint this[int i] { get; set; } Parameters i int Property Value XRHandJoint Size public ulong Size { get; } Property Value ulong Methods Get(XRHandJoint) public XRJointSpace Get(XRHandJoint key) Parameters key XRHandJoint Returns XRJointSpace"
  },
  "api/CSharpToJavaScript.APIs.JS.XRHandJoint.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRHandJoint.html",
    "title": "Enum XRHandJoint | CSharpToJavaScript",
    "keywords": "Enum XRHandJoint Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRHandJoint Fields IndexFingerMetacarpal = 5 IndexFingerPhalanxDistal = 8 IndexFingerPhalanxIntermediate = 7 IndexFingerPhalanxProximal = 6 IndexFingerTip = 9 MiddleFingerMetacarpal = 10 MiddleFingerPhalanxDistal = 13 MiddleFingerPhalanxIntermediate = 12 MiddleFingerPhalanxProximal = 11 MiddleFingerTip = 14 PinkyFingerMetacarpal = 20 PinkyFingerPhalanxDistal = 23 PinkyFingerPhalanxIntermediate = 22 PinkyFingerPhalanxProximal = 21 PinkyFingerTip = 24 RingFingerMetacarpal = 15 RingFingerPhalanxDistal = 18 RingFingerPhalanxIntermediate = 17 RingFingerPhalanxProximal = 16 RingFingerTip = 19 ThumbMetacarpal = 1 ThumbPhalanxDistal = 3 ThumbPhalanxProximal = 2 ThumbTip = 4 Wrist = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.XRHandedness.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRHandedness.html",
    "title": "Enum XRHandedness | CSharpToJavaScript",
    "keywords": "Enum XRHandedness Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRHandedness Fields Left = 1 None = 0 Right = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.XRHitTestOptionsInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRHitTestOptionsInit.html",
    "title": "Class XRHitTestOptionsInit | CSharpToJavaScript",
    "keywords": "Class XRHitTestOptionsInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRHitTestOptionsInit Inheritance object XRHitTestOptionsInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields EntityTypes public XRHitTestTrackableType[] EntityTypes Field Value XRHitTestTrackableType[] OffsetRay public XRRay OffsetRay Field Value XRRay Space public required XRSpace Space Field Value XRSpace"
  },
  "api/CSharpToJavaScript.APIs.JS.XRHitTestResult.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRHitTestResult.html",
    "title": "Class XRHitTestResult | CSharpToJavaScript",
    "keywords": "Class XRHitTestResult Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRHitTestResult interface of the WebXR Device API contains a single result of a hit test. You can get an array of XRHitTestResult objects for a frame by calling GetHitTestResults(XRHitTestSource). [To(\"FirstCharToLowerCase\")] public class XRHitTestResult Inheritance object XRHitTestResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -XRTransientInputHitTestResult -XRPose -XRAnchor See also on MDN Methods GetPose(XRSpace) The getPose() method of the XRHitTestResult interface returns the XRPose of the hit test result relative to the given base space. public XRPose? GetPose(XRSpace baseSpace) Parameters baseSpace XRSpace Returns XRPose Returns an XRPose object. Remarks -GetPose(XRSpace, XRSpace) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRHitTestSource.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRHitTestSource.html",
    "title": "Class XRHitTestSource | CSharpToJavaScript",
    "keywords": "Class XRHitTestSource Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRHitTestSource interface of the WebXR Device API handles hit test subscriptions. You can get an XRHitTestSource object by using the RequestHitTestSource(XRHitTestOptionsInit) method. [To(\"FirstCharToLowerCase\")] public class XRHitTestSource Inheritance object XRHitTestSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This object doesn't itself contain hit test results, but it is used to compute hit tests for each XRFrame by calling GetHitTestResults(XRHitTestSource), which returns XRHitTestResult objects. -XRTransientInputHitTestSource See also on MDN Methods Cancel() The cancel() method of the XRHitTestSource interface unsubscribes a hit test. public GlobalObject.Undefined Cancel() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRHitTestTrackableType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRHitTestTrackableType.html",
    "title": "Enum XRHitTestTrackableType | CSharpToJavaScript",
    "keywords": "Enum XRHitTestTrackableType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRHitTestTrackableType Fields Mesh = 2 Plane = 1 Point = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.XRInputSource.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRInputSource.html",
    "title": "Class XRInputSource | CSharpToJavaScript",
    "keywords": "Class XRInputSource Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebXR Device API&apos;s XRInputSource interface describes a single source of control input which is part of the user&apos;s WebXR-compatible virtual or augmented reality system. The device is specific to the platform being used, but provides the direction in which it is being aimed and optionally may generate events if the user triggers performs actions using the device. [To(\"FirstCharToLowerCase\")] public class XRInputSource Inheritance object XRInputSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -WebXR Device API -Inputs and input sources -XRInputSourceArray -XRSpace See also on MDN Properties Gamepad The read-only XRInputSource property gamepad returns a Gamepad object describing the state of the buttons and axes on the XR input source, if it is a gamepad or comparable device. If the device isn't a gamepad-like device, this property's value is null. public Unsupported? Gamepad { get; } Property Value Unsupported Remarks The Gamepad instance returned behaves as described by the Gamepad API. However, there are a few things to note: See also on MDN GripSpace The read-only XRInputSource property gripSpace returns an XRSpace whose native origin tracks the pose used to render virtual objects so they appear to be held in (or part of) the user's hand. For example, if a user were holding a virtual straight rod, the native origin of this XRSpace would be located at the approximate center of mass of the user&apos;s fist. public XRSpace? GripSpace { get; } Property Value XRSpace An XRSpace object representing the position and orientation of the input device in virtual space, suitable for rendering an image of the device into the scene. gripSpace is null if the input source is inherently untrackable. For example, only inputs whose {{domxref(&quot;XRInputSource.targetRayMode&quot;, &quot;targetRayMode&quot;)}} is tracked-pointer provide a gripSpace.Imagine that the controller is shaped like a straight rod, held in the user&apos;s fist. The native origin of the grip space is located at the centroid—the center of mass—of the user&apos;s fist, tracking the position of the user&apos;s hand.The coordinate system for the left hand&apos;s grip space.A diagram showing how the grip space indicates the local coordinate system for the player&apos;s hand relative to the world.The coordinate system for the right hand&apos;s grip space.A diagram showing how the grip space indicates the local coordinate system for the player&apos;s hand relative to the world.As shown in the diagram above, the coordinate system is oriented as follows: Remarks See also on MDN Hand The read-only hand property of the XRInputSource interface is a XRHand object providing access to a hand-tracking device. public XRHand? Hand { get; } Property Value XRHand An XRHand object or null if the XRSession has not been requested with the hand-tracking feature descriptor. Remarks -XRHand See also on MDN Handedness The read-only XRInputSource property handedness indicates which of the user&apos;s hands the WebXR input source is associated with, or if it&apos;s not associated with a hand at all. public XRHandedness Handedness { get; } Property Value XRHandedness A string indicating whether the input controller is held in one of the user&apos;s hands, and if it is, which hand. The value is one of the following: Remarks -WebXR Device API -Inputs and input sources -Using gamepads in WebXR applications See also on MDN Profiles The read-only XRInputSource property profiles returns an array of strings, each describing a configuration profile for the input source. The profile strings are listed in order of specificity, with the most specific profile listed first. public string[] Profiles { get; } Property Value string[] An array of strings, each describing one configuration profile for the input device represented by the XRInputSource object. Each input profile specifies the preferred visual representation and behavior of the input source. Remarks NOTE Note: The profiles list is always empty when the WebXR session is in inline mode. -WebXR Device API -Inputs and input sources See also on MDN TargetRayMode The read-only XRInputSource property targetRayMode indicates the method by which the target ray for the input source should be generated and how it should be presented to the user. public XRTargetRayMode TargetRayMode { get; } Property Value XRTargetRayMode A string indicating which method to use when generating and presenting the target ray to the user. The possible values are: Remarks Typically a target ray is drawn from the source of the targeting system along the target ray in the direction in which the user is looking or pointing. The style of the ray is generally up to you, as is the method for indicating the endpoint of the ray. The targeted point or object might be indicated by drawing a shape or highlighting the targeted surface or object. A target ray emitted by a hand controller: A screenshot showing a target ray being emitted by a hand controller The target ray can be anything from a simple line (ideally fading over distance) to an animated effect, such as the science-fiction &quot;phaser&quot; style shown in the screenshot above. -WebXR Device API -Inputs and input sources -Using gamepads in WebXR applications See also on MDN TargetRaySpace The read-only XRInputSource property targetRaySpace returns an XRSpace (typically an XRReferenceSpace) representing the position and orientation of the target ray in the virtual space. Its native origin tracks the position of the origin point of the target ray, and its orientation indicates the orientation of the controller device itself. These values, interpreted in the context of the input source's TargetRayMode, can be used both to fully interpret the device as an input source. public XRSpace TargetRaySpace { get; } Property Value XRSpace An XRSpace object—typically an XRReferenceSpace or XRBoundedReferenceSpace—which represents the position and orientation of the input controller&apos;s target ray in virtual space.The native origin of the returned XRSpace is located at the point from which the target ray is emitted, and the orientation of the space indicates the direction in which the target ray is pointing. Remarks To obtain an XRSpace representing the input controller&apos;s position and orientation in virtual space, use the {{domxref(&quot;XRInputSource.gripSpace&quot;, &quot;gripSpace&quot;)}} property. -WebXR Device API -Inputs and input sources -Using gamepads in WebXR applications See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRInputSourceArray.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRInputSourceArray.html",
    "title": "Class XRInputSourceArray | CSharpToJavaScript",
    "keywords": "Class XRInputSourceArray Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The interface XRInputSourceArray represents a live list of WebXR input sources, and is used as the return value of the XRSession property InputSources. Each entry is an XRInputSource representing one input device connected to the WebXR system. [To(\"FirstCharToLowerCase\")] public class XRInputSourceArray Inheritance object XRInputSourceArray Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks In addition to being able to access the input sources in the list using standard array notation (that is, with index numbers inside square brackets), methods are available to allow the use of iterators and the XRInputSourceArray.ForEach method is also available. See also on MDN Properties this[int] public XRInputSource this[int i] { get; set; } Parameters i int Property Value XRInputSource Length The read-only length property returns an integer value indicating the number of items in the input source list represented by the XRInputSourceArray object. public ulong Length { get; } Property Value ulong An integer value indicating the number of XRInputSource objects representing WebXR input sources are included in the array. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRInputSourceEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRInputSourceEvent.html",
    "title": "Class XRInputSourceEvent | CSharpToJavaScript",
    "keywords": "Class XRInputSourceEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebXR Device API&apos;s XRInputSourceEvent interface describes an event which has occurred on a WebXR user input device such as a hand controller, gaze tracking system, or motion tracking system. More specifically, they represent a change in the state of an XRInputSource. [To(\"FirstCharToLowerCase\")] public class XRInputSourceEvent : Event Inheritance object Event XRInputSourceEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To learn more about handling inputs in a WebXR project, see the article Inputs and input sources. See also on MDN Constructors XRInputSourceEvent() public XRInputSourceEvent() XRInputSourceEvent(string, XRInputSourceEventInit) The XRInputSourceEvent() constructor creates and returns a new XRInputSourceEvent object describing an event (state change) which has occurred on a WebXR user input device represented by an XRInputSource. public XRInputSourceEvent(string type, XRInputSourceEventInit eventInitDict) Parameters type string eventInitDict XRInputSourceEventInit Remarks See also on MDN Properties Frame The read-only XRInputSourceEvent property frame specifies an XRFrame object representing the event frame during which a WebXR user input occurred. This may thus be an event which occurred in the past rather than a current or impending event. public XRFrame Frame { get; } Property Value XRFrame An XRFrame indicating the event frame at which the user input event described by the object took place. Remarks See also on MDN InputSource The XRInputSourceEvent interface's read-only inputSource property specifies the XRInputSource which generated the input event. This information lets you handle the event appropriately given the particulars of the user input device being manipulated. public XRInputSource InputSource { get; } Property Value XRInputSource An XRInputSource object identifying the source of the user input event. This event indicates an action the user has taken using a WebXR input controller, such as a hand controller, motion sensing device, or other input apparatus. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRInputSourceEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRInputSourceEventInit.html",
    "title": "Class XRInputSourceEventInit | CSharpToJavaScript",
    "keywords": "Class XRInputSourceEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRInputSourceEventInit : EventInit Inheritance object EventInit XRInputSourceEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Frame public required XRFrame Frame Field Value XRFrame InputSource public required XRInputSource InputSource Field Value XRInputSource"
  },
  "api/CSharpToJavaScript.APIs.JS.XRInputSourcesChangeEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRInputSourcesChangeEvent.html",
    "title": "Class XRInputSourcesChangeEvent | CSharpToJavaScript",
    "keywords": "Class XRInputSourcesChangeEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebXR Device API interface XRInputSourcesChangeEvent is used to represent the XRSession.Inputsourceschange_event event sent to an XRSession when the set of available WebXR input controllers changes. [To(\"FirstCharToLowerCase\")] public class XRInputSourcesChangeEvent : Event Inheritance object Event XRInputSourcesChangeEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors XRInputSourcesChangeEvent() public XRInputSourcesChangeEvent() XRInputSourcesChangeEvent(string, XRInputSourcesChangeEventInit) The XRInputSourcesChangeEvent() constructor creates and returns a new XRInputSourcesChangeEvent object, representing an update to the list of available WebXR input devices. You won&apos;t typically call this constructor yourself, as these events are created and sent to you by the WebXR system. public XRInputSourcesChangeEvent(string type, XRInputSourcesChangeEventInit eventInitDict) Parameters type string eventInitDict XRInputSourcesChangeEventInit Remarks See also on MDN Properties Added The read-only XRInputSourcesChangeEvent property Added is a list of zero or more input sources, each identified using an XRInputSource object, which have been newly made available for use. public XRInputSource[] Added { get; } Property Value XRInputSource[] An {{jsxref(\"Array\")}} of zero or more XRInputSource objects, each representing one input device added to the XR system. Remarks See also on MDN Removed The read-only XRInputSourcesChangeEvent property Removed is an array of zero or more XRInputSource objects representing the input sources that have been removed from the XRSession. public XRInputSource[] Removed { get; } Property Value XRInputSource[] An {{jsxref(\"Array\")}} of zero or more XRInputSource objects, each representing one input device removed from the XR system. Remarks See also on MDN Session The XRInputSourcesChangeEvent property Session specifies the XRSession to which the input source list change event applies. public XRSession Session { get; } Property Value XRSession An XRSession indicating the WebXR session to which the input source list change applies. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRInputSourcesChangeEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRInputSourcesChangeEventInit.html",
    "title": "Class XRInputSourcesChangeEventInit | CSharpToJavaScript",
    "keywords": "Class XRInputSourcesChangeEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRInputSourcesChangeEventInit : EventInit Inheritance object EventInit XRInputSourcesChangeEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Added public required XRInputSource[] Added Field Value XRInputSource[] Removed public required XRInputSource[] Removed Field Value XRInputSource[] Session public required XRSession Session Field Value XRSession"
  },
  "api/CSharpToJavaScript.APIs.JS.XRInteractionMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRInteractionMode.html",
    "title": "Enum XRInteractionMode | CSharpToJavaScript",
    "keywords": "Enum XRInteractionMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRInteractionMode Fields ScreenSpace = 0 WorldSpace = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.XRJointPose.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRJointPose.html",
    "title": "Class XRJointPose | CSharpToJavaScript",
    "keywords": "Class XRJointPose Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRJointPose interface is an XRPose with additional information about the size of the skeleton joint it represents. [To(\"FirstCharToLowerCase\")] public class XRJointPose : XRPose Inheritance object XRPose XRJointPose Inherited Members XRPose.Transform XRPose.LinearVelocity XRPose.AngularVelocity XRPose.EmulatedPosition object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -XRHand -XRReferenceSpace -XRJointSpace -GetJointPose(XRJointSpace, XRSpace) See also on MDN Properties Radius The read-only radius property of the XRJointPose interface indicates the radius (distance from skin) for a joint. public Number Radius { get; } Property Value Number A number indicating the radius in meters. Remarks -XRHand -XRReferenceSpace -XRJointSpace -GetJointPose(XRJointSpace, XRSpace) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRJointSpace.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRJointSpace.html",
    "title": "Class XRJointSpace | CSharpToJavaScript",
    "keywords": "Class XRJointSpace Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRJointSpace interface is an XRSpace and represents the position and orientation of an XRHand joint. [To(\"FirstCharToLowerCase\")] public class XRJointSpace : XRSpace Inheritance object EventTarget XRSpace XRJointSpace Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -XRHand -XRReferenceSpace -XRJointPose -GetJointPose(XRJointSpace, XRSpace) See also on MDN Properties JointName The read-only jointName property of the XRJointSpace interface contains the name of the joint it tracks. public XRHandJoint JointName { get; } Property Value XRHandJoint A string indicating the name of the joint. See the list of hand joints on the XRHand page. Remarks -XRHand See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRLayer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRLayer.html",
    "title": "Class XRLayer | CSharpToJavaScript",
    "keywords": "Class XRLayer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRLayer interface of the WebXR Device API is the base class for WebXR layer types. It inherits methods from EventTarget. [To(\"FirstCharToLowerCase\")] public class XRLayer : EventTarget Inheritance object EventTarget XRLayer Derived XRCompositionLayer XRWebGLLayer Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -XRCompositionLayer -XRWebGLLayer -EventTarget See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRLayerEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRLayerEvent.html",
    "title": "Class XRLayerEvent | CSharpToJavaScript",
    "keywords": "Class XRLayerEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRLayerEvent interface of the WebXR Device API is the event type for events related to a change of state of an XRLayer object. These events occur, for example, when the layer needs to be redrawn. [To(\"FirstCharToLowerCase\")] public class XRLayerEvent : Event Inheritance object Event XRLayerEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -NeedsRedraw See also on MDN Constructors XRLayerEvent() public XRLayerEvent() XRLayerEvent(string, XRLayerEventInit) The XRLayerEvent constructor creates and returns a new XRLayerEvent object. These events relate to a change of state of an XRLayer object. public XRLayerEvent(string type, XRLayerEventInit eventInitDict) Parameters type string eventInitDict XRLayerEventInit Remarks -XRLayer -DispatchEvent(Event) See also on MDN Properties Layer The layer property of the XRLayerEvent interface is a reference to the XRLayer which generated the event. public XRLayer Layer { get; } Property Value XRLayer An XRLayer. Remarks -XRLayer See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRLayerEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRLayerEventInit.html",
    "title": "Class XRLayerEventInit | CSharpToJavaScript",
    "keywords": "Class XRLayerEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRLayerEventInit : EventInit Inheritance object EventInit XRLayerEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Layer public required XRLayer Layer Field Value XRLayer"
  },
  "api/CSharpToJavaScript.APIs.JS.XRLayerInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRLayerInit.html",
    "title": "Class XRLayerInit | CSharpToJavaScript",
    "keywords": "Class XRLayerInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRLayerInit Inheritance object XRLayerInit Derived XRCubeLayerInit XRCylinderLayerInit XREquirectLayerInit XRQuadLayerInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ClearOnAccess public bool ClearOnAccess Field Value bool ColorFormat public Unsupported ColorFormat Field Value Unsupported DepthFormat public Unsupported? DepthFormat Field Value Unsupported IsStatic public bool IsStatic Field Value bool Layout public XRLayerLayout Layout Field Value XRLayerLayout MipLevels public ulong MipLevels Field Value ulong Space public required XRSpace Space Field Value XRSpace ViewPixelHeight public required ulong ViewPixelHeight Field Value ulong ViewPixelWidth public required ulong ViewPixelWidth Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.XRLayerLayout.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRLayerLayout.html",
    "title": "Enum XRLayerLayout | CSharpToJavaScript",
    "keywords": "Enum XRLayerLayout Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRLayerLayout Fields Default = 0 Mono = 1 Stereo = 2 StereoLeftRight = 3 StereoTopBottom = 4"
  },
  "api/CSharpToJavaScript.APIs.JS.XRLayerQuality.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRLayerQuality.html",
    "title": "Enum XRLayerQuality | CSharpToJavaScript",
    "keywords": "Enum XRLayerQuality Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRLayerQuality Fields Default = 0 GraphicsOptimized = 2 TextOptimized = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.XRLightEstimate.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRLightEstimate.html",
    "title": "Class XRLightEstimate | CSharpToJavaScript",
    "keywords": "Class XRLightEstimate Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRLightEstimate interface of the WebXR Device API provides the estimated lighting values for an XRLightProbe at the time represented by an XRFrame. [To(\"FirstCharToLowerCase\")] public class XRLightEstimate Inheritance object XRLightEstimate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To get an XRLightEstimate object, call the GetLightEstimate(XRLightProbe) method. -GetLightEstimate(XRLightProbe) See also on MDN Properties PrimaryLightDirection The read-only primaryLightDirection property of the XRLightEstimate interface returns a DOMPointReadOnly representing the direction to the primary light source from the probeSpace of an XRLightProbe. public DOMPointReadOnly PrimaryLightDirection { get; } Property Value DOMPointReadOnly A DOMPointReadOnly object. If no estimated values from the user's environment are available, the point will be { x: 0.0, y: 1.0, z: 0.0, w: 0.0 }, representing a light shining straight down from above. Remarks -PrimaryLightIntensity -ProbeSpace See also on MDN PrimaryLightIntensity The read-only primaryLightIntensity property of the XRLightEstimate interface returns a DOMPointReadOnly representing the intensity of the primary light source from the probeSpace of an XRLightProbe. public DOMPointReadOnly PrimaryLightIntensity { get; } Property Value DOMPointReadOnly A DOMPointReadOnly object where an RGB value is mapped to the x, y, and z values. The w value is always 1.0. If no estimated values from the user&apos;s environment are available, the point will be {x: 0.0, y: 0.0, z: 0.0, w: 1.0}, representing no illumination. Remarks -PrimaryLightDirection -ProbeSpace See also on MDN SphericalHarmonicsCoefficients The read-only sphericalHarmonicsCoefficients property of the XRLightEstimate interface returns a {{jsxref(\"Float32Array\")}} containing 9 spherical harmonics coefficients. public float SphericalHarmonicsCoefficients { get; } Property Value float A Float32Array containing 9 spherical harmonics coefficients. The array contains 27 elements in total, with every 3 elements defining red, green, and blue components for each coefficient.The first 3 elements must be a valid lighting estimate component; the rest may be 0 due to privacy settings or limitations of the device to provide more data. Remarks Spherical harmonic lighting is a technique that uses spherical functions instead of standard lighting equations. See Wikipedia for more information. -GetLightEstimate(XRLightProbe) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRLightProbe.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRLightProbe.html",
    "title": "Class XRLightProbe | CSharpToJavaScript",
    "keywords": "Class XRLightProbe Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRLightProbe interface of the WebXR Device API contains lighting information at a given point in the user&apos;s environment. You can get an XRLighting object using the RequestLightProbe(XRLightProbeInit) method. [To(\"FirstCharToLowerCase\")] public class XRLightProbe : EventTarget Inheritance object EventTarget XRLightProbe Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This object doesn't itself contain lighting values, but it is used to collect lighting states for each XRFrame. See XRLightEstimate for the estimated lighting values for an XRLightProbe. -RequestLightProbe(XRLightProbeInit) See also on MDN Properties Onreflectionchange public EventHandlerNonNull Onreflectionchange { get; set; } Property Value EventHandlerNonNull ProbeSpace The read-only probeSpace property of the XRLightProbe interface returns an XRSpace tracking the position and orientation that the lighting estimations are relative to. public XRSpace ProbeSpace { get; } Property Value XRSpace An XRSpace object. Remarks -XRSpace -GetPose(XRSpace, XRSpace) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRLightProbeInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRLightProbeInit.html",
    "title": "Class XRLightProbeInit | CSharpToJavaScript",
    "keywords": "Class XRLightProbeInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRLightProbeInit Inheritance object XRLightProbeInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ReflectionFormat public XRReflectionFormat ReflectionFormat Field Value XRReflectionFormat"
  },
  "api/CSharpToJavaScript.APIs.JS.XRMediaBinding.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRMediaBinding.html",
    "title": "Class XRMediaBinding | CSharpToJavaScript",
    "keywords": "Class XRMediaBinding Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRMediaBinding interface is used to create layers that display the content of an HTMLVideoElement. [To(\"FirstCharToLowerCase\")] public class XRMediaBinding Inheritance object XRMediaBinding Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: Only the video frames will be displayed in the layer. Video controls need to be implemented separately and must be drawn in another layer. -HTMLVideoElement -XRCylinderLayer, XREquirectLayer, XRQuadLayer See also on MDN Constructors XRMediaBinding() public XRMediaBinding() XRMediaBinding(XRSession) The XRMediaBinding() constructor creates and returns a new XRMediaBinding object. public XRMediaBinding(XRSession session) Parameters session XRSession Remarks -XRWebGLBinding See also on MDN Methods CreateCylinderLayer(HTMLVideoElement, XRMediaCylinderLayerInit) The createCylinderLayer() method of the XRMediaBinding interface returns an XRCylinderLayer object which is a layer that takes up a curved rectangular space in the virtual environment. public XRCylinderLayer CreateCylinderLayer(HTMLVideoElement video, XRMediaCylinderLayerInit init) Parameters video HTMLVideoElement init XRMediaCylinderLayerInit Returns XRCylinderLayer An XRCylinderLayer object. Remarks -XRCylinderLayer See also on MDN CreateEquirectLayer(HTMLVideoElement, XRMediaEquirectLayerInit) The createEquirectLayer() method of the XRMediaBinding interface returns an XREquirectLayer object which is a layer that maps an equirectangular coded data onto the inside of a sphere. public XREquirectLayer CreateEquirectLayer(HTMLVideoElement video, XRMediaEquirectLayerInit init) Parameters video HTMLVideoElement init XRMediaEquirectLayerInit Returns XREquirectLayer An XREquirectLayer object. Remarks -XREquirectLayer See also on MDN CreateQuadLayer(HTMLVideoElement, XRMediaQuadLayerInit) The createQuadLayer() method of the XRMediaBinding interface returns an XRQuadLayer object which is a layer that takes up a flat rectangular space in the virtual environment. public XRQuadLayer CreateQuadLayer(HTMLVideoElement video, XRMediaQuadLayerInit init) Parameters video HTMLVideoElement init XRMediaQuadLayerInit Returns XRQuadLayer An XRQuadLayer object. Remarks -XRQuadLayer See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRMediaCylinderLayerInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRMediaCylinderLayerInit.html",
    "title": "Class XRMediaCylinderLayerInit | CSharpToJavaScript",
    "keywords": "Class XRMediaCylinderLayerInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRMediaCylinderLayerInit : XRMediaLayerInit Inheritance object XRMediaLayerInit XRMediaCylinderLayerInit Inherited Members XRMediaLayerInit.Space XRMediaLayerInit.Layout XRMediaLayerInit.InvertStereo object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AspectRatio public Number? AspectRatio Field Value Number CentralAngle public Number CentralAngle Field Value Number Radius public Number Radius Field Value Number Transform public XRRigidTransform? Transform Field Value XRRigidTransform"
  },
  "api/CSharpToJavaScript.APIs.JS.XRMediaEquirectLayerInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRMediaEquirectLayerInit.html",
    "title": "Class XRMediaEquirectLayerInit | CSharpToJavaScript",
    "keywords": "Class XRMediaEquirectLayerInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRMediaEquirectLayerInit : XRMediaLayerInit Inheritance object XRMediaLayerInit XRMediaEquirectLayerInit Inherited Members XRMediaLayerInit.Space XRMediaLayerInit.Layout XRMediaLayerInit.InvertStereo object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CentralHorizontalAngle public Number CentralHorizontalAngle Field Value Number LowerVerticalAngle public Number LowerVerticalAngle Field Value Number Radius public Number Radius Field Value Number Transform public XRRigidTransform? Transform Field Value XRRigidTransform UpperVerticalAngle public Number UpperVerticalAngle Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.XRMediaLayerInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRMediaLayerInit.html",
    "title": "Class XRMediaLayerInit | CSharpToJavaScript",
    "keywords": "Class XRMediaLayerInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRMediaLayerInit Inheritance object XRMediaLayerInit Derived XRMediaCylinderLayerInit XRMediaEquirectLayerInit XRMediaQuadLayerInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields InvertStereo public bool InvertStereo Field Value bool Layout public XRLayerLayout Layout Field Value XRLayerLayout Space public required XRSpace Space Field Value XRSpace"
  },
  "api/CSharpToJavaScript.APIs.JS.XRMediaQuadLayerInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRMediaQuadLayerInit.html",
    "title": "Class XRMediaQuadLayerInit | CSharpToJavaScript",
    "keywords": "Class XRMediaQuadLayerInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRMediaQuadLayerInit : XRMediaLayerInit Inheritance object XRMediaLayerInit XRMediaQuadLayerInit Inherited Members XRMediaLayerInit.Space XRMediaLayerInit.Layout XRMediaLayerInit.InvertStereo object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Height public Number? Height Field Value Number Transform public XRRigidTransform? Transform Field Value XRRigidTransform Width public Number? Width Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.XRPermissionDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRPermissionDescriptor.html",
    "title": "Class XRPermissionDescriptor | CSharpToJavaScript",
    "keywords": "Class XRPermissionDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRPermissionDescriptor Inheritance object XRPermissionDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Mode public XRSessionMode Mode Field Value XRSessionMode OptionalFeatures public List<string> OptionalFeatures Field Value List<string> RequiredFeatures public List<string> RequiredFeatures Field Value List<string>"
  },
  "api/CSharpToJavaScript.APIs.JS.XRPermissionStatus.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRPermissionStatus.html",
    "title": "Class XRPermissionStatus | CSharpToJavaScript",
    "keywords": "Class XRPermissionStatus Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRPermissionStatus Inheritance object XRPermissionStatus Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Granted public string[] Granted { get; set; } Property Value string[]"
  },
  "api/CSharpToJavaScript.APIs.JS.XRPose.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRPose.html",
    "title": "Class XRPose | CSharpToJavaScript",
    "keywords": "Class XRPose Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll XRPose is a WebXR API interface representing a position and orientation in the 3D space, relative to the XRSpace within which it resides. The XRSpace—which is either an XRReferenceSpace or an XRBoundedReferenceSpace—defines the coordinate system used for the pose and, in the case of an XRViewerPose, its underlying views. [To(\"FirstCharToLowerCase\")] public class XRPose Inheritance object XRPose Derived XRJointPose XRViewerPose Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To obtain the XRPose for the XRSpace used as the local coordinate system of an object, call GetPose(XRSpace, XRSpace), specifying that local XRSpace and the space to which you wish to convert: The pose for a viewer (or camera) is represented by the XRViewerPose subclass of XRPose. This is obtained using GetViewerPose(XRReferenceSpace) instead of getPose(), specifying a reference space which has been adjusted to position and orient the node to provide the desired viewing position and angle: Here, adjReferenceSpace is a reference space which has been updated using the base frame of reference for the frame and any adjustments needed to position the viewer based on movement or rotation which is being supplied from a source other than the XR device, such as keyboard or mouse inputs. See the article Movement, orientation, and motion for further details and an example with thorough explanations of what&apos;s going on. -WebXR Device API -GetPose(XRSpace, XRSpace) -XRViewerPose See also on MDN Properties AngularVelocity The angularVelocity read-only property of the XRPose interface is a DOMPointReadOnly describing the angular velocity in radians per second relative to the base XRSpace. public DOMPointReadOnly? AngularVelocity { get; } Property Value DOMPointReadOnly A DOMPointReadOnly describing the angular velocity in radians per second relative to the base XRSpace. Returns null if the user agent can&apos;t populate this value. Remarks -LinearVelocity See also on MDN EmulatedPosition The emulatedPosition read-only attribute of the XRPose interface is a Boolean value indicating whether or not both the Position component of the pose's Transform is directly taken from the XR device, or it&apos;s simulated or computed based on other sources. public bool EmulatedPosition { get; } Property Value bool A Boolean which is true if the pose&apos;s position is computed based on estimates or is derived from sources other than direct sensor data. If the position is precisely based on direct sensor inputs, the value is false. Remarks See also on MDN LinearVelocity The linearVelocity read-only property of the XRPose interface is a DOMPointReadOnly describing the linear velocity in meters per second relative to the base XRSpace. public DOMPointReadOnly? LinearVelocity { get; } Property Value DOMPointReadOnly A DOMPointReadOnly describing the linear velocity in meters per second relative to the base XRSpace. Returns null if the user agent can&apos;t populate this value. Remarks -LinearVelocity See also on MDN Transform The transform read-only attribute of the XRPose interface is a XRRigidTransform object providing the position and orientation of the pose relative to the base XRSpace as specified when the pose was obtained by calling GetPose(XRSpace, XRSpace). public XRRigidTransform Transform { get; } Property Value XRRigidTransform An XRRigidTransform which provides the position and orientation of the XRPose relative to the XRFrame to which this XRPose is aligned. This is the same pose that&apos;s returned by the frame&apos;s GetPose(XRSpace, XRSpace) method. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRProjectionLayer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRProjectionLayer.html",
    "title": "Class XRProjectionLayer | CSharpToJavaScript",
    "keywords": "Class XRProjectionLayer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRProjectionLayer interface of the WebXR Device API is a layer that fills the entire view of the observer and is refreshed close to the device&apos;s native frame rate. [To(\"FirstCharToLowerCase\")] public class XRProjectionLayer : XRCompositionLayer Inheritance object EventTarget XRLayer XRCompositionLayer XRProjectionLayer Inherited Members XRCompositionLayer.Layout XRCompositionLayer.BlendTextureSourceAlpha XRCompositionLayer.ForceMonoPresentation XRCompositionLayer.Opacity XRCompositionLayer.MipLevels XRCompositionLayer.Quality XRCompositionLayer.NeedsRedraw XRCompositionLayer.Destroy() EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks XRProjectionLayer is supported by all XRSession objects (no layers feature descriptor is needed). To create a new XRProjectionLayer, call CreateProjectionLayer(XRProjectionLayerInit). To present layers to the XR device, add them to the layers render state using UpdateRenderState(XRRenderStateInit). XRProjectionLayer objects don't have an associated XRSpace, because they render to the full frame. -XRLayer -EventTarget -XRCompositionLayer -XREquirectLayer -XRCubeLayer -XRCylinderLayer -XRQuadLayer See also on MDN Properties DeltaPose public XRRigidTransform? DeltaPose { get; set; } Property Value XRRigidTransform FixedFoveation The fixedFoveation property of the XRProjectionLayer interface is a number indicating the amount of foveation used by the XR compositor for the layer. Fixed Foveated Rendering (FFR) renders the edges of the eye textures at a lower resolution than the center and reduces the GPU load. public Number? FixedFoveation { get; set; } Property Value Number A number between 0 and 1.It's up to the user agent how to interpret the numbers in this range. When changing the foveation level, the effect will visible in the next XRFrame.Note that some user agents might implement certain levels of foveation, so you might need to adjust the foveation level in large increments to see an effect. Example levels:Some devices don&apos;t support foveated rendering. In that case fixedFoveation is null and setting it will not do anything. Remarks It is most useful for low-contrast textures such as background images, but less for high-contrast ones such as text or detailed images. Authors can adjust the level on a per-frame basis to achieve the best tradeoff between performance and visual quality. -Foveated rendering See also on MDN IgnoreDepthValues The read-only ignoreDepthValues property of the XRProjectionLayer interface is a boolean indicating if the XR compositor is not making use of depth buffer values when rendering the layer. public bool IgnoreDepthValues { get; } Property Value bool A boolean. true indicates the XR compositor doesn&apos;t make use of depth buffer values; false indicates the content of the depth buffer will be used when rendering the layer. Remarks -CreateProjectionLayer(XRProjectionLayerInit) See also on MDN TextureArrayLength The read-only textureArrayLength property of the XRProjectionLayer interface indicates layer's layer count for array textures when using texture-array as the textureType. public ulong TextureArrayLength { get; } Property Value ulong A number indicating the number of layers of the color textures when using texture-array as the textureType. Otherwise it will be 1. Remarks The projection layer's layer count for array textures is determined by the user agent or the device. It is reported in the XRSubImage, which can only be accessed inside the frame loop. If you want to manage your own depth buffers and don't want to wait for first frame after layer creation to determine the required dimensions for those buffers, the textureArrayLength property allows access to layer count for array textures outside the frame loop. Allocation of these buffers can happen directly after layer creation. -XRSubImage See also on MDN TextureHeight The read-only textureHeight property of the XRProjectionLayer interface indicates the height in pixels of the color textures of this layer. public ulong TextureHeight { get; } Property Value ulong A number indicating the height in pixels. Remarks The projection layer's texture height is determined by the user agent or the device. It is reported in the XRSubImage, which can only be accessed inside the frame loop. If you want to manage your own depth buffers and don't want to wait for first frame after layer creation to determine the required dimensions for those buffers, the textureHeight property allows access to layer texture height outside the frame loop. Allocation of these buffers can happen directly after layer creation. -CreateProjectionLayer(XRProjectionLayerInit) -WebGL2RenderingContext.RenderbufferStorageMultisample -XRSubImage See also on MDN TextureWidth The read-only textureWidth property of the XRProjectionLayer interface indicates the width in pixels of the color textures of this layer. public ulong TextureWidth { get; } Property Value ulong A number indicating the width in pixels. Remarks The projection layer's texture width is determined by the user agent or the device. It is reported in the XRSubImage, which can only be accessed inside the frame loop. If you want to manage your own depth buffers and don't want to wait for first frame after layer creation to determine the required dimensions for those buffers, the textureWidth property allows access to layer texture width outside the frame loop. Allocation of these buffers can happen directly after layer creation. -CreateProjectionLayer(XRProjectionLayerInit) -WebGL2RenderingContext.RenderbufferStorageMultisample -XRSubImage See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRProjectionLayerInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRProjectionLayerInit.html",
    "title": "Class XRProjectionLayerInit | CSharpToJavaScript",
    "keywords": "Class XRProjectionLayerInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRProjectionLayerInit Inheritance object XRProjectionLayerInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ClearOnAccess public bool ClearOnAccess Field Value bool ColorFormat public Unsupported ColorFormat Field Value Unsupported DepthFormat public Unsupported DepthFormat Field Value Unsupported ScaleFactor public Number ScaleFactor Field Value Number TextureType public XRTextureType TextureType Field Value XRTextureType"
  },
  "api/CSharpToJavaScript.APIs.JS.XRQuadLayer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRQuadLayer.html",
    "title": "Class XRQuadLayer | CSharpToJavaScript",
    "keywords": "Class XRQuadLayer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRQuadLayer interface of the WebXR Device API is a layer that takes up a flat rectangular space in the virtual environment. An XRQuadLayer has no thickness. It is a two-dimensional object positioned and oriented in 3D space. The position of a quad refers to the center of the quad. Only the front of the layer is visible. [To(\"FirstCharToLowerCase\")] public class XRQuadLayer : XRCompositionLayer Inheritance object EventTarget XRLayer XRCompositionLayer XRQuadLayer Inherited Members XRCompositionLayer.Layout XRCompositionLayer.BlendTextureSourceAlpha XRCompositionLayer.ForceMonoPresentation XRCompositionLayer.Opacity XRCompositionLayer.MipLevels XRCompositionLayer.Quality XRCompositionLayer.NeedsRedraw XRCompositionLayer.Destroy() EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks XRQuadLayer requires the layers feature to be enabled for the XRSession. You can request it in RequestSession(XRSessionMode, XRSessionInit). To create a new XRQuadLayer, call either: To present layers to the XR device, add them to the layers render state using UpdateRenderState(XRRenderStateInit). -XRLayer -EventTarget -XRCompositionLayer -XREquirectLayer -XRCubeLayer -XRCylinderLayer -XRProjectionLayer See also on MDN Properties Height The height property of the XRQuadLayer interface represents the height of the layer in meters. public Number Height { get; set; } Property Value Number A number representing the height of the layer in meters. Remarks -Width See also on MDN Onredraw public EventHandlerNonNull Onredraw { get; set; } Property Value EventHandlerNonNull Space The space property of the XRQuadLayer interface represents the layer's spatial relationship with the user's physical environment. public XRSpace Space { get; set; } Property Value XRSpace An XRSpace. Remarks -XRSpace -Transform See also on MDN Transform The transform property of the XRQuadLayer interface represents the offset and orientation relative to the layer's Space. public XRRigidTransform Transform { get; set; } Property Value XRRigidTransform An XRRigidTransform. Remarks -XRRigidTransform -Space See also on MDN Width The width property of the XRQuadLayer interface represents the width of the layer in meters. public Number Width { get; set; } Property Value Number A number representing the width of the layer in meters. Remarks -Height See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRQuadLayerInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRQuadLayerInit.html",
    "title": "Class XRQuadLayerInit | CSharpToJavaScript",
    "keywords": "Class XRQuadLayerInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRQuadLayerInit : XRLayerInit Inheritance object XRLayerInit XRQuadLayerInit Inherited Members XRLayerInit.Space XRLayerInit.ColorFormat XRLayerInit.DepthFormat XRLayerInit.MipLevels XRLayerInit.ViewPixelWidth XRLayerInit.ViewPixelHeight XRLayerInit.Layout XRLayerInit.IsStatic XRLayerInit.ClearOnAccess object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Height public Number Height Field Value Number TextureType public XRTextureType TextureType Field Value XRTextureType Transform public XRRigidTransform? Transform Field Value XRRigidTransform Width public Number Width Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.XRRay.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRRay.html",
    "title": "Class XRRay | CSharpToJavaScript",
    "keywords": "Class XRRay Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRRay interface of the WebXR Device API is a geometric ray described by an origin point and a direction vector. [To(\"FirstCharToLowerCase\")] public class XRRay Inheritance object XRRay Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks XRRay objects can be passed to RequestHitTestSource(XRHitTestOptionsInit) or RequestHitTestSourceForTransientInput(XRTransientInputHitTestOptionsInit) to perform hit testing. -RequestHitTestSource(XRHitTestOptionsInit) -XRHitTestResult See also on MDN Constructors XRRay() public XRRay() XRRay(DOMPointInit, XRRayDirectionInit) The XRRay() constructor creates a new XRRay object which is a geometric ray described by an origin point and a direction vector. public XRRay(DOMPointInit origin, XRRayDirectionInit direction) Parameters origin DOMPointInit direction XRRayDirectionInit Remarks -DOMPoint -FromPoint(DOMPointInit) See also on MDN XRRay(XRRigidTransform) The XRRay() constructor creates a new XRRay object which is a geometric ray described by an origin point and a direction vector. public XRRay(XRRigidTransform transform) Parameters transform XRRigidTransform Remarks -DOMPoint -FromPoint(DOMPointInit) See also on MDN Properties Direction The read-only direction property of the XRRay interface is a DOMPointReadOnly representing the ray's 3-dimensional directional vector, normalized to a unit vector with a length of 1.0. public DOMPointReadOnly Direction { get; } Property Value DOMPointReadOnly A DOMPointReadOnly object. Remarks -DOMPointReadOnly See also on MDN Matrix The read-only matrix property of the XRRay interface is a transform that can be used to position objects along the XRRay. This is a 4 by 4 matrix given as a 16 element Float32Array in column major order. public float Matrix { get; } Property Value float A 16 element Float32Array object representing a 4 by 4 matrix in column major order. Remarks The transform from a ray originates at [0, 0, 0] and extends down the negative z-axis to the ray described by the XRRay&apos;s origin and direction. -Float32Array See also on MDN Origin The read-only origin property of the XRRay interface is a DOMPointReadOnly representing the 3-dimensional point in space that the ray originates from, in meters. public DOMPointReadOnly Origin { get; } Property Value DOMPointReadOnly A DOMPointReadOnly object. Remarks -DOMPointReadOnly See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRRayDirectionInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRRayDirectionInit.html",
    "title": "Class XRRayDirectionInit | CSharpToJavaScript",
    "keywords": "Class XRRayDirectionInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRRayDirectionInit Inheritance object XRRayDirectionInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields W public Number W Field Value Number X public Number X Field Value Number Y public Number Y Field Value Number Z public Number Z Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.XRReferenceSpace.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRReferenceSpace.html",
    "title": "Class XRReferenceSpace | CSharpToJavaScript",
    "keywords": "Class XRReferenceSpace Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebXR Device API&apos;s XRReferenceSpace interface describes the coordinate system for a specific tracked entity or object within the virtual world using a specified tracking behavior. The tracking behavior is defined by the selected reference space type. It expands upon the base class, XRSpace, by adding support for several different tracking behaviors as well as to request a new reference space which describes the offset transform between the tracked object and another location in the world. [To(\"FirstCharToLowerCase\")] public class XRReferenceSpace : XRSpace Inheritance object EventTarget XRSpace XRReferenceSpace Derived XRBoundedReferenceSpace Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks All reference spaces—with the sole exception being bounded reference spaces—are described using the XRReferenceSpace type. Bounded spaces are implemented as XRBoundedReferenceSpace objects. These are special spaces which let you establish a perimeter within which it's \"safe\" for the viewer to move. For XR systems that allow the user to physically move around, such as those that track movement with a real-world camera, this boundary establishes the edges of the area the user is able to move around in, whether due to physical obstacles or due to limitations of the XR hardware. See the article Using bounded reference spaces to protect the viewer for more on using boundaries to keep the user from colliding with obstacles both physical and virtual. -Fundamentals of WebXR -Geometry and reference spaces in WebXR -Viewpoints and viewers: Simulating cameras in WebXR -Matrix math for the web -Movement, orientation, and motion -Using bounded reference spaces to protect the user See also on MDN Properties Onreset public EventHandlerNonNull Onreset { get; set; } Property Value EventHandlerNonNull Methods GetOffsetReferenceSpace(XRRigidTransform) The XRReferenceSpace interface&apos;s getOffsetReferenceSpace() method returns a new reference space object which describes the relative difference in position between the object on which the method is called and a given point in 3D space. The object returned by getOffsetReferenceSpace() is an XRReferenceSpace if called on an XRReferenceSpace, or an XRBoundedReferenceSpace if called on an object of that type. public XRReferenceSpace GetOffsetReferenceSpace(XRRigidTransform originOffset) Parameters originOffset XRRigidTransform Returns XRReferenceSpace A new XRReferenceSpace object describing a reference space with the same native origin as the reference space on which the method was called, but with an origin offset indicating the distance from the object to the point given by originOffset.If the object on which you call this method is an XRBoundedReferenceSpace, the returned object is one as well. The BoundsGeometry of the new reference space is set to the original object&apos;s boundsGeometry with each of its points multiplied by the inverse of originOffset. Remarks In other words, when you have an object in 3D space and need to position another object relative to that one, you can call getOffsetReferenceSpace(), passing into it the position and orientation you want the second object to have relative to the position and orientation of the object on which you call getOffsetReferenceSpace(). Then, when drawing the scene, you can use the offset reference space to not only position objects relative to one another, but to apply the needed transforms to render objects properly based upon the viewer&apos;s position. This is demonstrated in the example Implementing rotation based on non-XR inputs, which demonstrates a way to use this method to let the user use their mouse to pitch and yaw their viewing angle. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRReferenceSpaceEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRReferenceSpaceEvent.html",
    "title": "Class XRReferenceSpaceEvent | CSharpToJavaScript",
    "keywords": "Class XRReferenceSpaceEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebXR Device API interface XRReferenceSpaceEvent represents an event sent to an XRReferenceSpace. Currently, the only event that uses this type is the XRReferenceSpace.Reset_event event. [To(\"FirstCharToLowerCase\")] public class XRReferenceSpaceEvent : Event Inheritance object Event XRReferenceSpaceEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors XRReferenceSpaceEvent() public XRReferenceSpaceEvent() XRReferenceSpaceEvent(string, XRReferenceSpaceEventInit) The XRReferenceSpaceEvent() constructor is used to create a new XRReferenceSpaceEvent object, which represents an event regarding the state of a WebXR reference space object, XRReferenceSpace. public XRReferenceSpaceEvent(string type, XRReferenceSpaceEventInit eventInitDict) Parameters type string eventInitDict XRReferenceSpaceEventInit Remarks See also on MDN Properties ReferenceSpace The read-only XRReferenceSpaceEvent property referenceSpace specifies the reference space which is the originator of the event. public XRReferenceSpace ReferenceSpace { get; } Property Value XRReferenceSpace An XRReferenceSpace indicating the source of the event. Remarks See also on MDN Transform The read-only XRReferenceSpaceEvent property transform indicates the position and orientation of the affected ReferenceSpace's native origin after the changes the event represents are applied. The transform is defined using the old coordinate system, which allows it to be used to convert coordinates from the pre-event coordinate system to the post-event coordinate system. public XRRigidTransform? Transform { get; } Property Value XRRigidTransform An XRRigidTransform object providing a transform that can be used to convert coordinates from the pre-event coordinate system to the post-event coordinate system. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRReferenceSpaceEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRReferenceSpaceEventInit.html",
    "title": "Class XRReferenceSpaceEventInit | CSharpToJavaScript",
    "keywords": "Class XRReferenceSpaceEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRReferenceSpaceEventInit : EventInit Inheritance object EventInit XRReferenceSpaceEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ReferenceSpace public required XRReferenceSpace ReferenceSpace Field Value XRReferenceSpace Transform public XRRigidTransform? Transform Field Value XRRigidTransform"
  },
  "api/CSharpToJavaScript.APIs.JS.XRReferenceSpaceType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRReferenceSpaceType.html",
    "title": "Enum XRReferenceSpaceType | CSharpToJavaScript",
    "keywords": "Enum XRReferenceSpaceType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRReferenceSpaceType Fields BoundedFloor = 3 Local = 1 LocalFloor = 2 Unbounded = 4 Viewer = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.XRReflectionFormat.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRReflectionFormat.html",
    "title": "Enum XRReflectionFormat | CSharpToJavaScript",
    "keywords": "Enum XRReflectionFormat Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRReflectionFormat Fields Rgba16f = 1 Srgba8 = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.XRRenderState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRRenderState.html",
    "title": "Class XRRenderState | CSharpToJavaScript",
    "keywords": "Class XRRenderState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRRenderState interface of the WebXR Device API contains configurable values which affect how the imagery generated by an XRSession gets composited. These properties include the range of distances from the viewer within which content should be rendered, the vertical field of view (for inline presentations), and a reference to the XRWebGLLayer being used as the target for rendering the scene prior to it being presented on the XR device's display or displays. [To(\"FirstCharToLowerCase\")] public class XRRenderState Inheritance object XRRenderState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks When you apply changes using the XRSession method UpdateRenderState(XRRenderStateInit), the specified changes take effect after the current animation frame has completed, but before the next one begins. -RenderState -UpdateRenderState(XRRenderStateInit) -RequestSession(XRSessionMode, XRSessionInit) See also on MDN Properties BaseLayer The read-only baseLayer property of the XRRenderState interface returns the XRWebGLLayer instance that is the source of bitmap images and a description of how the image is to be rendered in the device. public XRWebGLLayer? BaseLayer { get; } Property Value XRWebGLLayer A XRWebGLLayer object which is used as the source of the world's contents when rendering each frame of the scene.See the examples below to see how to use {{domxref(&quot;XRSession.updateRenderState&quot;, &quot;updateRenderState()&quot;)}} to set the current XRWebGLLayer used for rendering the scene. Remarks This property is read-only; however, you can indirectly change its value using UpdateRenderState(XRRenderStateInit). See also on MDN DepthFar The depthFar read-only property of the XRRenderState interface returns the distance in meters of the far clip plane from the viewer. public Number DepthFar { get; } Property Value Number A Number. Remarks See also on MDN DepthNear The depthNear read-only property of the XRRenderState interface returns the distance in meters of the near clip plane from the viewer. public Number DepthNear { get; } Property Value Number A Number. Remarks See also on MDN InlineVerticalFieldOfView The read-only inlineVerticalFieldOfView property of the XRRenderState interface returns the default vertical field of view for &quot;inline&quot; sessions and null for all immersive sessions. public Number? InlineVerticalFieldOfView { get; } Property Value Number A Number for &quot;inline&quot; sessions, which represents the default field of view, and null for immersive sessions. Remarks -RequestSession(XRSessionMode, XRSessionInit) -IsSessionSupported(XRSessionMode) See also on MDN Layers The read-only layers property of the XRRenderState interface is an ordered array containing XRLayer objects that are displayed by the XR compositor. public XRLayer[] Layers { get; } Property Value XRLayer[] An ordered array containing XRLayer objects. The order of the layers is \"back-to-front\". Remarks -UpdateRenderState(XRRenderStateInit) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRRenderStateInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRRenderStateInit.html",
    "title": "Class XRRenderStateInit | CSharpToJavaScript",
    "keywords": "Class XRRenderStateInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRRenderStateInit Inheritance object XRRenderStateInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BaseLayer public XRWebGLLayer? BaseLayer Field Value XRWebGLLayer DepthFar public Number DepthFar Field Value Number DepthNear public Number DepthNear Field Value Number InlineVerticalFieldOfView public Number InlineVerticalFieldOfView Field Value Number Layers public List<XRLayer>? Layers Field Value List<XRLayer>"
  },
  "api/CSharpToJavaScript.APIs.JS.XRRigidTransform.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRRigidTransform.html",
    "title": "Class XRRigidTransform | CSharpToJavaScript",
    "keywords": "Class XRRigidTransform Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRRigidTransform is a WebXR API interface that represents the 3D geometric transform described by a position and orientation. [To(\"FirstCharToLowerCase\")] public class XRRigidTransform Inheritance object XRRigidTransform Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks XRRigidTransform is used to specify transforms throughout the WebXR APIs, including: Using XRRigidTransform in these places rather than bare arrays that provide the matrix data has an advantage. It automatically computes the inverse of the transform and even caches it making subsequent requests significantly faster. See also on MDN Constructors XRRigidTransform() public XRRigidTransform() XRRigidTransform(DOMPointInit, DOMPointInit) The XRRigidTransform() constructor creates a new XRRigidTransform object, representing the position and orientation of a point or object. Among other things, XRRigidTransform is used when providing a transform to translate between coordinate systems across spaces. public XRRigidTransform(DOMPointInit position, DOMPointInit orientation) Parameters position DOMPointInit orientation DOMPointInit Remarks See also on MDN Properties Inverse The read-only inverse property of the XRRigidTransform interface returns another XRRigidTransform object which is the inverse of its owning transform. That is, you can always get the inverse of any XRRigidTransform using its inverse property, instead of having to explicitly generate it. public XRRigidTransform Inverse { get; } Property Value XRRigidTransform An XRRigidTransform which contains the inverse of the XRRigidTransform on which it&apos;s accessed.Applying the inverse of a transform to any object previously transformed by the parent XRRigidTransform always undoes the transformation, resulting in the object returning to its previous pose. In other words, its position and orientation both return to their prior configurations. Remarks See also on MDN Matrix The read-only XRRigidTransform property matrix returns the transform matrix represented by the object. The returned matrix can then be premultiplied with a column vector to rotate the vector by the 3D rotation specified by the {{domxref(&quot;XRRigidTransform.orientation&quot;, &quot;orientation&quot;)}}, then translate it by the Position. public float Matrix { get; } Property Value float A Float32Array containing 16 entries which represents the 4x4 transform matrix which is described by the Position and {{domxref(&quot;XRRigidTransform.orientation&quot;, &quot;orientation&quot;)}} properties. Remarks See also on MDN Orientation The read-only XRRigidTransform property orientation is a DOMPointReadOnly containing a normalized quaternion (also called a unit quaternion or versor) specifying the rotational component of the transform represented by the object. If you specify a quaternion whose length is not exactly 1.0 meters, it will be normalized for you. public DOMPointReadOnly Orientation { get; } Property Value DOMPointReadOnly A DOMPointReadOnly object which contains a unit quaternion providing the orientation component of the transform. As a unit quaternion, the length of the returned quaternion is always 1.0 meters. Remarks -Movement, orientation, and motion -Unit quaternions -Quaternions and spatial rotation See also on MDN Position The read-only XRRigidTransform property position is a DOMPointReadOnly object which provides the 3D point, specified in meters, describing the translation component of the transform. public DOMPointReadOnly Position { get; } Property Value DOMPointReadOnly A read-only DOMPointReadOnly indicating the 3D position component of the transform matrix. The units are meters. NOTE Note: The w component of the point is always 1.0. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRSession.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRSession.html",
    "title": "Class XRSession | CSharpToJavaScript",
    "keywords": "Class XRSession Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebXR Device API's XRSession interface represents an ongoing XR session, providing methods and properties used to interact with and control the session. To open a WebXR session, use the XRSystem interface's RequestSession(XRSessionMode, XRSessionInit) method. [To(\"FirstCharToLowerCase\")] public class XRSession : EventTarget Inheritance object EventTarget XRSession Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks With XRSession methods, you can poll the viewer's position and orientation (the XRViewerPose), gather information about the user's environment, and present imagery to the user. XRSession supports both inline and immersive virtual and augmented reality modes. See also on MDN Properties DepthDataFormat The read-only depthDataFormat property of an immersive-ar XRSession describes which depth sensing data format is used. public XRDepthDataFormat DepthDataFormat { get; } Property Value XRDepthDataFormat This property can return the following values: Remarks See also on MDN DepthUsage The read-only depthUsage property of an immersive-ar XRSession describes which depth-sensing usage is used. public XRDepthUsage DepthUsage { get; } Property Value XRDepthUsage This property can return the following values: Remarks See also on MDN DomOverlayState The read-only domOverlayState property of an immersive-ar XRSession provides information about the DOM overlay, if the feature is enabled. public XRDOMOverlayState? DomOverlayState { get; } Property Value XRDOMOverlayState Returns null if the DOM overlay feature is not supported or not enabled or an object containing information about the DOM overlay state with the following properties: Remarks -Element.Beforexrselect_event See also on MDN EnabledFeatures public string[] EnabledFeatures { get; } Property Value string[] EnvironmentBlendMode The XRSession interface's read-only environmentBlendMode property identifies if, and to what degree, the computer-generated imagery is overlaid atop the real world. public XREnvironmentBlendMode EnvironmentBlendMode { get; } Property Value XREnvironmentBlendMode A string defining if and how virtual, rendered content is overlaid atop the image of the real world.Possible values are: Remarks This is used to differentiate between fully-immersive VR sessions and AR sessions which render over a pass-through image of the real world, possibly partially transparently. See also on MDN FrameRate public Number? FrameRate { get; } Property Value Number InputSources The read-only inputSources property of the XRSession interface returns an XRInputSourceArray object which lists all controllers and input devices which are expressly associated with the XR device and are currently available. These controllers may include handheld controllers, XR-equipped gloves, optically tracked hands, and gaze-based input methods. Keyboards, gamepads, and mice are not considered WebXR input sources. public XRInputSourceArray InputSources { get; } Property Value XRInputSourceArray An XRInputSourceArray object listing all of the currently-connected input controllers which are linked specifically to the XR device currently in use. The returned object is live; as devices are connected to and removed from the user&apos;s system, the list&apos;s contents update to reflect the changes. Remarks NOTE Note: Traditional gamepad controllers are supported using the Gamepad API. -XRInputSource -The XRSession.Inputsourceschange_event event -Gamepad API See also on MDN InteractionMode The XRSession interface's read-only interactionMode property describes the best space (according to the user agent) for the application to draw an interactive UI for the current session. public XRInteractionMode InteractionMode { get; } Property Value XRInteractionMode A string describing the best space (according to the user agent) for the application to draw an interactive UI for the current session.Possible values are: Remarks See also on MDN IsSystemKeyboardSupported public bool IsSystemKeyboardSupported { get; } Property Value bool Onend public EventHandlerNonNull Onend { get; set; } Property Value EventHandlerNonNull Onframeratechange public EventHandlerNonNull Onframeratechange { get; set; } Property Value EventHandlerNonNull Oninputsourceschange public EventHandlerNonNull Oninputsourceschange { get; set; } Property Value EventHandlerNonNull Onselect public EventHandlerNonNull Onselect { get; set; } Property Value EventHandlerNonNull Onselectend public EventHandlerNonNull Onselectend { get; set; } Property Value EventHandlerNonNull Onselectstart public EventHandlerNonNull Onselectstart { get; set; } Property Value EventHandlerNonNull Onsqueeze public EventHandlerNonNull Onsqueeze { get; set; } Property Value EventHandlerNonNull Onsqueezeend public EventHandlerNonNull Onsqueezeend { get; set; } Property Value EventHandlerNonNull Onsqueezestart public EventHandlerNonNull Onsqueezestart { get; set; } Property Value EventHandlerNonNull Onvisibilitychange public EventHandlerNonNull Onvisibilitychange { get; set; } Property Value EventHandlerNonNull PreferredReflectionFormat The read-only preferredReflectionFormat property of the XRSession interface returns this session's preferred reflection format used for lighting estimation texture data. public XRReflectionFormat PreferredReflectionFormat { get; } Property Value XRReflectionFormat A string representing the reflection format. Possible values: XRReflectionFormat WebGL Format WebGL Internal Format WebGPU Format HDR &quot;srgba8&quot; RGBA SRGB8_ALPHA8 &quot;rgba8unorm-srgb&quot; &quot;rgba16f&quot; RGBA RGBA16F &quot;rgba16float&quot; ✓ Remarks -RequestLightProbe(XRLightProbeInit) See also on MDN RenderState The read-only renderState property of an XRSession object indicates the returns a XRRenderState object describing how the user&apos;s environment which should be rendered. The information provided covers the minimum and maximum distance at which to render objects, the vertical field of view to use when rendering the in the inline session mode, and the XRWebGLLayer to render into for inline composition. public XRRenderState RenderState { get; } Property Value XRRenderState An XRRenderState object describing how to render the scene. Remarks While this property is read only, you can call the XRSession method UpdateRenderState(XRRenderStateInit) to make changes. See also on MDN SupportedFrameRates public float? SupportedFrameRates { get; } Property Value float? VisibilityState The read-only visibilityState property of the XRSession interface is a string indicating whether the WebXR content is currently visible to the user, and if it is, whether it&apos;s the primary focus. public XRVisibilityState VisibilityState { get; } Property Value XRVisibilityState A string indicating whether or not the XR content is visible to the user and if it is, whether or not it&apos;s currently the primary focus.The possible values of visibilityState are: Remarks Every time the visibility state changes, a XRSession.Visibilitychange_event event is fired on the XRSession object. -XRSession.Visibilitychange_event event See also on MDN Methods CancelAnimationFrame(ulong) The cancelAnimationFrame() method of the XRSession interface cancels an animation frame which was previously requested by calling {{DOMxRef(&quot;XRSession.requestAnimationFrame&quot;, &quot;requestAnimationFrame&quot;)}}. public GlobalObject.Undefined CancelAnimationFrame(ulong handle) Parameters handle ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Window.CancelAnimationFrame -RequestAnimationFrame(XRFrameRequestCallback) See also on MDN End() The end() method shuts down the XRSession on which it's called, returning a promise which resolves once the session has fully shut down. public Task<GlobalObject.Undefined> End() Returns Task<GlobalObject.Undefined> A Promise that resolves without a value after any platform-specific steps related to shutting down the session have completed. You can use the promise to do things like update UI elements to reflect the shut down connection, trigger application shut down, or whatever else you might need to do. Remarks See also on MDN RequestAnimationFrame(XRFrameRequestCallback) The XRSession method requestAnimationFrame(), much like the Window method of the same name, schedules a callback to be executed the next time the browser is ready to paint the session&apos;s virtual environment to the XR display. The specified callback is executed once before the next repaint; if you wish for it to be executed for the following repaint, you must call requestAnimationFrame() again. This can be done from within the callback itself. public ulong RequestAnimationFrame(XRFrameRequestCallback callback) Parameters callback XRFrameRequestCallback Returns ulong An integer value which serves as a unique, non-zero ID or handle you may pass to CancelAnimationFrame(ulong) if you need to remove the pending animation frame request. Remarks The callback takes two parameters as inputs: an XRFrame describing the state of all tracked objects for the session, and a timestamp you can use to compute any animation updates needed. You can cancel a previously scheduled animation by calling CancelAnimationFrame(ulong). NOTE Note: Despite the obvious similarities between these methods and the global Window.RequestAnimationFrame function provided by the Window interface, you must not treat these as interchangeable. There is no guarantee that the latter will work at all while an immersive XR session is underway. -Window.RequestAnimationFrame -CancelAnimationFrame(ulong) See also on MDN RequestHitTestSource(XRHitTestOptionsInit) The requestHitTestSource() method of the XRSession interface returns a {{jsxref(\"Promise\")}} that resolves with an XRHitTestSource object that can be passed to GetHitTestResults(XRHitTestSource). public Task<XRHitTestSource> RequestHitTestSource(XRHitTestOptionsInit options) Parameters options XRHitTestOptionsInit Returns Task<XRHitTestSource> A {{jsxref(\"Promise\")}} that resolves with an XRHitTestSource object. Remarks -RequestHitTestSourceForTransientInput(XRTransientInputHitTestOptionsInit) See also on MDN RequestHitTestSourceForTransientInput(XRTransientInputHitTestOptionsInit) The requestHitTestSourceForTransientInput() method of the XRSession interface returns a {{jsxref(\"Promise\")}} that resolves with an XRTransientInputHitTestSource object that can be passed to GetHitTestResultsForTransientInput(XRTransientInputHitTestSource). public Task<XRTransientInputHitTestSource> RequestHitTestSourceForTransientInput(XRTransientInputHitTestOptionsInit options) Parameters options XRTransientInputHitTestOptionsInit Returns Task<XRTransientInputHitTestSource> A {{jsxref(\"Promise\")}} that resolves with an XRTransientInputHitTestSource object. Remarks -RequestHitTestSource(XRHitTestOptionsInit) See also on MDN RequestLightProbe(XRLightProbeInit) The requestLightProbe() method of the XRSession interface returns a {{jsxref(\"Promise\")}} that resolves with an XRLightProbe object that estimates lighting information at a given point in the user's environment. public Task<XRLightProbe> RequestLightProbe(XRLightProbeInit options) Parameters options XRLightProbeInit Returns Task<XRLightProbe> A {{jsxref(\"Promise\")}} that resolves with an XRLightProbe object. Remarks -PreferredReflectionFormat See also on MDN RequestReferenceSpace(XRReferenceSpaceType) The requestReferenceSpace() method of the XRSession interface returns a {{JSxRef(\"promise\")}} that resolves with an instance of either XRReferenceSpace or XRBoundedReferenceSpace as appropriate given the type of reference space requested. public Task<XRReferenceSpace> RequestReferenceSpace(XRReferenceSpaceType type) Parameters type XRReferenceSpaceType Returns Task<XRReferenceSpace> A {{JSxRef(\"Promise\")}} that resolves with an XRReferenceSpace object.The types of reference space are listed below, with brief information about their use cases and which interface is used to implement them. Remarks See also on MDN UpdateRenderState(XRRenderStateInit) The updateRenderState() method of the XRSession interface of the WebXR API schedules changes to be applied to the active render state (XRRenderState) prior to rendering of the next frame. public GlobalObject.Undefined UpdateRenderState(XRRenderStateInit state) Parameters state XRRenderStateInit Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -WebXR Device API -XRRenderState -RenderState See also on MDN UpdateTargetFrameRate(Number) public Task<GlobalObject.Undefined> UpdateTargetFrameRate(Number rate) Parameters rate Number Returns Task<GlobalObject.Undefined>"
  },
  "api/CSharpToJavaScript.APIs.JS.XRSessionEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRSessionEvent.html",
    "title": "Class XRSessionEvent | CSharpToJavaScript",
    "keywords": "Class XRSessionEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebXR Device API&apos;s XRSessionEvent interface describes an event which indicates the change of the state of an XRSession. These events occur, for example, when the session ends or the visibility of its context changes. [To(\"FirstCharToLowerCase\")] public class XRSessionEvent : Event Inheritance object Event XRSessionEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors XRSessionEvent() public XRSessionEvent() XRSessionEvent(string, XRSessionEventInit) The WebXR Device API&apos;s XRSessionEvent() constructor creates and returns a new XRSessionEvent object. These objects represent events announcing state changes in an XRSession representing an augmented or virtual reality session. public XRSessionEvent(string type, XRSessionEventInit eventInitDict) Parameters type string eventInitDict XRSessionEventInit Remarks See also on MDN Properties Session The read-only XRSessionEvent interface's session property indicates which XRSession the event is about. public XRSession Session { get; } Property Value XRSession An XRSession object indicating which WebXR session the event refers to. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRSessionEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRSessionEventInit.html",
    "title": "Class XRSessionEventInit | CSharpToJavaScript",
    "keywords": "Class XRSessionEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRSessionEventInit : EventInit Inheritance object EventInit XRSessionEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Session public required XRSession Session Field Value XRSession"
  },
  "api/CSharpToJavaScript.APIs.JS.XRSessionInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRSessionInit.html",
    "title": "Class XRSessionInit | CSharpToJavaScript",
    "keywords": "Class XRSessionInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRSessionInit Inheritance object XRSessionInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DepthSensing public XRDepthStateInit DepthSensing Field Value XRDepthStateInit DomOverlay public XRDOMOverlayInit? DomOverlay Field Value XRDOMOverlayInit OptionalFeatures public List<string> OptionalFeatures Field Value List<string> RequiredFeatures public List<string> RequiredFeatures Field Value List<string>"
  },
  "api/CSharpToJavaScript.APIs.JS.XRSessionMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRSessionMode.html",
    "title": "Enum XRSessionMode | CSharpToJavaScript",
    "keywords": "Enum XRSessionMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRSessionMode Fields ImmersiveAr = 2 ImmersiveVr = 1 Inline = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.XRSessionSupportedPermissionDescriptor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRSessionSupportedPermissionDescriptor.html",
    "title": "Class XRSessionSupportedPermissionDescriptor | CSharpToJavaScript",
    "keywords": "Class XRSessionSupportedPermissionDescriptor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRSessionSupportedPermissionDescriptor Inheritance object XRSessionSupportedPermissionDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Mode public XRSessionMode Mode Field Value XRSessionMode"
  },
  "api/CSharpToJavaScript.APIs.JS.XRSpace.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRSpace.html",
    "title": "Class XRSpace | CSharpToJavaScript",
    "keywords": "Class XRSpace Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRSpace interface of the WebXR Device API is an abstract interface providing a common basis for every class which represents a virtual coordinate system within the virtual world, in which its origin corresponds to a physical location. Spatial data in WebXR is always expressed relative to an object based upon one of the descendant interfaces of XRSpace, at the time at which a given XRFrame takes place. [To(\"FirstCharToLowerCase\")] public class XRSpace : EventTarget Inheritance object EventTarget XRSpace Derived XRJointSpace XRReferenceSpace Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Numeric values such as pose positions are thus coordinates in the corresponding XRSpace, relative to that space&apos;s origin. NOTE Note: The XRSpace interface is never used directly; instead, all spaces are created using one of the interfaces based on XRSpace. At this time, those are XRReferenceSpace, XRBoundedReferenceSpace, and XRJointSpace. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRSubImage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRSubImage.html",
    "title": "Class XRSubImage | CSharpToJavaScript",
    "keywords": "Class XRSubImage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRSubImage interface of the WebXR Device API represents what viewport of the GPU texture to use for rendering. [To(\"FirstCharToLowerCase\")] public class XRSubImage Inheritance object XRSubImage Derived XRWebGLSubImage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -XRWebGLSubImage See also on MDN Properties Viewport The read-only viewport property of the XRSubImage interface represents the XRViewport that is used when rendering the sub image. public XRViewport Viewport { get; } Property Value XRViewport An XRViewport. Remarks -XRViewport See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRSystem.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRSystem.html",
    "title": "Class XRSystem | CSharpToJavaScript",
    "keywords": "Class XRSystem Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebXR Device API interface XRSystem provides methods which let you get access to an XRSession object representing a WebXR session. With that XRSession in hand, you can use it to interact with the Augmented Reality (AR) or Virtual Reality (VR) device. [To(\"FirstCharToLowerCase\")] public class XRSystem : EventTarget Inheritance object EventTarget XRSystem Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Ondevicechange public EventHandlerNonNull Ondevicechange { get; set; } Property Value EventHandlerNonNull Methods IsSessionSupported(XRSessionMode) The XRSystem method isSessionSupported() returns a promise which resolves to true if the specified WebXR session mode is supported by the user&apos;s WebXR device. Otherwise, the promise resolves with false. public Task<bool> IsSessionSupported(XRSessionMode mode) Parameters mode XRSessionMode Returns Task<bool> A Promise that resolves to true if the specified session mode is supported; otherwise the promise resolves to false. Remarks If no devices are available or the browser doesn&apos;t have permission to use the XR device, the promise is rejected with an appropriate DOMException. See also on MDN RequestSession(XRSessionMode, XRSessionInit) The XRSystem interface&apos;s requestSession() method returns a Promise which resolves to an XRSession object through which you can manage the requested type of WebXR session. public Task<XRSession> RequestSession(XRSessionMode mode, XRSessionInit options) Parameters mode XRSessionMode options XRSessionInit Returns Task<XRSession> A {{jsxref(\"Promise\")}} that resolves with an XRSession object if the device and user agent support the requested mode and features. Remarks While only one immersive VR session can be active at a time, multiple inline sessions can be in progress at once. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRTargetRayMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRTargetRayMode.html",
    "title": "Enum XRTargetRayMode | CSharpToJavaScript",
    "keywords": "Enum XRTargetRayMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRTargetRayMode Fields Gaze = 0 Screen = 2 TrackedPointer = 1 TransientPointer = 3"
  },
  "api/CSharpToJavaScript.APIs.JS.XRTextureType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRTextureType.html",
    "title": "Enum XRTextureType | CSharpToJavaScript",
    "keywords": "Enum XRTextureType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRTextureType Fields Texture = 0 TextureArray = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.XRTransientInputHitTestOptionsInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRTransientInputHitTestOptionsInit.html",
    "title": "Class XRTransientInputHitTestOptionsInit | CSharpToJavaScript",
    "keywords": "Class XRTransientInputHitTestOptionsInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRTransientInputHitTestOptionsInit Inheritance object XRTransientInputHitTestOptionsInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields EntityTypes public XRHitTestTrackableType[] EntityTypes Field Value XRHitTestTrackableType[] OffsetRay public XRRay OffsetRay Field Value XRRay Profile public required string Profile Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.XRTransientInputHitTestResult.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRTransientInputHitTestResult.html",
    "title": "Class XRTransientInputHitTestResult | CSharpToJavaScript",
    "keywords": "Class XRTransientInputHitTestResult Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRTransientInputHitTestResult interface of the WebXR Device API contains an array of results of a hit test for transient input, grouped by input source. [To(\"FirstCharToLowerCase\")] public class XRTransientInputHitTestResult Inheritance object XRTransientInputHitTestResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can get an array of XRHitTestResult objects for a frame by calling GetHitTestResultsForTransientInput(XRTransientInputHitTestSource). -XRHitTestResult -XRInputSource See also on MDN Properties InputSource The read-only inputSource property of the XRTransientInputHitTestResult interface represents an XRInputSource object that was used to compute the Results array. public XRInputSource InputSource { get; } Property Value XRInputSource An XRInputSource object. Remarks -XRInputSource See also on MDN Results The read-only results property of the XRTransientInputHitTestResult interface represents an array of XRHitTestResult objects containing the hit test results for the input source, ordered by the distance along the ray used to perform the hit test, with the closest result at position 0. public XRHitTestResult[] Results { get; } Property Value XRHitTestResult[] An array of XRHitTestResult objects. Remarks -XRHitTestResult See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRTransientInputHitTestSource.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRTransientInputHitTestSource.html",
    "title": "Class XRTransientInputHitTestSource | CSharpToJavaScript",
    "keywords": "Class XRTransientInputHitTestSource Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRTransientInputHitTestSource interface of the WebXR Device API handles transient input hit test subscriptions. You can get an XRTransientInputHitTestSource object by calling the RequestHitTestSourceForTransientInput(XRTransientInputHitTestOptionsInit). [To(\"FirstCharToLowerCase\")] public class XRTransientInputHitTestSource Inheritance object XRTransientInputHitTestSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This object doesn't itself contain transient input hit test results, but it is used to compute hit tests for each XRFrame by calling GetHitTestResultsForTransientInput(XRTransientInputHitTestSource), which returns XRTransientInputHitTestResult objects. -XRTransientInputHitTestResult See also on MDN Methods Cancel() The cancel() method of the XRTransientInputHitTestSource interface unsubscribes a transient input hit test. public GlobalObject.Undefined Cancel() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRView.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRView.html",
    "title": "Class XRView | CSharpToJavaScript",
    "keywords": "Class XRView Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebXR Device API&apos;s XRView interface describes a single view into the XR scene for a specific frame, providing orientation and position information for the viewpoint. You can think of it as a description of a specific eye or camera and how it views the world. A 3D frame will involve two views, one for each eye, separated by an appropriate distance which approximates the distance between the viewer&apos;s eyes. This allows the two views, when projected in isolation into the appropriate eyes, to simulate a 3D world. [To(\"FirstCharToLowerCase\")] public class XRView Inheritance object XRView Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Eye The XRView interface's read-only eye property is a string indicating which eye&apos;s viewpoint the XRView represents: left or right. For views which represent neither eye, such as monoscopic views, this property&apos;s value is none. public XREye Eye { get; } Property Value XREye A string that can be one of the following values: Remarks See also on MDN IsFirstPersonObserver The XRView interface's read-only isFirstPersonObserver property is a boolean indicating if the XRView is a first-person observer view. public bool IsFirstPersonObserver { get; } Property Value bool Remarks To create video recordings of AR device cameras, you can&apos;t simply use one of the rendered eyes, as there often will be a physical offset. Some devices expose a secondary view, the first-person observer view, which has an eye of none. To receive a first-person observer view, you need to enable the \"secondary-views\" feature descriptor explicitly (typically as an optional feature). See RequestSession(XRSessionMode, XRSessionInit) for details. The isFirstPersonObserver property then allows you to check which secondary view is a first-person observer view. See also on MDN ProjectionMatrix The XRView interface's read-only projectionMatrix property specifies the projection matrix to apply to the underlying view. This should be used to integrate perspective to everything in the scene, in order to ensure the result is consistent with what the eye expects to see. public float ProjectionMatrix { get; } Property Value float A Float32Array object representing the projection matrix for the view. The projection matrix for each eye&apos;s view is used to ensure that the correct area of the scene is presented to each eye in order to create a believable 3D scene without introducing discomfort for the user. Remarks NOTE Note: Failure to apply proper perspective, or inconsistencies in perspective, may result in possibly serious user discomfort or distress. See also on MDN RecommendedViewportScale The read-only recommendedViewportScale property of the XRView interface is the recommended viewport scale value that you can use for RequestViewportScale(Number?) if the user agent has such a recommendation; null otherwise. public Number? RecommendedViewportScale { get; } Property Value Number A number greater than 0.0 and less than or equal to 1.0; or null if the user agent does not provide a recommended scale. Remarks -RequestViewportScale(Number?) See also on MDN Transform The read-only transform property of the XRView interface is an XRRigidTransform object which provides the position and orientation of the viewpoint relative to the XRReferenceSpace specified when the GetViewerPose(XRReferenceSpace) method was called to obtain the view object. public XRRigidTransform Transform { get; } Property Value XRRigidTransform A XRRigidTransform object specifying the position and orientation of the viewpoint represented by the XRView. Remarks With the transform, you can then position the view as a camera within the 3D scene. If you instead need the more traditional view matrix, you can get using view.transform.inverse.matrix; this gets the underlying Matrix of the transform's Inverse. See also on MDN Methods RequestViewportScale(Number?) The requestViewportScale() method of the XRView interface requests that the user agent sets the requested viewport scale for this viewport to the given value. This is used for dynamic viewport scaling which allows rendering to a subset of the WebXR viewport using a scale factor that can be changed every animation frame. public GlobalObject.Undefined RequestViewportScale(Number? scale) Parameters scale Number Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -RecommendedViewportScale See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRViewerPose.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRViewerPose.html",
    "title": "Class XRViewerPose | CSharpToJavaScript",
    "keywords": "Class XRViewerPose Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebXR Device API interface XRViewerPose represents the pose (the position and orientation) of a viewer&apos;s point of view on the scene. Each XRViewerPose can have multiple views to represent, for example, the slight separation between the left and right eye. [To(\"FirstCharToLowerCase\")] public class XRViewerPose : XRPose Inheritance object XRPose XRViewerPose Inherited Members XRPose.Transform XRPose.LinearVelocity XRPose.AngularVelocity XRPose.EmulatedPosition object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This view can represent anything from the point-of-view of a user&apos;s XR headset to the viewpoint represented by a player&apos;s movement of an avatar using mouse and keyboard, presented on the screen, to a virtual camera capturing the scene for a spectator. -WebXR Device API -Movement, orientation, and motion -XRPose and XRView See also on MDN Properties Views The read-only XRViewerPose property views returns an array which contains every XRView which must be rendered in order to fully represent the scene from the viewpoint defined by the viewer pose. For monoscopic devices, this array contains a single view. public XRView[] Views { get; } Property Value XRView[] An array of XRView objects, one for each view available as part of the scene for the current viewer pose. This array&apos;s length may potentially vary over the lifetime of the XRSession (for example, if the viewer enables or disables stereo mode on their XR output device). Remarks WARNING Warning: There is no guarantee that the number of views will remain constant over the lifetime of an XRSession. For each frame, you should always use the current length of this array rather than caching the value. Stereo views require two views to render properly, with the left eye&apos;s view having its Eye set to the string left and the right eye&apos;s view a value of right. -WebXR Device API -Movement, orientation, and motion See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRViewport.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRViewport.html",
    "title": "Class XRViewport | CSharpToJavaScript",
    "keywords": "Class XRViewport Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WebXR Device API&apos;s XRViewport interface provides properties used to describe the size and position of the current viewport within the XRWebGLLayer being used to render the 3D scene. [To(\"FirstCharToLowerCase\")] public class XRViewport Inheritance object XRViewport Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Height The read-only XRViewport property height specifies the height, in pixels, of the viewport onto the drawing surface within which the WebXR view is to be rendered. Along with Width and the origin point given by X and Y, this defines the area within which rendered content will be drawn. public long Height { get; } Property Value long The viewport&apos;s height in pixels. Remarks See also on MDN Width The read-only XRViewport property width specifies the width of the viewport, in pixels, onto the drawing surface the 3D scene is to be rendered into. This is defined using this property along with the viewport's Height and its origin given by its properties X and Y. public long Width { get; } Property Value long The viewport&apos;s width in pixels. Remarks See also on MDN X The read-only XRViewport interface's x property indicates the offset from the left edge of the destination surface (typically a XRWebGLLayer to the left edge of the viewport within the surface into which WebXR content is to be rendered. The viewport's Y property identifies the y component of the origin, and its is given by the {{domxref(&quot;XRViewPort.width&quot;, \"width\")}} and Height properties. public long X { get; } Property Value long The offset from the left edge of the rendering surface to the left edge of the viewport, in pixels. Remarks See also on MDN Y The read-only XRViewport interface's y property indicates the offset from the bottom edge of the destination surface (typically a XRWebGLLayer to the bottom edge of the viewport within the surface into which WebXR content is to be rendered. The viewport's X property identifies the x component of the origin, and its is given by the {{domxref(&quot;XRViewPort.width&quot;, \"width\")}} and Height properties. public long Y { get; } Property Value long The offset from the bottom edge of the rendering surface to the bottom edge of the viewport, in pixels. NOTE Note: Although other web APIs typically consider the y axis to begin at the top and grow larger progressing downward, WebGL reverses this, with y growing larger as it goes upward on the screen. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRVisibilityState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRVisibilityState.html",
    "title": "Enum XRVisibilityState | CSharpToJavaScript",
    "keywords": "Enum XRVisibilityState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum XRVisibilityState Fields Hidden = 2 Visible = 0 VisibleBlurred = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.XRWebGLBinding.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRWebGLBinding.html",
    "title": "Class XRWebGLBinding | CSharpToJavaScript",
    "keywords": "Class XRWebGLBinding Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRWebGLBinding interface is used to create layers that have a GPU backend. [To(\"FirstCharToLowerCase\")] public class XRWebGLBinding Inheritance object XRWebGLBinding Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -XRWebGLLayer -'WebGLRenderingContext' and WebGL2RenderingContext See also on MDN Constructors XRWebGLBinding() public XRWebGLBinding() XRWebGLBinding(XRSession, Union112) The XRWebGLBinding() constructor creates and returns a new XRWebGLBinding object. public XRWebGLBinding(XRSession session, Union112 context) Parameters session XRSession context Union112 Remarks -WebGLRenderingContext.MakeXRCompatible See also on MDN Properties NativeProjectionScaleFactor The read-only nativeProjectionScaleFactor property of the XRWebGLBinding interface represents the scaling factor by which the projection layer's resolution is multiplied by to get the native resolution of the WebXR device's frame buffer. public Number NativeProjectionScaleFactor { get; } Property Value Number A floating-point number representing by how much the device&apos;s native frame buffer size is scaled by. Remarks For more details, see GetNativeFramebufferScaleFactor(XRSession). -GetNativeFramebufferScaleFactor(XRSession) See also on MDN UsesDepthValues public bool UsesDepthValues { get; } Property Value bool Methods CreateCubeLayer(XRCubeLayerInit) The createCubeLayer() method of the XRWebGLBinding interface returns an XRCubeLayer object, which is a layer that renders directly from a cubemap, and projects it onto the inside faces of a cube. public XRCubeLayer CreateCubeLayer(XRCubeLayerInit init) Parameters init XRCubeLayerInit Returns XRCubeLayer An XRCubeLayer object. Remarks -XRCubeLayer -WebGL constants See also on MDN CreateCylinderLayer(XRCylinderLayerInit) The createCylinderLayer() method of the XRWebGLBinding interface returns an XRCylinderLayer object, which is a layer that takes up a curved rectangular space in the virtual environment. public XRCylinderLayer CreateCylinderLayer(XRCylinderLayerInit init) Parameters init XRCylinderLayerInit Returns XRCylinderLayer An XRCylinderLayer object. Remarks -XRCylinderLayer -WebGL constants See also on MDN CreateEquirectLayer(XREquirectLayerInit) The createEquirectLayer() method of the XRWebGLBinding interface returns an XREquirectLayer object, which is a layer that maps equirectangular coded data onto the inside of a sphere. public XREquirectLayer CreateEquirectLayer(XREquirectLayerInit init) Parameters init XREquirectLayerInit Returns XREquirectLayer An XREquirectLayer object. Remarks -XREquirectLayer -WebGL constants See also on MDN CreateProjectionLayer(XRProjectionLayerInit) The createProjectionLayer() method of the XRWebGLBinding interface returns an XRProjectionLayer object which is a layer that fills the entire view of the observer and is refreshed close to the device's native frame rate. public XRProjectionLayer CreateProjectionLayer(XRProjectionLayerInit init) Parameters init XRProjectionLayerInit Returns XRProjectionLayer An XRProjectionLayer object. Remarks -XRProjectionLayer -WebGL constants See also on MDN CreateQuadLayer(XRQuadLayerInit) The createQuadLayer() method of the XRWebGLBinding interface returns an XRQuadLayer object which is a layer that takes up a flat rectangular space in the virtual environment. public XRQuadLayer CreateQuadLayer(XRQuadLayerInit init) Parameters init XRQuadLayerInit Returns XRQuadLayer An XRQuadLayer object. Remarks -XRQuadLayer -WebGL constants See also on MDN GetDepthInformation(XRView) The getDepthInformation() method of the XRWebGLBinding interface returns an XRWebGLDepthInformation object containing WebGL depth information. public XRWebGLDepthInformation? GetDepthInformation(XRView view) Parameters view XRView Returns XRWebGLDepthInformation An XRWebGLDepthInformation object. Remarks -Texture See also on MDN GetReflectionCubeMap(XRLightProbe) The getReflectionCubeMap() method of the XRWebGLBinding interface returns a WebGLTexture object containing a reflection cube map texture. public Unsupported? GetReflectionCubeMap(XRLightProbe lightProbe) Parameters lightProbe XRLightProbe Returns Unsupported A WebGLTexture object. Remarks The texture format is specified by the session&apos;s reflectionFormat. See the options parameter on RequestLightProbe(XRLightProbeInit) and PreferredReflectionFormat for more details. By default, the srgba8 format is used. When using a rgba16f format, you need to be within a WebGL 2.0 context or enable the OES_texture_half_float extension within WebGL 1.0 contexts. -XRLightProbe -OES_texture_half_float See also on MDN GetSubImage(XRCompositionLayer, XRFrame, XREye) The getSubImage() method of the XRWebGLBinding interface returns a XRWebGLSubImage object representing the WebGL texture to render. public XRWebGLSubImage GetSubImage(XRCompositionLayer layer, XRFrame frame, XREye eye) Parameters layer XRCompositionLayer frame XRFrame eye XREye Returns XRWebGLSubImage A XRWebGLSubImage object. Remarks -XRWebGLSubImage See also on MDN GetViewSubImage(XRProjectionLayer, XRView) The getViewSubImage() method of the XRWebGLBinding interface returns a XRWebGLSubImage object representing the WebGL texture to render for a view. public XRWebGLSubImage GetViewSubImage(XRProjectionLayer layer, XRView view) Parameters layer XRProjectionLayer view XRView Returns XRWebGLSubImage A XRWebGLSubImage object. Remarks -XRWebGLSubImage See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRWebGLDepthInformation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRWebGLDepthInformation.html",
    "title": "Class XRWebGLDepthInformation | CSharpToJavaScript",
    "keywords": "Class XRWebGLDepthInformation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRWebGLDepthInformation interface contains depth information from the GPU/WebGL (returned by GetDepthInformation(XRView)). [To(\"FirstCharToLowerCase\")] public class XRWebGLDepthInformation : XRDepthInformation Inheritance object XRDepthInformation XRWebGLDepthInformation Inherited Members XRDepthInformation.Width XRDepthInformation.Height XRDepthInformation.NormDepthBufferFromNormView XRDepthInformation.RawValueToMeters object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface inherits properties from its parent, XRDepthInformation. -XRDepthInformation -XRCPUDepthInformation -GetDepthInformation(XRView) See also on MDN Properties Texture The read-only texture property of the XRWebGLDepthInformation interface is a WebGLTexture containing depth buffer information as an opaque texture. public Unsupported Texture { get; } Property Value Unsupported A WebGLTexture. Remarks -GetDepthInformation(XRView) -WebGLRenderingContext.BindTexture See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRWebGLLayer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRWebGLLayer.html",
    "title": "Class XRWebGLLayer | CSharpToJavaScript",
    "keywords": "Class XRWebGLLayer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRWebGLLayer interface of the WebXR Device API provides a linkage between the WebXR device (or simulated XR device, in the case of an inline session) and a WebGL context used to render the scene for display on the device. In particular, it provides access to the WebGL framebuffer and viewport to ease access to the context. [To(\"FirstCharToLowerCase\")] public class XRWebGLLayer : XRLayer Inheritance object EventTarget XRLayer XRWebGLLayer Inherited Members EventTarget.AddEventListener(string, Action, Union41) EventTarget.AddEventListener(string, Action<MouseEvent>, Union41) EventTarget.AddEventListener(string, Action<Event>, Union41) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union41) EventTarget.RemoveEventListener(string, EventListener, Union42) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Although XRWebGLLayer is currently the only type of framebuffer layer supported by WebGL, it&apos;s entirely possible that future updates to the WebXR specification may allow for other layer types and corresponding image sources. -WebXR Device API -Getting started with WebGL -'WebGLRenderingContext' and WebGL2RenderingContext -Drawing a frame in our &quot;Movement and motion&quot; WebXR example See also on MDN Constructors XRWebGLLayer() public XRWebGLLayer() XRWebGLLayer(XRSession, Union112, XRWebGLLayerInit) The WebXR Device API XRWebGLLayer() constructor creates and returns a new XRWebGLLayer object, providing the linkage between the WebXR device and the WebGL graphics layer used to render the 3D scene. public XRWebGLLayer(XRSession session, Union112 context, XRWebGLLayerInit layerInit) Parameters session XRSession context Union112 layerInit XRWebGLLayerInit Remarks -WebXR Device API -Getting started with WebGL -Handling lost context in WebGL: Khronos WebGL wiki See also on MDN Properties Antialias The read-only XRWebGLLayer property antialias is a Boolean value which is true if the rendering layer&apos;s frame buffer supports anti-aliasing. Otherwise, this property&apos;s value is false. The specific anti-aliasing technique used is left to the user agent discretion and cannot be specified by the website or web app. public bool Antialias { get; } Property Value bool A Boolean value which is true if the WebGL rendering layer&apos;s frame buffer is configured to support anti-aliasing. Otherwise, this property is false.When the WebXR compositor is enabled, this value corresponds to the value of the antialias property on the object returned by the WebGL context&apos;s WebGLRenderingContext.GetContextAttributes method. Remarks -WebXR Device API See also on MDN FixedFoveation The fixedFoveation property of the XRWebGLLayer interface is a number indicating the amount of foveation used by the XR compositor. Fixed Foveated Rendering (FFR) renders the edges of the eye textures at a lower resolution than the center and reduces the GPU load. public Number? FixedFoveation { get; set; } Property Value Number A number between 0 and 1.It's up to the user agent how to interpret the numbers in this range. When changing the foveation level, the effect will visible in the next XRFrame.Note that some user agents might implement certain levels of foveation, so you might need to adjust the foveation level in large increments to see an effect. Example levels:Some devices don&apos;t support foveated rendering. In that case fixedFoveation is null and setting it will not do anything. Remarks It is most useful for low contrast textures, such as background images but less for high contrast ones such as text or detailed images. Authors can adjust the level on a per frame basis to achieve the best tradeoff between performance and visual quality. -Foveated rendering See also on MDN Framebuffer The read-only XRWebGLLayer property framebuffer is an opaque WebGLFramebuffer which is used to buffer the rendered image if the XR compositor is being used. Otherwise, this property&apos;s value is null. The opaque framebuffer is functionally nearly the same as a standard WebGL framebuffer, except for the differences covered in the section How opaque framebuffers are special below. public Unsupported? Framebuffer { get; } Property Value Unsupported A WebGLFramebuffer object representing the framebuffer into which the 3D scene is being rendered, or null if the XR compositor is disabled for the session. Remarks -WebXR Device API See also on MDN FramebufferHeight The read-only XRWebGLLayer property framebufferHeight indicates the height of the framebuffer, in pixels. public ulong FramebufferHeight { get; } Property Value ulong The height in pixels of the XR device&apos;s framebuffer. Each of the framebuffer&apos;s attachments (pixel, depth, color, and/or stencil buffers, for example) are all this many pixels tall. Remarks You can get the width of the framebuffer using the FramebufferWidth property. -WebXR Device API See also on MDN FramebufferWidth The read-only XRWebGLLayer property framebufferWidth specifies the width of the framebuffer, in pixels. public ulong FramebufferWidth { get; } Property Value ulong The width in pixels of the XR device&apos;s framebuffer. Each of the framebuffer&apos;s attachments (pixel, depth, color, and/or stencil buffers, for example) are all this many pixels wide. Remarks You can get the height of the framebuffer using the FramebufferHeight property. -WebXR Device API See also on MDN IgnoreDepthValues The read-only XRWebGLLayer property ignoreDepthValues is a Boolean value which is true if the session has been configured to ignore the values in the depth buffer while rendering the scene. If the depth buffer is being used to determine the position of vertices, this property is false. public bool IgnoreDepthValues { get; } Property Value bool A Boolean value which is true if the WebGL context&apos;s depth buffer is being used while computing the locations of points in the 3D world. Otherwise, if this is true, the depth buffer&apos;s values are being used to assist in placing objects in the scene. Since the XR compositor uses the depth buffer by default, this value is false unless explicitly set otherwise when creating the XRWebGLLayer using its constructor, XRWebGLLayer(XRSession, Union112, XRWebGLLayerInit). Remarks The value of ignoreDepthValues can only be set when the XRWebGLLayer is instantiated, by setting the corresponding value in the constructor&apos;s options parameter. -WebXR Device API -WebGL depth buffer related methods: {{domxref(&quot;WebGLRenderingContext.depthFunc&quot;, \"depthFunc()\")}}, WebGLRenderingContext.ClearDepth See also on MDN Methods GetNativeFramebufferScaleFactor(XRSession) public static Number GetNativeFramebufferScaleFactor(XRSession session) Parameters session XRSession Returns Number GetViewport(XRView) The XRWebGLLayer interface's getViewport() method returns the XRViewport that should be used to render the specified XRView into the WebGL layer. For WebXR devices which use a single framebuffer for both the left and right eyes, the returned viewport represents the region of the framebuffer into which the scene should be rendered for the eye represented by the view. public XRViewport? GetViewport(XRView view) Parameters view XRView Returns XRViewport A XRViewport object representing the viewport which will restrict drawing to the portion of the layer corresponding to the specified view. Remarks -WebXR Device API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XRWebGLLayerInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRWebGLLayerInit.html",
    "title": "Class XRWebGLLayerInit | CSharpToJavaScript",
    "keywords": "Class XRWebGLLayerInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class XRWebGLLayerInit Inheritance object XRWebGLLayerInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alpha public bool Alpha Field Value bool Antialias public bool Antialias Field Value bool Depth public bool Depth Field Value bool FramebufferScaleFactor public Number FramebufferScaleFactor Field Value Number IgnoreDepthValues public bool IgnoreDepthValues Field Value bool Stencil public bool Stencil Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.XRWebGLSubImage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XRWebGLSubImage.html",
    "title": "Class XRWebGLSubImage | CSharpToJavaScript",
    "keywords": "Class XRWebGLSubImage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XRWebGLSubImage interface is used during rendering of WebGL layers. [To(\"FirstCharToLowerCase\")] public class XRWebGLSubImage : XRSubImage Inheritance object XRSubImage XRWebGLSubImage Inherited Members XRSubImage.Viewport object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -XRLayer -GetSubImage(XRCompositionLayer, XRFrame, XREye) -GetViewSubImage(XRProjectionLayer, XRView) See also on MDN Properties ColorTexture The read-only colorTexture property of the XRWebGLSubImage interface represents the color WebGLTexture object for the XRCompositionLayer to render. public Unsupported ColorTexture { get; } Property Value Unsupported An opaque WebGLTexture. See WebXR opaque textures for details. Remarks -WebGL2RenderingContext.FramebufferTextureLayer See also on MDN ColorTextureHeight The read-only colorTextureHeight property of the XRWebGLSubImage interface is a number representing the height in pixels of the GL attachment. public ulong ColorTextureHeight { get; } Property Value ulong A number indicating the height in pixels. Remarks -WebGLTexture See also on MDN ColorTextureWidth The read-only colorTextureWidth property of the XRWebGLSubImage interface is a number representing the width in pixels of the GL attachment. public ulong ColorTextureWidth { get; } Property Value ulong A number indicating the width in pixels. Remarks -WebGLTexture See also on MDN DepthStencilTexture The read-only depthStencilTexture property of the XRWebGLSubImage interface represents the depth/stencil WebGLTexture object for the XRCompositionLayer to render. public Unsupported? DepthStencilTexture { get; } Property Value Unsupported An opaque WebGLTexture. See WebXR opaque textures for details. Remarks -WebGL2RenderingContext.FramebufferTextureLayer See also on MDN DepthStencilTextureHeight public ulong? DepthStencilTextureHeight { get; } Property Value ulong? DepthStencilTextureWidth public ulong? DepthStencilTextureWidth { get; } Property Value ulong? ImageIndex The read-only imageIndex property of the XRWebGLSubImage interface is a number representing the offset into the texture array if the layer was requested with texture-array; null otherwise. public ulong? ImageIndex { get; } Property Value ulong? A number or null if the layer wasn&apos;t requested with texture-array. Remarks -WebGL2RenderingContext.FramebufferTextureLayer See also on MDN MotionVectorTexture public Unsupported? MotionVectorTexture { get; } Property Value Unsupported MotionVectorTextureHeight public ulong? MotionVectorTextureHeight { get; } Property Value ulong? MotionVectorTextureWidth public ulong? MotionVectorTextureWidth { get; } Property Value ulong?"
  },
  "api/CSharpToJavaScript.APIs.JS.XSLTProcessor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XSLTProcessor.html",
    "title": "Class XSLTProcessor | CSharpToJavaScript",
    "keywords": "Class XSLTProcessor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll An XSLTProcessor applies an XSLT stylesheet transformation to an XML document to produce a new XML document as output. It has methods to load the XSLT stylesheet, to manipulate &lt;xsl:param&gt; parameter values, and to apply the transformation to documents. [To(\"FirstCharToLowerCase\")] public class XSLTProcessor Inheritance object XSLTProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Using the Mozilla JavaScript interface to XSL Transformations See also on MDN Constructors XSLTProcessor() The XSLTProcessor() constructor creates a new XSLTProcessor object instance. public XSLTProcessor() Remarks See also on MDN Methods ClearParameters() The clearParameters() method of the XSLTProcessor interface removes all parameters (&lt;xsl:param&gt;) and their values from the stylesheet imported in the processor. The XSLTProcessor will then use the default values specified in the XSLT stylesheet. public GlobalObject.Undefined ClearParameters() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -GetParameter(string, string) -SetParameter(string, string, dynamic) -RemoveParameter(string, string) -Reset() See also on MDN GetParameter(string, string) The getParameter() method of the XSLTProcessor interface returns the value of a parameter (&lt;xsl:param&gt;) from the stylesheet imported in the processor. public dynamic GetParameter(string namespaceURI, string localName) Parameters namespaceURI string localName string Returns dynamic An object that is the value associated with the parameter. It can be of any type. NOTE Note: Firefox supports any kind of parameter. Chrome, Edge and Safari only support string parameters. Remarks -SetParameter(string, string, dynamic) -RemoveParameter(string, string) -ClearParameters() -Reset() See also on MDN ImportStylesheet(Node) The importStylesheet() method of the XSLTProcessor interface imports an XSLT stylesheet for the processor. public GlobalObject.Undefined ImportStylesheet(Node style) Parameters style Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN RemoveParameter(string, string) The removeParameter() method of the XSLTProcessor interface removes the parameter (&lt;xsl:param&gt;) and its value from the stylesheet imported in the processor. public GlobalObject.Undefined RemoveParameter(string namespaceURI, string localName) Parameters namespaceURI string localName string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -GetParameter(string, string) -SetParameter(string, string, dynamic) -ClearParameters() -Reset() See also on MDN Reset() The reset() method of the XSLTProcessor interface removes all parameters (&lt;xsl:param&gt;) and the XSLT stylesheet from the processor. The XSLTProcessor will then be in its original state when it was created. public GlobalObject.Undefined Reset() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -GetParameter(string, string) -SetParameter(string, string, dynamic) -RemoveParameter(string, string) -ClearParameters() See also on MDN SetParameter(string, string, dynamic) The setParameter() method of the XSLTProcessor interface sets the value of a parameter (&lt;xsl:param&gt;) in the stylesheet imported in the processor. public GlobalObject.Undefined SetParameter(string namespaceURI, string localName, dynamic value) Parameters namespaceURI string localName string value dynamic Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -GetParameter(string, string) -RemoveParameter(string, string) -ClearParameters() -Reset() See also on MDN TransformToDocument(Node) The transformToDocument() method of the XSLTProcessor interface transforms the provided Node source to a Document using the XSLT stylesheet associated with XSLTProcessor. public Document TransformToDocument(Node source) Parameters source Node Returns Document A Document. The actual interface depends on the output method of the stylesheet: Output method Result interface html HTMLDocument xml XMLDocument text XMLDocument with a single root element &lt;transformiix:result&gt; with the text as a child Remarks -TransformToDocument(Node) See also on MDN TransformToFragment(Node, Document) The transformToFragment() method of the XSLTProcessor interface transforms a provided Node source to a DocumentFragment using the XSLT stylesheet associated with the XSLTProcessor. public DocumentFragment TransformToFragment(Node source, Document output) Parameters source Node output Document Returns DocumentFragment A DocumentFragment. Remarks -TransformToDocument(Node) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.authenticatorBiometricPerfBounds.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.authenticatorBiometricPerfBounds.html",
    "title": "Class authenticatorBiometricPerfBounds | CSharpToJavaScript",
    "keywords": "Class authenticatorBiometricPerfBounds Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class authenticatorBiometricPerfBounds Inheritance object authenticatorBiometricPerfBounds Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FAR public Number FAR Field Value Number FRR public Number FRR Field Value Number"
  },
  "api/CSharpToJavaScript.APIs.JS.console.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.console.html",
    "title": "Class console | CSharpToJavaScript",
    "keywords": "Class console Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The console object provides access to the browser&apos;s debugging console (e.g. the Web console in Firefox). The specifics of how it works varies from browser to browser, but there is a de facto set of features that are typically provided. [To(\"FirstCharToLowerCase\")] public class console Inheritance object console Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The console object can be accessed from any global object. Window on browsing scopes and WorkerGlobalScope as specific variants in workers via the property console. It's exposed as Window.Console, and can be referenced as console. For example: This page documents the Methods available on the console object and gives a few Usage examples. AvailableInWorkers NOTE Note: Certain online IDEs and editors may implement the console API differently than the browsers. As a result, certain functionality of the console API, such as the timer methods, may not be outputted in the console of online IDEs or editors. Always open your browser&apos;s DevTools console to see the logs as shown in this documentation. -Firefox Developer Tools -Web console — how the Web console in Firefox handles console API calls -about:debugging — how to see console output when the debugging target is a mobile device See also on MDN Methods Assert(bool, params dynamic[]) The console.assert() method writes an error message to the console if the assertion is false. If the assertion is true, nothing happens. public GlobalObject.Undefined Assert(bool condition, params dynamic[] data) Parameters condition bool data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers See also on MDN Clear() The console.clear() method clears the console if the console allows it. A graphical console, like those running on browsers, will allow it; a console displaying on the terminal, like the one running on Node, will not support it, and will have no effect (and no error). public GlobalObject.Undefined Clear() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Count(string) The console.count() method logs the number of times that this particular call to count() has been called. public GlobalObject.Undefined Count(string label) Parameters label string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers See also on MDN CountReset(string) The console.countReset() method resets counter used with Console.Count. public GlobalObject.Undefined CountReset(string label) Parameters label string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers See also on MDN Debug(params dynamic[]) The console.debug() method outputs a message to the web console at the &quot;debug&quot; log level. The message is only displayed to the user if the console is configured to display debug output. In most cases, the log level is configured within the console UI. This log level might correspond to the Debug or Verbose log level. public GlobalObject.Undefined Debug(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers See also on MDN Dir(dynamic, object?) The method console.dir() displays an interactive list of the properties of the specified JavaScript object. The output is presented as a hierarchical listing with disclosure triangles that let you see the contents of child objects. public GlobalObject.Undefined Dir(dynamic item, object? options) Parameters item dynamic options object Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks In other words, console.dir() is the way to see all the properties of a specified JavaScript object in console by which the developer can easily get the properties of the object. AvailableInWorkers console-dir.png -MSDN: Using the F12 Tools Console to View Errors and Status -Chrome Console API reference See also on MDN Dirxml(params dynamic[]) The console.dirxml() method displays an interactive tree of the descendant elements of the specified XML/HTML element. If it is not possible to display as an element the JavaScript Object view is shown instead. The output is presented as a hierarchical listing of expandable nodes that let you see the contents of child nodes. public GlobalObject.Undefined Dirxml(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Error(params dynamic[]) The console.error() method outputs an error message to the Web console. public GlobalObject.Undefined Error(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -MSDN: Using the F12 Tools Console to View Errors and Status -Chrome Developer Tools: Using the Console See also on MDN Group(params dynamic[]) The console.group() method creates a new inline group in the Web console log, causing any subsequent console messages to be indented by an additional level, until Console.GroupEnd is called. public GlobalObject.Undefined Group(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -Console.GroupEnd See also on MDN GroupCollapsed(params dynamic[]) The console.groupCollapsed() method creates a new inline group in the Web Console. Unlike Console.Group, however, the new group is created collapsed. The user will need to use the disclosure button next to it to expand it, revealing the entries created in the group. public GlobalObject.Undefined GroupCollapsed(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Call Console.GroupEnd to back out to the parent group. See Using groups in the console in the Console documentation for details and examples. AvailableInWorkers See also on MDN GroupEnd() The console.groupEnd() method exits the current inline group in the Web console. See Using groups in the console in the Console documentation for details and examples. public GlobalObject.Undefined GroupEnd() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -Console.Group See also on MDN Info(params dynamic[]) The console.info() method outputs an informational message to the Web console. In Firefox, a small &quot;i&quot; icon is displayed next to these items in the Web console&apos;s log. public GlobalObject.Undefined Info(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -MSDN: Using the F12 Tools Console to View Errors and Status See also on MDN Log(params dynamic[]) The console.log() method outputs a message to the web console. The message may be a single string (with optional substitution values), or it may be any one or more JavaScript objects. public GlobalObject.Undefined Log(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -MSDN: Using the F12 Tools Console to View Errors and Status -NodeJS: Console API See also on MDN Table(dynamic, List<string>) The console.table() method displays tabular data as a table. public GlobalObject.Undefined Table(dynamic tabularData, List<string> properties) Parameters tabularData dynamic properties List<string> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This function takes one mandatory argument data, which must be an array or an object, and one additional optional parameter columns. It logs data as a table. Each element in the array (or enumerable property if data is an object) will be a row in the table. The first column in the table will be labeled (index). If data is an array, then its values will be the array indices. If data is an object, then its values will be the property names. Note that (in Firefox) console.table is limited to displaying 1000 rows (first row is the labeled index). AvailableInWorkers See also on MDN Time(string) The console.time() method starts a timer you can use to track how long an operation takes. You give each timer a unique name, and may have up to 10,000 timers running on a given page. When you call Console.TimeEnd with the same name, the browser will output the time, in milliseconds, that elapsed since the timer was started. public GlobalObject.Undefined Time(string label) Parameters label string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See Timers in the Console documentation for details and examples. AvailableInWorkers -Console.TimeEnd -Console.TimeLog See also on MDN TimeEnd(string) The console.timeEnd() stops a timer that was previously started by calling Console.Time. public GlobalObject.Undefined TimeEnd(string label) Parameters label string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See Timers in the documentation for details and examples. AvailableInWorkers See also on MDN TimeLog(string, params dynamic[]) The console.timeLog() method logs the current value of a timer that was previously started by calling Console.Time. public GlobalObject.Undefined TimeLog(string label, params dynamic[] data) Parameters label string data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Trace(params dynamic[]) The console.trace() method outputs a stack trace to the Web console. public GlobalObject.Undefined Trace(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers NOTE Note: In some browsers, console.trace() may also output the sequence of calls and asynchronous events leading to the current console.trace() which are not on the call stack — to help identify the origin of the current event evaluation loop. See Stack traces in the Console documentation for details and examples. See also on MDN Warn(params dynamic[]) The console.warn() method outputs a warning message to the Web console. public GlobalObject.Undefined Warn(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers NOTE Note: In Chrome and Firefox, warnings have a small exclamation point icon next to them in the Web console log. -MSDN: Using the F12 Tools Console to View Errors and Status See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.html",
    "title": "Namespace CSharpToJavaScript.APIs.JS | CSharpToJavaScript",
    "keywords": "Namespace CSharpToJavaScript.APIs.JS Classes AbortController The AbortController interface represents a controller object that allows you to abort one or more Web requests as and when desired. AbortSignal The AbortSignal interface represents a signal object that allows you to communicate with a DOM request (such as a fetch request) and abort it if required via an AbortController object. AbsoluteOrientationReadingValues AbsoluteOrientationSensor The AbsoluteOrientationSensor interface of the Sensor APIs describes the device&apos;s physical orientation in relation to the Earth&apos;s reference coordinate system. AbstractRange The AbstractRange abstract interface is the base class upon which all DOM range types are defined. A range is an object that indicates the start and end points of a section of content within the document. Accelerometer The Accelerometer interface of the Sensor APIs provides on each reading the acceleration applied to the device along all three axes. AccelerometerReadingValues AccelerometerSensorOptions AddEventListenerOptions AmbientLightSensor The AmbientLightSensor interface of the Sensor APIs returns the current light level or illuminance of the ambient light around the hosting device. AnalyserNode The AnalyserNode interface represents a node able to provide real-time frequency and time-domain analysis information. It is an AudioNode that passes the audio stream unchanged from the input to the output, but allows you to take the generated data, process it, and create audio visualizations. AnalyserOptions Animation The Animation interface of the Web Animations API represents a single animation player and provides playback controls and a timeline for an animation node or source. AnimationEffect The AnimationEffect interface of the Web Animations API is an interface representing animation effects. AnimationNodeList AnimationPlaybackEvent The AnimationPlaybackEvent interface of the Web Animations API represents animation events. AnimationPlaybackEventInit AnimationTimeOptions AnimationTimeline The AnimationTimeline interface of the Web Animations API represents the timeline of an animation. This interface exists to define timeline features, inherited by other timeline types: AnimationWorkletGlobalScope AssignedNodesOptions Attr The Attr interface represents one of an element's attributes as an object. In most situations, you will directly retrieve the attribute value as a string (e.g., GetAttribute(string)), but certain functions (e.g., GetAttributeNode(string)) or means of iterating return Attr instances. AudioBuffer The AudioBuffer interface represents a short audio asset residing in memory, created from an audio file using the BaseAudioContext/decodeAudioData method, or from raw data using BaseAudioContext/createBuffer. Once put into an AudioBuffer, the audio can then be played by being passed into an AudioBufferSourceNode. AudioBufferOptions AudioBufferSourceNode The AudioBufferSourceNode interface is an AudioScheduledSourceNode which represents an audio source consisting of in-memory audio data, stored in an AudioBuffer. AudioBufferSourceOptions AudioConfiguration AudioContext The AudioContext interface represents an audio-processing graph built from audio modules linked together, each represented by an AudioNode. AudioContextOptions AudioData The AudioData interface of the WebCodecs API represents an audio sample. AudioDataCopyToOptions AudioDataInit AudioDecoder The AudioDecoder interface of the 'WebCodecs API' decodes chunks of audio. AudioDecoderConfig AudioDecoderInit AudioDecoderSupport AudioDestinationNode The AudioDestinationNode interface represents the end destination of an audio graph in a given context — usually the speakers of your device. It can also be the node that will &quot;record&quot; the audio data when used with an OfflineAudioContext. AudioEncoder The AudioEncoder interface of the WebCodecs API encodes AudioData objects. AudioEncoderConfig AudioEncoderInit AudioEncoderSupport AudioListener The AudioListener interface represents the position and orientation of the unique person listening to the audio scene, and is used in audio spatialization. All PannerNodes spatialize in relation to the AudioListener stored in the Listener attribute. AudioNode The AudioNode interface is a generic interface for representing an audio processing module. AudioNodeOptions AudioParam The Web Audio API&apos;s AudioParam interface represents an audio-related parameter, usually a parameter of an AudioNode (such as Gain). AudioParamDescriptor The AudioParamDescriptor dictionary of the Web Audio API specifies properties for AudioParam objects. AudioParamMap The AudioParamMap interface of the Web Audio API represents an iterable and read-only set of multiple audio parameters. AudioProcessingEvent IMPORTANT Deprecated The AudioProcessingEvent interface of the Web Audio API represents events that occur when a ScriptProcessorNode input buffer is ready to be processed. AudioProcessingEventInit AudioScheduledSourceNode The AudioScheduledSourceNode interface—part of the Web Audio API—is a parent interface for several types of audio source node interfaces which share the ability to be started and stopped, optionally at specified times. Specifically, this interface defines the Start(Number) and Stop(Number) methods, as well as the AudioScheduledSourceNode.Ended_event event. AudioTimestamp AudioTrack The AudioTrack interface represents a single audio track from one of the HTML media elements, audio or video. AudioTrackList The AudioTrackList interface is used to represent a list of the audio tracks contained within a given HTML media element, with each track represented by a separate AudioTrack object in the list. AudioWorklet The AudioWorklet interface of the Web Audio API is used to supply custom audio processing scripts that execute in a separate thread to provide very low latency audio processing. AudioWorkletGlobalScope The AudioWorkletGlobalScope interface of the Web Audio API represents a global execution context for user-supplied code, which defines custom AudioWorkletProcessor-derived classes. AudioWorkletNode NOTE Note: Although the interface is available outside secure contexts, the AudioWorklet property is not, thus custom AudioWorkletProcessors cannot be defined outside them. AudioWorkletNodeOptions AudioWorkletProcessor The AudioWorkletProcessor interface of the Web Audio API represents an audio processing code behind a custom AudioWorkletNode. It lives in the AudioWorkletGlobalScope and runs on the Web Audio rendering thread. In turn, an AudioWorkletNode based on it runs on the main thread. AuthenticationExtensionsClientInputs AuthenticationExtensionsClientOutputs AuthenticationExtensionsPaymentInputs AuthenticatorAssertionResponse The AuthenticatorAssertionResponse interface of the Web Authentication API contains a digital signature from the private key of a particular WebAuthn credential. The relying party&apos;s server can verify this signature to authenticate a user, for example when they sign in. AuthenticatorAttestationResponse The AuthenticatorAttestationResponse interface of the Web Authentication API is the result of a WebAuthn credential registration. It contains information about the credential that the server needs to perform WebAuthn assertions, such as its credential ID and public key. AuthenticatorResponse The AuthenticatorResponse interface of the Web Authentication API is the base interface for interfaces that provide a cryptographic root of trust for a key pair. The child interfaces include information from the browser such as the challenge origin and either may be returned from Response. AuthenticatorSelectionCriteria BarProp The BarProp interface of the 'Document Object Model' represents the web browser user interface elements that are exposed to scripts in web pages. Each of the following interface elements are represented by a BarProp object. BaseAudioContext The BaseAudioContext interface of the Web Audio API acts as a base definition for online and offline audio-processing graphs, as represented by AudioContext and OfflineAudioContext respectively. You wouldn't use BaseAudioContext directly — you&apos;d use its features via one of these two inheriting interfaces. BeforeUnloadEvent BeforeUnloadEvent is an interface for the Window/beforeunload_event event. BiquadFilterNode The BiquadFilterNode interface represents a simple low-order filter, and is created using the BaseAudioContext/createBiquadFilter method. It is an AudioNode that can represent different kinds of filters, tone control devices, and graphic equalizers. A BiquadFilterNode always has exactly one input and one output. BiquadFilterOptions Blob The Blob object represents a blob, which is a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a ReadableStream so its methods can be used for processing the data. BlobEvent The BlobEvent interface represents events associated with a Blob. These blobs are typically, but not necessarily, associated with media content. BlobEventInit BlobPropertyBag BreakToken BreakTokenOptions BroadcastChannel The BroadcastChannel interface represents a named channel that any {{glossary(\"browsing context\")}} of a given {{glossary(\"origin\")}} can subscribe to. It allows communication between different documents (in different windows, tabs, frames or iframes) of the same origin. Messages are broadcasted via a BroadcastChannel/message_event event fired at all BroadcastChannel objects listening to the channel, except the object that sent the message. ByteLengthQueuingStrategy The ByteLengthQueuingStrategy interface of the Streams API provides a built-in byte length queuing strategy that can be used when constructing streams. CDATASection The CDATASection interface represents a CDATA section that can be used within XML to include extended portions of unescaped text. When inside a CDATA section, the symbols &lt; and & don&apos;t need escaping as they normally do. CSPViolationReportBody The CSPViolationReportBody interface contains the report data for a Content Security Policy (CSP) violation. CSP violations are thrown when the webpage attempts to load a resource that violates the CSP set by the Content-Security-Policy HTTP header. CSS Cascading Style Sheets (CSS) is a stylesheet language used to describe the presentation of a document written in HTML or XML (including XML dialects such as SVG, MathML or XHTML). CSS describes how elements should be rendered on screen, on paper, in speech, or on other media. CSSAnimation The animation shorthand CSS property applies an animation between styles. It is a shorthand for animation-name, animation-duration, animation-timing-function, animation-delay, animation-iteration-count, animation-direction, animation-fill-mode, animation-play-state, and animation-timeline. CSSContainerRule The CSSContainerRule interface represents a single CSS @container rule. CSSCounterStyleRule The CSSCounterStyleRule interface represents an @counter-style at-rule. CSSGroupingRule The CSSGroupingRule interface of the CSS Object Model represents any CSS at-rule that contains other rules nested within it. CSSImportRule The CSSImportRule interface represents an @import at-rule. CSSMarginRule CSSNamespaceRule The CSSNamespaceRule interface describes an object representing a single CSS @namespace at-rule. CSSPageRule CSSPageRule represents a single CSS @page rule. CSSPropertyRule The CSSPropertyRule interface of the 'CSS_Properties_and_Values_API' represents a single CSS {{cssxref(\"@property\")}} rule. CSSPseudoElement The CSSPseudoElement interface represents a pseudo-element that may be the target of an event or animated using the 'Web Animations API'. Instances of this interface may be obtained by calling 'Element.Pseudo'. CSSRule The CSSRule interface represents a single CSS rule. There are several types of rules which inherit properties from CSSRule. CSSRuleList A CSSRuleList represents an ordered collection of read-only CSSRule objects. CSSStartingStyleRule CSSStyleDeclaration The CSSStyleDeclaration interface represents an object that is a CSS declaration block, and exposes style information and various style-related methods and properties. CSSStyleRule The CSSStyleRule interface represents a single CSS style rule. CSSStyleSheet The CSSStyleSheet interface represents a single CSS stylesheet, and lets you inspect and modify the list of rules contained in the stylesheet. It inherits properties and methods from its parent, StyleSheet. CSSStyleSheetInit CSSTransition The transition CSS property is a shorthand property for transition-property, transition-duration, transition-timing-function, transition-delay, and transition-behavior. CSSViewportRule Cache The Cache interface provides a persistent storage mechanism for Request / Response object pairs that are cached in long lived memory. How long a Cache object lives is browser dependent, but a single origin&apos;s scripts can typically rely on the presence of a previously populated Cache object. Note that the Cache interface is exposed to windowed scopes as well as workers. You don&apos;t have to use it in conjunction with service workers, even though it is defined in the service worker spec. CacheQueryOptions CacheStorage The CacheStorage interface represents the storage for Cache objects. CanvasGradient The CanvasGradient interface represents an opaque object describing a gradient. It is returned by the methods CanvasRenderingContext2D.CreateLinearGradient, CanvasRenderingContext2D.CreateConicGradient or CanvasRenderingContext2D.CreateRadialGradient. CanvasPattern The CanvasPattern interface represents an opaque object describing a pattern, based on an image, a canvas, or a video, created by the CanvasRenderingContext2D.CreatePattern method. CanvasRenderingContext2D The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D rendering context for the drawing surface of a canvas element. It is used for drawing shapes, text, images, and other objects. CanvasRenderingContext2DSettings ChannelMergerNode The ChannelMergerNode interface, often used in conjunction with its opposite, ChannelSplitterNode, reunites different mono inputs into a single output. Each input is used to fill a channel of the output. This is useful for accessing each channels separately, e.g. for performing channel mixing where gain must be separately controlled on each channel. ChannelMergerOptions ChannelSplitterNode The ChannelSplitterNode interface, often used in conjunction with its opposite, ChannelMergerNode, separates the different channels of an audio source into a set of mono outputs. This is useful for accessing each channel separately, e.g. for performing channel mixing where gain must be separately controlled on each channel. ChannelSplitterOptions CharacterData The CharacterData abstract interface represents a Node object that contains characters. This is an abstract interface, meaning there aren't any objects of type CharacterData: it is implemented by other interfaces like Text, Comment, CDATASection, or ProcessingInstruction, which aren't abstract. ChildBreakToken Client The Client interface represents an executable context such as a Worker, or a SharedWorker. Window clients are represented by the more-specific WindowClient. You can get Client/WindowClient objects from methods such as MatchAll(ClientQueryOptions) and Get(string). ClientQueryOptions Clients The Clients interface provides access to Client objects. Access it via {{domxref(&quot;ServiceWorkerGlobalScope&quot;, &quot;self&quot;)}}.clients within a service worker. Clipboard The Clipboard interface implements the Clipboard API, providing—if the user grants permission—both read and write access to the contents of the system clipboard. The Clipboard API can be used to implement cut, copy, and paste features within a web application. ClipboardEvent The ClipboardEvent interface represents events providing information related to modification of the clipboard, that is Element/cut_event, Element/copy_event, and Element/paste_event events. ClipboardEventInit ClipboardItem The ClipboardItem interface of the 'Clipboard API' represents a single item format, used when reading or writing data via the 'Clipboard API'. That is Read() and Write(List<ClipboardItem>) respectively. ClipboardItemOptions ClipboardPermissionDescriptor CloseEvent A CloseEvent is sent to clients using WebSockets when the connection is closed. This is delivered to the listener indicated by the WebSocket object&apos;s onclose attribute. CloseEventInit CollectedClientAdditionalPaymentData CollectedClientData CollectedClientPaymentData Comment The Comment interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view. CompileError CompositionEvent The DOM CompositionEvent represents events that occur due to the user indirectly entering text. CompositionEventInit ComputedEffectTiming ConstantSourceNode The ConstantSourceNode interface—part of the Web Audio API—represents an audio source (based upon AudioScheduledSourceNode) whose output is single unchanging value. This makes it useful for cases in which you need a constant value coming in from an audio source. In addition, it can be used like a constructible AudioParam by automating the value of its Offset or by connecting another node to it; see Controlling multiple parameters with ConstantSourceNode. ConstantSourceOptions ConstrainPoint2DParameters ContactAddress The ContactAddress interface of the 'contact_picker_api' represents a physical address. Instances of this interface are retrieved from the address property of the objects returned by GetProperties(). ContactInfo ContactsManager The ContactsManager interface of the 'Contact Picker API' allows users to select entries from their contact list and share limited details of the selected entries with a website or application. ContactsSelectOptions ConvolverNode The ConvolverNode interface is an AudioNode that performs a Linear Convolution on a given AudioBuffer, often used to achieve a reverb effect. A ConvolverNode always has exactly one input and one output. ConvolverOptions CountQueuingStrategy The CountQueuingStrategy interface of the Streams API provides a built-in chunk counting queuing strategy that can be used when constructing streams. Credential The Credential interface of the Credential Management API provides information about an entity (usually a user) normally as a prerequisite to a trust decision. CredentialCreationOptions CredentialData CredentialRequestOptions CredentialsContainer The CredentialsContainer interface of the Credential Management API exposes methods to request credentials and notify the user agent when events such as successful sign in or sign out happen. This interface is accessible from 'Navigator.Credentials'. CustomElementRegistry The CustomElementRegistry interface provides methods for registering custom elements and querying registered elements. To get an instance of it, use the CustomElements property. CustomEvent The CustomEvent interface represents events initialized by an application for any purpose. CustomEventInit DOMException The DOMException interface represents an abnormal event (called an exception) that occurs as a result of calling a method or accessing a property of a web API. This is how error conditions are described in web APIs. DOMImplementation The DOMImplementation interface represents an object providing methods which are not dependent on any particular document. Such an object is returned by the Implementation property. DOMMatrix The DOMMatrix interface represents 4×4 matrices, suitable for 2D and 3D operations including rotation and translation. It is a mutable version of the DOMMatrixReadOnly interface. DOMMatrix2DInit DOMMatrixInit DOMMatrixReadOnly The DOMMatrixReadOnly interface represents a read-only 4×4 matrix, suitable for 2D and 3D operations. The DOMMatrix interface — which is based upon DOMMatrixReadOnly—adds mutability, allowing you to alter the matrix after creating it. DOMParser The DOMParser interface provides the ability to parse XML or HTML source code from a string into a DOM Document. DOMPoint A DOMPoint object represents a 2D or 3D point in a coordinate system; it includes values for the coordinates in up to three dimensions, as well as an optional perspective value. DOMPoint is based on DOMPointReadOnly but allows its properties' values to be changed. DOMPointInit DOMPointReadOnly The DOMPointReadOnly interface specifies the coordinate and perspective fields used by DOMPoint to define a 2D or 3D point in a coordinate system. DOMQuad A DOMQuad is a collection of four DOMPoints defining the corners of an arbitrary quadrilateral. Returning DOMQuads lets getBoxQuads() return accurate information even when arbitrary 2D or 3D transforms are present. It has a handy bounds attribute returning a DOMRectReadOnly for those cases where you just want an axis-aligned bounding rectangle. DOMQuadInit DOMRect A DOMRect describes the size and position of a rectangle. DOMRectInit DOMRectList DOMRectReadOnly The DOMRectReadOnly interface specifies the standard properties used by DOMRect to define a rectangle whose properties are immutable. DOMStringList The DOMString interface is a legacy type returned by some APIs and represents a non-modifiable list of strings (DOMString). Modern APIs use Array objects (in WebIDL: sequence&lt;DOMString&gt;) instead. DOMStringMap The DOMStringMap interface is used for the HTMLElement.Dataset/SVGElement.Dataset attribute, to represent data for custom attributes added to elements. DOMTokenList The DOMTokenList interface represents a set of space-separated tokens. Such a set is returned by ClassList or RelList, and many others. DataTransfer The DataTransfer object is used to hold the data that is being dragged during a drag and drop operation. It may hold one or more data items, each of one or more data types. For more information about drag and drop, see HTML Drag and Drop API. DataTransferItem The DataTransferItem object represents one drag data item. During a drag operation, each DragEvent has a DataTransfer property which contains a DataTransferItemList of drag data items. Each item in the list is a DataTransferItem object. DataTransferItemList The DataTransferItemList object is a list of DataTransferItem objects representing items being dragged. During a drag operation, each DragEvent has a DataTransfer property and that property is a DataTransferItemList. Date DatePrototype DedicatedWorkerGlobalScope The DedicatedWorkerGlobalScope object (the Worker global scope) is accessible through the Self keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See also: Functions available to workers. DelayNode The DelayNode interface represents a delay-line; an AudioNode audio-processing module that causes a delay between the arrival of an input data and its propagation to the output. DelayOptions DeviceMotionEvent The DeviceMotionEvent interface provides web developers with information about the speed of changes for the device&apos;s position and orientation. DeviceMotionEventAcceleration The DeviceMotionEventAcceleration object provides information about the amount of acceleration the device is experiencing along all three axes. DeviceMotionEventAccelerationInit DeviceMotionEventInit DeviceMotionEventRotationRate A DeviceMotionEventRotationRate object provides information about the rate at which the device is rotating around all three axes. DeviceMotionEventRotationRateInit DeviceOrientationEvent The DeviceOrientationEvent object provides web developers with information from the physical orientation of the device running the web page. DeviceOrientationEventInit Document The Document interface represents any web page loaded in the browser and serves as an entry point into the web page&apos;s content, which is the DOM tree. DocumentFragment The DocumentFragment interface represents a minimal document object that has no parent. DocumentType The DocumentType interface represents a Node containing a doctype. DragEvent The DragEvent interface is a Event that represents a drag and drop interaction. The user initiates a drag by placing a pointer device (such as a mouse) on the touch surface and then dragging the pointer to a new location (such as another DOM element). Applications are free to interpret a drag and drop interaction in an application-specific way. DragEventInit DynamicsCompressorNode The DynamicsCompressorNode interface provides a compression effect, which lowers the volume of the loudest parts of the signal in order to help prevent clipping and distortion that can occur when multiple sounds are played and multiplexed together at once. This is often used in musical production and game audio. DynamicsCompressorNode is an AudioNode that has exactly one input and one output. DynamicsCompressorOptions EffectTiming Element Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element. ElementCreationOptions ElementDefinitionOptions ElementInternals The ElementInternals interface of the Document Object Model gives web developers a way to allow custom elements to fully participate in HTML forms. It provides utilities for working with these elements in the same way you would work with any standard HTML form element, and also exposes the Accessibility Object Model to the element. EncodedAudioChunk The EncodedAudioChunk interface of the 'WebCodecs API' represents a chunk of encoded audio data. EncodedAudioChunkInit EncodedAudioChunkMetadata EncodedVideoChunk The EncodedVideoChunk interface of the 'WebCodecs API' represents a chunk of encoded video data. EncodedVideoChunkInit EncodedVideoChunkMetadata ErrorEvent The ErrorEvent interface represents events providing information related to errors in scripts or in files. ErrorEventInit Event The Event interface represents an event which takes place in the DOM. EventCounts The EventCounts interface of the Performance API provides the number of events that have been dispatched for each event type. EventInit EventListenerOptions EventModifierInit EventSource The EventSource interface is web content&apos;s interface to server-sent events. EventSourceInit EventTarget The EventTarget interface is implemented by objects that can receive events and may have listeners for them. In other words, any target of events implements the three methods associated with this interface. ExtendableEvent The ExtendableEvent interface extends the lifetime of the install and activate events dispatched on the global scope as part of the service worker lifecycle. This ensures that any functional events (like FetchEvent) are not dispatched until it upgrades database schemas and deletes the outdated cache entries. ExtendableEventInit ExtendableMessageEvent The ExtendableMessageEvent interface of the Service Worker API represents the event object of a ServiceWorkerGlobalScope/message_event event fired on a service worker (when a message is received on the ServiceWorkerGlobalScope from another context) — extends the lifetime of such events. ExtendableMessageEventInit External FederatedCredential The FederatedCredential interface of the Credential Management API provides information about credentials from a federated identity provider. A federated identity provider is an entity that a website trusts to correctly authenticate a user, and that provides an API for that purpose. OpenID Connect is an example of a federated identity provider framework. FederatedCredentialInit FederatedCredentialRequestOptions FetchEvent This is the event type for fetch events dispatched on the {{domxref(&quot;ServiceWorkerGlobalScope&quot;, &quot;service worker global scope&quot;, &quot;&quot;, 1)}}. It contains information about the fetch, including the request and how the receiver will treat the response. It provides the RespondWith(Task<Response>) method, which allows us to provide a response to this fetch. FetchEventInit File The File interface provides information about files and allows JavaScript in a web page to access their content. FileList An object of this type is returned by the files property of the HTML input element; this lets you access the list of files selected with the &lt;input type=&quot;file&quot;&gt; element. It&apos;s also used for a list of files dropped into web content when using the drag and drop API; see the DataTransfer object for details on this usage. FilePropertyBag FileReader The FileReader object lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read. FileReaderSync The FileReaderSync interface allows to read File or Blob objects synchronously. FileSystemCreateWritableOptions FileSystemDirectoryHandle The FileSystemDirectoryHandle interface of the 'File System Access API' provides a handle to a file system directory. FileSystemFileHandle The FileSystemFileHandle interface of the {{domxref(&quot;File System Access API&quot;, &quot;File System Access API&quot;, &quot;&quot;, \"nocode\")}} represents a handle to a file system entry. The interface is accessed through the 'window.ShowOpenFilePicker' method. FileSystemGetDirectoryOptions FileSystemGetFileOptions FileSystemHandle The FileSystemHandle interface of the 'File System Access API' is an object which represents a file or directory entry. Multiple handles can represent the same entry. For the most part you do not work with FileSystemHandle directly but rather its child interfaces 'FileSystemFileHandle' and 'FileSystemDirectoryHandle'. FileSystemReadWriteOptions FileSystemRemoveOptions FileSystemSyncAccessHandle The FileSystemSyncAccessHandle interface of the {{domxref(&quot;File System Access API&quot;, &quot;File System Access API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a synchronous handle to a file system entry. The synchronous nature of the file reads and writes allows for higher performance for critical methods in contexts where asynchronous operations come with high overhead, e.g., WebAssembly. FileSystemWritableFileStream The FileSystemWritableFileStream interface of the 'File System Access API' is a 'WritableStream' object with additional convenience methods, which operates on a single file on disk. The interface is accessed through the 'FileSystemFileHandle.CreateWritable' method. FocusEvent The FocusEvent interface represents focus-related events, including Element/focus_event, Element/blur_event, Element/focusin_event, and Element/focusout_event. FocusEventInit FocusOptions FocusableAreasOption FontFace The FontFace interface of the CSS Font Loading API represents a single usable font face. FontFaceDescriptors FontFaceFeatures FontFacePalette FontFacePalettes FontFaceSet The FontFaceSet interface of the CSS Font Loading API manages the loading of font-faces and querying of their download status. FontFaceSetLoadEvent The FontFaceSetLoadEvent interface of the CSS Font Loading API represents events fired at a FontFaceSet after it starts loading font faces. FontFaceSetLoadEventInit FontFaceVariationAxis FontFaceVariations FormData The FormData interface provides a way to construct a set of key/value pairs representing form fields and their values, which can be sent using the Fetch, Send(Union71?) or Navigator.SendBeacon methods. It uses the same format a form would use if the encoding type were set to &quot;multipart/form-data&quot;. FormDataEvent The FormDataEvent interface represents a formdata event — such an event is fired on an HTMLFormElement object after the entry list representing the form's data is constructed. This happens when the form is submitted, but can also be triggered by the invocation of a FormData(HTMLFormElement, HTMLElement?) constructor. FormDataEventInit FragmentResultOptions FullscreenOptions GM GM.Info GM.Info.Script GPU The GPU interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} is the starting point for using WebGPU. It can be used to return a GPUAdapter from which you can request devices, configure features and limits, and more. GPUAdapter The GPUAdapter interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents a GPU adapter. From this you can request a GPUDevice, adapter info, features, and limits. GPUAdapterInfo The GPUAdapterInfo interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} contains identifying information about a GPUAdapter. GPUBindGroup The GPUBindGroup interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} is based on a GPUBindGroupLayout and defines a set of resources to be bound together in a group and how those resources are used in shader stages. GPUBindGroupDescriptor GPUBindGroupEntry GPUBindGroupLayout The GPUBindGroupLayout interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} defines the structure and purpose of related GPU resources such as buffers that will be used in a pipeline, and is used as a template when creating GPUBindGroups. GPUBindGroupLayoutDescriptor GPUBindGroupLayoutEntry GPUBlendComponent GPUBlendState GPUBuffer The GPUBuffer interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a block of memory that can be used to store raw data to use in GPU operations. GPUBufferBinding GPUBufferBindingLayout GPUBufferDescriptor GPUBufferUsage The usage read-only property of the GPUBuffer interface contains the {{glossary(\"bitwise flags\")}} representing the allowed usages of the GPUBuffer. GPUCanvasConfiguration GPUCanvasContext The GPUCanvasContext interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents the WebGPU rendering context of a {{htmlelement(\"canvas\")}} element, returned via an GetContext(string, dynamic) call with a contextType of &quot;webgpu&quot;. GPUColorDict GPUColorTargetState GPUColorWrite GPUCommandBuffer The GPUCommandBuffer interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents a pre-recorded list of GPU commands that can be submitted to a GPUQueue for execution. GPUCommandBufferDescriptor GPUCommandEncoder The GPUCommandEncoder interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a command encoder, used to encode commands to be issued to the GPU. GPUCommandEncoderDescriptor GPUCompilationInfo The GPUCompilationInfo interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents an array of GPUCompilationMessage objects generated by the GPU shader module compiler to help diagnose problems with shader code. GPUCompilationMessage The GPUCompilationMessage interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a single informational, warning, or error message generated by the GPU shader module compiler. GPUComputePassDescriptor GPUComputePassEncoder The GPUComputePassEncoder interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} encodes commands related to controlling the compute shader stage, as issued by a GPUComputePipeline. It forms part of the overall encoding activity of a GPUCommandEncoder. GPUComputePassTimestampWrites GPUComputePipeline The GPUComputePipeline interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents a pipeline that controls the compute shader stage and can be used in a GPUComputePassEncoder. GPUComputePipelineDescriptor GPUDepthStencilState GPUDevice The GPUDevice interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a logical GPU device. This is the main interface through which the majority of WebGPU functionality is accessed. GPUDeviceDescriptor GPUDeviceLostInfo The GPUDeviceLostInfo interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents the object returned when the Lost {{jsxref(\"Promise\")}} resolves. This provides information as to why a device has been lost. GPUError The GPUError interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} is the base interface for errors surfaced by PopErrorScope() and the GPUDevice.Uncapturederror_event event. GPUExtent3DDict GPUExternalTexture The GPUExternalTexture interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents a wrapper object containing an HTMLVideoElement snapshot that can be used as a texture in GPU rendering operations. GPUExternalTextureBindingLayout GPUExternalTextureDescriptor GPUFragmentState GPUImageCopyBuffer GPUImageCopyExternalImage GPUImageCopyTexture GPUImageCopyTextureTagged GPUImageDataLayout GPUInternalError The GPUInternalError interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} describes an application error indicating that an operation did not pass the WebGPU API&apos;s validation constraints. GPUMapMode GPUMultisampleState GPUObjectDescriptorBase GPUOrigin2DDict GPUOrigin3DDict GPUOutOfMemoryError The GPUOutOfMemoryError interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} describes an out-of-memory (oom) error indicating that there was not enough free memory to complete the requested operation. GPUPipelineDescriptorBase GPUPipelineError The GPUPipelineError interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} describes a pipeline failure. This is the value received when a {{jsxref(\"Promise\")}} returned by a CreateComputePipelineAsync(GPUComputePipelineDescriptor) or CreateRenderPipelineAsync(GPURenderPipelineDescriptor) call rejects. GPUPipelineErrorInit GPUPipelineLayout The GPUPipelineLayout interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} defines the GPUBindGroupLayouts used by a pipeline. GPUBindGroups used with the pipeline during command encoding must have compatible GPUBindGroupLayouts. GPUPipelineLayoutDescriptor GPUPrimitiveState GPUProgrammableStage GPUQuerySet The GPUQuerySet interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} is used to record the results of queries on passes, such as occlusion or timestamp queries. GPUQuerySetDescriptor GPUQueue The GPUQueue interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} controls execution of encoded commands on the GPU. GPUQueueDescriptor GPURenderBundle The GPURenderBundle interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a container for pre-recorded bundles of commands. GPURenderBundleDescriptor GPURenderBundleEncoder The GPURenderBundleEncoder interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} is used to pre-record bundles of commands. GPURenderBundleEncoderDescriptor GPURenderPassColorAttachment GPURenderPassDepthStencilAttachment GPURenderPassDescriptor GPURenderPassEncoder The GPURenderPassEncoder interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} encodes commands related to controlling the vertex and fragment shader stages, as issued by a GPURenderPipeline. It forms part of the overall encoding activity of a GPUCommandEncoder. GPURenderPassLayout GPURenderPassTimestampWrites GPURenderPipeline The GPURenderPipeline interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents a pipeline that controls the vertex and fragment shader stages and can be used in a GPURenderPassEncoder or GPURenderBundleEncoder. GPURenderPipelineDescriptor GPURequestAdapterOptions GPUSampler The GPUSampler interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents an object that can control how shaders transform and filter texture resource data. GPUSamplerBindingLayout GPUSamplerDescriptor GPUShaderModule The GPUShaderModule interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents an internal shader module object, a container for WGSL shader code that can be submitted to the GPU for execution by a pipeline. GPUShaderModuleCompilationHint GPUShaderModuleDescriptor GPUShaderStage GPUStencilFaceState GPUStorageTextureBindingLayout GPUSupportedFeatures The GPUSupportedFeatures interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} is a Set-like object that describes additional functionality supported by a GPUAdapter. GPUSupportedLimits The GPUSupportedLimits interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} describes the limits supported by a GPUAdapter. GPUTexture The GPUTexture interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a container used to store 1D, 2D, or 3D arrays of data, such as images, to use in GPU rendering operations. GPUTextureBindingLayout GPUTextureDescriptor GPUTextureUsage The usage read-only property of the GPUTexture interface is the {{glossary(\"bitwise flags\")}} representing the allowed usages of the GPUTexture. GPUTextureView The GPUTextureView interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} represents a view into a subset of the texture resources defined by a particular GPUTexture. GPUTextureViewDescriptor GPUUncapturedErrorEvent The GPUUncapturedErrorEvent interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, \"nocode\")}} is the event object type for the GPUDevice GPUDevice.Uncapturederror_event event, used for telemetry and to report unexpected errors. GPUUncapturedErrorEventInit GPUValidationError The GPUValidationError interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} describes an application error indicating that an operation did not pass the WebGPU API&apos;s validation constraints. GPUVertexAttribute GPUVertexBufferLayout GPUVertexState GainNode The GainNode interface represents a change in volume. It is an AudioNode audio-processing module that causes a given gain to be applied to the input data before its propagation to the output. A GainNode always has exactly one input and one output, both with the same number of channels. GainOptions GenerateTestReportParameters GeolocationReadingValues GeolocationSensor GeolocationSensorOptions GeolocationSensorReading GetNotificationOptions GetRootNodeOptions Global GlobalDescriptor GlobalObject GlobalObject.GlobalThis GlobalObject.Infinity GlobalObject.NaN GlobalObject.Undefined GravityReadingValues GravitySensor The GravitySensor interface of the Sensor APIs provides on each reading the gravity applied to the device along all three axes. GroupEffect Gyroscope The Gyroscope interface of the Sensor APIs provides on each reading the angular velocity of the device along all three axes. GyroscopeSensorOptions HTMLAllCollection HTMLAnchorElement The HTMLAnchorElement interface represents hyperlink elements and provides special properties and methods (beyond those of the regular HTMLElement object interface that they inherit from) for manipulating the layout and presentation of such elements. This interface corresponds to &lt;a&gt; element; not to be confused with &lt;link&gt;, which is represented by HTMLLinkElement) HTMLAreaElement The HTMLAreaElement interface provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{HtmlElement(\"area\")}} elements. HTMLAudioElement The HTMLAudioElement interface provides access to the properties of audio elements, as well as methods to manipulate them. HTMLBRElement The HTMLBRElement interface represents an HTML line break element ({{htmlelement(\"br\")}}). It inherits from HTMLElement. HTMLBaseElement The HTMLBaseElement interface contains the base URI for a document. This object inherits all of the properties and methods as described in the HTMLElement interface. HTMLBodyElement The HTMLBodyElement interface provides special properties (beyond those inherited from the regular HTMLElement interface) for manipulating {{HtmlElement(\"body\")}} elements. HTMLButtonElement The HTMLButtonElement interface provides properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"button\")}} elements. HTMLCanvasElement The HTMLCanvasElement interface provides properties and methods for manipulating the layout and presentation of canvas elements. The HTMLCanvasElement interface also inherits the properties and methods of the HTMLElement interface. HTMLCollection The HTMLCollection interface represents a generic collection (array-like object similar to Functions/arguments) of elements (in document order) and offers methods and properties for selecting from the list. HTMLDListElement The HTMLDListElement interface provides special properties (beyond those of the regular HTMLElement interface it also has available to it by inheritance) for manipulating definition list ({{HtmlElement(\"dl\")}}) elements. HTMLDataElement The HTMLDataElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"data\")}} elements. HTMLDataListElement The HTMLDataListElement interface provides special properties (beyond the HTMLElement object interface it also has available to it by inheritance) to manipulate {{ HTMLElement(\"datalist\") }} elements and their content. HTMLDetailsElement The HTMLDetailsElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"details\")}} elements. HTMLDialogElement The HTMLDialogElement interface provides methods to manipulate {{HTMLElement(\"dialog\")}} elements. It inherits properties and methods from the HTMLElement interface. HTMLDirectoryElement HTMLDivElement The HTMLDivElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HtmlElement(\"div\")}} elements. HTMLElement They are grouped by function to help you find what you have in mind easily. An alphabetical list of all elements is provided in the sidebar on every element&apos;s page as well as this one. HTMLEmbedElement The HTMLEmbedElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"embed\")}} elements. HTMLFieldSetElement The HTMLFieldSetElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{ HTMLElement(\"fieldset\") }} elements. HTMLFontElement IMPORTANT Deprecated Implements the document object model (DOM) representation of the font element. The HTML Font Element font defines the font size, font face and color of text. HTMLFormControlsCollection The HTMLFormControlsCollection interface represents a collection of HTML form control elements, returned by the HTMLFormElement interface's Elements property. HTMLFormElement The HTMLFormElement interface represents a form element in the DOM. It allows access to—and, in some cases, modification of—aspects of the form, as well as access to its component elements. HTMLFrameElement HTMLFrameSetElement IMPORTANT Deprecated The HTMLFrameSetElement interface provides special properties (beyond those of the regular HTMLElement interface they also inherit) for manipulating {{HTMLELEment(\"frameset\")}} elements. HTMLHRElement The HTMLHRElement interface provides special properties (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"hr\")}} elements. HTMLHeadElement The HTMLHeadElement interface contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the HTMLElement interface. HTMLHeadingElement The HTMLHeadingElement interface represents the different heading elements, &lt;h1&gt; through &lt;h6&gt;. It inherits methods and properties from the HTMLElement interface. HTMLHtmlElement The HTMLHtmlElement interface serves as the root node for a given HTML document. This object inherits the properties and methods described in the HTMLElement interface. HTMLIFrameElement The HTMLIFrameElement interface provides special properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of inline frame elements. HTMLImageElement The HTMLImageElement interface represents an HTML img element, providing the properties and methods used to manipulate image elements. HTMLInputElement The HTMLInputElement interface provides special properties and methods for manipulating the options, layout, and presentation of input elements. HTMLLIElement The HTMLLIElement interface exposes specific properties and methods (beyond those defined by regular HTMLElement interface it also has available to it by inheritance) for manipulating list elements. HTMLLabelElement The HTMLLabelElement interface gives access to properties specific to {{HTMLElement(\"label\")}} elements. It inherits methods and properties from the base HTMLElement interface. HTMLLegendElement The HTMLLegendElement is an interface allowing to access properties of the {{HTMLElement(\"legend\")}} elements. It inherits properties and methods from the HTMLElement interface. HTMLLinkElement The HTMLLinkElement interface represents reference information for external resources and the relationship of those resources to a document and vice versa (corresponds to &lt;link&gt; element; not to be confused with &lt;a&gt;, which is represented by HTMLAnchorElement). This object inherits all of the properties and methods of the HTMLElement interface. HTMLMapElement The HTMLMapElement interface provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of map elements. HTMLMarqueeElement IMPORTANT Deprecated The HTMLMarqueeElement interface provides methods to manipulate marquee elements. HTMLMediaElement The HTMLMediaElement interface adds to HTMLElement the properties and methods needed to support basic media-related capabilities that are common to audio and video. HTMLMenuElement The HTMLMenuElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"menu\")}} elements. HTMLMetaElement The HTMLMetaElement interface contains descriptive metadata about a document provided in HTML as &lt;meta&gt; elements. This interface inherits all of the properties and methods described in the HTMLElement interface. HTMLMeterElement HTMLModElement The HTMLModElement interface provides special properties (beyond the regular methods and properties available through the HTMLElement interface they also have available to them by inheritance) for manipulating modification elements, that is {{HTMLElement(\"del\")}} and {{HTMLElement(\"ins\")}}. HTMLOListElement The HTMLOListElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating ordered list elements. HTMLObjectElement The HTMLObjectElement interface provides special properties and methods (beyond those on the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{HTMLElement(\"object\")}} element, representing external resources. HTMLOptGroupElement The HTMLOptGroupElement interface provides special properties and methods (beyond the regular HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of {{HTMLElement(\"optgroup\")}} elements. HTMLOptionElement The HTMLOptionElement interface represents {{HTMLElement(\"option\")}} elements and inherits all properties and methods of the HTMLElement interface. HTMLOptionsCollection The HTMLOptionsCollection interface represents a collection of &lt;option&gt; HTML elements (in document order) and offers methods and properties for selecting from the list as well as optionally altering its items. This object is returned only by the options property of select. HTMLOutputElement The HTMLOutputElement interface provides properties and methods (beyond those inherited from HTMLElement) for manipulating the layout and presentation of {{HTMLElement(\"output\")}} elements. HTMLParagraphElement The HTMLParagraphElement interface provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating {{HTMLElement(\"p\")}} elements. HTMLParamElement IMPORTANT Deprecated The HTMLParamElement interface provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating {{HTMLElement(\"param\")}} elements, representing a pair of a key and a value that acts as a parameter for an {{HTMLElement(\"object\")}} element. HTMLPictureElement The HTMLPictureElement interface represents a picture HTML element. It doesn't implement specific properties or methods. HTMLPreElement The HTMLPreElement interface exposes specific properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating a block of preformatted text ({{HtmlElement(\"pre\")}}). HTMLProgressElement The HTMLProgressElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{HTMLElement(\"progress\")}} elements. HTMLQuoteElement The HTMLQuoteElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating quoting elements, like {{HTMLElement(\"blockquote\")}} and {{HTMLElement(\"q\")}}, but not the {{HTMLElement(\"cite\")}} element. HTMLScriptElement JavaScript files should be served with the application/javascript MIME type, but browsers are lenient and block them only if the script is served with an image type (image/), video type (video/), audio type (audio/*), or text/csv. If the script is blocked, its element receives an Element/error_event event; otherwise, it receives a Window/load_event event. HTMLSelectElement The HTMLSelectElement interface represents a {{HTMLElement(\"select\")}} HTML Element. These elements also share all of the properties and methods of other HTML elements via the HTMLElement interface. HTMLSlotElement The HTMLSlotElement interface of the Shadow DOM API enables access to the name and assigned nodes of an HTML slot element. HTMLSourceElement The HTMLSourceElement interface provides special properties (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating {{htmlelement(\"source\")}} elements. HTMLSpanElement The HTMLSpanElement interface represents a {{HTMLElement(\"span\")}} element and derives from the HTMLElement interface, but without implementing any additional properties or methods. HTMLStyleElement The HTMLStyleElement interface represents a {{HTMLElement(\"style\")}} element. It inherits properties and methods from its parent, HTMLElement. HTMLTableCaptionElement The HTMLTableCaptionElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating table {{HTMLElement(\"caption\")}} elements. HTMLTableCellElement The HTMLTableCellElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of table cells, either header cells ({{HTMLElement(\"th\")}})) or data cells ({{HTMLElement(\"td\")}}), in an HTML document. HTMLTableColElement The HTMLTableColElement interface provides properties for manipulating single or grouped table column elements. HTMLTableElement The HTMLTableElement interface provides special properties and methods (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating the layout and presentation of tables in an HTML document. HTMLTableRowElement The HTMLTableRowElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table. HTMLTableSectionElement The HTMLTableSectionElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies ({{HTMLElement(\"thead\")}}, {{HTMLElement(\"tfoot\")}}, and {{HTMLElement(\"tbody\")}}, respectively) in an HTML table. HTMLTemplateElement The HTMLTemplateElement interface enables access to the contents of an HTML template element. HTMLTextAreaElement The HTMLTextAreaElement interface provides special properties and methods for manipulating the layout and presentation of textarea elements. HTMLTimeElement The HTMLTimeElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"time\")}} elements. HTMLTitleElement The HTMLTitleElement interface is implemented by a document's {{ HTMLElement( \"title\" )}}. This element inherits all of the properties and methods of the HTMLElement interface. HTMLTrackElement The HTMLTrackElement interface represents an HTML {{HTMLElement(\"track\")}} element within the DOM. This element can be used as a child of either {{HTMLElement(\"audio\")}} or {{HTMLElement(\"video\")}} to specify a text track containing information such as closed captions or subtitles. HTMLUListElement The HTMLUListElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating unordered list ({{HTMLElement(\"ul\")}}) elements. HTMLUnknownElement The HTMLUnknownElement interface represents an invalid HTML element and derives from the HTMLElement interface, but without implementing any additional properties or methods. HTMLVideoElement The list of supported media formats varies from one browser to the other. You should either provide your video in a single format that all the relevant browsers supports, or provide multiple video sources in enough different formats that all the browsers you need to support are covered. HashChangeEvent The HashChangeEvent interface represents events that fire when the fragment identifier of the URL has changed. HashChangeEventInit Headers The Headers interface of the Fetch API allows you to perform various actions on HTTP request and response headers. These actions include retrieving, setting, adding to, and removing headers from the list of the request&apos;s headers. Highlight The Highlight interface of the CSS Custom Highlight API is used to represent a collection of Range instances to be styled using the API. HighlightRegistry The HighlightRegistry interface of the CSS Custom Highlight API is used to register Highlight objects to be styled using the API. It is accessed via Highlights. History The History interface allows manipulation of the browser session history, that is the pages visited in the tab or frame that the current page is loaded in. IDBCursor NOTE Note: Not to be confused with IDBCursorWithValue which is just an IDBCursor interface with an additional value property. IDBCursorWithValue The IDBCursorWithValue interface of the IndexedDB API represents a cursor for traversing or iterating over multiple records in a database. It is the same as the IDBCursor, except that it includes the value property. IDBDatabase The IDBDatabase interface of the IndexedDB API provides a connection to a database; you can use an IDBDatabase object to open a transaction on your database then create, manipulate, and delete objects (data) in that database. The interface provides the only way to get and manage versions of the database. IDBDatabaseInfo IDBFactory The IDBFactory interface of the IndexedDB API lets applications asynchronously access the indexed databases. The object that implements the interface is window.indexedDB. You open — that is, create and access — and delete a database with this object, and not directly with IDBFactory. IDBIndex IDBIndex interface of the IndexedDB API provides asynchronous access to an index in a database. An index is a kind of object store for looking up records in another object store, called the referenced object store. You use this interface to retrieve data. IDBIndexParameters IDBKeyRange The IDBKeyRange interface of the IndexedDB API represents a continuous interval over some data type that is used for keys. Records can be retrieved from IDBObjectStore and IDBIndex objects using keys or a range of keys. You can limit the range using lower and upper bounds. For example, you can iterate over all values of a key in the value range A–Z. IDBObjectStore The IDBObjectStore interface of the IndexedDB API represents an object store in a database. Records within an object store are sorted according to their keys. This sorting enables fast insertion, look-up, and ordered retrieval. IDBObjectStoreParameters IDBOpenDBRequest The IDBOpenDBRequest interface of the IndexedDB API provides access to the results of requests to open or delete databases (performed using Open(string, ulong) and DeleteDatabase(string)), using specific event handler attributes. IDBRequest The IDBRequest interface of the IndexedDB API provides access to results of asynchronous requests to databases and database objects using event handler attributes. Each reading and writing operation on a database is done using a request. IDBTransaction The IDBTransaction interface of the IndexedDB API provides a static, asynchronous transaction on a database using event handler attributes. All reading and writing of data is done within transactions. You use IDBDatabase to start transactions, IDBTransaction to set the mode of the transaction (e.g. is it readonly or readwrite), and you access an IDBObjectStore to make a request. You can also use an IDBTransaction object to abort transactions. IDBTransactionOptions IDBVersionChangeEvent The IDBVersionChangeEvent interface of the IndexedDB API indicates that the version of the database has changed, as the result of an IDBOpenDBRequest.Upgradeneeded_event event handler function. IDBVersionChangeEventInit IIRFilterNode The IIRFilterNode interface of the Web Audio API is a AudioNode processor which implements a general infinite impulse response (IIR) filter; this type of filter can be used to implement tone control devices and graphic equalizers as well. It lets the parameters of the filter response be specified, so that it can be tuned as needed. IIRFilterOptions ImageBitmap The ImageBitmap interface represents a bitmap image which can be drawn to a {{HTMLElement(\"canvas\")}} without undue latency. It can be created from a variety of source objects using the CreateImageBitmap factory method. ImageBitmap provides an asynchronous and resource efficient pathway to prepare textures for rendering in WebGL. ImageBitmapOptions ImageBitmapRenderingContext The ImageBitmapRenderingContext interface is a canvas rendering context that provides the functionality to replace the canvas's contents with the given ImageBitmap. Its context id (the first argument to GetContext(string, dynamic) or GetContext(OffscreenRenderingContextId, dynamic)) is &quot;bitmaprenderer&quot;. ImageBitmapRenderingContextSettings ImageCapture The ImageCapture interface of the MediaStream Image Capture API provides methods to enable the capture of images or photos from a camera or other photographic device. It provides an interface for capturing images from a photographic device referenced through a valid MediaStreamTrack. ImageData The ImageData interface represents the underlying pixel data of an area of a canvas element. ImageDataSettings ImageDecodeOptions ImageDecodeResult ImageDecoder The ImageDecoder interface of the 'WebCodecs API' provides a way to unpack and decode encoded image data. ImageDecoderInit ImageEncodeOptions ImageTrack The ImageTrack interface of the 'WebCodecs API' represents an individual image track. ImageTrackList The ImageTrackList interface of the 'WebCodecs API' represents a list of image tracks. InputEvent The InputEvent interface represents an event notifying the user of editable content changes. InputEventInit Instance IntersectionObserver The IntersectionObserver interface of the Intersection Observer API provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's 'viewport'. The ancestor element or viewport is referred to as the root. IntersectionObserverEntry The IntersectionObserverEntry interface of the Intersection Observer API describes the intersection between the target element and its root container at a specific moment of transition. IntersectionObserverEntryInit IntersectionObserverInit IntrinsicSizes IntrinsicSizesRequest IntrinsicSizesResultOptions KeySystemTrackConfiguration KeyboardEvent KeyboardEvent objects describe a user interaction with the keyboard; each event describes a single interaction between the user and a key (or combination of a key with modifier keys) on the keyboard. The event type (Element/keydown_event, Element/keypress_event, or Element/keyup_event) identifies what kind of keyboard activity occurred. KeyboardEventInit KeyframeEffect The KeyframeEffect interface of the Web Animations API lets us create sets of animatable properties and values, called keyframes. These can then be played using the Animation() constructor. KeyframeEffectOptions LargestContentfulPaint The LargestContentfulPaint interface provides timing information about the largest image or text paint before user input on a web page. LayoutChild LayoutConstraints LayoutConstraintsOptions LayoutEdgeSizes LayoutEdges LayoutFragment LayoutFragmentRequest LayoutOptions LayoutWorkletGlobalScope LinearAccelerationReadingValues LinearAccelerationSensor The LinearAccelerationSensor interface of the Sensor APIs provides on each reading the acceleration applied to the device along all three axes, but without the contribution of gravity. LinkError Location The Location interface represents the location (URL) of the object it is linked to. Changes done on it are reflected on the object it relates to. Both the Document and Window interface have such a linked Location, accessible via Location and Location respectively. Lock The Lock interface of the Web Locks API provides the name and mode of a lock. This may be a newly requested lock that is received in the callback to 'LockManager.Request', or a record of an active or queued lock returned by 'LockManager.Query'. LockInfo LockManager The LockManager interface of the Web Locks API provides methods for requesting a new 'Lock' object and querying for an existing Lock object. To get an instance of LockManager, call 'navigator.Locks'. LockManagerSnapshot LockOptions MIDIAccess The MIDIAccess interface of the Web MIDI API provides methods for listing MIDI input and output devices, and obtaining access to those devices. MIDIConnectionEvent The MIDIConnectionEvent interface of the Web MIDI API is the event passed to the MIDIAccess.Statechange_event event of the MIDIAccess interface and the MIDIPort.Statechange_event event of the MIDIPort interface. This occurs any time a new port becomes available, or when a previously available port becomes unavailable. For example, this event is fired whenever a MIDI device is either plugged in to or unplugged from a computer. MIDIConnectionEventInit MIDIInput The MIDIInput interface of the Web MIDI API receives messages from a MIDI input port. MIDIInputMap The MIDIInputMap read-only interface of the Web MIDI API provides the set of MIDI input ports that are currently available. MIDIMessageEvent The MIDIMessageEvent interface of the Web MIDI API represents the event passed to the MIDIInput.Midimessage_event event of the MIDIInput interface. A midimessage event is fired every time a MIDI message is sent from a device represented by a MIDIInput, for example when a MIDI keyboard key is pressed, a knob is tweaked, or a slider is moved. MIDIMessageEventInit MIDIOptions MIDIOutput The MIDIOutput interface of the 'Web MIDI API' provides methods to add messages to the queue of an output device, and to clear the queue of messages. MIDIOutputMap The MIDIOutputMap read-only interface of the Web MIDI API provides the set of MIDI output ports that are currently available. MIDIPort The MIDIPort interface of the 'Web MIDI API' represents a MIDI input or output port. ML MLActivation MLBatchNormalizationOptions MLBufferResourceView MLClampOptions MLCommandEncoder MLComputeResult MLContext MLContextOptions MLConv2dOptions MLConvTranspose2dOptions MLEluOptions MLGemmOptions MLGraph MLGraphBuilder MLGruCellOptions MLGruOptions MLHardSigmoidOptions MLInstanceNormalizationOptions MLLeakyReluOptions MLLinearOptions MLLstmCellOptions MLLstmOptions MLOperand MLOperandDescriptor MLPadOptions MLPool2dOptions MLReduceOptions MLResample2dOptions MLSoftplusOptions MLSplitOptions MLSqueezeOptions MLTransposeOptions Magnetometer The Magnetometer interface of the Sensor APIs provides information about the magnetic field as detected by the device&apos;s primary magnetometer sensor. MagnetometerReadingValues MagnetometerSensorOptions Math MediaCapabilities The MediaCapabilities interface of the Media Capabilities API provides information about the decoding abilities of the device, system and browser. The API can be used to query the browser about the decoding abilities of the device based on codecs, profile, resolution, and bitrates. The information can be used to serve optimal media streams to the user and determine if playback should be smooth and power efficient. MediaCapabilitiesDecodingInfo The MediaCapabilities.decodingInfo() method, part of the Media Capabilities API, returns a promise with the tested media configuration&apos;s capabilities info. This contains the three boolean properties supported, smooth, and powerefficient, which describe whether decoding the media described would be supported, smooth, and powerefficient. MediaCapabilitiesEncodingInfo The MediaCapabilities.encodingInfo() method, part of the MediaCapabilities interface of the Media Capabilities API, returns a promise with the tested media configuration&apos;s capabilities information. This contains the three boolean properties supported, smooth, and powerefficient, which describe how compatible the device is with the type of media. MediaCapabilitiesInfo MediaCapabilitiesKeySystemConfiguration MediaConfiguration MediaDecodingConfiguration MediaElementAudioSourceNode The MediaElementAudioSourceNode interface represents an audio source consisting of an HTML {{ htmlelement(\"audio\") }} or {{ htmlelement(\"video\") }} element. It is an AudioNode that acts as an audio source. MediaElementAudioSourceOptions MediaEncodingConfiguration MediaError The MediaError interface represents an error which occurred while handling media in an HTML media element based on HTMLMediaElement, such as {{HTMLElement(\"audio\")}} or {{HTMLElement(\"video\")}}. MediaImage The Media Session API&apos;s MediaImage dictionary describes the images associated with a media resource's MediaMetadata. MediaList The MediaList interface represents the media queries of a stylesheet, e.g. those set using a link element's media attribute. MediaMetadata The MediaMetadata interface of the Media Session API allows a web page to provide rich media metadata for display in a platform UI. MediaMetadataInit MediaPositionState MediaRecorder The MediaRecorder interface of the MediaStream Recording API provides functionality to easily record media. It is created using the MediaRecorder(Unsupported, MediaRecorderOptions) constructor. MediaRecorderOptions MediaSession The MediaSession interface of the Media Session API allows a web page to provide custom behaviors for standard media playback interactions, and to report metadata that can be sent by the user agent to the device or operating system for presentation in standardized user interface elements. MediaSessionActionDetails MediaSettingsRange MediaStreamAudioDestinationNode The MediaStreamAudioDestinationNode interface represents an audio destination consisting of a WebRTC MediaStream with a single AudioMediaStreamTrack, which can be used in a similar way to a MediaStream obtained from {{domxref(&quot;MediaDevices.getUserMedia&quot;, &quot;navigator.mediaDevices.getUserMedia()&quot;)}}. MediaStreamAudioSourceNode The MediaStreamAudioSourceNode interface is a type of AudioNode which operates as an audio source whose media is received from a MediaStream obtained using the WebRTC or Media Capture and Streams APIs. MediaStreamAudioSourceOptions MediaStreamTrackAudioSourceNode The MediaStreamTrackAudioSourceNode interface is a type of AudioNode which represents a source of audio data taken from a specific MediaStreamTrack obtained through the WebRTC or Media Capture and Streams APIs. MediaStreamTrackAudioSourceOptions MediaStreamTrackProcessor The MediaStreamTrackProcessor interface of the 'Insertable Streams for MediaStreamTrack API' consumes a MediaStreamTrack object's source and generates a stream of media frames. MediaStreamTrackProcessorInit MediaTrackCapabilities MediaTrackConstraintSet MediaTrackSettings The MediaTrackSettings dictionary is used to return the current values configured for each of a MediaStreamTrack's settings. These values will adhere as closely as possible to any constraints previously described using a MediaTrackConstraints object and set using MediaStreamTrack.ApplyConstraints, and will adhere to the default constraints for any properties whose constraints haven't been changed, or whose customized constraints couldn't be matched. MediaTrackSupportedConstraints The MediaTrackSupportedConstraints dictionary establishes the list of constrainable properties recognized by the {{Glossary(\"user agent\")}} or browser in its implementation of the MediaStreamTrack object. An object conforming to MediaTrackSupportedConstraints is returned by MediaDevices.GetSupportedConstraints. Memory MemoryDescriptor MessageChannel The MessageChannel interface of the Channel Messaging API allows us to create a new message channel and send data through it via its two MessagePort properties. MessageEvent The MessageEvent interface represents a message received by a target object. MessageEventInit MessagePort The MessagePort interface of the Channel Messaging API represents one of the two ports of a MessageChannel, allowing messages to be sent from one port and listening out for them arriving at the other. MimeType IMPORTANT Deprecated The MimeType interface provides contains information about a MIME type associated with a particular plugin. Navigator.MimeTypes returns an array of this object. MimeTypeArray IMPORTANT Deprecated The MimeTypeArray interface returns an array of 'MimeType' instances, each of which contains information about a supported browser plugins. This object is returned by Navigator.MimeTypes. Module ModuleExportDescriptor ModuleImportDescriptor MouseEvent The MouseEvent interface represents events that occur due to the user interacting with a pointing device (such as a mouse). Common events using this interface include Element/click_event, Element/dblclick_event, Element/mouseup_event, Element/mousedown_event. MouseEventInit MultiCacheQueryOptions MutationEvent IMPORTANT Deprecated The MutationEvent interface provides event properties that are specific to modifications to the Document Object Model (DOM) hierarchy and nodes. MutationObserver The MutationObserver interface provides the ability to watch for changes being made to the DOM tree. It is designed as a replacement for the older Mutation Events feature, which was part of the DOM3 Events specification. MutationObserverInit MutationRecord The MutationRecord is a read-only interface that represents an individual DOM mutation observed by a MutationObserver. It is the object inside the array passed to the callback of a MutationObserver. NamedNodeMap The NamedNodeMap interface represents a collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array. NavigateEvent The NavigateEvent interface of the {{domxref(&quot;Navigation API&quot;, &quot;Navigation API&quot;, &quot;&quot;, \"nocode\")}} is the event object for the Navigation/navigate_event event, which fires when any type of navigation is initiated (this includes usage of {{domxref(&quot;History API&quot;, &quot;History API&quot;, &quot;&quot;, \"nocode\")}} features like Go(long)). NavigateEvent provides access to information about that navigation, and allows developers to intercept and control the navigation handling. NavigateEventInit Navigation The Navigation interface of the {{domxref(&quot;Navigation API&quot;, &quot;Navigation API&quot;, &quot;&quot;, &quot;nocode&quot;)}} allows control over all navigation actions for the current window in one central place, including initiating navigations programmatically, examining navigation history entries, and managing navigations as they happen. NavigationCurrentEntryChangeEvent The NavigationCurrentEntryChangeEvent interface of the {{domxref(&quot;Navigation API&quot;, &quot;Navigation API&quot;, &quot;&quot;, \"nocode\")}} is the event object for the Navigation/currententrychange_event event, which fires when the CurrentEntry has changed. NavigationCurrentEntryChangeEventInit NavigationDestination The NavigationDestination interface of the {{domxref(&quot;Navigation API&quot;, &quot;Navigation API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents the destination being navigated to in the current navigation. NavigationEvent NavigationEventInit NavigationHistoryEntry The NavigationHistoryEntry interface of the {{domxref(&quot;Navigation API&quot;, &quot;Navigation API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a single navigation history entry. NavigationInterceptOptions NavigationNavigateOptions NavigationOptions NavigationPreloadManager The NavigationPreloadManager interface of the Service Worker API provides methods for managing the preloading of resources in parallel with service worker bootup. NavigationPreloadState NavigationReloadOptions NavigationResult NavigationTransition The NavigationTransition interface of the {{domxref(&quot;Navigation API&quot;, &quot;Navigation API&quot;, &quot;&quot;, \"nocode\")}} represents an ongoing navigation, that is, a navigation that hasn't yet reached the Navigation/navigatesuccess_event or Navigation/navigateerror_event stage. NavigationUpdateCurrentEntryOptions Navigator The Navigator interface represents the state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities. Node In addition, every kind of DOM node is represented by an interface based on Node. These include Attr, CharacterData (which Text, Comment, CDATASection and ProcessingInstruction are all based on), and DocumentType. NodeIterator The NodeIterator interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order. NodeList NodeList objects are collections of nodes, usually returned by properties such as ChildNodes and methods such as Document.QuerySelectorAll. Notification The Notification interface of the Notifications API is used to configure and display desktop notifications to the user. NotificationAction NotificationEvent The parameter passed into the ServiceWorkerGlobalScope.Notificationclick_event handler, the NotificationEvent interface represents a notification click event that is dispatched on the ServiceWorkerGlobalScope of a ServiceWorker. NotificationEventInit NotificationOptions Number NumberPrototype Object ObjectPrototype OfflineAudioCompletionEvent The Web Audio API OfflineAudioCompletionEvent interface represents events that occur when the processing of an OfflineAudioContext is terminated. The OfflineAudioContext/complete_event event uses this interface. OfflineAudioCompletionEventInit OfflineAudioContext The OfflineAudioContext interface is an AudioContext interface representing an audio-processing graph built from linked together AudioNodes. In contrast with a standard AudioContext, an OfflineAudioContext doesn't render the audio to the device hardware; instead, it generates it, as fast as it can, and outputs the result to an AudioBuffer. OfflineAudioContextOptions OffscreenCanvas The OffscreenCanvas interface provides a canvas that can be rendered off screen, decoupling the DOM and the Canvas API so that the canvas element is no longer entirely dependent on the DOM. Rendering operations can also be run inside a worker context, allowing you to run some tasks in a separate thread and avoid heavy work on the main thread. OffscreenCanvasRenderingContext2D The OffscreenCanvasRenderingContext2D interface is a CanvasRenderingContext2D rendering context for drawing to the bitmap of an OffscreenCanvas object. It is similar to the CanvasRenderingContext2D object, with the following differences: OptionalEffectTiming OrientationSensor The OrientationSensor interface of the Sensor APIs is the base class for orientation sensors. This interface cannot be used directly. Instead it provides properties and methods accessed by interfaces that inherit from it. OrientationSensorOptions OscillatorNode The OscillatorNode interface represents a periodic waveform, such as a sine wave. It is an AudioScheduledSourceNode audio-processing module that causes a specified frequency of a given wave to be created—in effect, a constant tone. OscillatorOptions PageTransitionEvent The PageTransitionEvent event object is available inside handler functions for the pageshow and pagehide events, fired when a document is being loaded or unloaded. PageTransitionEventInit PaintRenderingContext2D PaintRenderingContext2DSettings PaintSize PaintWorkletGlobalScope The PaintWorkletGlobalScope interface of the CSS Painting API represents the global object available inside a paint Worklet. PannerNode The PannerNode interface defines an audio-processing object that represents the location, direction, and behavior of an audio source signal in a simulated physical space. This AudioNode uses right-hand Cartesian coordinates to describe the source's position as a vector and its orientation as a 3D directional cone. PannerOptions PasswordCredential The interface of the Credential Management API provides information about a username/password pair. In supporting browsers an instance of this class may be passed in the credential member of the init object for global 'fetch'. PasswordCredentialData Path2D The Path2D interface of the Canvas 2D API is used to declare a path that can then be used on a CanvasRenderingContext2D object. The path methods of the CanvasRenderingContext2D interface are also present on this interface, which gives you the convenience of being able to retain and replay your path whenever desired. PaymentCredentialInstrument PaymentRequest The Payment Request API&apos;s PaymentRequest interface is the primary access point into the API, and lets web content and apps accept payments from the end user on behalf of the operator of the site or the publisher of the app. Performance Web performance is the objective measurements and the perceived user experience of load time and runtime. Web performance is how long a site takes to load, become interactive and responsive, and how smooth the content is during user interactions - is the scrolling smooth? are buttons clickable? Are pop-ups quick to load and display, and do they animate smoothly as they do so? Web performance includes both objective measurements like time to load, frames per second, and time to become interactive, and subjective experiences of how long it felt like it took the content to load. PerformanceEventTiming The PerformanceEventTiming interface of the Event Timing API provides insights into the latency of certain event types triggered by user interaction. PerformanceLongTaskTiming The PerformanceLongTaskTiming interface provides information about tasks that occupy the UI thread for 50 milliseconds or more. PerformanceNavigation IMPORTANT Deprecated The legacy PerformanceNavigation interface represents information about how the navigation to the current document was done. PerformanceObserverInit PerformancePaintTiming The PerformancePaintTiming interface provides timing information about &quot;paint&quot; (also called &quot;render&quot;) operations during web page construction. &quot;Paint&quot; refers to conversion of the render tree to on-screen pixels. PerformanceTiming IMPORTANT Deprecated WARNING Warning: This interface is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead. PeriodicWave The PeriodicWave interface defines a periodic waveform that can be used to shape the output of an OscillatorNode. PeriodicWaveConstraints PeriodicWaveOptions PermissionsPolicy PermissionsPolicyViolationReportBody PhotoCapabilities PhotoSettings PictureInPictureEvent The PictureInPictureEvent interface represents picture-in-picture-related events, including HTMLVideoElement/enterpictureinpicture_event, HTMLVideoElement/leavepictureinpicture_event and PictureInPictureWindow/resize_event PictureInPictureEventInit PictureInPictureWindow The PictureInPictureWindow interface represents an object able to programmatically obtain the width and height and resize event of the floating video window. PlaneLayout Plugin IMPORTANT Deprecated The Plugin interface provides information about a browser plugin. PluginArray IMPORTANT Deprecated The PluginArray interface is used to store a list of Plugin objects describing the available plugins; it's returned by the Navigator.Plugins property. The PluginArray is not a JavaScript array, but has the length property and supports accessing individual items using bracket notation (plugins[2]), as well as via item(index) and namedItem(&quot;name&quot;) methods. Point2D PopStateEvent PopStateEvent is an interface for the popstate event. PopStateEventInit ProcessingInstruction The ProcessingInstruction interface represents a processing instruction; that is, a Node which embeds an instruction targeting a specific application but that can be ignored by any other applications which don't recognize the instruction. ProgressEvent The ProgressEvent interface represents events measuring progress of an underlying process, like an HTTP request (for an XMLHttpRequest, or the loading of the underlying resource of an img, audio, video, style or link). ProgressEventInit PromiseRejectionEvent The PromiseRejectionEvent interface represents events which are sent to the global script context when JavaScript Promises are rejected. These events are particularly useful for telemetry and debugging purposes. PromiseRejectionEventInit PropertyDefinition ProximityReadingValues ProximitySensor PublicKeyCredential The PublicKeyCredential interface provides information about a public key / private key pair, which is a credential for logging in to a service using an un-phishable and data-breach resistant asymmetric key pair instead of a password. It inherits from Credential, and is part of the Web Authentication API extension to the Credential Management API. PublicKeyCredentialCreationOptions PublicKeyCredentialDescriptor PublicKeyCredentialEntity PublicKeyCredentialParameters PublicKeyCredentialRequestOptions PublicKeyCredentialRpEntity PublicKeyCredentialUserEntity QueuingStrategy QueuingStrategyInit RTCDataChannel The RTCDataChannel interface represents a network channel which can be used for bidirectional peer-to-peer transfers of arbitrary data. Every data channel is associated with an RTCPeerConnection, and each peer connection can have up to a theoretical maximum of 65,534 data channels (the actual limit may vary from browser to browser). RTCDataChannelInit RTCEncodedAudioFrame RTCEncodedAudioFrameMetadata RTCEncodedVideoFrame RTCEncodedVideoFrameMetadata RTCRtpEncodingParameters An instance of the WebRTC API&apos;s RTCRtpEncodingParameters dictionary describes a single configuration of a {{Glossary(\"codec\")}} for an RTCRtpSender. RTCRtpReceiver The RTCRtpReceiver interface of the WebRTC API manages the reception and decoding of data for a MediaStreamTrack on an RTCPeerConnection. RTCRtpScriptTransform RTCRtpScriptTransformer RTCRtpSender The RTCRtpSender interface provides the ability to control and obtain details about how a particular MediaStreamTrack is encoded and sent to a remote peer. RTCTransformEvent RadioNodeList The RadioNodeList interface represents a collection of radio elements in a form or a fieldset element. Range The Range interface represents a fragment of a document that can contain nodes and parts of text nodes. ReadOptions ReadableByteStreamController The ReadableByteStreamController interface of the Streams API represents a controller for a readable byte stream. It allows control of the state and internal queue of a ReadableStream with an underlying byte source, and enables efficient zero-copy transfer of data from the underlying source to a consumer when the stream's internal queue is empty. ReadableStream The ReadableStream interface of the Streams API represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the Response.Body property of a Response object. ReadableStreamBYOBReader The ReadableStreamBYOBReader interface of the Streams API defines a reader for a ReadableStream that supports zero-copy reading from an underlying byte source. It is used for efficient copying from underlying sources where the data is delivered as an &quot;anonymous&quot; sequence of bytes, such as files. ReadableStreamBYOBRequest The ReadableStreamBYOBRequest interface of the Streams API represents a &quot;pull request&quot; for data from an underlying source that will made as a zero-copy transfer to a consumer (bypassing the stream&apos;s internal queues). ReadableStreamDefaultController The ReadableStreamDefaultController interface of the Streams API represents a controller allowing control of a ReadableStream's state and internal queue. Default controllers are for streams that are not byte streams. ReadableStreamDefaultReader The ReadableStreamDefaultReader interface of the Streams API represents a default reader that can be used to read stream data supplied from a network (such as a fetch request). ReadableStreamGetReaderOptions ReadableStreamIteratorOptions ReadableStreamReadResult ReadableWritablePair RegExp RegExpPrototype RegistrationOptions RelativeOrientationReadingValues RelativeOrientationSensor The RelativeOrientationSensor interface of the Sensor APIs describes the device&apos;s physical orientation without regard to the Earth&apos;s reference coordinate system. Report The Report interface of the Reporting API represents a single report. ReportBody The ReportBody interface of the 'Reporting API' represents the body of a report. Individual report types inherit from this interface, adding specific attributes relevant to the particular report. ReportingObserver The ReportingObserver interface of the Reporting API allows you to collect and access reports. ReportingObserverOptions Request The Request interface of the Fetch API represents a resource request. RequestInit ResizeObservation ResizeObserver The ResizeObserver interface reports changes to the dimensions of an 'Element''s content or border box, or the bounding box of an 'SVGElement'. ResizeObserverEntry The ResizeObserverEntry interface represents the object passed to the 'ResizeObserver.ResizeObserver' constructor's callback function, which allows you to access the new dimensions of the Element or SVGElement being observed. ResizeObserverOptions ResizeObserverSize The ResizeObserverSize interface of the 'Resize Observer API' is used by the ResizeObserverEntry interface to access the box sizing properties of the element being observed. Response The Response interface of the Fetch API represents the response to a request. ResponseInit RuntimeError SFrameTransform SFrameTransformErrorEvent SFrameTransformErrorEventInit SFrameTransformOptions SVGClipPathElement The SVGClipPathElement interface provides access to the properties of clipPath elements, as well as methods to manipulate them. SVGComponentTransferFunctionElement The SVGComponentTransferFunctionElement interface defines a base interface used by the component transfer function interfaces. SVGFEBlendElement The SVGFEBlendElement interface corresponds to the feBlend element. SVGFEColorMatrixElement The SVGFEColorMatrixElement interface corresponds to the feColorMatrix element. SVGFEComponentTransferElement The SVGFEComponentTransferElement interface corresponds to the feComponentTransfer element. SVGFECompositeElement The SVGFECompositeElement interface corresponds to the feComposite element. SVGFEConvolveMatrixElement The SVGFEConvolveMatrixElement interface corresponds to the feConvolveMatrix element. SVGFEDiffuseLightingElement The SVGFEDiffuseLightingElement interface corresponds to the feDiffuseLighting element. SVGFEDisplacementMapElement The SVGFEDisplacementMapElement interface corresponds to the feDisplacementMap element. SVGFEDistantLightElement The SVGFEDistantLightElement interface corresponds to the feDistantLight element. SVGFEDropShadowElement The SVGFEDropShadowElement interface corresponds to the feDropShadow element. SVGFEFloodElement The SVGFEFloodElement interface corresponds to the feFlood element. SVGFEFuncAElement The SVGFEFuncAElement interface corresponds to the feFuncA element. SVGFEFuncBElement The SVGFEFuncBElement interface corresponds to the feFuncB element. SVGFEFuncGElement The SVGFEFuncGElement interface corresponds to the feFuncG element. SVGFEFuncRElement The SVGFEFuncRElement interface corresponds to the feFuncR element. SVGFEGaussianBlurElement The SVGFEGaussianBlurElement interface corresponds to the feGaussianBlur element. SVGFEImageElement The SVGFEImageElement interface corresponds to the feImage element. SVGFEMergeElement The SVGFEMergeElement interface corresponds to the feMerge element. SVGFEMergeNodeElement The SVGFEMergeNodeElement interface corresponds to the feMergeNode element. SVGFEMorphologyElement The SVGFEMorphologyElement interface corresponds to the feMorphology element. SVGFEOffsetElement The SVGFEOffsetElement interface corresponds to the feOffset element. SVGFEPointLightElement The SVGFEPointLightElement interface corresponds to the fePointLight element. SVGFESpecularLightingElement The SVGFESpecularLightingElement interface corresponds to the feSpecularLighting element. SVGFESpotLightElement The SVGFESpotLightElement interface corresponds to the feSpotLight element. SVGFETileElement The SVGFETileElement interface corresponds to the feTile element. SVGFETurbulenceElement The SVGFETurbulenceElement interface corresponds to the feTurbulence element. SVGFilterElement The SVGFilterElement interface provides access to the properties of filter elements, as well as methods to manipulate them. SVGMaskElement The SVGMaskElement interface provides access to the properties of mask elements, as well as methods to manipulate them. Screen The Screen interface represents a screen, usually the one on which the current window is being rendered, and is obtained using Window.Screen. ScreenDetailed ScreenDetails ScriptProcessorNode IMPORTANT Deprecated The ScriptProcessorNode interface allows the generation, processing, or analyzing of audio using JavaScript. ScrollTimeline The ScrollTimeline interface of the {{domxref(&quot;Web Animations API&quot;, &quot;Web Animations API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a scroll progress timeline (see CSS scroll-driven animations for more details). ScrollTimelineOptions SecurePaymentConfirmationRequest SecurityPolicyViolationEvent The SecurityPolicyViolationEvent interface inherits from Event, and represents the event object of an event sent on a document or worker when its content security policy is violated. SecurityPolicyViolationEventInit Sensor The Sensor interface of the Sensor APIs is the base class for all the other sensor interfaces. This interface cannot be used directly. Instead it provides properties, event handlers, and methods accessed by interfaces that inherit from it. SensorErrorEvent The SensorErrorEvent interface of the Sensor APIs provides information about errors thrown by a 'Sensor' or derived interface. SensorErrorEventInit SensorOptions SequenceEffect ServiceWorker The ServiceWorker interface of the Service Worker API provides a reference to a service worker. Multiple browsing context (e.g. pages, workers, etc.) can be associated with the same service worker, each through a unique ServiceWorker object. ServiceWorkerContainer The ServiceWorkerContainer interface of the Service Worker API provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations. ServiceWorkerGlobalScope The ServiceWorkerGlobalScope interface of the Service Worker API represents the global execution context of a service worker. ServiceWorkerRegistration The ServiceWorkerRegistration interface of the Service Worker API represents the service worker registration. You register a service worker to control one or more pages that share the same origin. ShadowRoot The ShadowRoot interface of the Shadow DOM API is the root node of a DOM subtree that is rendered separately from a document&apos;s main DOM tree. ShadowRootInit SharedWorker The SharedWorker interface represents a specific kind of worker that can be accessed from several browsing contexts, such as several windows, iframes or even workers. They implement an interface different than dedicated workers and have a different global scope, SharedWorkerGlobalScope. SharedWorkerGlobalScope The SharedWorkerGlobalScope object (the SharedWorker global scope) is accessible through the Self keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See the complete list of functions available to workers. SpatialNavigationSearchOptions StatefulAnimator StatelessAnimator StaticRange The DOM StaticRange interface extends AbstractRange to provide a method to specify a range of content in the DOM whose contents don't update to reflect changes which occur within the DOM tree. StaticRangeInit StereoPannerNode The StereoPannerNode interface of the Web Audio API represents a simple stereo panner node that can be used to pan an audio stream left or right. It is an AudioNode audio-processing module that positions an incoming audio stream in a stereo image using a low-cost equal-power panning algorithm. StereoPannerOptions Storage The Storage interface of the Web Storage API provides access to a particular domain&apos;s session or local storage. It allows, for example, the addition, modification, or deletion of stored data items. StorageEstimate StorageEvent The StorageEvent interface is implemented by the Window/storage_event event, which is sent to a window when a storage area the window has access to is changed within the context of another document. StorageEventInit StorageManager The StorageManager interface of the Storage API provides an interface for managing persistence permissions and estimating available storage. You can get a reference to this interface using either Navigator.Storage or WorkerNavigator.Storage. StreamPipeOptions StructuredSerializeOptions StyleSheet An object implementing the StyleSheet interface represents a single style sheet. CSS style sheets will further implement the more specialized CSSStyleSheet interface. StyleSheetList The StyleSheetList interface represents a list of CSSStyleSheet objects. An instance of this object can be returned by Document.StyleSheets. SubmitEvent The SubmitEvent interface defines the object used to represent an {{Glossary(\"HTML\")}} form's HTMLFormElement.Submit_event event. This event is fired at the {{HTMLElement(\"form\")}} when the form's submit action is invoked. SubmitEventInit SvcOutputMetadata Table TableDescriptor TaskAttributionTiming The TaskAttributionTiming interface returns information about the work involved in a long task and its associate frame context. The frame context, also called the container, is the iframe, embed or object that is being implicated, on the whole, for a long task. TestUtils Text The Text interface represents a text Node in a DOM tree. TextDecodeOptions TextDecoder The TextDecoder interface represents a decoder for a specific text encoding, such as UTF-8, ISO-8859-2, KOI8-R, GBK, etc. A decoder takes a stream of bytes as input and emits a stream of code points. TextDecoderOptions TextDecoderStream The TextDecoderStream interface of the 'Encoding API' converts a stream of text in a binary encoding, such as UTF-8 etc., to a stream of strings. It is the streaming equivalent of TextDecoder. TextEncoder The TextEncoder interface takes a stream of code points as input and emits a stream of UTF-8 bytes. TextEncoderEncodeIntoResult TextEncoderStream The TextEncoderStream interface of the 'Encoding API' converts a stream of strings into bytes in the UTF-8 encoding. It is the streaming equivalent of TextEncoder. TextMetrics The TextMetrics interface represents the dimensions of a piece of text in the canvas; a TextMetrics instance can be retrieved using the CanvasRenderingContext2D.MeasureText method. TextTrack The TextTrack interface—part of the API for handling WebVTT (text tracks on media presentations)—describes and controls the text track associated with a particular track element. TextTrackCue TextTrackCue is an abstract class which is used as the basis for the various derived cue types, such as VTTCue; you will instead work with those derived types. These cues represent strings of text presented for some duration of time during the performance of a TextTrack. The cue includes the start time (the time at which the text will be displayed) and the end time (the time at which it will be removed from the display), as well as other information. TextTrackCueList The TextTrackCueList array-like object represents a dynamically updating list of TextTrackCue objects. TextTrackList The TextTrackList interface is used to represent a list of the text tracks defined by the {{HTMLElement(\"track\")}} element, with each track represented by a separate TextTrack object in the list. TimeRanges A TimeRanges object includes one or more ranges of time, each specified by a starting time offset and an ending time offset. You reference each time range by using the start() and end() methods, passing the index number of the time range you want to retrieve. ToggleEvent The ToggleEvent interface represents an event notifying the user when a popover element&apos;s state toggles between showing and hidden. ToggleEventInit TokenBinding Touch The Touch interface represents a single contact point on a touch-sensitive device. The contact point is commonly a finger or stylus and the device may be a touchscreen or trackpad. TouchEvent The TouchEvent interface represents an UIEvent which is sent when the state of contacts with a touch-sensitive surface changes. This surface can be a touch screen or trackpad, for example. The event can describe one or more points of contact with the screen and includes support for detecting movement, addition and removal of contact points, and so forth. TouchList The TouchList interface represents a list of contact points on a touch surface. For example, if the user has three fingers on the touch surface (such as a screen or trackpad), the corresponding TouchList object would have one Touch object for each finger, for a total of three entries. TrackEvent The TrackEvent interface, which is part of the HTML DOM specification, is used for events which represent changes to a set of available tracks on an HTML media element; these events are addtrack and removetrack. TrackEventInit TransformStream The TransformStream interface of the Streams API represents a concrete implementation of the pipe chain transform stream concept. TransformStreamDefaultController The TransformStreamDefaultController interface of the Streams API provides methods to manipulate the associated ReadableStream and WritableStream. Transformer TreeWalker The TreeWalker object represents the nodes of a document subtree and a position within them. UIEvent The UIEvent interface represents simple user interface events. UIEventInit UIRequestEvent UIRequestEventInit URL The URL interface is used to parse, construct, normalize, and encode URL. It works by providing properties which allow you to easily read and modify the components of a URL. URLPattern The URLPattern interface matches URLs or parts of URLs against a pattern. The pattern can contain capturing groups that extract parts of the matched URL. URLPatternComponentResult URLPatternInit URLPatternOptions URLPatternResult URLSearchParams The URLSearchParams interface defines utility methods to work with the query string of a URL. UncalibratedMagnetometer UncalibratedMagnetometerReadingValues UnderlyingSink UnderlyingSource UserActivation The UserActivation interface allows querying information about a window&apos;s user activation state. VTTCue The VTTCue interface—part of the API for handling WebVTT (text tracks on media presentations)—describes and controls the text track associated with a particular track element. VTTRegion The VTTRegion interface—part of the API for handling WebVTT (text tracks on media presentations)—describes a portion of the video to render a VTTCue onto. ValidityState The ValidityState interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element&apos;s value fails to validate, if it&apos;s not valid. ValidityStateFlags VideoColorSpace The VideoColorSpace interface of the 'WebCodecs API' represents the color space of a video. VideoColorSpaceInit VideoConfiguration VideoDecoder The VideoDecoder interface of the 'WebCodecs API' decodes chunks of video. VideoDecoderConfig VideoDecoderInit VideoDecoderSupport VideoEncoder The VideoEncoder interface of the 'WebCodecs API' encodes VideoFrame objects into EncodedVideoChunks. VideoEncoderConfig VideoEncoderEncodeOptions VideoEncoderInit VideoEncoderSupport VideoFrame The VideoFrame interface of the Web Codecs API represents a frame of a video. VideoFrameBufferInit VideoFrameCopyToOptions VideoFrameInit VideoFrameMetadata VideoTrack The VideoTrack interface represents a single video track from a {{HTMLElement(\"video\")}} element. VideoTrackGenerator VideoTrackList The VideoTrackList interface is used to represent a list of the video tracks contained within a {{HTMLElement(\"video\")}} element, with each track represented by a separate VideoTrack object in the list. ViewTimeline The ViewTimeline interface of the {{domxref(&quot;Web Animations API&quot;, &quot;Web Animations API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a view progress timeline (see CSS scroll-driven animations for more details). ViewTimelineOptions ViewTransition The ViewTransition interface of the {{domxref(&quot;View Transitions API&quot;, &quot;View Transitions API&quot;, &quot;&quot;, &quot;nocode&quot;)}} represents a view transition, and provides functionality to react to the transition reaching different states (e.g. ready to run the animation, or animation finished) or skip the transition altogether. VisibilityStateEntry The VisibilityStateEntry interface provides timings of page visibility state changes, i.e., when a tab changes from the foreground to the background or vice versa. WGSLLanguageFeatures The WGSLLanguageFeatures interface of the {{domxref(&quot;WebGPU API&quot;, &quot;WebGPU API&quot;, &quot;&quot;, &quot;nocode&quot;)}} is a setlike object that reports the WGSL language extensions supported by the WebGPU implementation. WaveShaperNode The WaveShaperNode interface represents a non-linear distorter. WaveShaperOptions WebAssembly WebAssemblyInstantiatedSource WebGLContextAttributes WebSocket The WebSocket object provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection. WebTransport The WebTransport interface of the {{domxref(&quot;WebTransport API&quot;, &quot;WebTransport API&quot;, &quot;&quot;, &quot;nocode&quot;)}} provides functionality to enable a user agent to connect to an HTTP/3 server, initiate reliable and unreliable transport in either or both directions, and close the connection once it is no longer needed. WebTransportBidirectionalStream The WebTransportBidirectionalStream interface of the {{domxref(&quot;WebTransport API&quot;, &quot;WebTransport API&quot;, &quot;&quot;, \"nocode\")}} represents a bidirectional stream created by a server or a client that can be used for reliable transport. Provides access to a ReadableStream for reading incoming data, and a WritableStream for writing outgoing data. WebTransportCloseInfo WebTransportDatagramDuplexStream The WebTransportDatagramDuplexStream interface of the {{domxref(&quot;WebTransport API&quot;, &quot;WebTransport API&quot;, &quot;&quot;, \"nocode\")}} represents a duplex stream that can be used for unreliable transport of datagrams between client and server. Provides access to a ReadableStream for reading incoming datagrams, a WritableStream for writing outgoing datagrams, and various settings and statistics related to the stream. WebTransportDatagramStats WebTransportError The WebTransportError interface of the {{domxref(&quot;WebTransport API&quot;, &quot;WebTransport API&quot;, &quot;&quot;, \"nocode\")}} represents an error related to the API, which can arise from server errors, network connection problems, or client-initiated abort operations (for example, arising from a Abort(dynamic) call). WebTransportErrorOptions WebTransportHash WebTransportOptions WebTransportReceiveStream The WebTransportReceiveStream interface of the {{domxref(&quot;WebTransport API&quot;, &quot;WebTransport API&quot;, &quot;&quot;, \"nocode\")}} is a ReadableStream that can be used to read from an incoming unidirectional or bidirectional WebTransport stream from a server. WebTransportReceiveStreamStats WebTransportSendStream WebTransportSendStreamOptions WebTransportSendStreamStats WebTransportStats WheelEvent The WheelEvent interface represents events that occur due to the user moving a mouse wheel or similar input device. WheelEventInit Window The Window interface represents a window containing a DOM document; the document property points to the DOM document loaded in that window. WindowClient The WindowClient interface of the ServiceWorker API represents the scope of a service worker client that is a document in a browsing context, controlled by an active worker. The service worker client independently selects and uses a service worker for its own loading and sub-resources. WindowPostMessageOptions Worker The Worker interface of the Web Workers API represents a background task that can be created via script, which can send messages back to its creator. WorkerGlobalScope The WorkerGlobalScope interface of the Web Workers API is an interface representing the scope of any worker. Workers have no browsing context; this scope contains the information usually conveyed by Window objects — in this case event handlers, the console or the associated WorkerNavigator object. Each WorkerGlobalScope has its own event loop. WorkerLocation The WorkerLocation interface defines the absolute location of the script executed by the Worker. Such an object is initialized for each worker and is available via the Location property obtained by calling self.location. WorkerNavigator The WorkerNavigator interface represents a subset of the Navigator interface allowed to be accessed from a Worker. Such an object is initialized for each worker and is available via the Navigator property. WorkerOptions Worklet The Worklet interface is a lightweight version of Worker and gives developers access to low-level parts of the rendering pipeline. WorkletAnimation WorkletGlobalScope The WorkletGlobalScope interface is an abstract class that specific worklet scope classes inherit from. Each WorkletGlobalScope defines a new global environment. WorkletGroupEffect WorkletOptions WritableStream The WritableStream interface of the Streams API provides a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing. WritableStreamDefaultController The WritableStreamDefaultController interface of the Streams API represents a controller allowing control of a WritableStream's state. When constructing a WritableStream, the underlying sink is given a corresponding WritableStreamDefaultController instance to manipulate. WritableStreamDefaultWriter The WritableStreamDefaultWriter interface of the Streams API is the object returned by GetWriter() and once created locks the writer to the WritableStream ensuring that no other streams can write to the underlying sink. WriteParams XMLDocument The XMLDocument interface represents an XML document. It inherits from the generic Document and does not add any specific methods or properties to it: nevertheless, several algorithms behave differently with the two types of documents. XMLHttpRequest XMLHttpRequest (XHR) objects are used to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing. XMLHttpRequestEventTarget XMLHttpRequestEventTarget is the interface that describes the event handlers shared on XMLHttpRequest and XMLHttpRequestUpload. XMLHttpRequestUpload The XMLHttpRequestUpload interface represents the upload process for a specific XMLHttpRequest. It is an opaque object that represents the underlying, browser-dependant, upload process. It is XMLHttpRequestEventTarget and is can be obtained by calling Upload. XMLSerializer The XMLSerializer interface provides the SerializeToString(Node) method to construct an XML string representing a {{Glossary(\"DOM\")}} tree. XPathEvaluator The XPathEvaluator interface allows to compile and evaluate XPath expressions. XPathExpression This is useful when an expression will be reused in an application, because it is just compiled once and all namespace prefixes which occur within the expression are preresolved. XPathResult The XPathResult interface represents the results generated by evaluating an XPath expression within the context of a given node. XRBoundedReferenceSpace The WebXR Device API&apos;s XRBoundedReferenceSpace interface describes a virtual world reference space which has preset boundaries. This extends XRReferenceSpace, which describes an essentially unrestricted space around the viewer's position. These bounds are defined using an array of points, each of which defines a vertex in a polygon inside which the user is allowed to move. XRCPUDepthInformation The XRCPUDepthInformation interface contains depth information from the CPU (returned by GetDepthInformation(XRView)). XRCompositionLayer The XRCompositionLayer interface of the WebXR Device API is a base class that defines a set of common properties and behaviors for WebXR layer types. It is not constructable on its own. XRCubeLayer The XRCubeLayer interface of the WebXR Device API is a layer that renders directly from a cubemap and projects it onto the inside faces of a cube. XRCubeLayerInit XRCylinderLayer The XRCylinderLayer interface of the WebXR Device API is a layer that takes up a curved rectangular space in the virtual environment. Only the front of the layer is visible. XRCylinderLayerInit XRDOMOverlayInit XRDOMOverlayState XRDepthInformation The XRDepthInformation interface contains information about the distance from the user&apos;s device to the real-world geometry in the user&apos;s environment. XRDepthStateInit XREquirectLayer The XREquirectLayer interface of the WebXR Device API is a layer that maps equirectangular coded data onto the inside of a sphere. XREquirectLayerInit XRFrame A WebXR Device API XRFrame object is passed into the RequestAnimationFrame(XRFrameRequestCallback) callback function and provides access to the information needed in order to render a single frame of animation for an XRSession describing a VR or AR scene. Events which communicate the tracking state of objects also provide an XRFrame reference as part of their structure. XRHand The XRHand interface is pair iterator (an ordered map) with the key being the hand joints and the value being an XRJointSpace. XRHitTestOptionsInit XRHitTestResult The XRHitTestResult interface of the WebXR Device API contains a single result of a hit test. You can get an array of XRHitTestResult objects for a frame by calling GetHitTestResults(XRHitTestSource). XRHitTestSource The XRHitTestSource interface of the WebXR Device API handles hit test subscriptions. You can get an XRHitTestSource object by using the RequestHitTestSource(XRHitTestOptionsInit) method. XRInputSource The WebXR Device API&apos;s XRInputSource interface describes a single source of control input which is part of the user&apos;s WebXR-compatible virtual or augmented reality system. The device is specific to the platform being used, but provides the direction in which it is being aimed and optionally may generate events if the user triggers performs actions using the device. XRInputSourceArray The interface XRInputSourceArray represents a live list of WebXR input sources, and is used as the return value of the XRSession property InputSources. Each entry is an XRInputSource representing one input device connected to the WebXR system. XRInputSourceEvent The WebXR Device API&apos;s XRInputSourceEvent interface describes an event which has occurred on a WebXR user input device such as a hand controller, gaze tracking system, or motion tracking system. More specifically, they represent a change in the state of an XRInputSource. XRInputSourceEventInit XRInputSourcesChangeEvent The WebXR Device API interface XRInputSourcesChangeEvent is used to represent the XRSession.Inputsourceschange_event event sent to an XRSession when the set of available WebXR input controllers changes. XRInputSourcesChangeEventInit XRJointPose The XRJointPose interface is an XRPose with additional information about the size of the skeleton joint it represents. XRJointSpace The XRJointSpace interface is an XRSpace and represents the position and orientation of an XRHand joint. XRLayer The XRLayer interface of the WebXR Device API is the base class for WebXR layer types. It inherits methods from EventTarget. XRLayerEvent The XRLayerEvent interface of the WebXR Device API is the event type for events related to a change of state of an XRLayer object. These events occur, for example, when the layer needs to be redrawn. XRLayerEventInit XRLayerInit XRLightEstimate The XRLightEstimate interface of the WebXR Device API provides the estimated lighting values for an XRLightProbe at the time represented by an XRFrame. XRLightProbe The XRLightProbe interface of the WebXR Device API contains lighting information at a given point in the user&apos;s environment. You can get an XRLighting object using the RequestLightProbe(XRLightProbeInit) method. XRLightProbeInit XRMediaBinding The XRMediaBinding interface is used to create layers that display the content of an HTMLVideoElement. XRMediaCylinderLayerInit XRMediaEquirectLayerInit XRMediaLayerInit XRMediaQuadLayerInit XRPermissionDescriptor XRPermissionStatus XRPose XRPose is a WebXR API interface representing a position and orientation in the 3D space, relative to the XRSpace within which it resides. The XRSpace—which is either an XRReferenceSpace or an XRBoundedReferenceSpace—defines the coordinate system used for the pose and, in the case of an XRViewerPose, its underlying views. XRProjectionLayer The XRProjectionLayer interface of the WebXR Device API is a layer that fills the entire view of the observer and is refreshed close to the device&apos;s native frame rate. XRProjectionLayerInit XRQuadLayer The XRQuadLayer interface of the WebXR Device API is a layer that takes up a flat rectangular space in the virtual environment. An XRQuadLayer has no thickness. It is a two-dimensional object positioned and oriented in 3D space. The position of a quad refers to the center of the quad. Only the front of the layer is visible. XRQuadLayerInit XRRay The XRRay interface of the WebXR Device API is a geometric ray described by an origin point and a direction vector. XRRayDirectionInit XRReferenceSpace The WebXR Device API&apos;s XRReferenceSpace interface describes the coordinate system for a specific tracked entity or object within the virtual world using a specified tracking behavior. The tracking behavior is defined by the selected reference space type. It expands upon the base class, XRSpace, by adding support for several different tracking behaviors as well as to request a new reference space which describes the offset transform between the tracked object and another location in the world. XRReferenceSpaceEvent The WebXR Device API interface XRReferenceSpaceEvent represents an event sent to an XRReferenceSpace. Currently, the only event that uses this type is the XRReferenceSpace.Reset_event event. XRReferenceSpaceEventInit XRRenderState The XRRenderState interface of the WebXR Device API contains configurable values which affect how the imagery generated by an XRSession gets composited. These properties include the range of distances from the viewer within which content should be rendered, the vertical field of view (for inline presentations), and a reference to the XRWebGLLayer being used as the target for rendering the scene prior to it being presented on the XR device's display or displays. XRRenderStateInit XRRigidTransform The XRRigidTransform is a WebXR API interface that represents the 3D geometric transform described by a position and orientation. XRSession The WebXR Device API's XRSession interface represents an ongoing XR session, providing methods and properties used to interact with and control the session. To open a WebXR session, use the XRSystem interface's RequestSession(XRSessionMode, XRSessionInit) method. XRSessionEvent The WebXR Device API&apos;s XRSessionEvent interface describes an event which indicates the change of the state of an XRSession. These events occur, for example, when the session ends or the visibility of its context changes. XRSessionEventInit XRSessionInit XRSessionSupportedPermissionDescriptor XRSpace The XRSpace interface of the WebXR Device API is an abstract interface providing a common basis for every class which represents a virtual coordinate system within the virtual world, in which its origin corresponds to a physical location. Spatial data in WebXR is always expressed relative to an object based upon one of the descendant interfaces of XRSpace, at the time at which a given XRFrame takes place. XRSubImage The XRSubImage interface of the WebXR Device API represents what viewport of the GPU texture to use for rendering. XRSystem The WebXR Device API interface XRSystem provides methods which let you get access to an XRSession object representing a WebXR session. With that XRSession in hand, you can use it to interact with the Augmented Reality (AR) or Virtual Reality (VR) device. XRTransientInputHitTestOptionsInit XRTransientInputHitTestResult The XRTransientInputHitTestResult interface of the WebXR Device API contains an array of results of a hit test for transient input, grouped by input source. XRTransientInputHitTestSource The XRTransientInputHitTestSource interface of the WebXR Device API handles transient input hit test subscriptions. You can get an XRTransientInputHitTestSource object by calling the RequestHitTestSourceForTransientInput(XRTransientInputHitTestOptionsInit). XRView The WebXR Device API&apos;s XRView interface describes a single view into the XR scene for a specific frame, providing orientation and position information for the viewpoint. You can think of it as a description of a specific eye or camera and how it views the world. A 3D frame will involve two views, one for each eye, separated by an appropriate distance which approximates the distance between the viewer&apos;s eyes. This allows the two views, when projected in isolation into the appropriate eyes, to simulate a 3D world. XRViewerPose The WebXR Device API interface XRViewerPose represents the pose (the position and orientation) of a viewer&apos;s point of view on the scene. Each XRViewerPose can have multiple views to represent, for example, the slight separation between the left and right eye. XRViewport The WebXR Device API&apos;s XRViewport interface provides properties used to describe the size and position of the current viewport within the XRWebGLLayer being used to render the 3D scene. XRWebGLBinding The XRWebGLBinding interface is used to create layers that have a GPU backend. XRWebGLDepthInformation The XRWebGLDepthInformation interface contains depth information from the GPU/WebGL (returned by GetDepthInformation(XRView)). XRWebGLLayer The XRWebGLLayer interface of the WebXR Device API provides a linkage between the WebXR device (or simulated XR device, in the case of an inline session) and a WebGL context used to render the scene for display on the device. In particular, it provides access to the WebGL framebuffer and viewport to ease access to the context. XRWebGLLayerInit XRWebGLSubImage The XRWebGLSubImage interface is used during rendering of WebGL layers. XSLTProcessor An XSLTProcessor applies an XSLT stylesheet transformation to an XML document to produce a new XML document as output. It has methods to load the XSLT stylesheet, to manipulate &lt;xsl:param&gt; parameter values, and to apply the transformation to documents. authenticatorBiometricPerfBounds console The console object provides access to the browser&apos;s debugging console (e.g. the Web console in Firefox). The specifics of how it works varies from browser to browser, but there is a de facto set of features that are typically provided. txAuthGenericArg Structs AnimatorInstanceConstructor AudioDataOutputCallback AudioWorkletProcessCallback AudioWorkletProcessorConstructor BlobCallback CustomElementConstructor DecodeErrorCallback DecodeSuccessCallback EffectCallback EncodedAudioChunkOutputCallback EncodedVideoChunkOutputCallback EventHandlerNonNull FrameRequestCallback Function FunctionObjectCallback FunctionStringCallback IntersectionObserverCallback LockGrantedCallback MIDISuccessCallback MediaSessionActionHandler MutationCallback NavigationInterceptHandler NotificationPermissionCallback OnBeforeUnloadEventHandlerNonNull OnErrorEventHandlerNonNull QueuingStrategySize ReportingObserverCallback ResizeObserverCallback TransformerCancelCallback TransformerFlushCallback TransformerStartCallback TransformerTransformCallback UnderlyingSinkAbortCallback UnderlyingSinkCloseCallback UnderlyingSinkStartCallback UnderlyingSinkWriteCallback UnderlyingSourceCancelCallback UnderlyingSourcePullCallback UnderlyingSourceStartCallback Union0 HTMLCollection or Element Union1 HTMLCollection or Element Union10 RadioNodeList or Element Union100 ImageBitmap or ImageData or HTMLImageElement or HTMLVideoElement or VideoFrame or HTMLCanvasElement or OffscreenCanvas Union101 HTMLCanvasElement or OffscreenCanvas Union102 List{Number} or GPUColorDict Union103 List{GPUIntegerCoordinate} or GPUOrigin2DDict Union104 List{GPUIntegerCoordinate} or GPUOrigin3DDict Union105 List{GPUIntegerCoordinate} or GPUExtent3DDict Union106 GPUBuffer or GPUTexture Union107 Union66 or MLBufferResourceView Union108 ulong or List{ulong} Union109 SFrameTransform or RTCRtpScriptTransform Union11 HTMLOptionElement or HTMLOptGroupElement Union110 ulong or double Union111 Number or AutoKeyword Union112 Unsupported /WebGLRenderingContext/ or Unsupported /WebGL2RenderingContext/ Union12 HTMLElement or long Union13 Element or Text Union14 CanvasRenderingContext2D or ImageBitmapRenderingContext or Unsupported /WebGLRenderingContext/ or Unsupported /WebGL2RenderingContext/ or GPUCanvasContext Union15 HTMLImageElement or Unsupported /SVGImageElement/ Union16 Union15 or HTMLVideoElement or HTMLCanvasElement or ImageBitmap or OffscreenCanvas or VideoFrame Union17 string or CanvasGradient or CanvasPattern Union18 string or CanvasGradient or CanvasPattern Union19 double or DOMPointInit or List{Union20} Union2 RadioNodeList or Element Union20 double or DOMPointInit Union21 Path2D or string Union22 HTMLCanvasElement or OffscreenCanvas Union23 OffscreenCanvasRenderingContext2D or ImageBitmapRenderingContext or Unsupported /WebGLRenderingContext/ or Unsupported /WebGL2RenderingContext/ or GPUCanvasContext Union24 CustomElementConstructor or GlobalObject.Undefined Union25 File or string or FormData Union26 File or string or FormData Union27 Event or string Union28 string or Function Union29 Union16 or Blob or ImageData Union3 HTMLOptionElement or HTMLOptGroupElement Union30 Window or MessagePort or ServiceWorker Union31 string or WorkerOptions Union32 PasswordCredentialData or HTMLFormElement Union33 AnimationEffect or List{AnimationEffect} Union34 byte[] or Union66 Union35 Unsupported /CSSOMString/ or Union34 Union36 IntrinsicSizesRequest or LayoutFragmentRequest Union37 Element or ProcessingInstruction Union38 MediaList or string Union39 Element or CSSPseudoElement Union4 HTMLElement or long Union40 Event or GlobalObject.Undefined Union41 AddEventListenerOptions or bool Union42 EventListenerOptions or bool Union43 Node or string Union44 Node or string Union45 Node or string Union46 Node or string Union47 Node or string Union48 Node or string Union49 string or ElementCreationOptions Union5 HTMLScriptElement or Unsupported /SVGScriptElement/ Union50 string or ElementCreationOptions Union51 Union67 or Blob or string Union52 string or byte[] Union53 Blob or Unsupported /MediaSource/ Union54 string or List{double} Union55 string or List{double} Union56 List{List{string}} or Dictionary{string, string} Union57 Blob or Union67 or FormData or URLSearchParams or string Union58 ReadableStream or Union57 Union59 Request or string Union6 bool or double or string Union60 Union67 or Blob or string Union61 Union67 or Blob or string or WriteParams Union62 ReadableStreamDefaultReader or ReadableStreamBYOBReader Union63 ReadableStreamDefaultController or ReadableByteStreamController Union64 List{List{string}} or Dictionary{string, string} or string Union65 string or URLPatternInit Union66 sbyte or short or int or byte or ushort or uint or Unsupported /Uint8ClampedArray/ or long or ulong or float or double or Unsupported /DataView/ Union67 Union66 or byte[] Union68 byte[] or Unsupported /SharedArrayBuffer/ or Union66 Union69 string or List{string} Union7 Unsupported /MediaStream/ or Unsupported /MediaSource/ or Blob Union70 Union67 or Blob or string Union71 Document or Union57 Union72 File or string Union73 IDBObjectStore or IDBIndex or IDBCursor Union74 string or List{string} Union75 string or List{string} Union76 string or List{string} Union77 IDBObjectStore or IDBIndex Union78 Element or Document Union79 Element or Document Union8 VideoTrack or AudioTrack or TextTrack Union80 Number or List{Number} Union81 bool or Unsupported /ConstrainDouble/ Union82 bool or Unsupported /ConstrainDouble/ Union83 bool or Unsupported /ConstrainDouble/ Union84 List{Point2D} or ConstrainPoint2DParameters Union85 float or double or DOMMatrix Union86 string or List{Union87} Union87 Unsupported /CSSNumericValue/ or Unsupported /CSSKeywordValue/ Union88 Client or ServiceWorker or MessagePort Union89 Client or ServiceWorker or MessagePort Union9 VideoTrack or AudioTrack or TextTrack Union90 double or Unsupported /CSSNumericValue/ or string Union91 double or EffectTiming Union92 double or EffectTiming Union93 Element or CSSPseudoElement Union94 AudioContextLatencyCategory or Number Union95 Union67 or ReadableStream Union96 HTMLVideoElement or VideoFrame Union97 GPUSampler or GPUTextureView or GPUBufferBinding or GPUExternalTexture Union98 GPUPipelineLayout or GPUAutoLayoutMode Union99 GPUPipelineLayout or GPUAutoLayoutMode UpdateCallback VideoFrameOutputCallback VoidFunction WebCodecsErrorCallback XRFrameRequestCallback Interfaces AbstractWorker AnimationFrameProvider Body CanvasCompositing CanvasDrawImage CanvasDrawPath CanvasFillStrokeStyles CanvasFilters CanvasImageData CanvasImageSmoothing CanvasPath CanvasPathDrawingStyles CanvasRect CanvasShadowStyles CanvasState CanvasText CanvasTextDrawingStyles CanvasTransform CanvasUserInterface ChildNode CredentialUserData DocumentOrShadowRoot ElementCSSInlineStyle ElementContentEditable EventListener FontFaceSource GPUBindingCommandsMixin GPUCommandsMixin GPUDebugCommandsMixin GPUObjectBase GPUPipelineBase GPURenderCommandsMixin GenericTransformStream GlobalEventHandlers HTMLHyperlinkElementUtils HTMLOrSVGElement LinkStyle NavigatorConcurrentHardware NavigatorContentUtils NavigatorCookies NavigatorDeviceMemory The deviceMemory read-only property of the Navigator interface returns the approximate amount of device memory in gigabytes. NavigatorGPU NavigatorID NavigatorLanguage The Navigator.language read-only property returns a string representing the preferred language of the user, usually the language of the browser UI. NavigatorLocks The locks read-only property of the Navigator interface returns a LockManager object which provides methods for requesting a new 'Lock' object and querying for an existing Lock object. NavigatorML NavigatorOnLine Returns the online status of the browser. The property returns a boolean value, with true meaning online and false meaning offline. The property sends updates whenever the browser&apos;s ability to connect to the network changes. The update occurs when the user follows links or when a script requests a remote page. For example, the property should return false when users click links soon after they lose internet connection. NavigatorPlugins IMPORTANT Deprecated Returns a PluginArray object, listing the Plugin objects describing the plugins installed in the application. Named properties of returned object are not enumerable (except in very old browser versions). NavigatorStorage The Navigator.storage read-only property returns the singleton StorageManager object used to access the overall storage capabilities of the browser for the current site or app. The returned object lets you examine and configure persistence of data stores and learn approximately how much more space your browser has available for local storage use. NodeFilter NonDocumentTypeChildNode NonElementParentNode ParentNode PopoverInvokerElement ReadableStreamGenericReader SVGFilterPrimitiveStandardAttributes Slottable TextDecoderCommon TextEncoderCommon UserSettingListener WebGLRenderingContextBase WindowEventHandlers WindowLocalStorage The localStorage read-only property of the Window interface allows you to access a Storage object for the Document's {{glossary(\"origin\")}}; the stored data is saved across browser sessions. WindowOrWorkerGlobalScope WindowSessionStorage The read-only sessionStorage property accesses a session Storage object for the current origin. sessionStorage is similar to Window.LocalStorage; the difference is that while data in localStorage doesn&apos;t expire, data in sessionStorage is cleared when the page session ends. XPathEvaluatorBase XPathNSResolver The XPathNSResolver interface permits prefix strings in an XPath expression to be properly bound to namespace URI strings. Enums AccelerometerLocalCoordinateSystem AlignSetting AlphaOption AttestationConveyancePreference AudioContextLatencyCategory AudioContextState AudioSampleFormat AuthenticatorAttachment AuthenticatorTransport AutoKeyword AutomationRate AutoplayPolicy AutoplayPolicyMediaType BinaryType BiquadFilterType BitrateMode BlockFragmentationType BreakType CanPlayTypeResult CanvasDirection CanvasFillRule CanvasFontKerning CanvasFontStretch CanvasFontVariantCaps CanvasLineCap CanvasLineJoin CanvasTextAlign CanvasTextBaseline CanvasTextRendering ChannelCountMode ChannelInterpretation ChildDisplayType ClientType The type read-only property of the Client interface indicates the type of client the service worker is controlling. CodecState ColorGamut ColorSpaceConversion ContactProperty CredentialMediationRequirement DOMParserSupportedType DirectionSetting DistanceModelType DocumentReadyState The Document.readyState property describes the loading state of the Document. When the value of this property changes, a Document/readystatechange_event event fires on the Document object. DocumentVisibilityState The Document.visibilityState read-only property returns the visibility of the 'document', that is in which context this element is now visible. It is useful to know if the document is in the background or an invisible tab, or only loaded for pre-rendering. EncodedAudioChunkType The type read-only property of the EncodedAudioChunk interface returns a value indicating whether the audio chunk is a key chunk, which does not relying on other frames for decoding. EncodedVideoChunkType The type read-only property of the EncodedVideoChunk interface returns a value indicating whether the video chunk is a key chunk, which does not rely on other frames for decoding. EndingType FileSystemHandleKind The kind read-only property of the FileSystemHandle interface returns the type of entry. This is &apos;file&apos; if the associated entry is a file or &apos;directory&apos;. It is used to distinguish files from directories when iterating over the contents of a directory. FillLightMode FillMode FocusableAreaSearchMode FontFaceLoadStatus FontFaceSetLoadStatus FrameType FullscreenNavigationUI GPUAddressMode GPUAutoLayoutMode GPUBlendFactor GPUBlendOperation GPUBufferBindingType GPUBufferMapState The mapState read-only property of the GPUBuffer interface represents the mapped state of the GPUBuffer. GPUCanvasAlphaMode GPUCompareFunction GPUCompilationMessageType The type read-only property of the GPUCompilationMessage interface is an enumerated value representing the type of the message. Each type represents a different severity level. GPUCullMode GPUDeviceLostReason GPUErrorFilter GPUFeatureName GPUFilterMode GPUFrontFace GPUIndexFormat GPULoadOp GPUMipmapFilterMode GPUPipelineErrorReason The reason read-only property of the GPUPipelineError interface defines the reason the pipeline creation failed in a machine-readable way. GPUPowerPreference GPUPrimitiveTopology GPUQueryType GPUSamplerBindingType GPUStencilOperation GPUStorageTextureAccess GPUStoreOp GPUTextureAspect GPUTextureDimension The dimension read-only property of the GPUTexture interface represents the dimension of the set of texels for each GPUTexture subresource. GPUTextureFormat The format read-only property of the GPUTexture interface represents the format of the GPUTexture. GPUTextureSampleType GPUTextureViewDimension GPUVertexFormat GPUVertexStepMode GyroscopeLocalCoordinateSystem HardwareAcceleration HdrMetadataType HighlightType The type property of the Highlight interface is an enumerated {{jsxref(\"String\")}} used to specify the meaning of the highlight. This allows assistive technologies, such as screen readers, to include this meaning when exposing the highlight to users. IDBCursorDirection The direction read-only property of the IDBCursor interface is a string that returns the direction of traversal of the cursor (set using OpenCursor(dynamic, IDBCursorDirection) for example). See the Values section below for possible values. IDBRequestReadyState The readyState read-only property of the IDBRequest interface returns the state of the request. IDBTransactionDurability The durability read-only property of the IDBTransaction interface returns the durability hint the transaction was created with. This is a hint to the user agent of whether to prioritize performance or durability when committing the transaction. IDBTransactionMode The mode read-only property of the IDBTransaction interface returns the current mode for accessing the data in the object stores in the scope of the transaction (i.e. is the mode to be read-only, or do you want to write to the object stores?) The default value is readonly. ImageOrientation ImageSmoothingQuality ImportExportKind IterationCompositeOperation LatencyMode LayoutSizingMode LineAlignSetting LockMode The mode read-only property of the Lock interface returns the access mode passed to 'LockManager.Request' when the lock was requested. The mode is either &quot;exclusive&quot; (the default) or &quot;shared&quot;. MIDIPortConnectionState MIDIPortDeviceState MIDIPortType The type read-only property of the MIDIPort interface returns the type of the port, indicating whether this is an input or output MIDI port. MLAutoPad MLConv2dFilterOperandLayout MLConvTranspose2dFilterOperandLayout MLDeviceType MLGruWeightLayout MLInputOperandLayout MLInterpolationMode MLLstmWeightLayout MLOperandType MLPaddingMode MLPowerPreference MLRecurrentNetworkDirection MLRoundingType MagnetometerLocalCoordinateSystem MediaDecodingType MediaEncodingType MediaSessionAction MediaSessionPlaybackState The playbackState property of the MediaSession interface indicates whether the current media session is playing or paused. MeteringMode NavigationFocusReset NavigationHistoryBehavior NavigationScrollBehavior NavigationType NotificationDirection NotificationPermission OffscreenRenderingContextId OrientationSensorLocalCoordinateSystem OscillatorType OverSampleType PanningModelType PositionAlignSetting PredefinedColorSpace PremultiplyAlpha PresentationStyle PublicKeyCredentialType RTCEncodedVideoFrameType RTCPriorityType ReadableStreamReaderMode ReadableStreamType RecordingState RedEyeReduction ReferrerPolicy RequestCache The cache read-only property of the Request interface contains the cache mode of the request. It controls how the request will interact with the browser's HTTP cache. RequestCredentials The credentials read-only property of the Request interface indicates whether the user agent should send or receive cookies from the other domain in the case of cross-origin requests. RequestDestination The destination read-only property of the Request interface returns a string describing the type of content being requested. RequestDuplex RequestMode The mode read-only property of the Request interface contains the mode of the request (e.g., cors, no-cors, same-origin, navigate or websocket.) This is used to determine if cross-origin requests lead to valid responses, and which properties of the response are readable. RequestPriority RequestRedirect The redirect read-only property of the Request interface contains the mode for how redirects are handled. ResizeObserverBoxOptions ResizeQuality ResponseType The type read-only property of the Response interface contains the type of the response. It can be one of the following: RestrictionCategory SFrameTransformErrorEventType SFrameTransformRole ScrollAxis ScrollRestoration ScrollSetting SecurityPolicyViolationEventDisposition The disposition read-only property of the SecurityPolicyViolationEvent interface indicates how the violated policy is configured to be treated by the user agent. SelectionMode ServiceWorkerState The state read-only property of the ServiceWorker interface returns a string representing the current state of the service worker. It can be one of the following values: parsed, installing, installed, activating, activated, or redundant. ServiceWorkerUpdateViaCache ShadowRootMode The mode read-only property of the ShadowRoot specifies its mode — either open or closed. This defines whether or not the shadow root&apos;s internal features are accessible from JavaScript. SlotAssignmentMode SpatialNavigationDirection TableKind TextTrackKind The kind read-only property of the TextTrack interface returns the kind of text track this object represents. This decides how the track will be handled by a user agent. TextTrackMode The TextTrack interface's mode property is a string specifying and controlling the text track&apos;s mode: disabled, hidden, or showing. You can read this value to determine the current mode, and you can change this value to switch modes. TokenBindingStatus TransferFunction UserVerificationRequirement ValueType VideoColorPrimaries VideoEncoderBitrateMode VideoMatrixCoefficients VideoPixelFormat VideoTransferCharacteristics WebTransportCongestionControl The congestionControl read-only property of the WebTransport interface indicates the application's preference for either high throughput or low-latency when sending data. WebTransportErrorSource The source read-only property of the WebTransportError interface returns an enumerated value indicating the source of the error. WebTransportReliabilityMode WorkerType WriteCommandType XMLHttpRequestResponseType The XMLHttpRequest property responseType is an enumerated string value specifying the type of data contained in the response. XRDOMOverlayType XRDepthDataFormat XRDepthUsage XREnvironmentBlendMode XREye XRHandJoint XRHandedness XRHitTestTrackableType XRInteractionMode XRLayerLayout XRLayerQuality XRReferenceSpaceType XRReflectionFormat XRSessionMode XRTargetRayMode XRTextureType XRVisibilityState"
  },
  "api/CSharpToJavaScript.APIs.JS.txAuthGenericArg.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.txAuthGenericArg.html",
    "title": "Class txAuthGenericArg | CSharpToJavaScript",
    "keywords": "Class txAuthGenericArg Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class txAuthGenericArg Inheritance object txAuthGenericArg Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Content public required byte[] Content Field Value byte[] ContentType public required string ContentType Field Value string"
  },
  "api/CSharpToJavaScript.CSTOJS.html": {
    "href": "api/CSharpToJavaScript.CSTOJS.html",
    "title": "Class CSTOJS | CSharpToJavaScript",
    "keywords": "Class CSTOJS Namespace CSharpToJavaScript Assembly CSharpToJavaScript.dll Main type for CSharpToJavaScript. public class CSTOJS Inheritance object CSTOJS Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CSTOJS() New instance of CSTOJS with default options, see CSTOJSOptions. public CSTOJS() CSTOJS(CSTOJSOptions) New instance of CSTOJS public CSTOJS(CSTOJSOptions options) Parameters options CSTOJSOptions Options of CSTOJS, see CSTOJSOptions. Properties Options public CSTOJSOptions Options { get; set; } Property Value CSTOJSOptions Methods GenerateOne(string) Method for generating js StringBuilder/StringBuilders. public List<StringBuilder> GenerateOne(string path) Parameters path string Full path to cs file or to the folder with cs files. Returns List<StringBuilder> List of StringBuilder GenerateOneAsync(string, string?) Method for generating js file/files. public Task GenerateOneAsync(string path, string? filename = null) Parameters path string Full path to cs file or to the folder with cs files. filename string Optional! Filename of a js file if you generating one file! Returns Task empty Task GenerateOneFromString(string, List<MetadataReference>?) Method for generating from string. public StringBuilder GenerateOneFromString(string csstring, List<MetadataReference>? references = null) Parameters csstring string CSharp string. references List<MetadataReference> Needed if you don't have access to files. Because Assembly.location is null in Blazor WebAssembly. Returns StringBuilder JS StringBuilder Exceptions ArgumentNullException GenerateOneFromStringAsync(string, string?, List<MetadataReference>?) Method for generating from string. Writes a file. public Task GenerateOneFromStringAsync(string csstring, string? filename = \"main.js\", List<MetadataReference>? references = null) Parameters csstring string CSharp string. filename string Filename of a js file. references List<MetadataReference> Needed if you don't have access to files. Because Assembly.location is null in Blazor WebAssembly. Returns Task empty Task Exceptions ArgumentNullException Log(string, string?, string?, int) public void Log(string message, string? file = null, string? member = null, int line = 0) Parameters message string file string member string line int"
  },
  "api/CSharpToJavaScript.CSTOJSOptions.html": {
    "href": "api/CSharpToJavaScript.CSTOJSOptions.html",
    "title": "Class CSTOJSOptions | CSharpToJavaScript",
    "keywords": "Class CSTOJSOptions Namespace CSharpToJavaScript Assembly CSharpToJavaScript.dll Options for CSTOJS. public record CSTOJSOptions : IEquatable<CSTOJSOptions> Inheritance object CSTOJSOptions Implements IEquatable<CSTOJSOptions> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CSTOJSOptions() Creates new default options. See CSTOJSOptions. public CSTOJSOptions() Properties AddSBInEnd Add a StringBuilder to the end of a javascript file. public StringBuilder AddSBInEnd { get; set; } Property Value StringBuilder Default: new() Remarks Note! When passing a folder path to GenerateOneAsync(string, string?) applies to every file! AddSBInFront Add a StringBuilder to the front of a javascript file. public StringBuilder AddSBInFront { get; set; } Property Value StringBuilder Default: new() Remarks Note! When passing a folder path to GenerateOneAsync(string, string?) applies to every file! CustomCSNamesToJS List of custom names to convert. public List<Tuple<string, string>> CustomCSNamesToJS { get; set; } Property Value List<Tuple<string, string>> Default: new() Remarks Example: new List<Tuple<string, string>>(){new Tuple<string, string>(\"Console\", \"console\")}. Will convert \"Console\" to \"console\". CustomCSTypesToJS List of types to convert. public List<Type> CustomCSTypesToJS { get; set; } Property Value List<Type> Default: new() Remarks Example: Similar to CustomCSNamesToJS, but convers the type. You need to use ToAttribute. Debug Debug. When set to true prints additional info to console, cs lines to js file. public bool Debug { get; set; } Property Value bool Default: false DisableConsoleColors Self-explanatory, Disable Console Colors. public bool DisableConsoleColors { get; set; } Property Value bool Default: false DisableConsoleOutput Self-explanatory, Disable Console Output. public bool DisableConsoleOutput { get; set; } Property Value bool Default: false OutPutPath Output path for javascript file/files. public string OutPutPath { get; set; } Property Value string Default: GetCurrentDirectory() UseVarOverLet Self-explanatory, Use var over let. public bool UseVarOverLet { get; set; } Property Value bool Default: false"
  },
  "api/CSharpToJavaScript.Utils.ToAttribute.html": {
    "href": "api/CSharpToJavaScript.Utils.ToAttribute.html",
    "title": "Class ToAttribute | CSharpToJavaScript",
    "keywords": "Class ToAttribute Namespace CSharpToJavaScript.Utils Assembly CSharpToJavaScript.dll [AttributeUsage(AttributeTargets.All)] public class ToAttribute : Attribute Inheritance object Attribute ToAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ToAttribute(string) public ToAttribute(string to) Parameters to string Fields Default public const string Default = \"Default\" Field Value string FirstCharToLowerCase public const string FirstCharToLowerCase = \"FirstCharToLowerCase\" Field Value string ToLower public const string ToLower = \"ToLower\" Field Value string Properties To public string To { get; set; } Property Value string Methods Convert(string) public string Convert(string str) Parameters str string Returns string"
  },
  "api/CSharpToJavaScript.Utils.Unsupported.html": {
    "href": "api/CSharpToJavaScript.Utils.Unsupported.html",
    "title": "Class Unsupported | CSharpToJavaScript",
    "keywords": "Class Unsupported Namespace CSharpToJavaScript.Utils Assembly CSharpToJavaScript.dll public class Unsupported Inheritance object Unsupported Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.Utils.html": {
    "href": "api/CSharpToJavaScript.Utils.html",
    "title": "Namespace CSharpToJavaScript.Utils | CSharpToJavaScript",
    "keywords": "Namespace CSharpToJavaScript.Utils Classes ToAttribute Unsupported"
  },
  "api/CSharpToJavaScript.html": {
    "href": "api/CSharpToJavaScript.html",
    "title": "Namespace CSharpToJavaScript | CSharpToJavaScript",
    "keywords": "Namespace CSharpToJavaScript Classes CSTOJS Main type for CSharpToJavaScript. CSTOJSOptions Options for CSTOJS."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | CSharpToJavaScript",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation!"
  },
  "articles/exampleHelloWorld.html": {
    "href": "articles/exampleHelloWorld.html",
    "title": "Example \"Hello World!\" | CSharpToJavaScript",
    "keywords": "Example \"Hello World!\" Create new c# project. Note Make sure to use full path in \"GenerateOneAsync\" method! Program.cs using CSharpToJavaScript; namespace TestNuget; public class Program { public static async Task Main() { CSTOJS cstojs = new(); await cstojs.GenerateOneAsync(\"C:\\\\GitReps\\\\TestNuget\\\\TestNuget\\\\CSharp\\\\Test.cs\"); Console.ReadKey(); } } Add new folder \"CSharp\" and new file name \"Test\". CSharp/Test.cs using static CSharpToJavaScript.APIs.JS.GlobalObject; namespace TestNuget.CSharp; public class Test { public Test() { GlobalThis.Console.Log(\"Hello World!\"); } } Run. Above code will generate Test.js file that contains: class Test { constructor() { globalThis.console.log(\"Hello World!\"); } }"
  },
  "articles/exampleOptAddSBIn.html": {
    "href": "articles/exampleOptAddSBIn.html",
    "title": "Example of options \"AddSBInFront\" and \"AddSBInEnd\" | CSharpToJavaScript",
    "keywords": "Example of options \"AddSBInFront\" and \"AddSBInEnd\" Create new c# project. Note Make sure to use full path in \"GenerateOneAsync\" method! This options will add a string at the top/bottom of file. Useful when you want to initiate a class. Program.cs using CSharpToJavaScript; namespace TestNuget; public class Program { public static async Task Main() { CSTOJSOptions opt = new() { AddSBInFront = new(\"//Comment at the top!\"), AddSBInEnd = new(\"//Comment at the bottom!\") }; CSTOJS cstojs = new(opt); await cstojs.GenerateOneAsync(\"C:\\\\GitReps\\\\TestNuget\\\\TestNuget\\\\CSharp\\\\Test.cs\"); Console.ReadKey(); } } Add new folder \"CSharp\" and new file name \"Test\". CSharp/Test.cs using static CSharpToJavaScript.APIs.JS.GlobalObject; namespace TestNuget.CSharp; public class Test { public Test() { GlobalThis.Console.Log(\"Hello World!\"); } } Run. Above code will generate Test.js file that contains: //Comment at the top! class Test { constructor() { globalThis.console.log(\"Hello World!\"); } } //Comment at the bottom!"
  },
  "articles/exampleOptCustomCSNamesToJS.html": {
    "href": "articles/exampleOptCustomCSNamesToJS.html",
    "title": "Example of option \"CustomCSNamesToJS\" | CSharpToJavaScript",
    "keywords": "Example of option \"CustomCSNamesToJS\" Create new c# project. Note Make sure to use full path in \"GenerateOneAsync\" method! Note Note this is just example! The \"Console.WriteLine\" will be translated by default! Program.cs using CSharpToJavaScript; namespace TestNuget; public class Program { public static async Task Main() { CSTOJSOptions opt = new() { CustomCSNamesToJS = new List<Tuple<string, string>>() { new Tuple<string, string>(\"Console\",\"console\"), new Tuple<string, string>(\"WriteLine\", \"log\") } }; CSTOJS cstojs = new(opt); await cstojs.GenerateOneAsync(\"C:\\\\GitReps\\\\TestNuget\\\\TestNuget\\\\CSharp\\\\Test.cs\"); Console.ReadKey(); } } Add new folder \"CSharp\" and new file name \"Test\". CSharp/Test.cs namespace TestNuget.CSharp; public class Test { public Test() { Console.WriteLine(\"Hello World!\"); } } Run. Above code will generate Test.js file that contains: class Test { constructor() { console.log(\"Hello World!\"); } }"
  },
  "articles/exampleOptCustomCSTypesToJS.html": {
    "href": "articles/exampleOptCustomCSTypesToJS.html",
    "title": "Example of option \"CustomCSTypesToJS\" | CSharpToJavaScript",
    "keywords": "Example of option \"CustomCSTypesToJS\" Create new c# project. Note Make sure to use full path in \"GenerateOneAsync\" method! For example you want use \"insertAdjacentHTML\" but there is no such method in Element, you need to create an extension method with ToAttribute. Program.cs using CSharpToJavaScript; using CSharpToJavaScript.APIs.JS; using CSharpToJavaScript.Utils; using System; using System.Threading.Tasks; namespace TestNuget; public class Program { public static async Task Main() { CSTOJSOptions opt = new() { CustomCSTypesToJS = new() { typeof(Extensions) } }; CSTOJS cstojs = new(opt); await cstojs.GenerateOneAsync(\"C:\\\\GitReps\\\\TestNuget\\\\TestNuget\\\\CSharp\\\\Test.cs\"); Console.ReadKey(); } } public static class Extensions { [To(ToAttribute.FirstCharToLowerCase)] public static string InsertAdjacentHTML(this Element obj, string where, string data) { throw new System.NotImplementedException(); } } Add new folder \"CSharp\" and new file name \"Test\". CSharp/Test.cs using CSharpToJavaScript.APIs.JS; using static CSharpToJavaScript.APIs.JS.GlobalObject; using System; namespace TestNuget.CSharp; public class Test { public Test() { GlobalThis.Window.Document.Head.InsertAdjacentHTML(\"beforeend\", \"html string\"); } } Run. Above code will generate Test.js file that contains: class Test { constructor() { globalThis.window.document.head.insertAdjacentHTML(\"beforeend\", \"html string\"); } }"
  },
  "articles/faq.html": {
    "href": "articles/faq.html",
    "title": "FAQ | CSharpToJavaScript",
    "keywords": "FAQ Q. Why did you write this library? A. The whole purpose is to learn and understand better c# and js at the same time. Q. How to use methods that in Interfaces? Like Append etc. A. Currently only supported is through as operator. Example: (GlobalThis.Window.Document.Head as ParentNode).Append(...); Q. Is this library used in any \"real\" projects? A. You can check one of my script(AnkiWeb Quiz), if its count as project."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Articles | CSharpToJavaScript",
    "keywords": "Articles Currently only Examples and small FAQ! See left menu. WIP!"
  },
  "index.html": {
    "href": "index.html",
    "title": "CSharpToJavaScript documentation. | CSharpToJavaScript",
    "keywords": "CSharpToJavaScript documentation. Github | Nuget package | Try it online! | CLI | VS Code Extension | VS Extension Visit articles for more examples."
  }
}