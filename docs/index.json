{
  "README.html": {
    "href": "README.html",
    "title": "CSTOJS_Pages | CSharpToJavaScript",
    "keywords": "CSTOJS_Pages Website for CSharpToJavaScript library. https://tilied.github.io/CSTOJS_Pages/ Related Repository Blazor WebAssembly: https://github.com/TiLied/CSTOJS_BWA CSharpToJavaScript library: https://github.com/TiLied/CSharpToJavaScript Library for generating docs: https://github.com/TiLied/GenDocsLib Library for generating csharp: https://github.com/TiLied/GenCSharpLib CLI for library: https://github.com/TiLied/CSTOJS_CLI Thanks for packages and content <3 docfx for generating static website."
  },
  "api/CSharpToJavaScript.APIs.JS.AbortController.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AbortController.html",
    "title": "Class AbortController | CSharpToJavaScript",
    "keywords": "Class AbortController Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AbortController interface represents a controller object that allows you to abort one or more Web requests as and when desired. [To(\"FirstCharToLowerCase\")] public class AbortController Inheritance object AbortController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can create a new AbortController object using the AbortController() constructor. Communicating with a DOM request is done using an AbortSignal object. -Fetch API -Abortable Fetch by Jake Archibald See also on MDN Constructors AbortController() The AbortController() constructor creates a new AbortController object instance. public AbortController() Remarks -Fetch API See also on MDN Properties Signal The signal read-only property of the AbortController interface returns an AbortSignal object instance, which can be used to communicate with/abort a DOM request as desired. public AbortSignal Signal { get; } Property Value AbortSignal An AbortSignal object instance. Remarks -Fetch API See also on MDN Methods Abort(dynamic) The abort() method of the AbortController interface aborts a DOM request before it has completed. This is able to abort fetch requests, the consumption of any response bodies, or streams. public GlobalObject.Undefined Abort(dynamic reason) Parameters reason dynamic Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Fetch API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AbortSignal.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AbortSignal.html",
    "title": "Class AbortSignal | CSharpToJavaScript",
    "keywords": "Class AbortSignal Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AbortSignal interface represents a signal object that allows you to communicate with a DOM request (such as a fetch request) and abort it if required via an AbortController object. [To(\"FirstCharToLowerCase\")] public class AbortSignal : EventTarget Inheritance object EventTarget AbortSignal Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Fetch API -Abortable Fetch by Jake Archibald See also on MDN Properties Aborted The aborted read-only property returns a value that indicates whether the DOM requests the signal is communicating with are aborted (true) or not (false). public bool Aborted { get; } Property Value bool true (aborted) or false Remarks -Fetch API See also on MDN Onabort public EventHandlerNonNull Onabort { get; set; } Property Value EventHandlerNonNull Reason The reason read-only property returns a JavaScript value that indicates the abort reason. public dynamic Reason { get; } Property Value dynamic A JavaScript value that indicates the abort reason, or undefined, if not aborted. Remarks The property is undefined when the signal has not been aborted. It can be set to a specific value when the signal is aborted, using Abort(dynamic) or Abort(dynamic). If not explicitly set in those methods, it defaults to \"AbortError\" DOMException. -Fetch API See also on MDN Methods Abort(dynamic) public static AbortSignal Abort(dynamic reason) Parameters reason dynamic Returns AbortSignal ThrowIfAborted() The throwIfAborted() method throws the signal's abort Reason if the signal has been aborted; otherwise it does nothing. public GlobalObject.Undefined ThrowIfAborted() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks An API that needs to support aborting can accept an AbortSignal object and use throwIfAborted() to test and throw when the abort event is signalled. This method can also be used to abort operations at particular points in code, rather than passing to functions that take a signal. -Fetch API See also on MDN Timeout(ulong) public static AbortSignal Timeout(ulong milliseconds) Parameters milliseconds ulong Returns AbortSignal"
  },
  "api/CSharpToJavaScript.APIs.JS.AbstractRange.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AbstractRange.html",
    "title": "Class AbstractRange | CSharpToJavaScript",
    "keywords": "Class AbstractRange Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AbstractRange abstract interface is the base class upon which all DOM range types are defined. A range is an object that indicates the start and end points of a section of content within the document. [To(\"FirstCharToLowerCase\")] public class AbstractRange Inheritance object AbstractRange Derived Range StaticRange Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: As an abstract interface, you will not directly instantiate an object of type AbstractRange. Instead, you will use the Range or StaticRange interfaces. To understand the difference between those two interfaces, and how to choose which is appropriate for your needs, consult each interface's documentation. See also on MDN Properties Collapsed The read-only collapsed property of the AbstractRange interface returns true if the range&apos;s start position and end position are the same. public bool Collapsed { get; } Property Value bool A boolean value which is true if the range is collapsed. A collapsed range is one in which the start and end positions are the same, resulting in a zero-character-long range. Remarks See also on MDN EndContainer The read-only endContainer property of the AbstractRange interface returns the Node in which the end of the range is located. public Node EndContainer { get; } Property Value Node The Node which contains the last character of the range. Remarks See also on MDN EndOffset The endOffset property of the AbstractRange interface returns the offset into the end node of the range's end position. public ulong EndOffset { get; } Property Value ulong An integer value indicating the number of characters into the Node indicated by EndContainer at which the final character of the range is located. Remarks See also on MDN StartContainer The read-only startContainer property of the AbstractRange interface returns the start Node for the range. public Node StartContainer { get; } Property Value Node The Node inside which the start position of the range is found. Remarks See also on MDN StartOffset The read-only startOffset property of the AbstractRange interface returns the offset into the start node of the range's start position. public ulong StartOffset { get; } Property Value ulong An integer value indicating the number of characters into the Node indicated by StartContainer at which the first character of the range is located. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AbstractWorker.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AbstractWorker.html",
    "title": "Interface AbstractWorker | CSharpToJavaScript",
    "keywords": "Interface AbstractWorker Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface AbstractWorker Properties Onerror EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull"
  },
  "api/CSharpToJavaScript.APIs.JS.AddEventListenerOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AddEventListenerOptions.html",
    "title": "Class AddEventListenerOptions | CSharpToJavaScript",
    "keywords": "Class AddEventListenerOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AddEventListenerOptions : EventListenerOptions Inheritance object EventListenerOptions AddEventListenerOptions Inherited Members EventListenerOptions.Capture object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Once public bool Once Field Value bool Passive public bool Passive Field Value bool Signal public AbortSignal Signal Field Value AbortSignal"
  },
  "api/CSharpToJavaScript.APIs.JS.AnimationFrameProvider.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AnimationFrameProvider.html",
    "title": "Interface AnimationFrameProvider | CSharpToJavaScript",
    "keywords": "Interface AnimationFrameProvider Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface AnimationFrameProvider Methods CancelAnimationFrame(ulong) GlobalObject.Undefined CancelAnimationFrame(ulong handle) Parameters handle ulong Returns GlobalObject.Undefined RequestAnimationFrame(FrameRequestCallback) ulong RequestAnimationFrame(FrameRequestCallback callback) Parameters callback FrameRequestCallback Returns ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.AssignedNodesOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AssignedNodesOptions.html",
    "title": "Class AssignedNodesOptions | CSharpToJavaScript",
    "keywords": "Class AssignedNodesOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class AssignedNodesOptions Inheritance object AssignedNodesOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Flatten public bool Flatten Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.Attr.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Attr.html",
    "title": "Class Attr | CSharpToJavaScript",
    "keywords": "Class Attr Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Attr interface represents one of an element's attributes as an object. In most situations, you will directly retrieve the attribute value as a string (e.g., GetAttribute(string)), but certain functions (e.g., GetAttributeNode(string)) or means of iterating return Attr instances. [To(\"FirstCharToLowerCase\")] public class Attr : Node Inheritance object EventTarget Node Attr Inherited Members Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The core idea of an object of type Attr is the association between a name and a value. An attribute may also be part of a namespace and, in this case, it also has a URI identifying the namespace, and a prefix that is an abbreviation for the namespace. The name is deemed local when it ignores the eventual namespace prefix and deemed qualified when it includes the prefix of the namespace, if any, separated from the local name by a colon (:). We have three cases: an attribute outside of a namespace, an attribute inside a namespace without a prefix defined, an attribute inside a namespace with a prefix: Attribute Namespace name Namespace prefix Attribute local name Attribute qualified name myAttr none none myAttr myAttr myAttr mynamespace none myAttr myAttr myAttr mynamespace myns myAttr myns:myAttr NOTE Note: This interface represents only attributes present in the tree representation of the Element, being a SVG, an HTML or a MathML element. It doesn't represent the property of an interface associated with such element, such as HTMLTableElement for a {{HTMLElement(\"table\")}} element. (See {{Glossary(\"Attribute\", \"this article\")}} for more information about attributes and how they are reflected into properties.) -Other nodes are CDATASection, CharacterData, Comment, Document, Element, ProcessingInstruction, and Text. See also on MDN Properties LocalName The read-only localName property of the Attr interface returns the local part of the qualified name of an attribute, that is the name of the attribute, stripped from any namespace in front of it. For example, if the qualified name is xml:lang, the returned local name is lang, if the element supports that namespace. public string LocalName { get; } Property Value string A string representing the local part of the attribute&apos;s qualified name. Remarks The local name is always in lower case, whatever case at the attribute creation. NOTE Note: HTML only supports a fixed set of namespaces on SVG and MathML elements. These are xml (for the xml:lang attribute), xlink (for the xlink:href, xlink:show, xlink:target and xlink:title attributes) and xpath. That means that the local name of an attribute of an HTML element is always be equal to its qualified name: Colons are treated as regular characters. In XML, like in SVG or MathML, the colon denotes the end of the prefix and what is before is the namespace; the local name may be different from the qualified name. -The properties Name, returning the qualified name of the attribute, and Prefix, the namespace prefix. -The LocalName property, returning the local name of an Element. See also on MDN Name The read-only name property of the Attr interface returns the qualified name of an attribute, that is the name of the attribute, with the namespace prefix, if any, in front of it. For example, if the local name is lang and the namespace prefix is xml, the returned qualified name is xml:lang. public string Name { get; } Property Value string A string representing the attribute&apos;s qualified name. Remarks The qualified name is always in lower case, whatever case at the attribute creation. -The properties LocalName, returning the local part of the qualified name of the attribute, and Prefix, the namespace prefix. -The TagName property, returning the qualified name of an Element. See also on MDN NamespaceURI The read-only namespaceURI property of the Attr interface returns the namespace URI of the attribute, or null if the element is not in a namespace. public string? NamespaceURI { get; } Property Value string A string containing the URI of the namespace, or null if the attribute is not in a namespace. Remarks The namespace URI is set at the Attr creation and cannot be changed. An attribute with a namespace can be created using SetAttributeNS(string?, string, string). NOTE Note: an attribute does not inherit its namespace from the element it is attached to. If an attribute is not explicitly given a namespace, it has no namespace. The browser does not handle or enforce namespace validation per se. It is up to the JavaScript application to do any necessary validation. Note, too, that the namespace prefix, once it is associated with a particular attribute node, cannot be changed. -The properties Name, returning the qualified name of the attribute, LocalName, the local part of the name, and Prefix, the namespace prefix. -The NamespaceURI property, equivalent to this one but for an Element. -The SetAttributeNS(string?, string, string) method, creating an attribute with a given namespace. See also on MDN OwnerElement The read-only ownerElement property of the Attr interface returns the Element the attribute belongs to. public Element? OwnerElement { get; } Property Value Element The Element the attribute belongs to, or null if the attribute is not linked to an element. Remarks See also on MDN Prefix The read-only prefix property of the Attr returns the namespace prefix of the attribute, or null if no prefix is specified. public string? Prefix { get; } Property Value string A string containing the prefix of the namespace the attribute belongs too. If none, it returns null. Remarks The prefix is always in lower case, whatever case is used at the attribute creation. NOTE Note: Only XML supports namespaces. HTML does not. That means that the prefix of an attribute of an HTML element will always be null. Also, only the xml (for the xml:lang attribute), xlink (for the xlink:href, xlink:show, xlink:target and xlink:title attributes) and xpath namespaces are supported, and only on SVG and MathML elements. -The properties Name, returning the qualified name of the attribute, and LocalName, its local name. -The Prefix property, returning the namespace prefix of an Element. See also on MDN Specified IMPORTANT Deprecated The read-only specified property of the Attr interface always returns true. public bool Specified { get; } Property Value bool Always returns true. Remarks See also on MDN Value The value property of the Attr interface contains the value of the attribute. public string Value { get; set; } Property Value string A string representing the attribute value. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioTrack.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioTrack.html",
    "title": "Class AudioTrack | CSharpToJavaScript",
    "keywords": "Class AudioTrack Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioTrack interface represents a single audio track from one of the HTML media elements, audio or video. [To(\"FirstCharToLowerCase\")] public class AudioTrack Inheritance object AudioTrack Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The most common use for accessing an AudioTrack object is to toggle its Enabled property in order to mute and unmute the track. See also on MDN Properties Enabled The AudioTrack property enabled specifies whether or not the described audio track is currently enabled for use. If the track is disabled by setting enabled to false, the track is muted and does not produce audio. public bool Enabled { get; set; } Property Value bool The enabled property is a Boolean whose value is true if the track is enabled; enabled tracks produce audio while the media is playing. Setting enabled to false effectively mutes the audio track, preventing it from contributing to the media&apos;s audio performance. Remarks See also on MDN Id The id property contains a string which uniquely identifies the track represented by the AudioTrack. public string Id { get; } Property Value string A string which identifies the track, suitable for use when calling GetTrackById(string) on an AudioTrackList such as the one specified by a media element's AudioTracks property. Remarks This ID can be used with the GetTrackById(string) method to locate a specific track within the media associated with a media element. The track ID can also be used as the fragment of a URL that loads the specific track (if the media supports media fragments). See also on MDN Kind The kind property contains a string indicating the category of audio contained in the AudioTrack. public string Kind { get; } Property Value string A string specifying the type of content the media represents. The string is one of those found in Audio track kind strings below. Remarks The kind can be used to determine the scenarios in which specific tracks should be enabled or disabled. See Audio track kind strings for a list of the kinds available for audio tracks. See also on MDN Label The read-only AudioTrack property label returns a string specifying the audio track&apos;s human-readable label, if one is available; otherwise, it returns an empty string. public string Label { get; } Property Value string A string specifying the track&apos;s human-readable label, if one is available in the track metadata. Otherwise, an empty string (&quot;&quot;) is returned.For example, a track whose Kind is &quot;commentary&quot; might have a label such as &quot;Commentary with director Mark Markmarkimark and star Donna Donnalidon&quot;. Remarks See also on MDN Language The read-only AudioTrack property language returns a string identifying the language used in the audio track. public string Language { get; } Property Value string A string specifying the BCP 47 ({{RFC(5646)}}) format language tag of the primary language used in the audio track, or an empty string (&quot;&quot;) if the language is not specified or known, or if the track doesn&apos;t contain speech.For example, if the primary language used in the track is United States English, this value would be &quot;en-US&quot;. For Brazilian Portuguese, the value would be &quot;pt-BR&quot;. Remarks For tracks that include multiple languages (such as a movie in English in which a few lines are spoken in other languages), this should be the video&apos;s primary language. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.AudioTrackList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.AudioTrackList.html",
    "title": "Class AudioTrackList | CSharpToJavaScript",
    "keywords": "Class AudioTrackList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The AudioTrackList interface is used to represent a list of the audio tracks contained within a given HTML media element, with each track represented by a separate AudioTrack object in the list. [To(\"FirstCharToLowerCase\")] public class AudioTrackList : EventTarget Inheritance object EventTarget AudioTrackList Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Retrieve an instance of this object with 'HTMLMediaElement.AudioTracks'. The individual tracks can be accessed using array syntax. See also on MDN Properties Length The read-only AudioTrackList property length returns the number of entries in the AudioTrackList, each of which is an AudioTrack representing one audio track in the media element. A value of 0 indicates that there are no audio tracks in the media. public ulong Length { get; } Property Value ulong A number indicating how many audio tracks are included in the AudioTrackList. Each track can be accessed by treating the AudioTrackList as an array of objects of type AudioTrack. Remarks See also on MDN Onaddtrack public EventHandlerNonNull Onaddtrack { get; set; } Property Value EventHandlerNonNull Onchange public EventHandlerNonNull Onchange { get; set; } Property Value EventHandlerNonNull Onremovetrack public EventHandlerNonNull Onremovetrack { get; set; } Property Value EventHandlerNonNull Methods GetTrackById(string) The AudioTrackList method getTrackById() returns the first AudioTrack object from the track list whose {{domxref(\"AudioTrack.id\", &quot;id&quot;)}} matches the specified string. This lets you find a specified track if you know its ID string. public AudioTrack? GetTrackById(string id) Parameters id string Returns AudioTrack An AudioTrack object indicating the first track found within the AudioTrackList whose id matches the specified string. If no match is found, this method returns null.The tracks are searched in their natural order; that is, in the order defined by the media resource itself, or, if the resource doesn&apos;t define an order, the relative order in which the tracks are declared by the media resource. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.BarProp.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BarProp.html",
    "title": "Class BarProp | CSharpToJavaScript",
    "keywords": "Class BarProp Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The BarProp interface of the 'Document Object Model' represents the web browser user interface elements that are exposed to scripts in web pages. Each of the following interface elements are represented by a BarProp object. [To(\"FirstCharToLowerCase\")] public class BarProp Inheritance object BarProp Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The BarProp interface is not accessed directly, but via one of these elements. See also on MDN Properties Visible The visible read-only property of the BarProp interface returns true if the user interface element it represents is visible. public bool Visible { get; } Property Value bool A Boolean, which is true if the top-level window is opened by Open(string, string, string) with the Open(string, string, string). NOTE Note: Historically this represented whether the interface element used is visible or not. But for privacy reasons, this no longer represents the actual visibility of each interface element. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.BeforeUnloadEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BeforeUnloadEvent.html",
    "title": "Class BeforeUnloadEvent | CSharpToJavaScript",
    "keywords": "Class BeforeUnloadEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll BeforeUnloadEvent is an interface for the Window/beforeunload_event event. [To(\"FirstCharToLowerCase\")] public class BeforeUnloadEvent : Event Inheritance object Event BeforeUnloadEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The beforeunload event is fired when the window, the document and its resources are about to be unloaded. When a non-empty string is assigned to the returnValue Event property, a dialog box appears, asking the users for confirmation to leave the page (see example below). When no value is provided, the event is processed silently. Some implementations only show the dialog box if the frame or any embedded frame receives a user gesture or user interaction. See Browser compatibility for more information. NOTE Note: For security reasons, only a generic string not under the control of the webpage is shown instead of the returned string. -Document/DOMContentLoaded_event -Document/readystatechange_event -Window/load_event -Window/beforeunload_event -Window/unload_event -Unloading Documents — Prompt to unload a document See also on MDN Properties ReturnValue public string ReturnValue { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.BlobCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BlobCallback.html",
    "title": "Struct BlobCallback | CSharpToJavaScript",
    "keywords": "Struct BlobCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct BlobCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.Body.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Body.html",
    "title": "Interface Body | CSharpToJavaScript",
    "keywords": "Interface Body Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface Body Properties Body Unsupported? Body { get; } Property Value Unsupported BodyUsed bool BodyUsed { get; } Property Value bool Methods ArrayBuffer() Task<byte[]> ArrayBuffer() Returns Task<byte[]> Blob() Task<Unsupported> Blob() Returns Task<Unsupported> FormData() Task<FormData> FormData() Returns Task<FormData> Json() Task<dynamic> Json() Returns Task<dynamic> Text() Task<string> Text() Returns Task<string>"
  },
  "api/CSharpToJavaScript.APIs.JS.BroadcastChannel.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.BroadcastChannel.html",
    "title": "Class BroadcastChannel | CSharpToJavaScript",
    "keywords": "Class BroadcastChannel Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The BroadcastChannel interface represents a named channel that any {{glossary(\"browsing context\")}} of a given {{glossary(\"origin\")}} can subscribe to. It allows communication between different documents (in different windows, tabs, frames or iframes) of the same origin. Messages are broadcasted via a BroadcastChannel/message_event event fired at all BroadcastChannel objects listening to the channel, except the object that sent the message. [To(\"FirstCharToLowerCase\")] public class BroadcastChannel : EventTarget Inheritance object EventTarget BroadcastChannel Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -Another, more heavyweight, way of communicating between browser contexts: ServiceWorker. -Broadcast Channel API overview See also on MDN Constructors BroadcastChannel(string) The BroadcastChannel() constructor creates a new BroadcastChannel and connects it to the underlying channel. public BroadcastChannel(string name) Parameters name string Remarks AvailableInWorkers -BroadcastChannel, the interface it belongs to. See also on MDN Properties Name The read-only BroadcastChannel.name property returns a string, which uniquely identifies the given channel with its name. This name is passed to the BroadcastChannel.BroadCastChannel constructor at creation time and is therefore read-only. public string Name { get; } Property Value string A string. Remarks AvailableInWorkers -BroadcastChannel, the interface it belongs to. See also on MDN Onmessage public EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onmessageerror public EventHandlerNonNull Onmessageerror { get; set; } Property Value EventHandlerNonNull Methods Close() The BroadcastChannel.close() terminates the connection to the underlying channel, allowing the object to be garbage collected. This is a necessary step to perform as there is no other way for a browser to know that this channel is not needed anymore. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined Remarks AvailableInWorkers -BroadcastChannel, the interface it belongs to. See also on MDN PostMessage(dynamic) The BroadcastChannel.postMessage() sends a message, which can be of any kind of Object, to each listener in any browsing context with the same origin. The message is transmitted as a &apos;message&apos; event targeted at each BroadcastChannel bound to the channel. public GlobalObject.Undefined PostMessage(dynamic message) Parameters message dynamic Returns GlobalObject.Undefined None. Remarks AvailableInWorkers -BroadcastChannel, the interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CDATASection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CDATASection.html",
    "title": "Class CDATASection | CSharpToJavaScript",
    "keywords": "Class CDATASection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CDATASection interface represents a CDATA section that can be used within XML to include extended portions of unescaped text. When inside a CDATA section, the symbols &lt; and & don&apos;t need escaping as they normally do. [To(\"FirstCharToLowerCase\")] public class CDATASection : Text, NonDocumentTypeChildNode, ChildNode, Slottable Inheritance object EventTarget Node CharacterData Text CDATASection Implements NonDocumentTypeChildNode ChildNode Slottable Inherited Members Text.SplitText(ulong) Text.WholeText CharacterData.Data CharacterData.Length CharacterData.SubstringData(ulong, ulong) CharacterData.AppendData(string) CharacterData.InsertData(ulong, string) CharacterData.DeleteData(ulong, ulong) CharacterData.ReplaceData(ulong, ulong, string) Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks In XML, a CDATA section looks like: For example: The only sequence which is not allowed within a CDATA section is the closing sequence of a CDATA section itself, ]]&gt;. NOTE Note: CDATA sections should not be used within HTML they are considered as comments and not displayed. -Document.CreateCDATASection See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CSSStyleDeclaration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CSSStyleDeclaration.html",
    "title": "Interface CSSStyleDeclaration | CSharpToJavaScript",
    "keywords": "Interface CSSStyleDeclaration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public interface CSSStyleDeclaration Properties Display [To(\"FirstCharToLowerCase\")] string Display { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.CanPlayTypeResult.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanPlayTypeResult.html",
    "title": "Enum CanPlayTypeResult | CSharpToJavaScript",
    "keywords": "Enum CanPlayTypeResult Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanPlayTypeResult Fields Empty = 0 Maybe = 1 Probably = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasCompositing.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasCompositing.html",
    "title": "Interface CanvasCompositing | CSharpToJavaScript",
    "keywords": "Interface CanvasCompositing Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasCompositing Properties GlobalAlpha double GlobalAlpha { get; set; } Property Value double GlobalCompositeOperation string GlobalCompositeOperation { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasDirection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasDirection.html",
    "title": "Enum CanvasDirection | CSharpToJavaScript",
    "keywords": "Enum CanvasDirection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasDirection Fields Inherit = 2 Ltr = 0 Rtl = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasDrawImage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasDrawImage.html",
    "title": "Interface CanvasDrawImage | CSharpToJavaScript",
    "keywords": "Interface CanvasDrawImage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasDrawImage Methods DrawImage(Union29, double, double) GlobalObject.Undefined DrawImage(Union29 image, double dx, double dy) Parameters image Union29 dx double dy double Returns GlobalObject.Undefined DrawImage(Union29, double, double, double, double) GlobalObject.Undefined DrawImage(Union29 image, double dx, double dy, double dw, double dh) Parameters image Union29 dx double dy double dw double dh double Returns GlobalObject.Undefined DrawImage(Union29, double, double, double, double, double, double, double, double) GlobalObject.Undefined DrawImage(Union29 image, double sx, double sy, double sw, double sh, double dx, double dy, double dw, double dh) Parameters image Union29 sx double sy double sw double sh double dx double dy double dw double dh double Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasDrawPath.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasDrawPath.html",
    "title": "Interface CanvasDrawPath | CSharpToJavaScript",
    "keywords": "Interface CanvasDrawPath Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasDrawPath Methods BeginPath() GlobalObject.Undefined BeginPath() Returns GlobalObject.Undefined Clip(CanvasFillRule) GlobalObject.Undefined Clip(CanvasFillRule fillRule) Parameters fillRule CanvasFillRule Returns GlobalObject.Undefined Clip(Path2D, CanvasFillRule) GlobalObject.Undefined Clip(Path2D path, CanvasFillRule fillRule) Parameters path Path2D fillRule CanvasFillRule Returns GlobalObject.Undefined Fill(CanvasFillRule) GlobalObject.Undefined Fill(CanvasFillRule fillRule) Parameters fillRule CanvasFillRule Returns GlobalObject.Undefined Fill(Path2D, CanvasFillRule) GlobalObject.Undefined Fill(Path2D path, CanvasFillRule fillRule) Parameters path Path2D fillRule CanvasFillRule Returns GlobalObject.Undefined IsPointInPath(Path2D, double, double, CanvasFillRule) bool IsPointInPath(Path2D path, double x, double y, CanvasFillRule fillRule) Parameters path Path2D x double y double fillRule CanvasFillRule Returns bool IsPointInPath(double, double, CanvasFillRule) bool IsPointInPath(double x, double y, CanvasFillRule fillRule) Parameters x double y double fillRule CanvasFillRule Returns bool IsPointInStroke(Path2D, double, double) bool IsPointInStroke(Path2D path, double x, double y) Parameters path Path2D x double y double Returns bool IsPointInStroke(double, double) bool IsPointInStroke(double x, double y) Parameters x double y double Returns bool Stroke() GlobalObject.Undefined Stroke() Returns GlobalObject.Undefined Stroke(Path2D) GlobalObject.Undefined Stroke(Path2D path) Parameters path Path2D Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasFillRule.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasFillRule.html",
    "title": "Enum CanvasFillRule | CSharpToJavaScript",
    "keywords": "Enum CanvasFillRule Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasFillRule Fields Evenodd = 1 Nonzero = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasFillStrokeStyles.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasFillStrokeStyles.html",
    "title": "Interface CanvasFillStrokeStyles | CSharpToJavaScript",
    "keywords": "Interface CanvasFillStrokeStyles Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasFillStrokeStyles Properties FillStyle Union31 FillStyle { get; set; } Property Value Union31 StrokeStyle Union30 StrokeStyle { get; set; } Property Value Union30 Methods CreateConicGradient(double, double, double) CanvasGradient CreateConicGradient(double startAngle, double x, double y) Parameters startAngle double x double y double Returns CanvasGradient CreateLinearGradient(double, double, double, double) CanvasGradient CreateLinearGradient(double x0, double y0, double x1, double y1) Parameters x0 double y0 double x1 double y1 double Returns CanvasGradient CreatePattern(Union29, string) CanvasPattern? CreatePattern(Union29 image, string repetition) Parameters image Union29 repetition string Returns CanvasPattern CreateRadialGradient(double, double, double, double, double, double) CanvasGradient CreateRadialGradient(double x0, double y0, double r0, double x1, double y1, double r1) Parameters x0 double y0 double r0 double x1 double y1 double r1 double Returns CanvasGradient"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasFilter.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasFilter.html",
    "title": "Class CanvasFilter | CSharpToJavaScript",
    "keywords": "Class CanvasFilter Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CanvasFilter Inheritance object CanvasFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CanvasFilter(Union33) public CanvasFilter(Union33 filters) Parameters filters Union33"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasFilters.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasFilters.html",
    "title": "Interface CanvasFilters | CSharpToJavaScript",
    "keywords": "Interface CanvasFilters Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasFilters Properties Filter Union32 Filter { get; set; } Property Value Union32"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasFontKerning.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasFontKerning.html",
    "title": "Enum CanvasFontKerning | CSharpToJavaScript",
    "keywords": "Enum CanvasFontKerning Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasFontKerning Fields Auto = 0 None = 2 Normal = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasFontStretch.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasFontStretch.html",
    "title": "Enum CanvasFontStretch | CSharpToJavaScript",
    "keywords": "Enum CanvasFontStretch Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasFontStretch Fields Condensed = 2 Expanded = 6 ExtraCondensed = 1 ExtraExpanded = 7 Normal = 4 SemiCondensed = 3 SemiExpanded = 5 UltraCondensed = 0 UltraExpanded = 8"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasFontVariantCaps.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasFontVariantCaps.html",
    "title": "Enum CanvasFontVariantCaps | CSharpToJavaScript",
    "keywords": "Enum CanvasFontVariantCaps Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasFontVariantCaps Fields AllPetiteCaps = 4 AllSmallCaps = 2 Normal = 0 PetiteCaps = 3 SmallCaps = 1 TitlingCaps = 6 Unicase = 5"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasGradient.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasGradient.html",
    "title": "Class CanvasGradient | CSharpToJavaScript",
    "keywords": "Class CanvasGradient Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CanvasGradient interface represents an opaque object describing a gradient. It is returned by the methods CanvasRenderingContext2D.CreateLinearGradient, CanvasRenderingContext2D.CreateConicGradient or CanvasRenderingContext2D.CreateRadialGradient. [To(\"FirstCharToLowerCase\")] public class CanvasGradient Inheritance object CanvasGradient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It can be used as a CanvasRenderingContext2D.FillStyle or CanvasRenderingContext2D.StrokeStyle. -Creator methods in CanvasRenderingContext2D. -The {{HTMLElement(\"canvas\")}} element and its associated interface, HTMLCanvasElement. See also on MDN Methods AddColorStop(double, string) The CanvasGradient.addColorStop() method adds a new color stop, defined by an offset and a color, to a given canvas gradient. public GlobalObject.Undefined AddColorStop(double offset, string color) Parameters offset double color string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The interface defining this method: CanvasGradient -CanvasRenderingContext2D.CreateLinearGradient -CanvasRenderingContext2D.CreateRadialGradient See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasImageData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasImageData.html",
    "title": "Interface CanvasImageData | CSharpToJavaScript",
    "keywords": "Interface CanvasImageData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasImageData Methods CreateImageData(ImageData) ImageData CreateImageData(ImageData imagedata) Parameters imagedata ImageData Returns ImageData CreateImageData(long, long, ImageDataSettings) ImageData CreateImageData(long sw, long sh, ImageDataSettings settings) Parameters sw long sh long settings ImageDataSettings Returns ImageData GetImageData(long, long, long, long, ImageDataSettings) ImageData GetImageData(long sx, long sy, long sw, long sh, ImageDataSettings settings) Parameters sx long sy long sw long sh long settings ImageDataSettings Returns ImageData PutImageData(ImageData, long, long) GlobalObject.Undefined PutImageData(ImageData imagedata, long dx, long dy) Parameters imagedata ImageData dx long dy long Returns GlobalObject.Undefined PutImageData(ImageData, long, long, long, long, long, long) GlobalObject.Undefined PutImageData(ImageData imagedata, long dx, long dy, long dirtyX, long dirtyY, long dirtyWidth, long dirtyHeight) Parameters imagedata ImageData dx long dy long dirtyX long dirtyY long dirtyWidth long dirtyHeight long Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasImageSmoothing.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasImageSmoothing.html",
    "title": "Interface CanvasImageSmoothing | CSharpToJavaScript",
    "keywords": "Interface CanvasImageSmoothing Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasImageSmoothing Properties ImageSmoothingEnabled bool ImageSmoothingEnabled { get; set; } Property Value bool ImageSmoothingQuality ImageSmoothingQuality ImageSmoothingQuality { get; set; } Property Value ImageSmoothingQuality"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasLineCap.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasLineCap.html",
    "title": "Enum CanvasLineCap | CSharpToJavaScript",
    "keywords": "Enum CanvasLineCap Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasLineCap Fields Butt = 0 Round = 1 Square = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasLineJoin.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasLineJoin.html",
    "title": "Enum CanvasLineJoin | CSharpToJavaScript",
    "keywords": "Enum CanvasLineJoin Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasLineJoin Fields Bevel = 1 Miter = 2 Round = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasPath.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasPath.html",
    "title": "Interface CanvasPath | CSharpToJavaScript",
    "keywords": "Interface CanvasPath Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasPath Methods Arc(double, double, double, double, double, bool) GlobalObject.Undefined Arc(double x, double y, double radius, double startAngle, double endAngle, bool counterclockwise) Parameters x double y double radius double startAngle double endAngle double counterclockwise bool Returns GlobalObject.Undefined ArcTo(double, double, double, double, double) GlobalObject.Undefined ArcTo(double x1, double y1, double x2, double y2, double radius) Parameters x1 double y1 double x2 double y2 double radius double Returns GlobalObject.Undefined BezierCurveTo(double, double, double, double, double, double) GlobalObject.Undefined BezierCurveTo(double cp1x, double cp1y, double cp2x, double cp2y, double x, double y) Parameters cp1x double cp1y double cp2x double cp2y double x double y double Returns GlobalObject.Undefined ClosePath() GlobalObject.Undefined ClosePath() Returns GlobalObject.Undefined Ellipse(double, double, double, double, double, double, double, bool) GlobalObject.Undefined Ellipse(double x, double y, double radiusX, double radiusY, double rotation, double startAngle, double endAngle, bool counterclockwise) Parameters x double y double radiusX double radiusY double rotation double startAngle double endAngle double counterclockwise bool Returns GlobalObject.Undefined LineTo(double, double) GlobalObject.Undefined LineTo(double x, double y) Parameters x double y double Returns GlobalObject.Undefined MoveTo(double, double) GlobalObject.Undefined MoveTo(double x, double y) Parameters x double y double Returns GlobalObject.Undefined QuadraticCurveTo(double, double, double, double) GlobalObject.Undefined QuadraticCurveTo(double cpx, double cpy, double x, double y) Parameters cpx double cpy double x double y double Returns GlobalObject.Undefined Rect(double, double, double, double) GlobalObject.Undefined Rect(double x, double y, double w, double h) Parameters x double y double w double h double Returns GlobalObject.Undefined RoundRect(double, double, double, double, Union34) GlobalObject.Undefined RoundRect(double x, double y, double w, double h, Union34 radii) Parameters x double y double w double h double radii Union34 Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasPathDrawingStyles.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasPathDrawingStyles.html",
    "title": "Interface CanvasPathDrawingStyles | CSharpToJavaScript",
    "keywords": "Interface CanvasPathDrawingStyles Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasPathDrawingStyles Properties LineCap CanvasLineCap LineCap { get; set; } Property Value CanvasLineCap LineDashOffset double LineDashOffset { get; set; } Property Value double LineJoin CanvasLineJoin LineJoin { get; set; } Property Value CanvasLineJoin LineWidth double LineWidth { get; set; } Property Value double MiterLimit double MiterLimit { get; set; } Property Value double Methods GetLineDash() List<double> GetLineDash() Returns List<double> SetLineDash(List<double>) GlobalObject.Undefined SetLineDash(List<double> segments) Parameters segments List<double> Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasPattern.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasPattern.html",
    "title": "Class CanvasPattern | CSharpToJavaScript",
    "keywords": "Class CanvasPattern Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CanvasPattern interface represents an opaque object describing a pattern, based on an image, a canvas, or a video, created by the CanvasRenderingContext2D.CreatePattern method. [To(\"FirstCharToLowerCase\")] public class CanvasPattern Inheritance object CanvasPattern Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It can be used as a CanvasRenderingContext2D.FillStyle or CanvasRenderingContext2D.StrokeStyle. -CanvasRenderingContext2D.CreatePattern -The {{HTMLElement(\"canvas\")}} element and its associated interface, HTMLCanvasElement See also on MDN Methods SetTransform(Unsupported) The CanvasPattern.setTransform() method uses a DOMMatrix object as the pattern's transformation matrix and invokes it on the pattern. public GlobalObject.Undefined SetTransform(Unsupported transform) Parameters transform Unsupported Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The interface defining this method: CanvasPattern -DOMMatrix See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasRect.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasRect.html",
    "title": "Interface CanvasRect | CSharpToJavaScript",
    "keywords": "Interface CanvasRect Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasRect Methods ClearRect(double, double, double, double) GlobalObject.Undefined ClearRect(double x, double y, double w, double h) Parameters x double y double w double h double Returns GlobalObject.Undefined FillRect(double, double, double, double) GlobalObject.Undefined FillRect(double x, double y, double w, double h) Parameters x double y double w double h double Returns GlobalObject.Undefined StrokeRect(double, double, double, double) GlobalObject.Undefined StrokeRect(double x, double y, double w, double h) Parameters x double y double w double h double Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasRenderingContext2D.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasRenderingContext2D.html",
    "title": "Class CanvasRenderingContext2D | CSharpToJavaScript",
    "keywords": "Class CanvasRenderingContext2D Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D rendering context for the drawing surface of a canvas element. It is used for drawing shapes, text, images, and other objects. [To(\"FirstCharToLowerCase\")] public class CanvasRenderingContext2D Inheritance object CanvasRenderingContext2D Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The interface&apos;s properties and methods are described in the reference section of this page. The Canvas tutorial has more explanation, examples, and resources, as well. For OffscreenCanvas, there is an equivalent interface that provides the rendering context. The offscreen rendering context inherits most of the same properties and methods as the CanvasRenderingContext2D and is described in more detail in the OffscreenCanvasRenderingContext2D reference page. -HTMLCanvasElement -canvas -OffscreenCanvas See also on MDN Properties Canvas The CanvasRenderingContext2D.canvas property, part of the Canvas API, is a read-only reference to the HTMLCanvasElement object that is associated with a given context. It might be null if there is no associated canvas element. public HTMLCanvasElement Canvas { get; } Property Value HTMLCanvasElement A HTMLCanvasElement object. Remarks -CanvasRenderingContext2D interface -Canvas API See also on MDN Methods GetContextAttributes() The CanvasRenderingContext2D.getContextAttributes() method returns an object that contains the actual context parameters. Context attributes can be requested with HTMLCanvasElement.getContext() on context creation. public CanvasRenderingContext2DSettings GetContextAttributes() Returns CanvasRenderingContext2DSettings A CanvasRenderingContext2DSettings object that contains the actual context parameters. It has the following members: Remarks -HTMLCanvasElement.getContext() -WebGLRenderingContext.getContextAttributes() See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasRenderingContext2DSettings.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasRenderingContext2DSettings.html",
    "title": "Class CanvasRenderingContext2DSettings | CSharpToJavaScript",
    "keywords": "Class CanvasRenderingContext2DSettings Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CanvasRenderingContext2DSettings Inheritance object CanvasRenderingContext2DSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alpha public bool Alpha Field Value bool ColorSpace public PredefinedColorSpace ColorSpace Field Value PredefinedColorSpace Desynchronized public bool Desynchronized Field Value bool WillReadFrequently public bool WillReadFrequently Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasShadowStyles.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasShadowStyles.html",
    "title": "Interface CanvasShadowStyles | CSharpToJavaScript",
    "keywords": "Interface CanvasShadowStyles Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasShadowStyles Properties ShadowBlur double ShadowBlur { get; set; } Property Value double ShadowColor string ShadowColor { get; set; } Property Value string ShadowOffsetX double ShadowOffsetX { get; set; } Property Value double ShadowOffsetY double ShadowOffsetY { get; set; } Property Value double"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasState.html",
    "title": "Interface CanvasState | CSharpToJavaScript",
    "keywords": "Interface CanvasState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasState Methods IsContextLost() bool IsContextLost() Returns bool Reset() GlobalObject.Undefined Reset() Returns GlobalObject.Undefined Restore() GlobalObject.Undefined Restore() Returns GlobalObject.Undefined Save() GlobalObject.Undefined Save() Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasText.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasText.html",
    "title": "Interface CanvasText | CSharpToJavaScript",
    "keywords": "Interface CanvasText Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasText Methods FillText(string, double, double, double) GlobalObject.Undefined FillText(string text, double x, double y, double maxWidth) Parameters text string x double y double maxWidth double Returns GlobalObject.Undefined MeasureText(string) TextMetrics MeasureText(string text) Parameters text string Returns TextMetrics StrokeText(string, double, double, double) GlobalObject.Undefined StrokeText(string text, double x, double y, double maxWidth) Parameters text string x double y double maxWidth double Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasTextAlign.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasTextAlign.html",
    "title": "Enum CanvasTextAlign | CSharpToJavaScript",
    "keywords": "Enum CanvasTextAlign Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasTextAlign Fields Center = 4 End = 1 Left = 2 Right = 3 Start = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasTextBaseline.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasTextBaseline.html",
    "title": "Enum CanvasTextBaseline | CSharpToJavaScript",
    "keywords": "Enum CanvasTextBaseline Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasTextBaseline Fields Alphabetic = 3 Bottom = 5 Hanging = 1 Ideographic = 4 Middle = 2 Top = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasTextDrawingStyles.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasTextDrawingStyles.html",
    "title": "Interface CanvasTextDrawingStyles | CSharpToJavaScript",
    "keywords": "Interface CanvasTextDrawingStyles Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasTextDrawingStyles Properties Direction CanvasDirection Direction { get; set; } Property Value CanvasDirection Font string Font { get; set; } Property Value string FontKerning CanvasFontKerning FontKerning { get; set; } Property Value CanvasFontKerning FontStretch CanvasFontStretch FontStretch { get; set; } Property Value CanvasFontStretch FontVariantCaps CanvasFontVariantCaps FontVariantCaps { get; set; } Property Value CanvasFontVariantCaps LetterSpacing string LetterSpacing { get; set; } Property Value string TextAlign CanvasTextAlign TextAlign { get; set; } Property Value CanvasTextAlign TextBaseline CanvasTextBaseline TextBaseline { get; set; } Property Value CanvasTextBaseline TextRendering CanvasTextRendering TextRendering { get; set; } Property Value CanvasTextRendering WordSpacing string WordSpacing { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasTextRendering.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasTextRendering.html",
    "title": "Enum CanvasTextRendering | CSharpToJavaScript",
    "keywords": "Enum CanvasTextRendering Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum CanvasTextRendering Fields Auto = 0 GeometricPrecision = 3 OptimizeLegibility = 2 OptimizeSpeed = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasTransform.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasTransform.html",
    "title": "Interface CanvasTransform | CSharpToJavaScript",
    "keywords": "Interface CanvasTransform Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasTransform Methods GetTransform() Unsupported GetTransform() Returns Unsupported ResetTransform() GlobalObject.Undefined ResetTransform() Returns GlobalObject.Undefined Rotate(double) GlobalObject.Undefined Rotate(double angle) Parameters angle double Returns GlobalObject.Undefined Scale(double, double) GlobalObject.Undefined Scale(double x, double y) Parameters x double y double Returns GlobalObject.Undefined SetTransform(Unsupported) GlobalObject.Undefined SetTransform(Unsupported transform) Parameters transform Unsupported Returns GlobalObject.Undefined SetTransform(double, double, double, double, double, double) GlobalObject.Undefined SetTransform(double a, double b, double c, double d, double e, double f) Parameters a double b double c double d double e double f double Returns GlobalObject.Undefined Transform(double, double, double, double, double, double) GlobalObject.Undefined Transform(double a, double b, double c, double d, double e, double f) Parameters a double b double c double d double e double f double Returns GlobalObject.Undefined Translate(double, double) GlobalObject.Undefined Translate(double x, double y) Parameters x double y double Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CanvasUserInterface.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CanvasUserInterface.html",
    "title": "Interface CanvasUserInterface | CSharpToJavaScript",
    "keywords": "Interface CanvasUserInterface Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface CanvasUserInterface Methods DrawFocusIfNeeded(Element) GlobalObject.Undefined DrawFocusIfNeeded(Element element) Parameters element Element Returns GlobalObject.Undefined DrawFocusIfNeeded(Path2D, Element) GlobalObject.Undefined DrawFocusIfNeeded(Path2D path, Element element) Parameters path Path2D element Element Returns GlobalObject.Undefined ScrollPathIntoView() GlobalObject.Undefined ScrollPathIntoView() Returns GlobalObject.Undefined ScrollPathIntoView(Path2D) GlobalObject.Undefined ScrollPathIntoView(Path2D path) Parameters path Path2D Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.CharacterData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CharacterData.html",
    "title": "Class CharacterData | CSharpToJavaScript",
    "keywords": "Class CharacterData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CharacterData abstract interface represents a Node object that contains characters. This is an abstract interface, meaning there aren't any objects of type CharacterData: it is implemented by other interfaces like Text, Comment, CDATASection, or ProcessingInstruction, which aren't abstract. [To(\"FirstCharToLowerCase\")] public class CharacterData : Node, NonDocumentTypeChildNode, ChildNode Inheritance object EventTarget Node CharacterData Implements NonDocumentTypeChildNode ChildNode Derived Comment ProcessingInstruction Text Inherited Members Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The DOM overview page. -The concrete interfaces implemented it: Text, CDATASection, ProcessingInstruction, and Comment. See also on MDN Properties Data The data property of the CharacterData interface represent the value of the current object's data. public string Data { get; set; } Property Value string A string with the character information contained in the CharacterData node. Remarks -Length returning the length of the data contained in the CharacterData node. See also on MDN Length The read-only CharacterData.length property returns the number of characters in the contained data, as a positive integer. public ulong Length { get; } Property Value ulong A positive integer with the length of the Data string. Remarks See also on MDN Methods AppendData(string) The appendData() method of the CharacterData interface adds the provided data to the end of the node&apos;s current data. public GlobalObject.Undefined AppendData(string data) Parameters data string Returns GlobalObject.Undefined None. Remarks -DeleteData(ulong, ulong), InsertData(ulong, string), ReplaceData(ulong, ulong, string) -Data See also on MDN DeleteData(ulong, ulong) The deleteData() method of the CharacterData interface removes all or part of the data from this CharacterData node. public GlobalObject.Undefined DeleteData(ulong offset, ulong count) Parameters offset ulong count ulong Returns GlobalObject.Undefined None. Remarks -AppendData(string), InsertData(ulong, string), ReplaceData(ulong, ulong, string) -Data See also on MDN InsertData(ulong, string) The insertData() method of the CharacterData interface inserts the provided data into this CharacterData node&apos;s current data, at the provided offset from the start of the existing data. The provided data is spliced into the existing data. public GlobalObject.Undefined InsertData(ulong offset, string data) Parameters offset ulong data string Returns GlobalObject.Undefined None. Remarks -AppendData(string), DeleteData(ulong, ulong), ReplaceData(ulong, ulong, string) -Data See also on MDN ReplaceData(ulong, ulong, string) The replaceData() method of the CharacterData interface removes a certain number of characters of the existing text in a given CharacterData node and replaces those characters with the text provided. public GlobalObject.Undefined ReplaceData(ulong offset, ulong count, string data) Parameters offset ulong count ulong data string Returns GlobalObject.Undefined None. Remarks -AppendData(string) -DeleteData(ulong, ulong) -InsertData(ulong, string) -Data See also on MDN SubstringData(ulong, ulong) The substringData() method of the CharacterData interface returns a portion of the existing data, starting at the specified index and extending for a given number of characters afterwards. public string SubstringData(ulong offset, ulong count) Parameters offset ulong count ulong Returns string A string with the substring. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ChildNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ChildNode.html",
    "title": "Interface ChildNode | CSharpToJavaScript",
    "keywords": "Interface ChildNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface ChildNode Methods After(params Union7[]) GlobalObject.Undefined After(params Union7[] nodes) Parameters nodes Union7[] Returns GlobalObject.Undefined Before(params Union6[]) GlobalObject.Undefined Before(params Union6[] nodes) Parameters nodes Union6[] Returns GlobalObject.Undefined Remove() GlobalObject.Undefined Remove() Returns GlobalObject.Undefined ReplaceWith(params Union8[]) GlobalObject.Undefined ReplaceWith(params Union8[] nodes) Parameters nodes Union8[] Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.ColorSpaceConversion.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ColorSpaceConversion.html",
    "title": "Enum ColorSpaceConversion | CSharpToJavaScript",
    "keywords": "Enum ColorSpaceConversion Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ColorSpaceConversion Fields Default = 1 None = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.Comment.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Comment.html",
    "title": "Class Comment | CSharpToJavaScript",
    "keywords": "Class Comment Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Comment interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view. [To(\"FirstCharToLowerCase\")] public class Comment : CharacterData, NonDocumentTypeChildNode, ChildNode Inheritance object EventTarget Node CharacterData Comment Implements NonDocumentTypeChildNode ChildNode Inherited Members CharacterData.Data CharacterData.Length CharacterData.SubstringData(ulong, ulong) CharacterData.AppendData(string) CharacterData.InsertData(ulong, string) CharacterData.DeleteData(ulong, ulong) CharacterData.ReplaceData(ulong, ulong, string) Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Comments are represented in HTML and XML as content between &apos;&lt;!--&apos; and &apos;--&gt;&apos;. In XML, like inside SVG or MathML markup, the character sequence &apos;--&apos; cannot be used within a comment. -The DOM API See also on MDN Constructors Comment(string) The Comment() constructor returns a newly created Comment object with the optional string given in parameter as its textual content. public Comment(string data) Parameters data string Remarks -The DOM interfaces index -Document.CreateComment is an outdated alternative to this constructor. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CustomElementConstructor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CustomElementConstructor.html",
    "title": "Struct CustomElementConstructor | CSharpToJavaScript",
    "keywords": "Struct CustomElementConstructor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct CustomElementConstructor Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.CustomElementRegistry.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CustomElementRegistry.html",
    "title": "Class CustomElementRegistry | CSharpToJavaScript",
    "keywords": "Class CustomElementRegistry Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CustomElementRegistry interface provides methods for registering custom elements and querying registered elements. To get an instance of it, use the CustomElements property. [To(\"FirstCharToLowerCase\")] public class CustomElementRegistry Inheritance object CustomElementRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Methods Define(string, CustomElementConstructor, ElementDefinitionOptions) The define() method of the CustomElementRegistry interface defines a new custom element. public GlobalObject.Undefined Define(string name, CustomElementConstructor constructor, ElementDefinitionOptions options) Parameters name string constructor CustomElementConstructor options ElementDefinitionOptions Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks There are two types of custom elements you can create: See also on MDN Get(string) The get() method of the CustomElementRegistry interface returns the constructor for a previously-defined custom element. public Union39 Get(string name) Parameters name string Returns Union39 The constructor for the named custom element, or GlobalObject.Undefined if there is no custom element defined with the name. Remarks See also on MDN Upgrade(Node) The upgrade() method of the CustomElementRegistry interface upgrades all shadow-containing custom elements in a Node subtree, even before they are connected to the main document. public GlobalObject.Undefined Upgrade(Node root) Parameters root Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN WhenDefined(string) The whenDefined() method of the CustomElementRegistry interface returns a {{jsxref(\"Promise\")}} that resolves when the named element is defined. public Task<CustomElementConstructor> WhenDefined(string name) Parameters name string Returns Task<CustomElementConstructor> A Promise that fulfills with the custom element&apos;s constructor when a custom element becomes defined with the given name. If a custom element has already been defined with the name, the promise will immediately fulfill.The promise is rejected with a SyntaxError DOMException if the name is not a valid custom element name. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CustomEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CustomEvent.html",
    "title": "Class CustomEvent | CSharpToJavaScript",
    "keywords": "Class CustomEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The CustomEvent interface represents events initialized by an application for any purpose. [To(\"Default\")] public class CustomEvent : Event Inheritance object Event CustomEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -PostMessage(dynamic, string, List<object>) -Creating and triggering events See also on MDN Constructors CustomEvent(string, CustomEventInit) The CustomEvent() constructor creates a new CustomEvent object. public CustomEvent(string type, CustomEventInit eventInitDict) Parameters type string eventInitDict CustomEventInit Remarks -CustomEvent -Creating and triggering events See also on MDN CustomEvent(string, dynamic) public CustomEvent(string type, dynamic eventInitDict) Parameters type string eventInitDict dynamic Properties Detail The read-only detail property of the CustomEvent interface returns any data passed when initializing the event. [To(\"FirstCharToLowerCase\")] public dynamic Detail { get; } Property Value dynamic Whatever data the event was initialized with. Remarks -CustomEvent See also on MDN Methods InitCustomEvent(string, bool, bool, dynamic) IMPORTANT Deprecated The CustomEvent.initCustomEvent() method initializes a CustomEvent object. If the event has already been dispatched, this method does nothing. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined InitCustomEvent(string type, bool bubbles, bool cancelable, dynamic detail) Parameters type string bubbles bool cancelable bool detail dynamic Returns GlobalObject.Undefined Remarks Events initialized in this way must have been created with the Document.CreateEvent method. This method must be called to set the event before it is dispatched using DispatchEvent(Event). Once dispatched, it doesn&apos;t do anything anymore. NOTE Note: Do not use this method anymore, as it is deprecated. Rather than using the feature, instead use specific event constructors, like CustomEvent(string, dynamic). The page on Creating and triggering events gives more information about the way to use those. -CustomEvent -The constructor to use instead of this deprecated method: CustomEvent(string, dynamic). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.CustomEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.CustomEventInit.html",
    "title": "Class CustomEventInit | CSharpToJavaScript",
    "keywords": "Class CustomEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class CustomEventInit : EventInit Inheritance object EventInit CustomEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Detail public dynamic Detail Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMException.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMException.html",
    "title": "Class DOMException | CSharpToJavaScript",
    "keywords": "Class DOMException Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMException interface represents an abnormal event (called an exception) that occurs as a result of calling a method or accessing a property of a web API. This is how error conditions are described in web APIs. [To(\"FirstCharToLowerCase\")] public class DOMException Inheritance object DOMException Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Each exception has a name, which is a short &quot;PascalCase&quot;-style string identifying the error or abnormal condition. DOMException is a {{Glossary(\"Serializable object\")}}, so it can be cloned with StructuredClone or copied between Workers using PostMessage(dynamic, List<object>). -A polyfill of DOMException is available in core-js -DOMError See also on MDN Constructors DOMException(string, string) The DOMException() constructor returns a DOMException object with a specified message and name. public DOMException(string message, string name) Parameters message string name string Remarks -A polyfill of DOMException constructor is available in core-js See also on MDN Fields ABORT_ERR public const ushort ABORT_ERR = 20 Field Value ushort DATA_CLONE_ERR public const ushort DATA_CLONE_ERR = 25 Field Value ushort DOMSTRING_SIZE_ERR public const ushort DOMSTRING_SIZE_ERR = 2 Field Value ushort HIERARCHY_REQUEST_ERR public const ushort HIERARCHY_REQUEST_ERR = 3 Field Value ushort INDEX_SIZE_ERR public const ushort INDEX_SIZE_ERR = 1 Field Value ushort INUSE_ATTRIBUTE_ERR public const ushort INUSE_ATTRIBUTE_ERR = 10 Field Value ushort INVALID_ACCESS_ERR public const ushort INVALID_ACCESS_ERR = 15 Field Value ushort INVALID_CHARACTER_ERR public const ushort INVALID_CHARACTER_ERR = 5 Field Value ushort INVALID_MODIFICATION_ERR public const ushort INVALID_MODIFICATION_ERR = 13 Field Value ushort INVALID_NODE_TYPE_ERR public const ushort INVALID_NODE_TYPE_ERR = 24 Field Value ushort INVALID_STATE_ERR public const ushort INVALID_STATE_ERR = 11 Field Value ushort NAMESPACE_ERR public const ushort NAMESPACE_ERR = 14 Field Value ushort NETWORK_ERR public const ushort NETWORK_ERR = 19 Field Value ushort NOT_FOUND_ERR public const ushort NOT_FOUND_ERR = 8 Field Value ushort NOT_SUPPORTED_ERR public const ushort NOT_SUPPORTED_ERR = 9 Field Value ushort NO_DATA_ALLOWED_ERR public const ushort NO_DATA_ALLOWED_ERR = 6 Field Value ushort NO_MODIFICATION_ALLOWED_ERR public const ushort NO_MODIFICATION_ALLOWED_ERR = 7 Field Value ushort QUOTA_EXCEEDED_ERR public const ushort QUOTA_EXCEEDED_ERR = 22 Field Value ushort SECURITY_ERR public const ushort SECURITY_ERR = 18 Field Value ushort SYNTAX_ERR public const ushort SYNTAX_ERR = 12 Field Value ushort TIMEOUT_ERR public const ushort TIMEOUT_ERR = 23 Field Value ushort TYPE_MISMATCH_ERR public const ushort TYPE_MISMATCH_ERR = 17 Field Value ushort URL_MISMATCH_ERR public const ushort URL_MISMATCH_ERR = 21 Field Value ushort VALIDATION_ERR public const ushort VALIDATION_ERR = 16 Field Value ushort WRONG_DOCUMENT_ERR public const ushort WRONG_DOCUMENT_ERR = 4 Field Value ushort Properties Code IMPORTANT Deprecated The code read-only property of the DOMException interface returns one of the legacy error code constants, or 0 if none match. public ushort Code { get; } Property Value ushort One of the error code constants, or 0 if none match. Remarks This field is used for historical reasons. New DOM exceptions don't use this anymore: they put this info in the Name attribute. See also on MDN Message The message read-only property of the DOMException interface returns a string representing a message or description associated with the given error name. public string Message { get; } Property Value string A string. Remarks See also on MDN Name The name read-only property of the DOMException interface returns a string that contains one of the strings associated with an error name. public string Name { get; } Property Value string A string. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMImplementation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMImplementation.html",
    "title": "Class DOMImplementation | CSharpToJavaScript",
    "keywords": "Class DOMImplementation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMImplementation interface represents an object providing methods which are not dependent on any particular document. Such an object is returned by the Document.Implementation property. [To(\"FirstCharToLowerCase\")] public class DOMImplementation Inheritance object DOMImplementation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The DOM interfaces index. See also on MDN Methods CreateDocument(string?, string, DocumentType?) The DOMImplementation.createDocument() method creates and returns an XMLDocument. public Unsupported CreateDocument(string? namespace_, string qualifiedName, DocumentType? doctype) Parameters namespace_ string qualifiedName string doctype DocumentType Returns Unsupported None (GlobalObject.Undefined). Remarks -The DOMImplementation interface it belongs to. See also on MDN CreateDocumentType(string, string, string) The DOMImplementation.createDocumentType() method returns a DocumentType object which can either be used with CreateDocument(string?, string, DocumentType?) upon document creation or can be put into the document via methods like InsertBefore(Node, Node?) or ReplaceChild(Node, Node). public DocumentType CreateDocumentType(string qualifiedName, string publicId, string systemId) Parameters qualifiedName string publicId string systemId string Returns DocumentType A DocumentType. Remarks -The DOMImplementation interface it belongs to. See also on MDN CreateHTMLDocument(string) The DOMImplementation.createHTMLDocument() method creates a new HTML Document. public Document CreateHTMLDocument(string title) Parameters title string Returns Document A new HTML Document object. Remarks -The DOMImplementation interface it belongs to. See also on MDN HasFeature() IMPORTANT Deprecated The DOMImplementation.hasFeature() method returns a boolean flag indicating if a given feature is supported. It is deprecated and modern browsers return true in all cases. public bool HasFeature() Returns bool None (GlobalObject.Undefined). Remarks The different implementations fairly diverged in what kind of features were reported. The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use. -The DOMImplementation interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMParser.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMParser.html",
    "title": "Class DOMParser | CSharpToJavaScript",
    "keywords": "Class DOMParser Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMParser interface provides the ability to parse XML or HTML source code from a string into a DOM Document. [To(\"FirstCharToLowerCase\")] public class DOMParser Inheritance object DOMParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can perform the opposite operation—converting a DOM tree into XML or HTML source—using the XMLSerializer interface. In the case of an HTML document, you can also replace portions of the DOM with new DOM trees built from HTML by setting the value of the Element.InnerHTML and Element.OuterHTML properties. These properties can also be read to fetch HTML fragments corresponding to the corresponding DOM subtree. Note that XMLHttpRequest can parse XML and HTML directly from a URL-addressable resource, returning a Document in its Response property. NOTE Note: Be aware that block-level elements like &lt;p&gt; will be automatically closed if another block-level element is nested inside and therefore parsed before the closing &lt;/p&gt; tag. -Parsing and serializing XML -XMLHttpRequest -XMLSerializer -JSONParse - counterpart for JSON documents. See also on MDN Constructors DOMParser() The DOMParser() constructor creates a new DOMParser object. This object can be used to parse the text of a document using the parseFromString() method. public DOMParser() Remarks See also on MDN Methods ParseFromString(string, DOMParserSupportedType) The parseFromString() method of the DOMParser interface parses a string containing either HTML or XML, returning an HTMLDocument or an XMLDocument. public Document ParseFromString(string string_, DOMParserSupportedType type) Parameters string_ string type DOMParserSupportedType Returns Document An HTMLDocument or an XMLDocument, depending on the mimeType argument. Remarks -XMLSerializer -JSONParse - counterpart for JSON documents. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMParserSupportedType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMParserSupportedType.html",
    "title": "Enum DOMParserSupportedType | CSharpToJavaScript",
    "keywords": "Enum DOMParserSupportedType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum DOMParserSupportedType Fields ApplicationXhtmlXml = 3 ApplicationXml = 2 ImageSvgXml = 4 TextHtml = 0 TextXml = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMStringList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMStringList.html",
    "title": "Class DOMStringList | CSharpToJavaScript",
    "keywords": "Class DOMStringList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMString interface is a legacy type returned by some APIs and represents a non-modifiable list of strings (DOMString). Modern APIs use Array objects (in WebIDL: sequence&lt;DOMString&gt;) instead. [To(\"FirstCharToLowerCase\")] public class DOMStringList Inheritance object DOMStringList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface is used in IndexedDB and in the Location API: See also on MDN Properties Length The read-only length property indicates the number of strings in the DOMStringList. public ulong Length { get; } Property Value ulong A Number. Remarks See also on MDN Methods Contains(string) The contains() method returns a boolean indicating whether the given string is in the list. public bool Contains(string string_) Parameters string_ string Returns bool A boolean indicating whether the given string is in the list. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMStringMap.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMStringMap.html",
    "title": "Class DOMStringMap | CSharpToJavaScript",
    "keywords": "Class DOMStringMap Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMStringMap interface is used for the HTMLElement.Dataset/SVGElement.Dataset attribute, to represent data for custom attributes added to elements. [To(\"FirstCharToLowerCase\")] public class DOMStringMap Inheritance object DOMStringMap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTMLElement.Dataset / SVGElement.Dataset -Global attributes - data-* See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DOMTokenList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DOMTokenList.html",
    "title": "Class DOMTokenList | CSharpToJavaScript",
    "keywords": "Class DOMTokenList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOMTokenList interface represents a set of space-separated tokens. Such a set is returned by ClassList or RelList, and many others. [To(\"FirstCharToLowerCase\")] public class DOMTokenList Inheritance object DOMTokenList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A DOMTokenList is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive. See also on MDN Properties this[int] public string this[int i] { get; set; } Parameters i int Property Value string Length The read-only length property of the DOMTokenList interface is an integer representing the number of objects stored in the object. public ulong Length { get; } Property Value ulong An positive integer, or 0 if the list is empty. Remarks See also on MDN Value The value property of the DOMTokenList interface is a stringifier that returns the value of the list serialized as a string, or clears and sets the list to the given value. public string Value { get; set; } Property Value string A string representing the serialized content of the list. Each item is separated by a space. Remarks See also on MDN Methods Add(params string[]) The add() method of the DOMTokenList interface adds the given tokens to the list, omitting any that are already present. public GlobalObject.Undefined Add(params string[] tokens) Parameters tokens string[] Returns GlobalObject.Undefined None. Remarks See also on MDN Contains(string) The contains() method of the DOMTokenList interface returns a boolean value — true if the underlying list contains the given token, otherwise false. public bool Contains(string token) Parameters token string Returns bool A boolean value, which is true if the calling list contains token, otherwise false. Remarks See also on MDN Remove(params string[]) The remove() method of the DOMTokenList interface removes the specified tokens from the list. public GlobalObject.Undefined Remove(params string[] tokens) Parameters tokens string[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Replace(string, string) The replace() method of the DOMTokenList interface replaces an existing token with a new token. If the first token doesn&apos;t exist, replace() returns false immediately, without adding the new token to the token list. public bool Replace(string token, string newToken) Parameters token string newToken string Returns bool A boolean value, which is true if oldToken was successfully replaced, or false if not. Remarks See also on MDN Supports(string) The supports() method of the DOMTokenList interface returns true if a given token is in the associated attribute&apos;s supported tokens. This method is intended to support feature detection. public bool Supports(string token) Parameters token string Returns bool A boolean value indicating whether the token was found. Remarks See also on MDN Toggle(string, bool) The toggle() method of the DOMTokenList interface removes an existing token from the list and returns false. If the token doesn&apos;t exist it&apos;s added and the function returns true. public bool Toggle(string token, bool force) Parameters token string force bool Returns bool A boolean value, true or false, indicating whether token is in the list after the call or not. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DataTransfer.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DataTransfer.html",
    "title": "Class DataTransfer | CSharpToJavaScript",
    "keywords": "Class DataTransfer Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DataTransfer object is used to hold the data that is being dragged during a drag and drop operation. It may hold one or more data items, each of one or more data types. For more information about drag and drop, see HTML Drag and Drop API. [To(\"FirstCharToLowerCase\")] public class DataTransfer Inheritance object DataTransfer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This object is available from the DataTransfer property of all DragEvent. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN Constructors DataTransfer() The DataTransfer constructor creates a new DataTransfer object instance. public DataTransfer() Remarks See also on MDN Properties DropEffect The DataTransfer.dropEffect property controls the feedback (typically visual) the user is given during a drag and drop operation. It will affect which cursor is displayed while dragging. For example, when the user hovers over a target drop element, the browser&apos;s cursor may indicate which type of operation will occur. public string DropEffect { get; set; } Property Value string A string representing the drag operation effect. The possible values are:Assigning any other value to dropEffect has no effect and the old value is retained. Remarks When the DataTransfer object is created, dropEffect is set to a string value. On getting, it returns its current value. On setting, if the new value is one of the values listed below, then the property&apos;s current value will be set to the new value and other values will be ignored. For the HTMLElement/dragenter_event and HTMLElement/dragover_event events, dropEffect will be initialized based on what action the user is requesting. How this is determined is platform specific, but typically the user can press modifier keys such as the alt key to adjust the desired action. Within event handlers for HTMLElement/dragenter_event and HTMLElement/dragover_event events, dropEffect should be modified if a different action is desired than the action that the user is requesting. For the HTMLElement/drop_event and HTMLElement/dragend_event events, dropEffect will be set to the action that was desired, which will be the value dropEffect had after the last HTMLElement/dragenter_event or HTMLElement/dragover_event event. In a HTMLElement/dragend_event event, for instance, if the desired dropEffect is \"move\", then the data being dragged should be removed from the source. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN EffectAllowed The DataTransfer.effectAllowed property specifies the effect that is allowed for a drag operation. The copy operation is used to indicate that the data being dragged will be copied from its present location to the drop location. The move operation is used to indicate that the data being dragged will be moved, and the link operation is used to indicate that some form of relationship or connection will be created between the source and drop locations. public string EffectAllowed { get; set; } Property Value string A string representing the drag operation that is allowed. The possible values are:Assigning any other value to effectAllowed has no effect and the old value is retained. Remarks This property should be set in the HTMLElement/dragstart_event event to set the desired drag effect for the drag source. Within the HTMLElement/dragenter_event and HTMLElement/dragover_event event handlers, this property will be set to whatever value was assigned during the HTMLElement/dragstart_event event, thus effectAllowed may be used to determine which effect is permitted. Assigning a value to effectAllowed in events other than HTMLElement/dragstart_event has no effect. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN Files The files property of DataTransfer objects is a FileList in the drag operation. If the operation includes no files, the list is empty. public Unsupported Files { get; } Property Value Unsupported A FileList of the files in a drag operation, one list item for each file in the operation. If the drag operation had no files, the list is empty. Remarks This feature can be used to drag files from a user&apos;s desktop to the browser. NOTE Note: The files property of DataTransfer objects can only be accessed from within the drop event. For all other events, the files property will be empty — because its underlying data store will be in a protected mode. See also on MDN Items The read-only DataTransfer property items property is a DataTransferItemList of the {{domxref(\"DataTransferItem\",\"data transfer items&quot;, &quot;&quot;, &quot;nocode&quot;)}} in a drag operation. The list includes one item for each item in the operation and if the operation had no items, the list is empty. public DataTransferItemList Items { get; } Property Value DataTransferItemList A DataTransferItemList object containing DataTransferItem objects representing the items being dragged in a drag operation, one list item for each object being dragged. If the drag operation had no data, the list is empty. Remarks -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN Types The DataTransfer.types read-only property returns the available types that exist in the Items. public string[] Types { get; } Property Value string[] An array of the data formats used in the drag operation. Each format is a string which is generally a MIME type such as text/plain or text/html. If the drag operation included no data, this list will be empty. If any files are included in the drag operation, then one of the types will be the string Files. Remarks -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN Methods ClearData(string) The DataTransfer.clearData() method removes the drag operation's DataTransfer for the given type. If data for the given type does not exist, this method does nothing. public GlobalObject.Undefined ClearData(string format) Parameters format string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If this method is called with no arguments or the format is an empty string, the data of all types will be removed. This method does not remove files from the drag operation, so it&apos;s possible for there still to be an entry with the type &quot;Files&quot; left in the object&apos;s Types list if there are any files included in the drag. NOTE Note: This method can only be used in the handler for the HTMLElement/dragstart_event event, because that&apos;s the only time the drag operation&apos;s data store is writable. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN GetData(string) The DataTransfer.getData() method retrieves drag data (as a string) for the specified type. If the drag operation does not include data, this method returns an empty string. public string GetData(string format) Parameters format string Returns string A string representing the drag data for the specified format. If the drag operation has no data or the operation has no data for the specified format, this method returns an empty string. Remarks Example data types are text/plain and text/uri-list. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN SetData(string, string) The DataTransfer.setData() method sets the drag operation's DataTransfer to the specified data and type. If data for the given type does not exist, it is added at the end of the drag data store, such that the last item in the Types list will be the new type. If data for the given type already exists, the existing data is replaced in the same position. That is, the order of the Types list is not changed when replacing data of the same type. public GlobalObject.Undefined SetData(string format, string data) Parameters format string data string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Example data types are text/plain and text/uri-list. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN SetDragImage(Element, long, long) When a drag occurs, a translucent image is generated from the drag target (the element the HTMLElement/dragstart_event event is fired at), and follows the mouse pointer during the drag. This image is created automatically, so you do not need to create it yourself. However, if a custom image is desired, the DataTransfer.setDragImage() method can be used to set the custom image to be used. The image will typically be an img element but it can also be a canvas or any other visible element. public GlobalObject.Undefined SetDragImage(Element image, long x, long y) Parameters image Element x long y long Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The method&apos;s x and y coordinates define how the image should appear relative to the mouse pointer. These coordinates define the offset into the image where the mouse cursor should be. For instance, to display the image so that the pointer is at its center, use values that are half the width and height of the image. This method must be called in the HTMLElement/dragstart_event event handler. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DataTransferItem.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DataTransferItem.html",
    "title": "Class DataTransferItem | CSharpToJavaScript",
    "keywords": "Class DataTransferItem Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DataTransferItem object represents one drag data item. During a drag operation, each DragEvent has a DataTransfer property which contains a DataTransferItemList of drag data items. Each item in the list is a DataTransferItem object. [To(\"FirstCharToLowerCase\")] public class DataTransferItem Inheritance object DataTransferItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface has no constructor. See also on MDN Properties Kind The read-only DataTransferItem.kind property returns a DataTransferItem representing the drag data item kind: some text or some file. public string Kind { get; } Property Value string A string representing the drag data item&apos;s kind. It must be one of the following values: Remarks -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN Type The read-only DataTransferItem.type property returns the type (format) of the DataTransferItem object representing the drag data item. The type is a Unicode string generally given by a MIME type, although a MIME type is not required. public string Type { get; } Property Value string A string representing the drag data item&apos;s type. Remarks Some example types are: text/plain and text/html. -Types -List of common MIME types See also on MDN Methods GetAsFile() If the item is a file, the DataTransferItem.getAsFile() method returns the drag data item's File object. If the item is not a file, this method returns null. public Unsupported? GetAsFile() Returns Unsupported Remarks -Files See also on MDN GetAsString(FunctionStringCallback?) The DataTransferItem.getAsString() method invokes the given callback with the drag data item&apos;s string data as the argument if the item&apos;s Kind is a Plain unicode string (i.e. kind is string). public GlobalObject.Undefined GetAsString(FunctionStringCallback? callback) Parameters callback FunctionStringCallback? Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -GetData(string) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DataTransferItemList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DataTransferItemList.html",
    "title": "Class DataTransferItemList | CSharpToJavaScript",
    "keywords": "Class DataTransferItemList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DataTransferItemList object is a list of DataTransferItem objects representing items being dragged. During a drag operation, each DragEvent has a DataTransfer property and that property is a DataTransferItemList. [To(\"FirstCharToLowerCase\")] public class DataTransferItemList Inheritance object DataTransferItemList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The individual items can be accessed using the bracket notation []. This interface has no constructor. See also on MDN Properties Length The read-only length property of the DataTransferItemList interface returns the number of items currently in the drag item list. public ulong Length { get; } Property Value ulong The number of drag data items in the list, or 0 if the list is empty or disabled. The drag item list is considered to be disabled if the item list&apos;s DataTransfer object is not associated with a drag data store. Remarks See also on MDN Methods Add(Unsupported) The DataTransferItemList.add() method creates a new DataTransferItem using the specified data and adds it to the drag data list. The item may be a File or a string of a given type. If the item is successfully added to the list, the newly-created DataTransferItem object is returned. public DataTransferItem? Add(Unsupported data) Parameters data Unsupported Returns DataTransferItem A DataTransferItem containing the specified data. If the drag item couldn't be created (for example, if the associated DataTransfer object has no data store), null is returned. Remarks See also on MDN Add(string, string) The DataTransferItemList.add() method creates a new DataTransferItem using the specified data and adds it to the drag data list. The item may be a File or a string of a given type. If the item is successfully added to the list, the newly-created DataTransferItem object is returned. public DataTransferItem? Add(string data, string type) Parameters data string type string Returns DataTransferItem A DataTransferItem containing the specified data. If the drag item couldn't be created (for example, if the associated DataTransfer object has no data store), null is returned. Remarks See also on MDN Clear() The DataTransferItemList method clear() removes all DataTransferItem objects from the drag data items list, leaving the list empty. public GlobalObject.Undefined Clear() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The drag data store in which this list is kept is only writable while handling the HTMLElement/dragstart_event event. While handling HTMLElement/drop_event, the drag data store is in read-only mode, and this method silently does nothing. No exception is thrown. See also on MDN Remove(ulong) The DataTransferItemList.remove() method removes the DataTransferItem at the specified index from the list. If the index is less than zero or greater than one less than the length of the list, the list will not be changed. public GlobalObject.Undefined Remove(ulong index) Parameters index ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Date.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Date.html",
    "title": "Class Date | CSharpToJavaScript",
    "keywords": "Class Date Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class Date : DatePrototype Inheritance object DatePrototype Date Inherited Members DatePrototype.GetDate() DatePrototype.GetDay() DatePrototype.GetFullYear() DatePrototype.GetHours() DatePrototype.GetMilliseconds() DatePrototype.GetMinutes() DatePrototype.GetMonth() DatePrototype.GetSeconds() DatePrototype.GetTime() DatePrototype.GetTimezoneOffset() DatePrototype.GetUTCDate() DatePrototype.GetUTCDay() DatePrototype.GetUTCFullYear() DatePrototype.GetUTCHours() DatePrototype.GetUTCMilliseconds() DatePrototype.GetUTCMinutes() DatePrototype.GetUTCMonth() DatePrototype.GetUTCSeconds() DatePrototype.SetDate(float) DatePrototype.SetFullYear(float, float?, float?) DatePrototype.SetHours(float, float?, float?, float?) DatePrototype.SetMilliseconds(float) DatePrototype.SetMinutes(float, float?, float?) DatePrototype.SetMonth(float, float?) DatePrototype.SetSeconds(float, float?) DatePrototype.SetTime(float) DatePrototype.SetUTCDate(float) DatePrototype.SetUTCFullYear(float, float?, float?) DatePrototype.SetUTCHours(float, float?, float?, float?) DatePrototype.SetUTCMilliseconds(float) DatePrototype.SetUTCMinutes(float, float?, float?) DatePrototype.SetUTCMonth(float, float?) DatePrototype.SetUTCSeconds(float, float?) DatePrototype.ToDateString() DatePrototype.ToISOString() DatePrototype.ToJSON(dynamic) DatePrototype.ToLocaleDateString(dynamic, dynamic) DatePrototype.ToLocaleString(dynamic, dynamic) DatePrototype.ToLocaleTimeString(dynamic, dynamic) DatePrototype.ToString() DatePrototype.ToTimeString() DatePrototype.ToUTCString() DatePrototype.ValueOf() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Date() public Date() Date(params float[]) public Date(params float[] values) Parameters values float[] Date(string) public Date(string value) Parameters value string Properties Prototype [To(\"FirstCharToLowerCase\")] public static DatePrototype Prototype { get; } Property Value DatePrototype Methods Now() [To(\"FirstCharToLowerCase\")] public static float Now() Returns float Parse(string) [To(\"FirstCharToLowerCase\")] public static float Parse(string str) Parameters str string Returns float UTC(float, float, float, float, float, float, float) [To(\"Default\")] public static float UTC(float year, float month = 0, float date = 1, float hours = 0, float minutes = 0, float seconds = 0, float ms = 0) Parameters year float month float date float hours float minutes float seconds float ms float Returns float"
  },
  "api/CSharpToJavaScript.APIs.JS.DatePrototype.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DatePrototype.html",
    "title": "Class DatePrototype | CSharpToJavaScript",
    "keywords": "Class DatePrototype Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DatePrototype Inheritance object DatePrototype Derived Date Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods GetDate() public float GetDate() Returns float GetDay() public float GetDay() Returns float GetFullYear() public float GetFullYear() Returns float GetHours() public float GetHours() Returns float GetMilliseconds() public float GetMilliseconds() Returns float GetMinutes() public float GetMinutes() Returns float GetMonth() public float GetMonth() Returns float GetSeconds() public float GetSeconds() Returns float GetTime() public float GetTime() Returns float GetTimezoneOffset() public float GetTimezoneOffset() Returns float GetUTCDate() public float GetUTCDate() Returns float GetUTCDay() public float GetUTCDay() Returns float GetUTCFullYear() public float GetUTCFullYear() Returns float GetUTCHours() public float GetUTCHours() Returns float GetUTCMilliseconds() public float GetUTCMilliseconds() Returns float GetUTCMinutes() public float GetUTCMinutes() Returns float GetUTCMonth() public float GetUTCMonth() Returns float GetUTCSeconds() public float GetUTCSeconds() Returns float SetDate(float) public float SetDate(float date) Parameters date float Returns float SetFullYear(float, float?, float?) public float SetFullYear(float year, float? month = null, float? date = null) Parameters year float month float? date float? Returns float SetHours(float, float?, float?, float?) public float SetHours(float hour, float? min = null, float? sec = null, float? ms = null) Parameters hour float min float? sec float? ms float? Returns float SetMilliseconds(float) public float SetMilliseconds(float ms) Parameters ms float Returns float SetMinutes(float, float?, float?) public float SetMinutes(float min, float? sec = null, float? ms = null) Parameters min float sec float? ms float? Returns float SetMonth(float, float?) public float SetMonth(float month, float? date = null) Parameters month float date float? Returns float SetSeconds(float, float?) public float SetSeconds(float sec, float? ms = null) Parameters sec float ms float? Returns float SetTime(float) public float SetTime(float time) Parameters time float Returns float SetUTCDate(float) public float SetUTCDate(float date) Parameters date float Returns float SetUTCFullYear(float, float?, float?) public float SetUTCFullYear(float year, float? month = null, float? date = null) Parameters year float month float? date float? Returns float SetUTCHours(float, float?, float?, float?) public float SetUTCHours(float hour, float? min = null, float? sec = null, float? ms = null) Parameters hour float min float? sec float? ms float? Returns float SetUTCMilliseconds(float) public float SetUTCMilliseconds(float ms) Parameters ms float Returns float SetUTCMinutes(float, float?, float?) public float SetUTCMinutes(float min, float? sec = null, float? ms = null) Parameters min float sec float? ms float? Returns float SetUTCMonth(float, float?) public float SetUTCMonth(float month, float? date = null) Parameters month float date float? Returns float SetUTCSeconds(float, float?) public float SetUTCSeconds(float sec, float? ms = null) Parameters sec float ms float? Returns float ToDateString() public string ToDateString() Returns string ToISOString() public string ToISOString() Returns string ToJSON(dynamic) public string ToJSON(dynamic key) Parameters key dynamic Returns string ToLocaleDateString(dynamic?, dynamic?) public string ToLocaleDateString(dynamic? reserved1 = null, dynamic? reserved2 = null) Parameters reserved1 dynamic reserved2 dynamic Returns string ToLocaleString(dynamic?, dynamic?) public string ToLocaleString(dynamic? reserved1 = null, dynamic? reserved2 = null) Parameters reserved1 dynamic reserved2 dynamic Returns string ToLocaleTimeString(dynamic?, dynamic?) public string ToLocaleTimeString(dynamic? reserved1 = null, dynamic? reserved2 = null) Parameters reserved1 dynamic reserved2 dynamic Returns string ToString() public string ToString() Returns string ToTimeString() public string ToTimeString() Returns string ToUTCString() public string ToUTCString() Returns string ValueOf() public float ValueOf() Returns float"
  },
  "api/CSharpToJavaScript.APIs.JS.DedicatedWorkerGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DedicatedWorkerGlobalScope.html",
    "title": "Class DedicatedWorkerGlobalScope | CSharpToJavaScript",
    "keywords": "Class DedicatedWorkerGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DedicatedWorkerGlobalScope object (the Worker global scope) is accessible through the Self keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See also: Functions available to workers. [To(\"FirstCharToLowerCase\")] public class DedicatedWorkerGlobalScope : WorkerGlobalScope, WindowOrWorkerGlobalScope, AnimationFrameProvider Inheritance object EventTarget WorkerGlobalScope DedicatedWorkerGlobalScope Implements WindowOrWorkerGlobalScope AnimationFrameProvider Inherited Members WorkerGlobalScope.Self WorkerGlobalScope.Location WorkerGlobalScope.Navigator WorkerGlobalScope.ImportScripts(params string[]) WorkerGlobalScope.Onerror WorkerGlobalScope.Onlanguagechange WorkerGlobalScope.Onoffline WorkerGlobalScope.Ononline WorkerGlobalScope.Onrejectionhandled WorkerGlobalScope.Onunhandledrejection EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Worker -WorkerGlobalScope -Using web workers -Functions available to workers See also on MDN Properties Name The name read-only property of the DedicatedWorkerGlobalScope interface returns the name that the Worker was (optionally) given when it was created. This is the name that the Worker(string, WorkerOptions) constructor can pass to get a reference to the DedicatedWorkerGlobalScope. public string Name { get; } Property Value string A string. Remarks -DedicatedWorkerGlobalScope See also on MDN Onmessage public EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onmessageerror public EventHandlerNonNull Onmessageerror { get; set; } Property Value EventHandlerNonNull Methods Close() The close() method of the DedicatedWorkerGlobalScope interface discards any tasks queued in the DedicatedWorkerGlobalScope&apos;s event loop, effectively closing this particular scope. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks DedicatedWorkerGlobalScope See also on MDN PostMessage(dynamic, StructuredSerializeOptions) The postMessage() method of the DedicatedWorkerGlobalScope interface sends a message to the main thread that spawned it. public GlobalObject.Undefined PostMessage(dynamic message, StructuredSerializeOptions options) Parameters message dynamic options StructuredSerializeOptions Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This accepts a data parameter, which contains data to copy from the worker to the main thread. The data may be any value or JavaScript object handled by the structured clone algorithm, which includes cyclical references. The method also accepts an optional array of transferable objects to transfer to the main thread; Unlike the data parameter transferred objects are no longer usable in the worker thread. (Where possible, objects are transferred using a high performance zero-copy operation). The main scope that spawned the worker can send back information to the thread that spawned it using the PostMessage(dynamic, List<object>) method. The DedicatedWorkerGlobalScope interface it belongs to. See also on MDN PostMessage(dynamic, List<object>) The postMessage() method of the DedicatedWorkerGlobalScope interface sends a message to the main thread that spawned it. public GlobalObject.Undefined PostMessage(dynamic message, List<object> transfer) Parameters message dynamic transfer List<object> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This accepts a data parameter, which contains data to copy from the worker to the main thread. The data may be any value or JavaScript object handled by the structured clone algorithm, which includes cyclical references. The method also accepts an optional array of transferable objects to transfer to the main thread; Unlike the data parameter transferred objects are no longer usable in the worker thread. (Where possible, objects are transferred using a high performance zero-copy operation). The main scope that spawned the worker can send back information to the thread that spawned it using the PostMessage(dynamic, List<object>) method. The DedicatedWorkerGlobalScope interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Document.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Document.html",
    "title": "Class Document | CSharpToJavaScript",
    "keywords": "Class Document Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Document interface represents any web page loaded in the browser and serves as an entry point into the web page&apos;s content, which is the DOM tree. [To(\"FirstCharToLowerCase\")] public class Document Inheritance object Document Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The DOM tree includes elements such as body and table, among many others. It provides functionality globally to the document, like how to obtain the page&apos;s URL and create new elements in the document. The Document interface describes the common properties and methods for any kind of document. Depending on the document&apos;s type (e.g. HTML, XML, SVG, …), a larger API is available: HTML documents, served with the &quot;text/html&quot; content type, also implement the HTMLDocument interface, whereas XML and SVG documents implement the XMLDocument interface. See also on MDN Properties AlinkColor IMPORTANT Deprecated Returns or sets the color of an active link in the document body. A link is active during the time between mousedown and mouseup events. public string AlinkColor { get; set; } Property Value string A string containing the name of the color (e.g., blue, darkblue, etc.) or the hexadecimal value of the color (e.g., #0000FF). Remarks See also on MDN All IMPORTANT Deprecated The Document interface's read-only all property returns an HTMLAllCollection rooted at the document node. In other words, it returns all of the document&apos;s elements, accessible by order (like an array) and by ID (like a regular object). public HTMLAllCollection All { get; } Property Value HTMLAllCollection An HTMLAllCollection which contains every element in the document. Remarks See also on MDN Anchors IMPORTANT Deprecated The anchors read-only property of the Document interface returns a list of all of the anchors in the document. public HTMLCollection Anchors { get; } Property Value HTMLCollection An HTMLCollection. Remarks See also on MDN Applets IMPORTANT Deprecated The applets property of the Document returns an empty HTMLCollection. This property is kept only for compatibility reasons; in older versions of browsers, it returned a list of the applets within a document. public HTMLCollection Applets { get; } Property Value HTMLCollection An empty HTMLCollection. Remarks NOTE Note: Support for the applet element has been removed by all browsers. Therefore, calling document.applets always returns an empty collection. See also on MDN BgColor IMPORTANT Deprecated The deprecated bgColor property gets or sets the background color of the current document. public string BgColor { get; set; } Property Value string A string representing the color as a word (e.g., &quot;red&quot;) or hexadecimal value (e.g., &quot;#ff0000&quot;). Remarks See also on MDN Body The Document.body property represents the body or frameset node of the current document, or null if no such element exists. public HTMLElement? Body { get; set; } Property Value HTMLElement One of the following: Remarks -Head See also on MDN Cookie The Document property cookie lets you read and write cookies associated with the document. It serves as a getter and setter for the actual values of the cookies. public string Cookie { get; set; } Property Value string Remarks -HTTP cookies -DOM Storage -URL.pathname -DateToUTCString -RFC 2965 See also on MDN CurrentScript The Document.currentScript property returns the script element whose script is currently being processed and isn&apos;t a JavaScript module. (For modules use import.meta instead.) public Union18? CurrentScript { get; } Property Value Union18? A HTMLScriptElement or null. Remarks It's important to note that this will not reference the script element if the code in the script is being called as a callback or event handler; it will only reference the element while it&apos;s initially being processed. -import.meta -script -Document.Afterscriptexecute_event -Document.Beforescriptexecute_event See also on MDN DefaultView In browsers, document.defaultView returns the Window object associated with {{Glossary(\"Browsing_context\", \"a document&quot;)}}, or null if none is available. public Window? DefaultView { get; } Property Value Window The Window object. Remarks This property is read-only. See also on MDN DesignMode document.designMode controls whether the entire document is editable. Valid values are &quot;on&quot; and &quot;off&quot;. According to the specification, this property is meant to default to &quot;off&quot;. Firefox follows this standard. The earlier versions of Chrome and IE default to &quot;inherit&quot;. Starting in Chrome 43, the default is &quot;off&quot; and &quot;inherit&quot; is no longer supported. In IE6-10, the value is capitalized. public string DesignMode { get; set; } Property Value string A string indicating whether designMode is (or should be) set to on or off. Valid values are on and off. Remarks -HTMLElement.ContentEditable See also on MDN Dir The Document.dir property is a string representing the directionality of the text of the document, whether left to right (default) or right to left. Possible values are &apos;rtl&apos;, right to left, and &apos;ltr&apos;, left to right. public string Dir { get; set; } Property Value string A string. Remarks -dir global attribute See also on MDN Domain IMPORTANT Deprecated The domain property of the Document interface gets/sets the domain portion of the origin of the current document, as used by the same-origin policy. public string Domain { get; set; } Property Value string A string. Remarks -Same-origin policy -Hostname -Host -Origin See also on MDN Embeds The embeds read-only property of the Document interface returns a list of the embedded embed elements within the current document. public HTMLCollection Embeds { get; } Property Value HTMLCollection An HTMLCollection. Remarks See also on MDN FgColor IMPORTANT Deprecated fgColor gets/sets the foreground color, or text color, of the current document. public string FgColor { get; set; } Property Value string A string representing the color as a word (e.g., &quot;red&quot;) or hexadecimal value (e.g., &quot;#ff0000&quot;). Remarks See also on MDN Forms The forms read-only property of the Document interface returns an HTMLCollection listing all the form elements contained in the document. public HTMLCollection Forms { get; } Property Value HTMLCollection An HTMLCollection object listing all of the document's forms. Each item in the collection is a HTMLFormElement representing a single &lt;form&gt; element.If the document has no forms, the returned collection is empty, with a length of zero. Remarks NOTE Note: Similarly, you can access a list of a form&apos;s component user input elements using the Elements property. -HTML forms -{{HTMLElement(\"form\")}} and the HTMLFormElement interface See also on MDN Fullscreen IMPORTANT Deprecated The obsolete Document interface's fullscreen read-only property reports whether or not the document is currently displaying content in fullscreen mode. public bool Fullscreen { get; } Property Value bool A Boolean value which is true if the document is currently displaying an element in fullscreen mode; otherwise, the value is false. Remarks Although this property is read-only, it will not throw if it is modified (even in strict mode); the setter is a no-operation and it will be ignored. NOTE Note: Since this property is deprecated, you can determine if fullscreen mode is active on the document by checking to see if Document.FullscreenElement is not null. -Fullscreen API -Guide to the Fullscreen API -FullscreenEnabled See also on MDN FullscreenEnabled The read-only fullscreenEnabled property on the Document interface indicates whether or not fullscreen mode is available. public bool FullscreenEnabled { get; } Property Value bool A boolean value which is true if the document and the elements within can be placed into fullscreen mode by calling RequestFullscreen(FullscreenOptions). If fullscreen mode isn't available, this value is false. Remarks fullscreen mode is available only for a page that has no windowed plug-ins in any of its documents, and if all iframe elements which contain the document have their allowfullscreen attribute set. Although this property is read-only, it will not throw if it is modified (even in strict mode); the setter is a no-operation and it will be ignored. -Fullscreen API -Guide to the Fullscreen API -RequestFullscreen(FullscreenOptions) -ExitFullscreen() -Document.FullscreenElement -:fullscreen and {{cssxref(\"::backdrop&quot;)}} -The iframe allowfullscreen attribute See also on MDN Head The head read-only property of the Document interface returns the {{HTMLElement(\"head\")}} element of the current document. public HTMLHeadElement? Head { get; } Property Value HTMLHeadElement An HTMLHeadElement. Remarks -Body See also on MDN Hidden The Document.hidden read-only property returns a Boolean value indicating if the page is considered hidden or not. public bool Hidden { get; } Property Value bool Remarks NOTE Note: This property is described as &quot;historical&quot; in the Page Visibility Level 2 specification. Consider using the VisibilityState property instead. See also on MDN Images The images read-only property of the Document interface returns a collection of the images in the current HTML document. public HTMLCollection Images { get; } Property Value HTMLCollection An HTMLCollection providing a live list of all of the images contained in the current document. Each entry in the collection is an HTMLImageElement representing a single image element. Remarks See also on MDN LastModified The lastModified property of the Document interface returns a string containing the date and time on which the current document was last modified. public string LastModified { get; } Property Value string A string. Remarks See also on MDN LinkColor IMPORTANT Deprecated The Document.linkColor property gets/sets the color of links within the document. public string LinkColor { get; set; } Property Value string A string representing the color as a word (e.g., red) or hexadecimal value (e.g., #ff0000). Remarks This property is deprecated. As an alternative, you can set the CSS {{cssxref(\"color\")}} property on either HTML anchor links (a) or on :link pseudo-classes. Another alternative is document.body.link, although this is deprecated in HTML 4.01. -VlinkColor -AlinkColor See also on MDN Links The links read-only property of the Document interface returns a collection of all {{HTMLElement(\"area\")}} elements and {{HTMLElement(\"a\")}} elements in a document with a value for the href attribute. public HTMLCollection Links { get; } Property Value HTMLCollection An HTMLCollection. Remarks See also on MDN Location The Document.location read-only property returns a Location object, which contains information about the URL of the document and provides methods for changing that URL and loading another URL. public Location? Location { get; } Property Value Location A Location object. Remarks Though Document.location is a read-only Location object, you can also assign a string to it. This means that you can work with document.location as if it were a string in most cases: document.location = &apos;http://www.example.com&apos; is a synonym of document.location.href = &apos;http://www.example.com&apos;. If you assign another string to it, browser will load the website you assigned. To retrieve just the URL as a string, the read-only Document.URL property can also be used. If the current document is not in a browsing context, the returned value is null. -The interface of the returned value, Location -A similar information, but attached to the browsing context, Location See also on MDN Onfullscreenchange public EventHandlerNonNull Onfullscreenchange { get; set; } Property Value EventHandlerNonNull Onfullscreenerror public EventHandlerNonNull Onfullscreenerror { get; set; } Property Value EventHandlerNonNull Onreadystatechange public EventHandlerNonNull Onreadystatechange { get; set; } Property Value EventHandlerNonNull Onvisibilitychange public EventHandlerNonNull Onvisibilitychange { get; set; } Property Value EventHandlerNonNull Plugins The plugins read-only property of the Document interface returns an HTMLCollection object containing one or more HTMLEmbedElements representing the embed elements in the current document. public HTMLCollection Plugins { get; } Property Value HTMLCollection An HTMLCollection. Remarks NOTE Note: For a list of installed plugins, use Navigator.plugins instead. -MSDN documentation See also on MDN ReadyState The Document.readyState property describes the loading state of the Document. When the value of this property changes, a Document/readystatechange_event event fires on the Document object. public DocumentReadyState ReadyState { get; } Property Value DocumentReadyState The readyState of a document can be one of following: Remarks -Related events:-Document/readystatechange_event -Document/DOMContentLoaded_event -Window/load_event See also on MDN Referrer The Document.referrer property returns the URI of the page that linked to this page. public string Referrer { get; } Property Value string The value is an empty string if the user navigated to the page directly (not through a link, but, for example, by using a bookmark). Because this property returns only a string, it doesn&apos;t give you document object model (DOM) access to the referring page.Inside an iframe, the Document.referrer will initially be set to the same value as the HTMLAnchorElement/href of the parent window's Window/location. Remarks See also on MDN Scripts The scripts property of the Document interface returns a list of the script elements in the document. The returned object is an HTMLCollection. public HTMLCollection Scripts { get; } Property Value HTMLCollection An HTMLCollection. You can use this just like an array to get all the elements in the list. Remarks See also on MDN Title The document.title property gets or sets the current title of the document. When present, it defaults to the value of the &lt;title&gt;. public string Title { get; set; } Property Value string A string containing the document&apos;s title. If the title was overridden by setting document.title, it contains that value. Otherwise, it contains the title specified in the &lt;title&gt; element.newTitle is the new title of the document. The assignment affects the return value of document.title, the title displayed for the document (e.g. in the titlebar of the window or tab), and it also affects the DOM of the document (e.g. the content of the &lt;title&gt; element in an HTML document). Remarks See also on MDN VisibilityState The Document.visibilityState read-only property returns the visibility of the 'document', that is in which context this element is now visible. It is useful to know if the document is in the background or an invisible tab, or only loaded for pre-rendering. public DocumentVisibilityState VisibilityState { get; } Property Value DocumentVisibilityState Remarks Possible values are: When the value of this property changes, the Document/visibilitychange_event event is sent to the Document. Typical use of this can be to prevent the download of some assets when the document is solely prerendered, or stop some activities when the document is in the background or minimized. See also on MDN VlinkColor IMPORTANT Deprecated The Document.vlinkColor property gets/sets the color of links that the user has visited in the document. public string VlinkColor { get; set; } Property Value string A string representing the color as a word (e.g., &quot;red&quot;) or hexadecimal value (e.g., &quot;#ff0000&quot;). Remarks See also on MDN Methods CaptureEvents() public GlobalObject.Undefined CaptureEvents() Returns GlobalObject.Undefined Clear() IMPORTANT Deprecated The Document.clear() method does nothing, but doesn&apos;t raise any error. public GlobalObject.Undefined Clear() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Close() The Document.close() method finishes writing to a document, opened with Open(string, string). public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN CreateElement(string, string) [To(\"FirstCharToLowerCase\")] public Element CreateElement(string localName, string options = \"\") Parameters localName string options string Returns Element CreateTextNode(string) [To(\"FirstCharToLowerCase\")] public Text CreateTextNode(string data) Parameters data string Returns Text ExecCommand(string, bool, string) IMPORTANT Deprecated When an HTML document has been switched to designMode, its document object exposes an execCommand method to run commands that manipulate the current editable region, such as form inputs or contentEditable elements. public bool ExecCommand(string commandId, bool showUI, string value) Parameters commandId string showUI bool value string Returns bool A boolean value that is false if the command is unsupported or disabled. NOTE Note: document.execCommand() only returns true if it is invoked as part of a user interaction. You can&apos;t use it to verify browser support before calling a command. From Firefox 82, nested document.execCommand() calls will always return false. Remarks Most commands affect the document&apos;s selection (bold, italics, etc.), while others insert new elements (adding a link), or affect an entire line (indenting). When using contentEditable, execCommand() affects the currently active editable element. The Clipboard API can be used instead of execCommand in many cases, but execCommand is still sometimes useful. In particular, the Clipboard API doesn&apos;t replace the insertText command, which you can use to programmatically replace text at the cursor while preserving the undo buffer (edit history) in plain textarea and input elements. -Clipboard API -HTMLElement.ContentEditable -DesignMode See also on MDN ExitFullscreen() The Document method exitFullscreen() requests that the element on this document which is currently being presented in fullscreen mode be taken out of fullscreen mode, restoring the previous state of the screen. This usually reverses the effects of a previous call to RequestFullscreen(FullscreenOptions). public Task<GlobalObject.Undefined> ExitFullscreen() Returns Task<GlobalObject.Undefined> A Promise which is resolved once the {{Glossary(\"user agent\")}} has finished exiting fullscreen mode. If an error occurs while attempting to exit fullscreen mode, the catch() handler for the promise is called. Remarks -Fullscreen API -Guide to the Fullscreen API -RequestFullscreen(FullscreenOptions) -Document.FullscreenElement -:fullscreen and {{cssxref(\"::backdrop&quot;)}} -The iframe allowfullscreen attribute See also on MDN GetElementsByName(string) The getElementsByName() method of the Document object returns a NodeList Collection of elements with a given name attribute in the document. public NodeList GetElementsByName(string elementName) Parameters elementName string Returns NodeList A live NodeList collection, meaning it automatically updates as new elements with the same name are added to, or removed from, the document. Remarks -Document.GetElementById to return a reference to an element by its unique id -Document.GetElementsByTagName to return references to elements with the same tag name -Document.QuerySelector to return references to elements via CSS selectors like &apos;div.myclass&apos; See also on MDN HasFocus() The hasFocus() method of the Document interface returns a boolean value indicating whether the document or any element inside the document has focus. This method can be used to determine whether the active element in a document has focus. public bool HasFocus() Returns bool false if the active element in the document has no focus; true if the active element in the document has focus. Remarks NOTE Note: When viewing a document, an element with focus is always the active element in the document, but an active element does not necessarily have focus. For example, an active element within a popup window that is not the foreground doesn&apos;t have focus. -Document.ActiveElement -Using the Page Visibility API See also on MDN Open(string, string) The Document.open() method opens a document for {{domxref(&quot;Document.write&quot;, &quot;writing&quot;, &quot;&quot;, &quot;1&quot;)}}. public Document Open(string unused1, string unused2) Parameters unused1 string unused2 string Returns Document A Document object instance. Remarks This does come with some side effects. For example: -Document -Open(string, string, string) See also on MDN Open(string, string, string) The Document.open() method opens a document for {{domxref(&quot;Document.write&quot;, &quot;writing&quot;, &quot;&quot;, &quot;1&quot;)}}. public Window? Open(string url, string name, string features) Parameters url string name string features string Returns Window A Document object instance. Remarks This does come with some side effects. For example: -Document -Open(string, string, string) See also on MDN QueryCommandEnabled(string) IMPORTANT Deprecated The Document.queryCommandEnabled() method reports whether or not the specified editor command is enabled by the browser. public bool QueryCommandEnabled(string commandId) Parameters commandId string Returns bool Returns a boolean value which is true if the command is enabled and false if the command isn&apos;t. Remarks -ExecCommand(string, bool, string) -QueryCommandSupported(string) See also on MDN QueryCommandIndeterm(string) public bool QueryCommandIndeterm(string commandId) Parameters commandId string Returns bool QueryCommandState(string) IMPORTANT Deprecated The queryCommandState() method will tell you if the current selection has a certain ExecCommand(string, bool, string) command applied. public bool QueryCommandState(string commandId) Parameters commandId string Returns bool queryCommandState() can return a boolean value or null if the state is unknown. Remarks -HTMLElement.ContentEditable -DesignMode -Browser bugs related to queryCommandState(): Scribe&apos;s &quot;Browser Inconsistencies&quot; documentation See also on MDN QueryCommandSupported(string) IMPORTANT Deprecated The Document.queryCommandSupported() method reports whether or not the specified editor command is supported by the browser. public bool QueryCommandSupported(string commandId) Parameters commandId string Returns bool Returns a boolean value which is true if the command is supported and false if the command isn&apos;t. Remarks -ExecCommand(string, bool, string) -QueryCommandEnabled(string) See also on MDN QueryCommandValue(string) public string QueryCommandValue(string commandId) Parameters commandId string Returns string ReleaseEvents() public GlobalObject.Undefined ReleaseEvents() Returns GlobalObject.Undefined Write(params string[]) WARNING Warning: Use of the document.write() method is strongly discouraged. public GlobalObject.Undefined Write(params string[] text) Parameters text string[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks As the HTML spec itself warns: This method has very idiosyncratic behavior. In some cases, this method can affect the state of the HTML parser while the parser is running, resulting in a DOM that does not correspond to the source of the document (e.g. if the string written is the string &quot;&lt;plaintext&gt;&quot; or &quot;&lt;!--&quot;). In other cases, the call can clear the current page first, as if document.open() had been called. In yet more cases, the method is simply ignored, or throws an exception. Users agents are explicitly allowed to avoid executing script elements inserted via this method. And to make matters even worse, the exact behavior of this method can in some cases be dependent on network latency, which can lead to failures that are very hard to debug. For all these reasons, use of this method is strongly discouraged. Therefore, avoid using document.write() — and if possible, update any existing code that is still using it. The document.write() method writes a string of text to a document stream opened by Open(string, string). NOTE Note: Because document.write() writes to the document stream, calling document.write() on a closed (loaded) document automatically calls document.open(), which will clear the document. -Element.InnerHTML -CreateElement(string, string) See also on MDN Writeln(params string[]) WARNING Warning: Use of the document.writeln() method is strongly discouraged. public GlobalObject.Undefined Writeln(params string[] text) Parameters text string[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks As the HTML spec itself warns: This method has very idiosyncratic behavior. In some cases, this method can affect the state of the HTML parser while the parser is running, resulting in a DOM that does not correspond to the source of the document (e.g. if the string written is the string &quot;&lt;plaintext&gt;&quot; or &quot;&lt;!--&quot;). In other cases, the call can clear the current page first, as if document.open() had been called. In yet more cases, the method is simply ignored, or throws an exception. Users agents are explicitly allowed to avoid executing script elements inserted via this method. And to make matters even worse, the exact behavior of this method can in some cases be dependent on network latency, which can lead to failures that are very hard to debug. For all these reasons, use of this method is strongly discouraged. Therefore, avoid using document.writeln() — and if possible, update any existing code that is still using it. Writes a string of text followed by a newline character to a document. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DocumentAndElementEventHandlers.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DocumentAndElementEventHandlers.html",
    "title": "Interface DocumentAndElementEventHandlers | CSharpToJavaScript",
    "keywords": "Interface DocumentAndElementEventHandlers Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface DocumentAndElementEventHandlers Properties Oncopy EventHandlerNonNull Oncopy { get; set; } Property Value EventHandlerNonNull Oncut EventHandlerNonNull Oncut { get; set; } Property Value EventHandlerNonNull Onpaste EventHandlerNonNull Onpaste { get; set; } Property Value EventHandlerNonNull"
  },
  "api/CSharpToJavaScript.APIs.JS.DocumentFragment.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DocumentFragment.html",
    "title": "Class DocumentFragment | CSharpToJavaScript",
    "keywords": "Class DocumentFragment Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DocumentFragment interface represents a minimal document object that has no parent. [To(\"FirstCharToLowerCase\")] public class DocumentFragment : Node, NonElementParentNode, ParentNode Inheritance object EventTarget Node DocumentFragment Implements NonElementParentNode ParentNode Derived ShadowRoot Inherited Members Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document. The key difference is due to the fact that the document fragment isn't part of the active document tree structure. Changes made to the fragment don't affect the document. See also on MDN Constructors DocumentFragment() The DocumentFragment() constructor returns a new, empty DocumentFragment object. public DocumentFragment() Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DocumentOrShadowRoot.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DocumentOrShadowRoot.html",
    "title": "Interface DocumentOrShadowRoot | CSharpToJavaScript",
    "keywords": "Interface DocumentOrShadowRoot Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface DocumentOrShadowRoot Properties ActiveElement Element? ActiveElement { get; } Property Value Element FullscreenElement Element? FullscreenElement { get; } Property Value Element"
  },
  "api/CSharpToJavaScript.APIs.JS.DocumentReadyState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DocumentReadyState.html",
    "title": "Enum DocumentReadyState | CSharpToJavaScript",
    "keywords": "Enum DocumentReadyState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Document.readyState property describes the loading state of the Document. When the value of this property changes, a Document/readystatechange_event event fires on the Document object. public enum DocumentReadyState Fields Complete = 2 Interactive = 1 Loading = 0 Remarks -Related events:-Document/readystatechange_event -Document/DOMContentLoaded_event -Window/load_event See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DocumentType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DocumentType.html",
    "title": "Class DocumentType | CSharpToJavaScript",
    "keywords": "Class DocumentType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DocumentType interface represents a Node containing a doctype. [To(\"FirstCharToLowerCase\")] public class DocumentType : Node, ChildNode Inheritance object EventTarget Node DocumentType Implements ChildNode Inherited Members Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The DOM interfaces index. -CreateDocumentType(string, string, string) to create a new DocumentType node. See also on MDN Properties Name The read-only name property of the DocumentType returns the type of the document. public string Name { get; } Property Value string A string. Remarks For synthetic DocumentType, this property reflects the value given in parameter to CreateDocumentType(string, string, string). For HTML documents, browsers always set it up to html, whatever the actual DOCTYPE in the source code is. See also on MDN PublicId The read-only publicId property of the DocumentType returns a formal identifier of the document. public string PublicId { get; } Property Value string A string. Remarks For synthetic DocumentType, this property reflects the value given in parameter to CreateDocumentType(string, string, string). For HTML documents, browsers always set it up to html, whatever the actual DOCTYPE in the source code is. For SVG documents, for example, it can be &quot;-//W3C//DTD SVG 1.1//EN&quot;. See also on MDN SystemId The read-only systemId property of the DocumentType returns the URL of the associated DTD. public string SystemId { get; } Property Value string A string. Remarks For synthetic DocumentType, this property reflects the value given in parameter to CreateDocumentType(string, string, string). For HTML documents, browsers always set it up to html, whatever the actual DOCTYPE in the source code is. For SVG documents, for example, it can be &quot;http://www.w3.org/2000/svg&quot;. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DocumentVisibilityState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DocumentVisibilityState.html",
    "title": "Enum DocumentVisibilityState | CSharpToJavaScript",
    "keywords": "Enum DocumentVisibilityState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Document.visibilityState read-only property returns the visibility of the 'document', that is in which context this element is now visible. It is useful to know if the document is in the background or an invisible tab, or only loaded for pre-rendering. public enum DocumentVisibilityState Fields Hidden = 1 Visible = 0 Remarks Possible values are: When the value of this property changes, the Document/visibilitychange_event event is sent to the Document. Typical use of this can be to prevent the download of some assets when the document is solely prerendered, or stop some activities when the document is in the background or minimized. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DragEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DragEvent.html",
    "title": "Class DragEvent | CSharpToJavaScript",
    "keywords": "Class DragEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DragEvent interface is a Event that represents a drag and drop interaction. The user initiates a drag by placing a pointer device (such as a mouse) on the touch surface and then dragging the pointer to a new location (such as another DOM element). Applications are free to interpret a drag and drop interaction in an application-specific way. [To(\"FirstCharToLowerCase\")] public class DragEvent Inheritance object DragEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface inherits properties from MouseEvent and Event. -Drag and drop -Drag Operations -Recommended Drag Types -DataTransfer test - Paste or Drag See also on MDN Constructors DragEvent(string, DragEventInit) This constructor is used to create a synthetic DragEvent object. public DragEvent(string type, DragEventInit eventInitDict) Parameters type string eventInitDict DragEventInit Remarks Although this interface has a constructor, it is not possible to create a useful DataTransfer object from script, since DataTransfer objects have a processing and security model that is coordinated by the browser during drag-and-drops. This interface inherits properties from MouseEvent and Event. See also on MDN Properties DataTransfer The DragEvent.dataTransfer property holds the drag operation's data (as a DataTransfer object). public DataTransfer? DataTransfer { get; } Property Value DataTransfer A DataTransfer object which contains the DragEvent. Remarks This property is {{ReadOnlyInline}}. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.DragEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.DragEventInit.html",
    "title": "Class DragEventInit | CSharpToJavaScript",
    "keywords": "Class DragEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class DragEventInit Inheritance object DragEventInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DataTransfer public DataTransfer? DataTransfer Field Value DataTransfer"
  },
  "api/CSharpToJavaScript.APIs.JS.Element.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Element.html",
    "title": "Class Element | CSharpToJavaScript",
    "keywords": "Class Element Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element. [To(\"FirstCharToLowerCase\")] public class Element : Node, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable Inheritance object EventTarget Node Element Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable Derived HTMLElement Inherited Members Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks For example, the HTMLElement interface is the base interface for HTML elements, while the SVGElement interface is the basis for all SVG elements. Most functionality is specified further down the class hierarchy. Languages outside the realm of the Web platform, like XUL through the XULElement interface, also implement Element. See also on MDN Properties Attributes The Element.attributes property returns a live collection of all attribute nodes registered to the specified node. It is a NamedNodeMap, not an Array, so it has no Array methods and the Attr nodes' indexes may differ among browsers. To be more specific, attributes is a key/value pair of strings that represents any information regarding that attribute. public NamedNodeMap Attributes { get; } Property Value NamedNodeMap A NamedNodeMap object. Remarks -NamedNodeMap, the interface of the returned object -Cross-browser compatibility considerations: on quirksmode See also on MDN ClassList The Element.classList is a read-only property that returns a live DOMTokenList collection of the class attributes of the element. This can then be used to manipulate the class list. public DOMTokenList ClassList { get; } Property Value DOMTokenList A DOMTokenList representing the contents of the element's class attribute. If the class attribute is not set or empty, it returns an empty DOMTokenList, i.e. a DOMTokenList with the length property equal to 0.Although the classList property itself is read-only, you can modify its associated DOMTokenList using the DOMTokenList/add, DOMTokenList/remove, DOMTokenList/replace, and DOMTokenList/toggle methods.You can test whether the element contains a given class using the DOMTokenList/contains method. Remarks Using classList is a convenient alternative to accessing an element&apos;s list of classes as a space-delimited string via ClassName. -ClassName -DOMTokenList -classList.js (a cross-browser JavaScript polyfill that fully implements element.classList) See also on MDN ClassName The className property of the Element interface gets and sets the value of the class attribute of the specified element. public string ClassName { get; set; } Property Value string A string variable representing the class or space-separated classes of the current element. Remarks -ClassList See also on MDN Id The id property of the Element interface represents the element&apos;s identifier, reflecting the id global attribute. public string Id { get; set; } Property Value string A string. Remarks If the id value is not the empty string, it must be unique in a document. The id is often used with {{domxref(&quot;Document.getElementById()&quot;, &quot;getElementById()&quot;)}} to retrieve a particular element. Another common case is to use an element&apos;s ID as a selector when styling the document with CSS. NOTE Note: Identifiers are case-sensitive, but you should avoid creating IDs that differ only in the capitalization. -The DOM id global attribute. See also on MDN LocalName The Element.localName read-only property returns the local part of the qualified name of an element. public string LocalName { get; } Property Value string A string representing the local part of the element&apos;s qualified name. Remarks -NamespaceURI -Prefix -LocalName See also on MDN NamespaceURI The Element.namespaceURI read-only property returns the namespace URI of the element, or null if the element is not in a namespace. public string? NamespaceURI { get; } Property Value string A string, or null. Remarks -LocalName -Prefix -NamespaceURI See also on MDN Onfullscreenchange public EventHandlerNonNull Onfullscreenchange { get; set; } Property Value EventHandlerNonNull Onfullscreenerror public EventHandlerNonNull Onfullscreenerror { get; set; } Property Value EventHandlerNonNull Prefix The Element.prefix read-only property returns the namespace prefix of the specified element, or null if no prefix is specified. public string? Prefix { get; } Property Value string A string. Remarks -NamespaceURI -LocalName -Prefix See also on MDN ShadowRoot The Element.shadowRoot read-only property represents the shadow root hosted by the element. public ShadowRoot? ShadowRoot { get; } Property Value ShadowRoot A ShadowRoot object instance, or null if the associated shadow root was attached with its Mode set to closed. (See AttachShadow(ShadowRootInit) for further details). Remarks Use AttachShadow(ShadowRootInit) to add a shadow root to an existing element. See also on MDN Slot The slot property of the Element interface returns the name of the shadow DOM slot the element is inserted in. public string Slot { get; set; } Property Value string A string. Remarks A slot is a placeholder inside a web component that users can fill with their own markup (see Using templates and slots for more information). See also on MDN TagName The tagName read-only property of the Element interface returns the tag name of the element on which it&apos;s called. public string TagName { get; } Property Value string A string indicating the element&apos;s tag name. This string&apos;s capitalization depends on the document type:For Element objects, the value of tagName is the same as the value of the NodeName property the element object inherits from Node. Remarks For example, if the element is an img, its tagName property is &quot;IMG&quot; (for HTML documents; it may be cased differently for XML/XHTML documents). See also on MDN Methods AttachShadow(ShadowRootInit) The Element.attachShadow() method attaches a shadow DOM tree to the specified element and returns a reference to its ShadowRoot. public ShadowRoot AttachShadow(ShadowRootInit init) Parameters init ShadowRootInit Returns ShadowRoot Returns a ShadowRoot object. Remarks -Mode -DelegatesFocus -SlotAssignment See also on MDN Closest(string) The closest() method of the Element interface traverses the element and its parents (heading toward the document root) until it finds a node that matches the specified CSS selector. public Element? Closest(string selectors) Parameters selectors string Returns Element The closest ancestor Element or itself, which matches the selectors. If there are no such element, null. Remarks -CSS selectors reference -Other Element methods that take selectors: Element.QuerySelector, Element.QuerySelectorAll, and Matches(string). See also on MDN GetAttribute(string) The getAttribute() method of the Element interface returns the value of a specified attribute on the element. public string? GetAttribute(string qualifiedName) Parameters qualifiedName string Returns string A string containing the value of attributeName. Remarks If the given attribute does not exist, the value returned will either be null or &quot;&quot; (the empty string); see Non-existing attributes for details. See also on MDN GetAttributeNS(string?, string) The getAttributeNS() method of the Element interface returns the string value of the attribute with the specified namespace and name. If the named attribute does not exist, the value returned will either be null or &quot;&quot; (the empty string); see Notes for details. public string? GetAttributeNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns string The string value of the specified attribute. If the attribute doesn&apos;t exist, the result is null. NOTE Note: Earlier versions of the DOM specification had this method described as returning an empty string for non-existent attributes, but it was not typically implemented this way since null makes more sense. The DOM4 specification now says this method should return null for non-existent attributes. Remarks -Code snippets:getAttributeNS See also on MDN GetAttributeNames() The getAttributeNames() method of the Element interface returns the attribute names of the element as an Array of strings. If the element has no attributes it returns an empty array. public List<string> GetAttributeNames() Returns List<string> None (GlobalObject.Undefined). Remarks Using getAttributeNames() along with GetAttribute(string), is a memory-efficient and performant alternative to accessing Attributes. The names returned by getAttributeNames() are qualified attribute names, meaning that attributes with a namespace prefix have their names returned with that namespace prefix (not the actual namespace), followed by a colon, followed by the attribute name (for example, xlink:href), while any attributes which have no namespace prefix have their names returned as-is (for example, href). See also on MDN GetAttributeNode(string) Returns the specified attribute of the specified element, as an Attr node. public Attr? GetAttributeNode(string qualifiedName) Parameters qualifiedName string Returns Attr An Attr node for the attribute. Remarks See also on MDN GetAttributeNodeNS(string?, string) Returns the Attr node for the attribute with the given namespace and name. public Attr? GetAttributeNodeNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns Attr The node for specified attribute. Remarks See also on MDN GetElementsByClassName(string) The Element method getElementsByClassName() returns a live HTMLCollection which contains every descendant element which has the specified class name or names. public HTMLCollection GetElementsByClassName(string classNames) Parameters classNames string Returns HTMLCollection An HTMLCollection providing a live-updating list of every element which is a member of every class in names. Remarks The method Document.GetElementsByClassName on the Document interface works essentially the same way, except it acts on the entire document, starting at the document root. See also on MDN GetElementsByTagName(string) The Element.getElementsByTagName() method returns a live HTMLCollection of elements with the given tag name. public HTMLCollection GetElementsByTagName(string qualifiedName) Parameters qualifiedName string Returns HTMLCollection A live HTMLCollection of elements with a matching tag name, in the order they appear. If no elements are found, the HTMLCollection is empty. Remarks All descendants of the specified element are searched, but not the element itself. The returned list is live, which means it updates itself with the DOM tree automatically. Therefore, there is no need to call Element.getElementsByTagName() with the same element and arguments repeatedly if the DOM changes in between calls. When called on an HTML element in an HTML document, getElementsByTagName lower-cases the argument before searching for it. This is undesirable when trying to match camel-cased SVG elements (such as &lt;linearGradient&gt;) in an HTML document. Instead, use GetElementsByTagNameNS(string?, string), which preserves the capitalization of the tag name. Element.getElementsByTagName is similar to Document.GetElementsByTagName, except that it only searches for elements that are descendants of the specified element. See also on MDN GetElementsByTagNameNS(string?, string) The Element.getElementsByTagNameNS() method returns a live HTMLCollection of elements with the given tag name belonging to the given namespace. It is similar to Document.GetElementsByTagNameNS, except that its search is restricted to descendants of the specified element. public HTMLCollection GetElementsByTagNameNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns HTMLCollection A live HTMLCollection of found elements in the order they appear in the tree. Remarks See also on MDN HasAttribute(string) The Element.hasAttribute() method returns a Boolean value indicating whether the specified element has the specified attribute or not. public bool HasAttribute(string qualifiedName) Parameters qualifiedName string Returns bool A boolean. Remarks See also on MDN HasAttributeNS(string?, string) hasAttributeNS returns a boolean value indicating whether the current element has the specified attribute. public bool HasAttributeNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns bool A boolean. Remarks See also on MDN HasAttributes() The hasAttributes() method of the Element interface returns a boolean value indicating whether the current element has any attributes or not. public bool HasAttributes() Returns bool A boolean. Remarks -Attributes -HasAttribute(string) See also on MDN InsertAdjacentElement(string, Element) The insertAdjacentElement() method of the Element interface inserts a given element node at a given position relative to the element it is invoked upon. public Element? InsertAdjacentElement(string where, Element element) Parameters where string element Element Returns Element The element that was inserted, or null, if the insertion failed. Remarks -Element.InsertAdjacentHTML -InsertAdjacentText(string, string) -InsertBefore(Node, Node?) (similar to beforebegin, with different arguments) -AppendChild(Node) (same effect as beforeend) See also on MDN InsertAdjacentText(string, string) The insertAdjacentText() method of the Element interface, given a relative position and a string, inserts a new text node at the given position relative to the element it is called from. public GlobalObject.Undefined InsertAdjacentText(string where, string data) Parameters where string data string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -InsertAdjacentElement(string, Element) -Element.InsertAdjacentHTML See also on MDN Matches(string) The matches() method of the Element interface tests whether the element would be selected by the specified CSS selector. public bool Matches(string selectors) Parameters selectors string Returns bool true if the Element matches the selectors. Otherwise, false. Remarks -CSS selectors reference -Other Element methods that take selectors: Element.QuerySelector, Element.QuerySelectorAll, and Closest(string). See also on MDN RemoveAttribute(string) The Element method removeAttribute() removes the attribute with the specified name from the element. public GlobalObject.Undefined RemoveAttribute(string qualifiedName) Parameters qualifiedName string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN RemoveAttributeNS(string?, string) The removeAttributeNS() method of the Element interface removes the specified attribute from an element. public GlobalObject.Undefined RemoveAttributeNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN RemoveAttributeNode(Attr) The removeAttributeNode() method of the Element interface removes the specified attribute from the element. public Attr RemoveAttributeNode(Attr attr) Parameters attr Attr Returns Attr The attribute node that was removed. Remarks See also on MDN RequestFullscreen(FullscreenOptions) The Element.requestFullscreen() method issues an asynchronous request to make the element be displayed in fullscreen mode. public Task<GlobalObject.Undefined> RequestFullscreen(FullscreenOptions options) Parameters options FullscreenOptions Returns Task<GlobalObject.Undefined> A Promise which is resolved with a value of undefined when the transition to full screen is complete. Remarks It&apos;s not guaranteed that the element will be put into full screen mode. If permission to enter full screen mode is granted, the returned Promise will resolve and the element will receive a Element/fullscreenchange_event event to let it know that it&apos;s now in full screen mode. If permission is denied, the promise is rejected and the element receives a Element/fullscreenerror_event event instead. If the element has been detached from the original document, then the document receives these events instead. -Fullscreen API -ExitFullscreen() -Fullscreen -Document.FullscreenElement -:fullscreen -allowfullscreen See also on MDN SetAttribute(string, string) Sets the value of an attribute on the specified element. If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value. public GlobalObject.Undefined SetAttribute(string qualifiedName, string value) Parameters qualifiedName string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks To get the current value of an attribute, use {{domxref(&quot;Element.getAttribute&quot;, &quot;getAttribute()&quot;)}}; to remove an attribute, call {{domxref(&quot;Element.removeAttribute&quot;, &quot;removeAttribute()&quot;)}}. See also on MDN SetAttributeNS(string?, string, string) setAttributeNS adds a new attribute or changes the value of an attribute with the given namespace and name. public GlobalObject.Undefined SetAttributeNS(string? namespace_, string qualifiedName, string value) Parameters namespace_ string qualifiedName string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN SetAttributeNode(Attr) The setAttributeNode() method adds a new Attr node to the specified element. public Attr? SetAttributeNode(Attr attr) Parameters attr Attr Returns Attr The replaced attribute node, if any, returned by this function. Remarks -Document.CreateAttribute See also on MDN SetAttributeNodeNS(Attr) setAttributeNodeNS adds a new namespaced attribute node to an element. public Attr? SetAttributeNodeNS(Attr attr) Parameters attr Attr Returns Attr The replaced attribute node, if any, returned by this function. Remarks -Document.CreateAttribute -Document.CreateAttributeNS See also on MDN ToggleAttribute(string, bool) The toggleAttribute() method of the Element interface toggles a Boolean attribute (removing it if it is present and adding it if it is not present) on the given element. public bool ToggleAttribute(string qualifiedName, bool force) Parameters qualifiedName string force bool Returns bool true if attribute name is eventually present, and false otherwise. Remarks See also on MDN WebkitMatchesSelector(string) public bool WebkitMatchesSelector(string selectors) Parameters selectors string Returns bool"
  },
  "api/CSharpToJavaScript.APIs.JS.ElementContentEditable.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ElementContentEditable.html",
    "title": "Interface ElementContentEditable | CSharpToJavaScript",
    "keywords": "Interface ElementContentEditable Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface ElementContentEditable Properties ContentEditable string ContentEditable { get; set; } Property Value string EnterKeyHint string EnterKeyHint { get; set; } Property Value string InputMode string InputMode { get; set; } Property Value string IsContentEditable bool IsContentEditable { get; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.ElementDefinitionOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ElementDefinitionOptions.html",
    "title": "Class ElementDefinitionOptions | CSharpToJavaScript",
    "keywords": "Class ElementDefinitionOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ElementDefinitionOptions Inheritance object ElementDefinitionOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Extends public string Extends Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.ElementInternals.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ElementInternals.html",
    "title": "Class ElementInternals | CSharpToJavaScript",
    "keywords": "Class ElementInternals Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ElementInternals interface of the Document Object Model gives web developers a way to allow custom elements to fully participate in HTML forms. It provides utilities for working with these elements in the same way you would work with any standard HTML form element, and also exposes the Accessibility Object Model to the element. [To(\"FirstCharToLowerCase\")] public class ElementInternals Inheritance object ElementInternals Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -More capable form controls -Creating custom form controls with ElementInternals -ElementInternals polyfill See also on MDN Properties Form The form read-only property of the ElementInternals interface returns the HTMLFormElement associated with this element. public HTMLFormElement? Form { get; } Property Value HTMLFormElement An HTMLFormElement. Remarks See also on MDN Labels The labels read-only property of the ElementInternals interface returns the labels associated with the element. public NodeList Labels { get; } Property Value NodeList A NodeList containing all of the label elements associated with this element. Remarks See also on MDN ShadowRoot The shadowRoot read-only property of the ElementInternals interface returns the ShadowRoot for this element. public ShadowRoot? ShadowRoot { get; } Property Value ShadowRoot A ShadowRoot if the element has a shadow root, otherwise null. Remarks See also on MDN ValidationMessage The validationMessage read-only property of the ElementInternals interface returns the validation message for the element. public string ValidationMessage { get; } Property Value string A string containing the validation message of this element. Remarks See also on MDN Validity The validity read-only property of the ElementInternals interface returns a ValidityState object which represents the different validity states the element can be in, with respect to constraint validation. public ValidityState Validity { get; } Property Value ValidityState A ValidityState object. Remarks See also on MDN WillValidate The willValidate read-only property of the ElementInternals interface returns true if the element is a submittable element that is a candidate for constraint validation. public bool WillValidate { get; } Property Value bool true if the element is a candidate for constraint validation, otherwise false. Remarks Elements that are barred from being candidates for constraint validation include those that have the attributes: disabled, hidden or readonly, input elements of type=button or type=reset, or any element that is a datalist element or has a &lt;datalist&gt; element ancestor. See also on MDN Methods CheckValidity() The checkValidity() method of the ElementInternals interface checks if the element meets any constraint validation rules applied to it. public bool CheckValidity() Returns bool A boolean value, true if the element meets all validation constraints. Remarks If checkValidity returns false then a cancelable invalid event is fired on the element. See also on MDN ReportValidity() The reportValidity() method of the ElementInternals interface checks if the element meets any constraint validation rules applied to it. public bool ReportValidity() Returns bool A boolean value, true if the element meets all validation constraints. Remarks If reportValidity returns false then a cancelable invalid event is fired on the element. This method behaves in a similar way to CheckValidity(), however it additionally sends the value of ValidationMessage to the user agent for display. See also on MDN SetFormValue(Union40?, Union41?) The setFormValue() method of the ElementInternals interface sets the element's submission value and state, communicating these to the user agent. public GlobalObject.Undefined SetFormValue(Union40? value, Union41? state) Parameters value Union40? state Union41? Returns GlobalObject.Undefined Undefined. Remarks See also on MDN SetValidity(ValidityStateFlags, string, HTMLElement) The setValidity() method of the ElementInternals interface sets the validity of the element. public GlobalObject.Undefined SetValidity(ValidityStateFlags flags, string message, HTMLElement anchor) Parameters flags ValidityStateFlags message string anchor HTMLElement Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ErrorEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ErrorEvent.html",
    "title": "Class ErrorEvent | CSharpToJavaScript",
    "keywords": "Class ErrorEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ErrorEvent interface represents events providing information related to errors in scripts or in files. [To(\"FirstCharToLowerCase\")] public class ErrorEvent : Event Inheritance object Event ErrorEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Using web workers, most likely objects to raise such an event See also on MDN Constructors ErrorEvent(string, ErrorEventInit) public ErrorEvent(string type, ErrorEventInit eventInitDict) Parameters type string eventInitDict ErrorEventInit Properties Colno public ulong Colno { get; } Property Value ulong Error public dynamic Error { get; } Property Value dynamic Filename public string Filename { get; } Property Value string Lineno public ulong Lineno { get; } Property Value ulong Message public string Message { get; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.ErrorEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ErrorEventInit.html",
    "title": "Class ErrorEventInit | CSharpToJavaScript",
    "keywords": "Class ErrorEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ErrorEventInit : EventInit Inheritance object EventInit ErrorEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Colno public ulong Colno Field Value ulong Error public dynamic Error Field Value dynamic Filename public string Filename Field Value string Lineno public ulong Lineno Field Value ulong Message public string Message Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.Event.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Event.html",
    "title": "Class Event | CSharpToJavaScript",
    "keywords": "Class Event Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Event interface represents an event which takes place in the DOM. [To(\"FirstCharToLowerCase\")] public class Event Inheritance object Event Derived BeforeUnloadEvent CustomEvent ErrorEvent FormDataEvent HashChangeEvent MessageEvent MouseEvent PageTransitionEvent PopStateEvent ProgressEvent PromiseRejectionEvent StorageEvent SubmitEvent TrackEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An event can be triggered by the user action e.g. clicking the mouse button or tapping keyboard, or generated by APIs to represent the progress of an asynchronous task. It can also be triggered programmatically, such as by calling the HTMLElement.click() method of an element, or by defining the event, then sending it to a specified target using EventTarget.dispatchEvent(). There are many types of events, some of which use other interfaces based on the main Event interface. Event itself contains the properties and methods which are common to all events. Many DOM elements can be set up to accept (or &quot;listen&quot; for) these events, and execute code in response to process (or &quot;handle&quot;) them. Event-handlers are usually connected (or &quot;attached&quot;) to various HTML elements (such as &lt;button&gt;, &lt;div&gt;, &lt;span&gt;, etc.) using EventTarget.addEventListener(), and this generally replaces using the old HTML event handler attributes. Further, when properly added, such handlers can also be disconnected if needed using removeEventListener(). NOTE Note: One element can have several such handlers, even for the exact same event—particularly if separate, independent code modules attach them, each for its own independent purposes. (For example, a webpage with an advertising-module and statistics-module both monitoring video-watching.) When there are many nested elements, each with its own handler(s), event processing can become very complicated—especially where a parent element receives the very same event as its child elements because &quot;spatially&quot; they overlap so the event technically occurs in both, and the processing order of such events depends on the Event bubbling and capture settings of each handler triggered. -Types of events available: Event reference -Comparison of Event Targets (target vs. currentTarget vs. relatedTarget vs. originalTarget) -Creating and triggering custom events See also on MDN Constructors Event() public Event() Event(string, EventInit) The Event() constructor creates a new Event object. An event created in this way is called a synthetic event, as opposed to an event fired by the browser, and can be dispatched by a script. public Event(string type, EventInit eventInitDict) Parameters type string eventInitDict EventInit Remarks -Event -DispatchEvent(Event) -Creating and triggering events See also on MDN Fields AT_TARGET public const ushort AT_TARGET = 2 Field Value ushort BUBBLING_PHASE public const ushort BUBBLING_PHASE = 3 Field Value ushort CAPTURING_PHASE public const ushort CAPTURING_PHASE = 1 Field Value ushort NONE public const ushort NONE = 0 Field Value ushort Properties Bubbles The bubbles read-only property of the Event interface indicates whether the event bubbles up through the DOM tree or not. public bool Bubbles { get; } Property Value bool A boolean value, which is true if the event bubbles up through the DOM tree. Remarks NOTE Note: See Event bubbling and capture for more information on bubbling. -StopPropagation() to prevent further propagation of the current event in the capturing and bubbling phases -StopImmediatePropagation() to not call any further listeners for the same event at the same level in the DOM -PreventDefault() to allow propagation to continue but to disallow the browser to perform its default action should no listeners handle the event See also on MDN CancelBubble IMPORTANT Deprecated The cancelBubble property of the Event interface is deprecated. Use StopPropagation() instead. Setting its value to true before returning from an event handler prevents propagation of the event. In later implementations, setting this to false does nothing. See Browser compatibility for details. public bool CancelBubble { get; set; } Property Value bool A boolean value. The value true means that the event must not be propagated further. Remarks See also on MDN Cancelable The cancelable read-only property of the Event interface indicates whether the event can be canceled, and therefore prevented as if the event never happened. public bool Cancelable { get; } Property Value bool A boolean value, which is true if the event can be canceled. Remarks If the event is not cancelable, then its cancelable property will be false and the event listener cannot stop the event from occurring. Most browser-native events that can be canceled are the ones that result from the user interacting with the page. Canceling the Element/click_event, Document/wheel_event, or Window/beforeunload_event events would prevent the user from clicking on something, scrolling the page with the mouse wheel, or navigating away from the page, respectively. Synthetic events created by other JavaScript code define if they can be canceled when they are created. To cancel an event, call the PreventDefault() method on the event. This keeps the implementation from executing the default action that is associated with the event. Event listeners that handle multiple kinds of events may want to check cancelable before invoking their {{domxref(&quot;event.preventDefault&quot;, &quot;preventDefault()&quot;)}} methods. See also on MDN Composed The read-only composed property of the Event interface returns a boolean value which indicates whether or not the event will propagate across the shadow DOM boundary into the standard DOM. public bool Composed { get; } Property Value bool A boolean value which is true if the event will cross from the shadow DOM into the standard DOM after reaching the shadow root. (That is, the first node in the shadow DOM in which the event began to propagate.)If this value is false, the shadow root will be the last node to be offered the event. Remarks All UA-dispatched UI events are composed (click/touch/mouseover/copy/paste, etc.). Most other types of events are not composed, and so will return false. For example, this includes synthetic events that are created without their composed option set to true. Propagation only occurs if the Bubbles property is also true. However, capturing only composed events are also handled at host as if they were in AT_TARGET phase. You can determine the path the event will follow through the shadow root to the DOM root by calling ComposedPath(). See also on MDN CurrentTarget The currentTarget read-only property of the Event interface identifies the current target for the event, as the event traverses the DOM. It always refers to the element to which the event handler has been attached, as opposed to Target, which identifies the element on which the event occurred and which may be its descendant. public EventTarget? CurrentTarget { get; } Property Value EventTarget An EventTarget representing the object to which the current event handler is attached. Remarks -Comparison of Event Targets See also on MDN DefaultPrevented The defaultPrevented read-only property of the Event interface returns a boolean value indicating whether or not the call to PreventDefault() canceled the event. public bool DefaultPrevented { get; } Property Value bool A boolean value, where true indicates that the default user agent action was prevented, and false indicates that it was not. Remarks See also on MDN EventPhase The eventPhase read-only property of the Event interface indicates which phase of the event flow is currently being evaluated. public ushort EventPhase { get; } Property Value ushort Returns an integer value which specifies the current evaluation phase of the event flow. Possible values are: Remarks See also on MDN IsTrusted The isTrusted read-only property of the Event interface is a boolean value that is true when the event was generated by a user action, and false when the event was created or modified by a script or dispatched via DispatchEvent(Event). public bool IsTrusted { get; } Property Value bool A boolean value. Remarks See also on MDN ReturnValue IMPORTANT Deprecated The Event property returnValue indicates whether the default action for this event has been prevented or not. public bool ReturnValue { get; set; } Property Value bool A boolean value which is true if the event has not been canceled; otherwise, if the event has been canceled or the default has been prevented, the value is false.The value of returnValue is the opposite of the value returned by DefaultPrevented. Remarks It is set to true by default, allowing the default action to occur. Setting this property to false prevents the default action. NOTE Note: While returnValue has been adopted into the DOM standard, it is present primarily to support existing code. Use PreventDefault(), and DefaultPrevented instead of this historical property. -ReturnValue: the return value for the {{HTMLElement(\"dialog\")}}. See also on MDN SrcElement IMPORTANT Deprecated The deprecated Event.srcElement is an alias for the Target property. Use Target instead. public EventTarget? SrcElement { get; } Property Value EventTarget Remarks -Event See also on MDN Target The EventTarget interface is implemented by objects that can receive events and may have listeners for them. In other words, any target of events implements the three methods associated with this interface. public EventTarget? Target { get; } Property Value EventTarget Remarks Element, and its children, as well as Document and Window, are the most common event targets, but other objects can be event targets, too. For example XMLHttpRequest, AudioNode, and AudioContext are also event targets. Many event targets (including elements, documents, and windows) also support setting event handlers via onevent properties and attributes. -Event reference – the events available in the platform. -Introduction to events -Event interface See also on MDN TimeStamp The timeStamp read-only property of the Event interface returns the time (in milliseconds) at which the event was created. public Unsupported TimeStamp { get; } Property Value Unsupported This value is the number of milliseconds elapsed from the beginning of the time origin until the event was created. If the global object is Window, the time origin is the moment the user clicked on the link, or the script that initiated the loading of the document. In a worker, the time origin is the moment of creation of the worker.The value is a DOMHighResTimeStamp accurate to 5 microseconds (0.005 ms), but the precision is reduced to prevent fingerprinting. Remarks See also on MDN Type The type read-only property of the Event interface returns a string containing the event&apos;s type. It is set when the event is constructed and is the name commonly used to refer to the specific event, such as click, load, or error. public string Type { get; } Property Value string A string containing the type of Event. Remarks -AddEventListener(string, Action?, Union1) -RemoveEventListener(string, Action?, Union2) See also on MDN Methods ComposedPath() The composedPath() method of the Event interface returns the event&apos;s path which is an array of the objects on which listeners will be invoked. This does not include nodes in shadow trees if the shadow root was created with its Mode closed. public List<EventTarget> ComposedPath() Returns List<EventTarget> An array of EventTarget objects representing the objects on which an event listener will be invoked. Remarks See also on MDN InitEvent(string, bool, bool) IMPORTANT Deprecated The Event.initEvent() method is used to initialize the value of an Event created using Document.CreateEvent. public GlobalObject.Undefined InitEvent(string type, bool bubbles, bool cancelable) Parameters type string bubbles bool cancelable bool Returns GlobalObject.Undefined None. Remarks Events initialized in this way must have been created with the Document.CreateEvent method. This method must be called to set the event before it is dispatched, using DispatchEvent(Event). Once dispatched, it doesn&apos;t do anything anymore. NOTE Note: Do not use this method anymore as it is deprecated. Instead use specific event constructors, like Event(). The page on Creating and triggering events gives more information about the way to use these. -The constructor to use instead of this deprecated method: Event(). To create more specific event interfaces than Event, use the constructor defined for the desired event interface. See also on MDN PreventDefault() The preventDefault() method of the Event interface tells the {{Glossary(\"user agent\")}} that if the event does not get explicitly handled, its default action should not be taken as it normally would be. public GlobalObject.Undefined PreventDefault() Returns GlobalObject.Undefined Remarks The event continues to propagate as usual, unless one of its event listeners calls StopPropagation() or StopImmediatePropagation(), either of which terminates propagation at once. As noted below, calling preventDefault() for a non-cancelable event, such as one dispatched via DispatchEvent(Event), without specifying cancelable: true has no effect. See also on MDN StopImmediatePropagation() The stopImmediatePropagation() method of the Event interface prevents other listeners of the same event from being called. public GlobalObject.Undefined StopImmediatePropagation() Returns GlobalObject.Undefined Remarks If several listeners are attached to the same element for the same event type, they are called in the order in which they were added. If stopImmediatePropagation() is invoked during one such call, no remaining listeners will be called, either on that element or any other element. See also on MDN StopPropagation() The stopPropagation() method of the Event interface prevents further propagation of the current event in the capturing and bubbling phases. It does not, however, prevent any default behaviors from occurring; for instance, clicks on links are still processed. If you want to stop those behaviors, see the PreventDefault() method. It also does not prevent propagation to other event-handlers of the current element. If you want to stop those, see StopImmediatePropagation(). public GlobalObject.Undefined StopPropagation() Returns GlobalObject.Undefined None. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.EventHandlerNonNull.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventHandlerNonNull.html",
    "title": "Struct EventHandlerNonNull | CSharpToJavaScript",
    "keywords": "Struct EventHandlerNonNull Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct EventHandlerNonNull Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.EventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventInit.html",
    "title": "Class EventInit | CSharpToJavaScript",
    "keywords": "Class EventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class EventInit Inheritance object EventInit Derived CustomEventInit ErrorEventInit FormDataEventInit HashChangeEventInit MessageEventInit PageTransitionEventInit PopStateEventInit ProgressEventInit PromiseRejectionEventInit StorageEventInit SubmitEventInit TrackEventInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Bubbles public bool Bubbles Field Value bool Cancelable public bool Cancelable Field Value bool Composed public bool Composed Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.EventListener.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventListener.html",
    "title": "Interface EventListener | CSharpToJavaScript",
    "keywords": "Interface EventListener Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface EventListener Methods HandleEvent(Event) GlobalObject.Undefined HandleEvent(Event event_) Parameters event_ Event Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.EventListenerOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventListenerOptions.html",
    "title": "Class EventListenerOptions | CSharpToJavaScript",
    "keywords": "Class EventListenerOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class EventListenerOptions Inheritance object EventListenerOptions Derived AddEventListenerOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Capture public bool Capture Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.EventSource.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventSource.html",
    "title": "Class EventSource | CSharpToJavaScript",
    "keywords": "Class EventSource Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The EventSource interface is web content&apos;s interface to server-sent events. [To(\"FirstCharToLowerCase\")] public class EventSource : EventTarget Inheritance object EventTarget EventSource Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An EventSource instance opens a persistent connection to an HTTP server, which sends events in text/event-stream format. The connection remains open until closed by calling Close(). Once the connection is opened, incoming messages from the server are delivered to your code in the form of events. If there is an event field in the incoming message, the triggered event is the same as the event field value. If no event field is present, then a generic EventSource/message_event event is fired. Unlike WebSockets, server-sent events are unidirectional; that is, data messages are delivered in one direction, from the server to the client (such as a user&apos;s web browser). That makes them an excellent choice when there&apos;s no need to send data from the client to the server in message form. For example, EventSource is a useful approach for handling things like social media status updates, news feeds, or delivering data into a client-side storage mechanism like IndexedDB or web storage. WARNING Warning: When not used over HTTP/2, SSE suffers from a limitation to the maximum number of open connections, which can be specially painful when opening various tabs as the limit is per browser and set to a very low number (6). The issue has been marked as &quot;Won&apos;t fix&quot; in Chrome and Firefox. This limit is per browser + domain, so that means that you can open 6 SSE connections across all of the tabs to www.example1.com and another 6 SSE connections to www.example2.com. (from Stackoverflow). When using HTTP/2, the maximum number of simultaneous HTTP streams is negotiated between the server and the client (defaults to 100). -Server-sent events -Using server-sent events See also on MDN Constructors EventSource(string, EventSourceInit) The EventSource() constructor returns a newly-created EventSource, which represents a remote resource. public EventSource(string url, EventSourceInit eventSourceInitDict) Parameters url string eventSourceInitDict EventSourceInit Remarks -EventSource See also on MDN Fields CLOSED public const ushort CLOSED = 2 Field Value ushort CONNECTING public const ushort CONNECTING = 0 Field Value ushort OPEN public const ushort OPEN = 1 Field Value ushort Properties Onerror public EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull Onmessage public EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onopen public EventHandlerNonNull Onopen { get; set; } Property Value EventHandlerNonNull ReadyState The readyState read-only property of the EventSource interface returns a number representing the state of the connection. public ushort ReadyState { get; } Property Value ushort A number representing the state of the connection. Possible values are: Remarks -EventSource See also on MDN Url The url read-only property of the EventSource interface returns a string representing the URL of the source. public string Url { get; } Property Value string A string representing the URL of the source. Remarks -EventSource See also on MDN WithCredentials The withCredentials read-only property of the EventSource interface returns a boolean value indicating whether the EventSource object was instantiated with CORS credentials set. public bool WithCredentials { get; } Property Value bool A boolean value indicating whether the EventSource object was instantiated with CORS credentials set (true), or not (false, the default). Remarks -EventSource See also on MDN Methods Close() The close() method of the EventSource interface closes the connection, if one is made, and sets the ReadyState attribute to 2 (closed). public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: If the connection is already closed, the method does nothing. -EventSource See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.EventSourceInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventSourceInit.html",
    "title": "Class EventSourceInit | CSharpToJavaScript",
    "keywords": "Class EventSourceInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class EventSourceInit Inheritance object EventSourceInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields WithCredentials public bool WithCredentials Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.EventTarget.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.EventTarget.html",
    "title": "Class EventTarget | CSharpToJavaScript",
    "keywords": "Class EventTarget Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The EventTarget interface is implemented by objects that can receive events and may have listeners for them. In other words, any target of events implements the three methods associated with this interface. [To(\"FirstCharToLowerCase\")] public class EventTarget Inheritance object EventTarget Derived AbortSignal AudioTrackList BroadcastChannel EventSource MessagePort Node Notification OffscreenCanvas SharedWorker TextTrack TextTrackCue TextTrackList VideoTrackList Window Worker WorkerGlobalScope XMLHttpRequestEventTarget Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Element, and its children, as well as Document and Window, are the most common event targets, but other objects can be event targets, too. For example XMLHttpRequest, AudioNode, and AudioContext are also event targets. Many event targets (including elements, documents, and windows) also support setting event handlers via onevent properties and attributes. -Event reference – the events available in the platform. -Introduction to events -Event interface See also on MDN Constructors EventTarget() The EventTarget() constructor creates a new EventTarget object instance. public EventTarget() Remarks NOTE Note: It is fairly rare to explicitly call this constructor. Most of the time, this constructor is used inside the constructor of an object extending the EventTarget interface, using the super keyword. -EventTarget See also on MDN Methods AddEventListener(string, EventListener?, Union1) The addEventListener() method of the EventTarget interface sets up a function that will be called whenever the specified event is delivered to the target. public GlobalObject.Undefined AddEventListener(string type, EventListener? callback, Union1 options) Parameters type string callback EventListener options Union1 Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Common targets are Element, or its children, Document, and Window, but the target may be any object that supports events (such as XMLHttpRequest). NOTE Note: The addEventListener() method is the recommended way to register an event listener. The benefits are as follows: The method addEventListener() works by adding a function, or an object that implements AddEventListener(string, Action?, Union1), to the list of event listeners for the specified event type on the EventTarget on which it's called. If the function or object is already in the list of event listeners for this target, the function or object is not added a second time. NOTE Note: If a particular anonymous function is in the list of event listeners registered for a certain target, and then later in the code, an identical anonymous function is given in an addEventListener call, the second function will also be added to the list of event listeners for that target. Indeed, anonymous functions are not identical even if defined using the same unchanging source-code called repeatedly, even if in a loop. Repeatedly defining the same unnamed function in such cases can be problematic. (See Memory issues, below.) If an event listener is added to an EventTarget from inside another listener — that is, during the processing of the event — that event will not trigger the new listener. However, the new listener may be triggered during a later stage of event flow, such as during the bubbling phase. -RemoveEventListener(string, Action?, Union2) -Creating and triggering custom events -More details on the use of this in event handlers See also on MDN AddEventListener(string, Action?, Union1) public Unsupported AddEventListener(string type, Action? callback, Union1 options) Parameters type string callback Action options Union1 Returns Unsupported AddEventListener(string, Action<Event>?, Union1) public Unsupported AddEventListener(string type, Action<Event>? callback, Union1 options) Parameters type string callback Action<Event> options Union1 Returns Unsupported AddEventListener(string, Action<MouseEvent>?, Union1) public Unsupported AddEventListener(string type, Action<MouseEvent>? callback, Union1 options) Parameters type string callback Action<MouseEvent> options Union1 Returns Unsupported DispatchEvent(Event) The dispatchEvent() method of the EventTarget sends an Event to the object, (synchronously) invoking the affected EventListeners in the appropriate order. The normal event processing rules (including the capturing and optional bubbling phase) also apply to events dispatched manually with dispatchEvent(). public bool DispatchEvent(Event event_) Parameters event_ Event Returns bool false if event is cancelable, and at least one of the event handlers which received event called PreventDefault(). Otherwise true. Remarks Calling dispatchEvent() is the last step to firing an event. The event should have already been created and initialized using an Event/Event constructor. NOTE Note: When calling this method, the Target property is initialized to the current EventTarget. Unlike &quot;native&quot; events, which are fired by the browser and invoke event handlers asynchronously via the event loop, dispatchEvent() invokes event handlers synchronously. All applicable event handlers are called and return before dispatchEvent() returns. -The Event object reference See also on MDN RemoveEventListener(string, EventListener?, Union2) The removeEventListener() method of the EventTarget interface removes an event listener previously registered with AddEventListener(string, Action?, Union1) from the target. The event listener to be removed is identified using a combination of the event type, the event listener function itself, and various optional options that may affect the matching process; see Matching event listeners for removal. public GlobalObject.Undefined RemoveEventListener(string type, EventListener? callback, Union2 options) Parameters type string callback EventListener options Union2 Returns GlobalObject.Undefined None. Remarks Calling removeEventListener() with arguments that do not identify any currently registered event listener on the EventTarget has no effect. If an event listener is removed from an EventTarget while another listener of the target is processing an event, it will not be triggered by the event. However, it can be reattached. WARNING Warning: If a listener is registered twice, one with the capture flag set and one without, you must remove each one separately. Removal of a capturing listener does not affect a non-capturing version of the same listener, and vice versa. Event listeners can also be removed by passing an AbortSignal to an EventTarget/addEventListener and then later calling AbortController/abort on the controller owning the signal. -AddEventListener(string, Action?, Union1) See also on MDN RemoveEventListener(string, Action?, Union2) public Unsupported RemoveEventListener(string type, Action? callback, Union2 options) Parameters type string callback Action options Union2 Returns Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.External.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.External.html",
    "title": "Class External | CSharpToJavaScript",
    "keywords": "Class External Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class External Inheritance object External Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddSearchProvider() public GlobalObject.Undefined AddSearchProvider() Returns GlobalObject.Undefined IsSearchProviderInstalled() public GlobalObject.Undefined IsSearchProviderInstalled() Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.FocusOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FocusOptions.html",
    "title": "Class FocusOptions | CSharpToJavaScript",
    "keywords": "Class FocusOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FocusOptions Inheritance object FocusOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FocusVisible public bool FocusVisible Field Value bool PreventScroll public bool PreventScroll Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.FormData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FormData.html",
    "title": "Class FormData | CSharpToJavaScript",
    "keywords": "Class FormData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FormData interface provides a way to construct a set of key/value pairs representing form fields and their values, which can be sent using the Fetch, Send(Union50?) or Navigator.SendBeacon methods. It uses the same format a form would use if the encoding type were set to &quot;multipart/form-data&quot;. [To(\"FirstCharToLowerCase\")] public class FormData Inheritance object FormData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can also pass it directly to the URLSearchParams constructor if you want to generate query parameters in the way a {{HTMLElement(\"form\")}} would do if it were using simple GET submission. An object implementing FormData can directly be used in a {{jsxref(\"Statements/for...of\", \"for...of\")}} structure, instead of 'FormData.Entries': for (const p of myFormData) is equivalent to for (const p of myFormData.entries()). NOTE Note: This feature is available in Web Workers. -Using FormData objects -Form See also on MDN Constructors FormData(HTMLFormElement) The FormData() constructor creates a new FormData object. public FormData(HTMLFormElement form) Parameters form HTMLFormElement Remarks NOTE Note: This feature is available in Web Workers. -Using FormData objects -Form See also on MDN Properties this[int] public string this[int i] { get; set; } Parameters i int Property Value string Methods Append(string, Unsupported, string) The append() method of the FormData interface appends a new value onto an existing key inside a FormData object, or adds the key if it does not already exist. public GlobalObject.Undefined Append(string name, Unsupported blobValue, string filename) Parameters name string blobValue Unsupported filename string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The difference between Set(string, string) and append() is that if the specified key already exists, set() will overwrite all existing values with the new one, whereas append() will append the new value onto the end of the existing set of values. NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN Append(string, string) The append() method of the FormData interface appends a new value onto an existing key inside a FormData object, or adds the key if it does not already exist. public GlobalObject.Undefined Append(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The difference between Set(string, string) and append() is that if the specified key already exists, set() will overwrite all existing values with the new one, whereas append() will append the new value onto the end of the existing set of values. NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN Delete(string) The delete() method of the FormData interface deletes a key and its value(s) from a FormData object. public GlobalObject.Undefined Delete(string name) Parameters name string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN Get(string) The get() method of the FormData interface returns the first value associated with a given key from within a FormData object. If you expect multiple values and want all of them, use the GetAll(string) method instead. public Union51? Get(string name) Parameters name string Returns Union51? A value whose key matches the specified name. Otherwise, null. Remarks NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN GetAll(string) The getAll() method of the FormData interface returns all the values associated with a given key from within a FormData object. public List<Union51> GetAll(string name) Parameters name string Returns List<Union51> An array of values whose key matches the specified name. Otherwise, an empty list. Remarks NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN Has(string) The has() method of the FormData interface returns whether a FormData object contains a certain key. public bool Has(string name) Parameters name string Returns bool true if a key of FormData matches the specified name. Otherwise, false. Remarks NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN Set(string, Unsupported, string) The set() method of the FormData interface sets a new value for an existing key inside a FormData object, or adds the key/value if it does not already exist. public GlobalObject.Undefined Set(string name, Unsupported blobValue, string filename) Parameters name string blobValue Unsupported filename string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The difference between set() and Append(string, string) is that if the specified key does already exist, set() will overwrite all existing values with the new one, whereas append() will append the new value onto the end of the existing set of values. NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN Set(string, string) The set() method of the FormData interface sets a new value for an existing key inside a FormData object, or adds the key/value if it does not already exist. public GlobalObject.Undefined Set(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The difference between set() and Append(string, string) is that if the specified key does already exist, set() will overwrite all existing values with the new one, whereas append() will append the new value onto the end of the existing set of values. NOTE Note: This method is available in Web Workers. -Using FormData objects -Form See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FormDataEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FormDataEvent.html",
    "title": "Class FormDataEvent | CSharpToJavaScript",
    "keywords": "Class FormDataEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The FormDataEvent interface represents a formdata event — such an event is fired on an HTMLFormElement object after the entry list representing the form's data is constructed. This happens when the form is submitted, but can also be triggered by the invocation of a FormData(HTMLFormElement) constructor. [To(\"FirstCharToLowerCase\")] public class FormDataEvent : Event Inheritance object Event FormDataEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This allows a FormData object to be quickly obtained in response to a formdata event firing, rather than needing to put it together yourself when you wish to submit form data via a method like XMLHttpRequest (see Using FormData objects). -XMLHTTPRequest -FormData -Using FormData objects -Form See also on MDN Constructors FormDataEvent(string, FormDataEventInit) The FormDataEvent() constructor creates a new FormDataEvent object. public FormDataEvent(string type, FormDataEventInit eventInitDict) Parameters type string eventInitDict FormDataEventInit Remarks -FormDataEvent See also on MDN Properties FormData The formData read-only property of the FormDataEvent interface contains the FormData object representing the data contained in the form when the event was fired. public FormData FormData { get; } Property Value FormData A FormData object. Remarks -XMLHTTPRequest -Using XMLHttpRequest -Using FormData objects -Form See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.FormDataEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FormDataEventInit.html",
    "title": "Class FormDataEventInit | CSharpToJavaScript",
    "keywords": "Class FormDataEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FormDataEventInit : EventInit Inheritance object EventInit FormDataEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FormData public required FormData FormData Field Value FormData"
  },
  "api/CSharpToJavaScript.APIs.JS.FrameRequestCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FrameRequestCallback.html",
    "title": "Struct FrameRequestCallback | CSharpToJavaScript",
    "keywords": "Struct FrameRequestCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct FrameRequestCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.FullscreenNavigationUI.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FullscreenNavigationUI.html",
    "title": "Enum FullscreenNavigationUI | CSharpToJavaScript",
    "keywords": "Enum FullscreenNavigationUI Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum FullscreenNavigationUI Fields Auto = 0 Hide = 2 Show = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.FullscreenOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FullscreenOptions.html",
    "title": "Class FullscreenOptions | CSharpToJavaScript",
    "keywords": "Class FullscreenOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class FullscreenOptions Inheritance object FullscreenOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NavigationUI public FullscreenNavigationUI NavigationUI Field Value FullscreenNavigationUI"
  },
  "api/CSharpToJavaScript.APIs.JS.Function.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Function.html",
    "title": "Struct Function | CSharpToJavaScript",
    "keywords": "Struct Function Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct Function Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.FunctionObjectCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FunctionObjectCallback.html",
    "title": "Struct FunctionObjectCallback | CSharpToJavaScript",
    "keywords": "Struct FunctionObjectCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct FunctionObjectCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.FunctionStringCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.FunctionStringCallback.html",
    "title": "Struct FunctionStringCallback | CSharpToJavaScript",
    "keywords": "Struct FunctionStringCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct FunctionStringCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.GM.Info.Script.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GM.Info.Script.html",
    "title": "Class GM.Info.Script | CSharpToJavaScript",
    "keywords": "Class GM.Info.Script Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public static class GM.Info.Script Inheritance object GM.Info.Script Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Version [To(\"FirstCharToLowerCase\")] public static string Version { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.GM.Info.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GM.Info.html",
    "title": "Class GM.Info | CSharpToJavaScript",
    "keywords": "Class GM.Info Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public static class GM.Info Inheritance object GM.Info Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GM.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GM.html",
    "title": "Class GM | CSharpToJavaScript",
    "keywords": "Class GM Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class GM Inheritance object GM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GM() public GM() Methods DeleteValue(string) [To(\"FirstCharToLowerCase\")] public static void DeleteValue(string name) Parameters name string GetValue(string) [To(\"FirstCharToLowerCase\")] public static Task<dynamic> GetValue(string name) Parameters name string Returns Task<dynamic> ListValues() [To(\"FirstCharToLowerCase\")] public static Task<List<dynamic>> ListValues() Returns Task<List<dynamic>> OpenInTab(string, bool) [To(\"FirstCharToLowerCase\")] public static void OpenInTab(string url, bool open_in_background = false) Parameters url string open_in_background bool SetValue(string, dynamic) [To(\"FirstCharToLowerCase\")] public static void SetValue(string name, dynamic value) Parameters name string value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.GetNotificationOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GetNotificationOptions.html",
    "title": "Class GetNotificationOptions | CSharpToJavaScript",
    "keywords": "Class GetNotificationOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GetNotificationOptions Inheritance object GetNotificationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Tag public string Tag Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.GetRootNodeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GetRootNodeOptions.html",
    "title": "Class GetRootNodeOptions | CSharpToJavaScript",
    "keywords": "Class GetRootNodeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GetRootNodeOptions Inheritance object GetRootNodeOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Composed public bool Composed Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.GlobalEventHandlers.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GlobalEventHandlers.html",
    "title": "Interface GlobalEventHandlers | CSharpToJavaScript",
    "keywords": "Interface GlobalEventHandlers Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface GlobalEventHandlers Properties Onabort EventHandlerNonNull Onabort { get; set; } Property Value EventHandlerNonNull Onauxclick EventHandlerNonNull Onauxclick { get; set; } Property Value EventHandlerNonNull Onbeforeinput EventHandlerNonNull Onbeforeinput { get; set; } Property Value EventHandlerNonNull Onbeforematch EventHandlerNonNull Onbeforematch { get; set; } Property Value EventHandlerNonNull Onblur EventHandlerNonNull Onblur { get; set; } Property Value EventHandlerNonNull Oncancel EventHandlerNonNull Oncancel { get; set; } Property Value EventHandlerNonNull Oncanplay EventHandlerNonNull Oncanplay { get; set; } Property Value EventHandlerNonNull Oncanplaythrough EventHandlerNonNull Oncanplaythrough { get; set; } Property Value EventHandlerNonNull Onchange EventHandlerNonNull Onchange { get; set; } Property Value EventHandlerNonNull Onclick EventHandlerNonNull Onclick { get; set; } Property Value EventHandlerNonNull Onclose EventHandlerNonNull Onclose { get; set; } Property Value EventHandlerNonNull Oncontextlost EventHandlerNonNull Oncontextlost { get; set; } Property Value EventHandlerNonNull Oncontextmenu EventHandlerNonNull Oncontextmenu { get; set; } Property Value EventHandlerNonNull Oncontextrestored EventHandlerNonNull Oncontextrestored { get; set; } Property Value EventHandlerNonNull Oncuechange EventHandlerNonNull Oncuechange { get; set; } Property Value EventHandlerNonNull Ondblclick EventHandlerNonNull Ondblclick { get; set; } Property Value EventHandlerNonNull Ondrag EventHandlerNonNull Ondrag { get; set; } Property Value EventHandlerNonNull Ondragend EventHandlerNonNull Ondragend { get; set; } Property Value EventHandlerNonNull Ondragenter EventHandlerNonNull Ondragenter { get; set; } Property Value EventHandlerNonNull Ondragleave EventHandlerNonNull Ondragleave { get; set; } Property Value EventHandlerNonNull Ondragover EventHandlerNonNull Ondragover { get; set; } Property Value EventHandlerNonNull Ondragstart EventHandlerNonNull Ondragstart { get; set; } Property Value EventHandlerNonNull Ondrop EventHandlerNonNull Ondrop { get; set; } Property Value EventHandlerNonNull Ondurationchange EventHandlerNonNull Ondurationchange { get; set; } Property Value EventHandlerNonNull Onemptied EventHandlerNonNull Onemptied { get; set; } Property Value EventHandlerNonNull Onended EventHandlerNonNull Onended { get; set; } Property Value EventHandlerNonNull Onerror OnErrorEventHandlerNonNull Onerror { get; set; } Property Value OnErrorEventHandlerNonNull Onfocus EventHandlerNonNull Onfocus { get; set; } Property Value EventHandlerNonNull Onformdata EventHandlerNonNull Onformdata { get; set; } Property Value EventHandlerNonNull Oninput EventHandlerNonNull Oninput { get; set; } Property Value EventHandlerNonNull Oninvalid EventHandlerNonNull Oninvalid { get; set; } Property Value EventHandlerNonNull Onkeydown EventHandlerNonNull Onkeydown { get; set; } Property Value EventHandlerNonNull Onkeypress EventHandlerNonNull Onkeypress { get; set; } Property Value EventHandlerNonNull Onkeyup EventHandlerNonNull Onkeyup { get; set; } Property Value EventHandlerNonNull Onload EventHandlerNonNull Onload { get; set; } Property Value EventHandlerNonNull Onloadeddata EventHandlerNonNull Onloadeddata { get; set; } Property Value EventHandlerNonNull Onloadedmetadata EventHandlerNonNull Onloadedmetadata { get; set; } Property Value EventHandlerNonNull Onloadstart EventHandlerNonNull Onloadstart { get; set; } Property Value EventHandlerNonNull Onmousedown EventHandlerNonNull Onmousedown { get; set; } Property Value EventHandlerNonNull Onmouseenter EventHandlerNonNull Onmouseenter { get; set; } Property Value EventHandlerNonNull Onmouseleave EventHandlerNonNull Onmouseleave { get; set; } Property Value EventHandlerNonNull Onmousemove EventHandlerNonNull Onmousemove { get; set; } Property Value EventHandlerNonNull Onmouseout EventHandlerNonNull Onmouseout { get; set; } Property Value EventHandlerNonNull Onmouseover EventHandlerNonNull Onmouseover { get; set; } Property Value EventHandlerNonNull Onmouseup EventHandlerNonNull Onmouseup { get; set; } Property Value EventHandlerNonNull Onpause EventHandlerNonNull Onpause { get; set; } Property Value EventHandlerNonNull Onplay EventHandlerNonNull Onplay { get; set; } Property Value EventHandlerNonNull Onplaying EventHandlerNonNull Onplaying { get; set; } Property Value EventHandlerNonNull Onprogress EventHandlerNonNull Onprogress { get; set; } Property Value EventHandlerNonNull Onratechange EventHandlerNonNull Onratechange { get; set; } Property Value EventHandlerNonNull Onreset EventHandlerNonNull Onreset { get; set; } Property Value EventHandlerNonNull Onresize EventHandlerNonNull Onresize { get; set; } Property Value EventHandlerNonNull Onscroll EventHandlerNonNull Onscroll { get; set; } Property Value EventHandlerNonNull Onsecuritypolicyviolation EventHandlerNonNull Onsecuritypolicyviolation { get; set; } Property Value EventHandlerNonNull Onseeked EventHandlerNonNull Onseeked { get; set; } Property Value EventHandlerNonNull Onseeking EventHandlerNonNull Onseeking { get; set; } Property Value EventHandlerNonNull Onselect EventHandlerNonNull Onselect { get; set; } Property Value EventHandlerNonNull Onslotchange EventHandlerNonNull Onslotchange { get; set; } Property Value EventHandlerNonNull Onstalled EventHandlerNonNull Onstalled { get; set; } Property Value EventHandlerNonNull Onsubmit EventHandlerNonNull Onsubmit { get; set; } Property Value EventHandlerNonNull Onsuspend EventHandlerNonNull Onsuspend { get; set; } Property Value EventHandlerNonNull Ontimeupdate EventHandlerNonNull Ontimeupdate { get; set; } Property Value EventHandlerNonNull Ontoggle EventHandlerNonNull Ontoggle { get; set; } Property Value EventHandlerNonNull Onvolumechange EventHandlerNonNull Onvolumechange { get; set; } Property Value EventHandlerNonNull Onwaiting EventHandlerNonNull Onwaiting { get; set; } Property Value EventHandlerNonNull Onwebkitanimationend EventHandlerNonNull Onwebkitanimationend { get; set; } Property Value EventHandlerNonNull Onwebkitanimationiteration EventHandlerNonNull Onwebkitanimationiteration { get; set; } Property Value EventHandlerNonNull Onwebkitanimationstart EventHandlerNonNull Onwebkitanimationstart { get; set; } Property Value EventHandlerNonNull Onwebkittransitionend EventHandlerNonNull Onwebkittransitionend { get; set; } Property Value EventHandlerNonNull Onwheel EventHandlerNonNull Onwheel { get; set; } Property Value EventHandlerNonNull"
  },
  "api/CSharpToJavaScript.APIs.JS.GlobalObject.GlobalThis.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GlobalObject.GlobalThis.html",
    "title": "Class GlobalObject.GlobalThis | CSharpToJavaScript",
    "keywords": "Class GlobalObject.GlobalThis Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GlobalObject.GlobalThis Inheritance object GlobalObject.GlobalThis Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Console public static console Console { get; set; } Property Value console Window public static Window Window { get; set; } Property Value Window"
  },
  "api/CSharpToJavaScript.APIs.JS.GlobalObject.Infinity.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GlobalObject.Infinity.html",
    "title": "Class GlobalObject.Infinity | CSharpToJavaScript",
    "keywords": "Class GlobalObject.Infinity Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class GlobalObject.Infinity Inheritance object GlobalObject.Infinity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GlobalObject.NaN.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GlobalObject.NaN.html",
    "title": "Class GlobalObject.NaN | CSharpToJavaScript",
    "keywords": "Class GlobalObject.NaN Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class GlobalObject.NaN Inheritance object GlobalObject.NaN Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GlobalObject.Undefined.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GlobalObject.Undefined.html",
    "title": "Class GlobalObject.Undefined | CSharpToJavaScript",
    "keywords": "Class GlobalObject.Undefined Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class GlobalObject.Undefined Inheritance object GlobalObject.Undefined Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.APIs.JS.GlobalObject.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GlobalObject.html",
    "title": "Class GlobalObject | CSharpToJavaScript",
    "keywords": "Class GlobalObject Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public class GlobalObject Inheritance object GlobalObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DecodeURI(string) [To(\"FirstCharToLowerCase\")] public static string DecodeURI(string encodedURI) Parameters encodedURI string Returns string DecodeURIComponent(string) [To(\"FirstCharToLowerCase\")] public static string DecodeURIComponent(string encodedURIComponent) Parameters encodedURIComponent string Returns string EncodeURI(string) [To(\"FirstCharToLowerCase\")] public static string EncodeURI(string uri) Parameters uri string Returns string EncodeURIComponent(string) [To(\"FirstCharToLowerCase\")] public static string EncodeURIComponent(string uriComponent) Parameters uriComponent string Returns string Eval(string) [To(\"FirstCharToLowerCase\")] public static dynamic Eval(string x) Parameters x string Returns dynamic IsFinite(float) [To(\"FirstCharToLowerCase\")] public static bool IsFinite(float number) Parameters number float Returns bool IsNaN(float) [To(\"FirstCharToLowerCase\")] public static bool IsNaN(float number) Parameters number float Returns bool ParseFloat(string) [To(\"FirstCharToLowerCase\")] public static float ParseFloat(string str) Parameters str string Returns float ParseInt(string, int?) [To(\"FirstCharToLowerCase\")] public static int ParseInt(string str, int? radix = null) Parameters str string radix int? Returns int"
  },
  "api/CSharpToJavaScript.APIs.JS.GlobalThis.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.GlobalThis.html",
    "title": "Class GlobalThis | CSharpToJavaScript",
    "keywords": "Class GlobalThis Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public static class GlobalThis Inheritance object GlobalThis Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Console public static console Console { get; set; } Property Value console Window public static Window Window { get; set; } Property Value Window"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLAllCollection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLAllCollection.html",
    "title": "Class HTMLAllCollection | CSharpToJavaScript",
    "keywords": "Class HTMLAllCollection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class HTMLAllCollection Inheritance object HTMLAllCollection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Length [To(\"FirstCharToLowerCase\")] public ulong Length { get; } Property Value ulong Methods Item(string) [To(\"FirstCharToLowerCase\")] public Union14? Item(string nameOrIndex) Parameters nameOrIndex string Returns Union14?"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLAnchorElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLAnchorElement.html",
    "title": "Class HTMLAnchorElement | CSharpToJavaScript",
    "keywords": "Class HTMLAnchorElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLAnchorElement interface represents hyperlink elements and provides special properties and methods (beyond those of the regular HTMLElement object interface that they inherit from) for manipulating the layout and presentation of such elements. This interface corresponds to &lt;a&gt; element; not to be confused with &lt;link&gt;, which is represented by HTMLLinkElement) [To(\"Default\")] public class HTMLAnchorElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement, HTMLHyperlinkElementUtils Inheritance object EventTarget Node Element HTMLElement HTMLAnchorElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement HTMLHyperlinkElementUtils Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: a See also on MDN Constructors HTMLAnchorElement() public HTMLAnchorElement() Properties Charset [To(\"FirstCharToLowerCase\")] public string Charset { get; set; } Property Value string Coords [To(\"FirstCharToLowerCase\")] public string Coords { get; set; } Property Value string Download The HTMLAnchorElement.download property is a string indicating that the linked resource is intended to be downloaded rather than displayed in the browser. The value, if any, specifies the default file name for use in labeling the resource in a local file system. If the name is not a valid file name in the underlying OS, the browser will adjust it. [To(\"FirstCharToLowerCase\")] public string Download { get; set; } Property Value string A string. Remarks NOTE Note: This value might not be used for download. This value cannot be used to determine whether the download will occur. See also on MDN Hreflang [To(\"FirstCharToLowerCase\")] public string Hreflang { get; set; } Property Value string Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Ping [To(\"FirstCharToLowerCase\")] public string Ping { get; set; } Property Value string ReferrerPolicy The HTMLAnchorElement.referrerPolicy property reflect the HTML referrerpolicy attribute of the a element defining which referrer is sent when fetching the resource. [To(\"FirstCharToLowerCase\")] public string ReferrerPolicy { get; set; } Property Value string A string; one of the following: Remarks -ReferrerPolicy, ReferrerPolicy, and ReferrerPolicy. See also on MDN Rel The HTMLAnchorElement.rel property reflects the rel attribute. It is a string containing a space-separated list of link types indicating the relationship between the resource represented by the a element and the current document. [To(\"FirstCharToLowerCase\")] public string Rel { get; set; } Property Value string A string. Remarks -The equivalent property on area and link, Rel and Rel. -The very same list but as tokens: RelList See also on MDN RelList The HTMLAnchorElement.relList read-only property reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the {{HTMLElement(\"a\")}} element and the current document. [To(\"FirstCharToLowerCase\")] public DOMTokenList RelList { get; } Property Value DOMTokenList A live DOMTokenList of strings. Remarks The property itself is read-only, meaning you can&apos;t substitute the DOMTokenList with another one, but its contents can still be changed. -The equivalent property on area and link, RelList and RelList. -The very same list but as a space-separated tokens in a string: Rel See also on MDN Rev [To(\"FirstCharToLowerCase\")] public string Rev { get; set; } Property Value string Shape [To(\"FirstCharToLowerCase\")] public string Shape { get; set; } Property Value string Target [To(\"FirstCharToLowerCase\")] public string Target { get; set; } Property Value string Text [To(\"FirstCharToLowerCase\")] public string Text { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLAreaElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLAreaElement.html",
    "title": "Class HTMLAreaElement | CSharpToJavaScript",
    "keywords": "Class HTMLAreaElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLAreaElement interface provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{HtmlElement(\"area\")}} elements. [To(\"Default\")] public class HTMLAreaElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement, HTMLHyperlinkElementUtils Inheritance object EventTarget Node Element HTMLElement HTMLAreaElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement HTMLHyperlinkElementUtils Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: area See also on MDN Constructors HTMLAreaElement() public HTMLAreaElement() Properties Alt [To(\"FirstCharToLowerCase\")] public string Alt { get; set; } Property Value string Coords [To(\"FirstCharToLowerCase\")] public string Coords { get; set; } Property Value string Download [To(\"FirstCharToLowerCase\")] public string Download { get; set; } Property Value string NoHref [To(\"FirstCharToLowerCase\")] public bool NoHref { get; set; } Property Value bool Ping [To(\"FirstCharToLowerCase\")] public string Ping { get; set; } Property Value string ReferrerPolicy The HTMLAreaElement.referrerPolicy property reflect the HTML referrerpolicy attribute of the area element defining which referrer is sent when fetching the resource. [To(\"FirstCharToLowerCase\")] public string ReferrerPolicy { get; set; } Property Value string A string; one of the following: Remarks -ReferrerPolicy, ReferrerPolicy, and ReferrerPolicy. See also on MDN Rel The HTMLAreaElement.rel property reflects the rel attribute. It is a string containing a space-separated list of link types indicating the relationship between the resource represented by the area element and the current document. [To(\"FirstCharToLowerCase\")] public string Rel { get; set; } Property Value string A string. Remarks -The equivalent property on a and link, Rel and Rel. -The very same list but as tokens: RelList See also on MDN RelList The HTMLAreaElement.relList read-only property reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the {{HTMLElement(\"area\")}} element and the current document. [To(\"FirstCharToLowerCase\")] public DOMTokenList RelList { get; } Property Value DOMTokenList A live DOMTokenList of strings. Remarks The property itself is read-only, meaning you can&apos;t substitute the DOMTokenList by another one, but the content of the returned list can be changed. -The equivalent property on a and link, RelList and RelList. -The very same list but as a space-separated tokens in a string: Rel See also on MDN Shape [To(\"FirstCharToLowerCase\")] public string Shape { get; set; } Property Value string Target [To(\"FirstCharToLowerCase\")] public string Target { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLAudioElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLAudioElement.html",
    "title": "Class HTMLAudioElement | CSharpToJavaScript",
    "keywords": "Class HTMLAudioElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLAudioElement interface provides access to the properties of audio elements, as well as methods to manipulate them. [To(\"Default\")] public class HTMLAudioElement : HTMLMediaElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLMediaElement HTMLAudioElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLMediaElement.Error HTMLMediaElement.Src HTMLMediaElement.SrcObject HTMLMediaElement.CurrentSrc HTMLMediaElement.CrossOrigin HTMLMediaElement.NETWORK_EMPTY HTMLMediaElement.NETWORK_IDLE HTMLMediaElement.NETWORK_LOADING HTMLMediaElement.NETWORK_NO_SOURCE HTMLMediaElement.NetworkState HTMLMediaElement.Preload HTMLMediaElement.BufferingThrottled HTMLMediaElement.Buffered HTMLMediaElement.Load() HTMLMediaElement.CanPlayType(string) HTMLMediaElement.HAVE_NOTHING HTMLMediaElement.HAVE_METADATA HTMLMediaElement.HAVE_CURRENT_DATA HTMLMediaElement.HAVE_FUTURE_DATA HTMLMediaElement.HAVE_ENOUGH_DATA HTMLMediaElement.ReadyState HTMLMediaElement.Seeking HTMLMediaElement.CurrentTime HTMLMediaElement.FastSeek(double) HTMLMediaElement.Duration HTMLMediaElement.GetStartDate() HTMLMediaElement.Paused HTMLMediaElement.DefaultPlaybackRate HTMLMediaElement.PlaybackRate HTMLMediaElement.PreservesPitch HTMLMediaElement.Played HTMLMediaElement.Seekable HTMLMediaElement.Ended HTMLMediaElement.Autoplay HTMLMediaElement.Loop HTMLMediaElement.Play() HTMLMediaElement.Pause() HTMLMediaElement.Controls HTMLMediaElement.Volume HTMLMediaElement.Muted HTMLMediaElement.DefaultMuted HTMLMediaElement.AudioTracks HTMLMediaElement.VideoTracks HTMLMediaElement.TextTracks HTMLMediaElement.AddTextTrack(TextTrackKind, string, string) HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This element is based on, and inherits properties and methods from, the HTMLMediaElement interface. -Web media technologies -Using audio and video in HTML -HTML element implementing this interface: audio. See also on MDN Constructors HTMLAudioElement() public HTMLAudioElement()"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLBRElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLBRElement.html",
    "title": "Class HTMLBRElement | CSharpToJavaScript",
    "keywords": "Class HTMLBRElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLBRElement interface represents an HTML line break element ({{htmlelement(\"br\")}}). It inherits from HTMLElement. [To(\"Default\")] public class HTMLBRElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLBRElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: br See also on MDN Constructors HTMLBRElement() public HTMLBRElement() Properties Clear [To(\"FirstCharToLowerCase\")] public string Clear { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLBaseElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLBaseElement.html",
    "title": "Class HTMLBaseElement | CSharpToJavaScript",
    "keywords": "Class HTMLBaseElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLBaseElement interface contains the base URI for a document. This object inherits all of the properties and methods as described in the HTMLElement interface. [To(\"Default\")] public class HTMLBaseElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLBaseElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: base See also on MDN Constructors HTMLBaseElement() public HTMLBaseElement() Properties Href [To(\"FirstCharToLowerCase\")] public string Href { get; set; } Property Value string Target [To(\"FirstCharToLowerCase\")] public string Target { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLBodyElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLBodyElement.html",
    "title": "Class HTMLBodyElement | CSharpToJavaScript",
    "keywords": "Class HTMLBodyElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLBodyElement interface provides special properties (beyond those inherited from the regular HTMLElement interface) for manipulating {{HtmlElement(\"body\")}} elements. [To(\"Default\")] public class HTMLBodyElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLBodyElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: body See also on MDN Constructors HTMLBodyElement() public HTMLBodyElement() Properties ALink [To(\"FirstCharToLowerCase\")] public string ALink { get; set; } Property Value string Background [To(\"FirstCharToLowerCase\")] public string Background { get; set; } Property Value string BgColor [To(\"FirstCharToLowerCase\")] public string BgColor { get; set; } Property Value string Link [To(\"FirstCharToLowerCase\")] public string Link { get; set; } Property Value string Onorientationchange [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onorientationchange { get; set; } Property Value EventHandlerNonNull Text [To(\"FirstCharToLowerCase\")] public string Text { get; set; } Property Value string VLink [To(\"FirstCharToLowerCase\")] public string VLink { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLButtonElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLButtonElement.html",
    "title": "Class HTMLButtonElement | CSharpToJavaScript",
    "keywords": "Class HTMLButtonElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLButtonElement interface provides properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"button\")}} elements. [To(\"Default\")] public class HTMLButtonElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLButtonElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: button See also on MDN Constructors HTMLButtonElement() public HTMLButtonElement() Properties Disabled The HTMLButtonElement.disabled property indicates whether the control is disabled, meaning that it does not accept any clicks. [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool A boolean value. Remarks See also on MDN Form [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement FormAction [To(\"FirstCharToLowerCase\")] public string FormAction { get; set; } Property Value string FormEnctype [To(\"FirstCharToLowerCase\")] public string FormEnctype { get; set; } Property Value string FormMethod [To(\"FirstCharToLowerCase\")] public string FormMethod { get; set; } Property Value string FormNoValidate [To(\"FirstCharToLowerCase\")] public bool FormNoValidate { get; set; } Property Value bool FormTarget [To(\"FirstCharToLowerCase\")] public string FormTarget { get; set; } Property Value string Labels The HTMLButtonElement.labels read-only property returns a NodeList of the {{HTMLElement(\"label\")}} elements associated with the button element. [To(\"FirstCharToLowerCase\")] public NodeList Labels { get; } Property Value NodeList A NodeList containing the &lt;label&gt; elements associated with the &lt;button&gt; element. Remarks See also on MDN Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string ValidationMessage [To(\"FirstCharToLowerCase\")] public string ValidationMessage { get; } Property Value string Validity [To(\"FirstCharToLowerCase\")] public ValidityState Validity { get; } Property Value ValidityState Value [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string WillValidate [To(\"FirstCharToLowerCase\")] public bool WillValidate { get; } Property Value bool Methods CheckValidity() [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool ReportValidity() [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool SetCustomValidity(string) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetCustomValidity(string error) Parameters error string Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLCanvasElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLCanvasElement.html",
    "title": "Class HTMLCanvasElement | CSharpToJavaScript",
    "keywords": "Class HTMLCanvasElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLCanvasElement interface provides properties and methods for manipulating the layout and presentation of canvas elements. The HTMLCanvasElement interface also inherits the properties and methods of the HTMLElement interface. [To(\"Default\")] public class HTMLCanvasElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLCanvasElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: canvas See also on MDN Constructors HTMLCanvasElement() public HTMLCanvasElement() Properties Height The HTMLCanvasElement.height property is a positive integer reflecting the height HTML attribute of the canvas element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of 150 is used. [To(\"FirstCharToLowerCase\")] public ulong Height { get; set; } Property Value ulong A number. Remarks This is one of the two properties, the other being Width, that controls the size of the canvas. -HTMLCanvasElement: Interface used to define the HTMLCanvasElement.height property -Width: Other property used to control the size of the canvas See also on MDN Width The HTMLCanvasElement.width property is a positive integer reflecting the width HTML attribute of the canvas element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of 300 is used. [To(\"FirstCharToLowerCase\")] public ulong Width { get; set; } Property Value ulong A number. Remarks This is one of the two properties, the other being Height, that controls the size of the canvas. -HTMLCanvasElement: Interface used to define the HTMLCanvasElement.width property -Height: Other property used to control the size of the canvas See also on MDN Methods GetContext(string, dynamic) The HTMLCanvasElement.getContext() method returns a drawing context on the canvas, or null if the context identifier is not supported, or the canvas has already been set to a different context mode. [To(\"FirstCharToLowerCase\")] public Union27? GetContext(string contextId, dynamic options) Parameters contextId string options dynamic Returns Union27? A rendering context which is either aIf the contextType doesn&apos;t match a possible drawing context, or differs from the first contextType requested, null is returned. Remarks Later calls to this method on the same canvas element, with the same contextType argument, will always return the same drawing context instance as was returned the first time the method was invoked. It is not possible to get a different drawing context object on a given canvas element. -HTMLCanvasElement: Interface used to define the HTMLCanvasElement.getContext() method -GetContext(OffscreenRenderingContextId, dynamic) -GetContextAttributes(), WebGLRenderingContext.GetContextAttributes -CanvasRenderingContext2D, ImageBitmapRenderingContext, WebGLRenderingContext, WebGL2RenderingContext, GPUCanvasContext: Available rendering contexts -DCI-P3 color space on Wikipedia -sRGB color space on Wikipedia See also on MDN ToBlob(BlobCallback, string, dynamic) The HTMLCanvasElement.toBlob() method creates a Blob object representing the image contained in the canvas. This file may be cached on the disk or stored in memory at the discretion of the user agent. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined ToBlob(BlobCallback callback, string type, dynamic quality) Parameters callback BlobCallback type string quality dynamic Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The desired file format and image quality may be specified. If the file format is not specified, or if the given format is not supported, then the data will be exported as image/png. Browsers are required to support image/png; many will support additional formats including image/jpeg and image/webp. The created image will have a resolution of 96dpi for file formats that support encoding resolution metadata. -Blob See also on MDN ToDataURL(string, dynamic) The HTMLCanvasElement.toDataURL() method returns a data URL containing a representation of the image in the format specified by the type parameter. [To(\"FirstCharToLowerCase\")] public string ToDataURL(string type, dynamic quality) Parameters type string quality dynamic Returns string A string containing the requested data URL.If the height or width of the canvas is 0 or larger than the maximum canvas size, the string &quot;data:,&quot; is returned. Remarks The desired file format and image quality may be specified. If the file format is not specified, or if the given format is not supported, then the data will be exported as image/png. In other words, if the returned value starts with data:image/png for any other requested type, then that format is not supported. Browsers are required to support image/png; many will support additional formats including image/jpeg and image/webp. The created image data will have a resolution of 96dpi for file formats that support encoding resolution metadata. -Data URLs in the HTTP reference. See also on MDN TransferControlToOffscreen() The HTMLCanvasElement.transferControlToOffscreen() method transfers control to an OffscreenCanvas object, either on the main thread or on a worker. [To(\"FirstCharToLowerCase\")] public OffscreenCanvas TransferControlToOffscreen() Returns OffscreenCanvas An OffscreenCanvas object. Remarks -The interface defining this method, HTMLCanvasElement -OffscreenCanvas See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLCollection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLCollection.html",
    "title": "Class HTMLCollection | CSharpToJavaScript",
    "keywords": "Class HTMLCollection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLCollection interface represents a generic collection (array-like object similar to Functions/arguments) of elements (in document order) and offers methods and properties for selecting from the list. [To(\"Default\")] public class HTMLCollection Inheritance object HTMLCollection Derived HTMLFormControlsCollection HTMLOptionsCollection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: This interface is called HTMLCollection for historical reasons (before the modern DOM, collections implementing this interface could only have HTML elements as their items). An HTMLCollection in the HTML DOM is live; it is automatically updated when the underlying document is changed. For this reason it is a good idea to make a copy (e.g., using Array/from) to iterate over if adding, moving, or removing nodes. NOTE Note: This interface was an attempt to create an unmodifiable list and only continues to be supported to not break code that&apos;s already using it. Modern APIs use types that wrap around ECMAScript array types instead, so you can treat them like ECMAScript arrays, and at the same time impose additional semantics on their usage (such as making their items read-only). -NodeList -HTMLFormControlsCollection, HTMLOptionsCollection See also on MDN Properties Length The HTMLCollection.length property returns the number of items in a HTMLCollection. [To(\"FirstCharToLowerCase\")] public ulong Length { get; } Property Value ulong An integer value representing the number of items in a HTMLCollection. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLDListElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLDListElement.html",
    "title": "Class HTMLDListElement | CSharpToJavaScript",
    "keywords": "Class HTMLDListElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLDListElement interface provides special properties (beyond those of the regular HTMLElement interface it also has available to it by inheritance) for manipulating definition list ({{HtmlElement(\"dl\")}}) elements. [To(\"Default\")] public class HTMLDListElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLDListElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: dl See also on MDN Constructors HTMLDListElement() public HTMLDListElement() Properties Compact [To(\"FirstCharToLowerCase\")] public bool Compact { get; set; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLDataElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLDataElement.html",
    "title": "Class HTMLDataElement | CSharpToJavaScript",
    "keywords": "Class HTMLDataElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLDataElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"data\")}} elements. [To(\"Default\")] public class HTMLDataElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLDataElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: data. See also on MDN Constructors HTMLDataElement() public HTMLDataElement() Properties Value The value property of the HTMLDataElement interface returns a string reflecting the value HTML attribute. [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string A string. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLDataListElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLDataListElement.html",
    "title": "Class HTMLDataListElement | CSharpToJavaScript",
    "keywords": "Class HTMLDataListElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLDataListElement interface provides special properties (beyond the HTMLElement object interface it also has available to it by inheritance) to manipulate {{ HTMLElement(\"datalist\") }} elements and their content. [To(\"Default\")] public class HTMLDataListElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLDataListElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: datalist See also on MDN Constructors HTMLDataListElement() public HTMLDataListElement() Properties Options [To(\"FirstCharToLowerCase\")] public HTMLCollection Options { get; } Property Value HTMLCollection"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLDetailsElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLDetailsElement.html",
    "title": "Class HTMLDetailsElement | CSharpToJavaScript",
    "keywords": "Class HTMLDetailsElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLDetailsElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"details\")}} elements. [To(\"Default\")] public class HTMLDetailsElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLDetailsElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: details See also on MDN Constructors HTMLDetailsElement() public HTMLDetailsElement() Properties Open The open property of the HTMLDetailsElement interface is a boolean value reflecting the open HTML attribute, indicating whether the details's contents (not counting the summary) is to be shown to the user. [To(\"FirstCharToLowerCase\")] public bool Open { get; set; } Property Value bool A boolean value.The boolean value represents the state of the open HTML attribute. The value of true means it is set with both the summary and the additional information shown to the user. The false value means it not set, with only the summary shown. Remarks -The details and summary elements See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLDialogElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLDialogElement.html",
    "title": "Class HTMLDialogElement | CSharpToJavaScript",
    "keywords": "Class HTMLDialogElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLDialogElement interface provides methods to manipulate {{HTMLElement(\"dialog\")}} elements. It inherits properties and methods from the HTMLElement interface. [To(\"Default\")] public class HTMLDialogElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLDialogElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: dialog. See also on MDN Constructors HTMLDialogElement() public HTMLDialogElement() Properties Open The open property of the HTMLDialogElement interface is a boolean value reflecting the open HTML attribute, indicating whether the dialog is available for interaction. [To(\"FirstCharToLowerCase\")] public bool Open { get; set; } Property Value bool A boolean value representing the state of the open HTML attribute. true means it is set, and therefore the dialog is shown. false means it not set, and therefore the dialog is not shown.The property is not read only — it is possible to set the value to programmatically show or hide the dialog. Remarks -The HTML element implementing this interface: dialog. See also on MDN ReturnValue The returnValue property of the HTMLDialogElement interface gets or sets the return value for the dialog, usually to indicate which button the user pressed to close it. [To(\"FirstCharToLowerCase\")] public string ReturnValue { get; set; } Property Value string A string representing the returnValue of the dialog. Remarks -The HTML element implementing this interface: dialog. See also on MDN Methods Close(string) The close() method of the HTMLDialogElement interface closes the {{htmlelement(\"dialog\")}}. An optional string may be passed as an argument, updating the returnValue of the dialog. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Close(string returnValue) Parameters returnValue string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The HTML element implementing this interface: dialog. See also on MDN Show() The show() method of the HTMLDialogElement interface displays the dialog modelessly, i.e. still allowing interaction with content outside of the dialog. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Show() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The HTML element implementing this interface: dialog. See also on MDN ShowModal() The showModal() method of the HTMLDialogElement interface displays the dialog as a modal, over the top of any other dialogs that might be present. It displays in the top layer, along with a {{cssxref(&apos;::backdrop&apos;)}} pseudo-element. Interaction outside the dialog is blocked and the content outside it is rendered inert. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined ShowModal() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The HTML element implementing this interface: dialog. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLDirectoryElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLDirectoryElement.html",
    "title": "Class HTMLDirectoryElement | CSharpToJavaScript",
    "keywords": "Class HTMLDirectoryElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class HTMLDirectoryElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLDirectoryElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HTMLDirectoryElement() public HTMLDirectoryElement() Properties Compact [To(\"FirstCharToLowerCase\")] public bool Compact { get; set; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLDivElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLDivElement.html",
    "title": "Class HTMLDivElement | CSharpToJavaScript",
    "keywords": "Class HTMLDivElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLDivElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HtmlElement(\"div\")}} elements. [To(\"Default\")] public class HTMLDivElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLDivElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: div. See also on MDN Constructors HTMLDivElement() public HTMLDivElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLElement.html",
    "title": "Class HTMLElement | CSharpToJavaScript",
    "keywords": "Class HTMLElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it. [To(\"Default\")] public class HTMLElement : Element, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Derived HTMLAnchorElement HTMLAreaElement HTMLBRElement HTMLBaseElement HTMLBodyElement HTMLButtonElement HTMLCanvasElement HTMLDListElement HTMLDataElement HTMLDataListElement HTMLDetailsElement HTMLDialogElement HTMLDirectoryElement HTMLDivElement HTMLEmbedElement HTMLFieldSetElement HTMLFontElement HTMLFormElement HTMLFrameElement HTMLFrameSetElement HTMLHRElement HTMLHeadElement HTMLHeadingElement HTMLHtmlElement HTMLIFrameElement HTMLImageElement HTMLInputElement HTMLLIElement HTMLLabelElement HTMLLegendElement HTMLLinkElement HTMLMapElement HTMLMarqueeElement HTMLMediaElement HTMLMenuElement HTMLMetaElement HTMLMeterElement HTMLModElement HTMLOListElement HTMLObjectElement HTMLOptGroupElement HTMLOptionElement HTMLOutputElement HTMLParagraphElement HTMLParamElement HTMLPictureElement HTMLPreElement HTMLProgressElement HTMLQuoteElement HTMLScriptElement HTMLSelectElement HTMLSlotElement HTMLSourceElement HTMLSpanElement HTMLStyleElement HTMLTableCaptionElement HTMLTableCellElement HTMLTableColElement HTMLTableElement HTMLTableRowElement HTMLTableSectionElement HTMLTemplateElement HTMLTextAreaElement HTMLTimeElement HTMLTitleElement HTMLTrackElement HTMLUListElement HTMLUnknownElement Inherited Members Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Element See also on MDN Constructors HTMLElement() public HTMLElement() Properties AccessKey The HTMLElement.accessKey property sets the keystroke which a user can press to jump to a given element. [To(\"FirstCharToLowerCase\")] public string AccessKey { get; set; } Property Value string Remarks NOTE Note: The HTMLElement.accessKey property is seldom used because of its multiple conflicts with already present key bindings in browsers. To work around this, browsers implement accesskey behavior if the keys are pressed with other &quot;qualifying&quot; keys (such as &lt;kbd&gt;Alt&lt;/kbd&gt; + accesskey). -HTML global attribute: accesskey See also on MDN AccessKeyLabel The HTMLElement.accessKeyLabel read-only property returns a string containing the element&apos;s browser-assigned access key (if any); otherwise it returns an empty string. [To(\"FirstCharToLowerCase\")] public string AccessKeyLabel { get; } Property Value string Remarks -AccessKey -The accesskey global attribute. See also on MDN Autocapitalize [To(\"FirstCharToLowerCase\")] public string Autocapitalize { get; set; } Property Value string Dir The HTMLElement.dir property gets or sets the text writing directionality of the content of the current element. [To(\"FirstCharToLowerCase\")] public string Dir { get; set; } Property Value string One of the following: Remarks The text writing directionality of an element is which direction that text goes (for support of different language systems). Arabic languages and Hebrew are typical languages using the RTL directionality. An image can have its dir property set to &quot;rtl&quot; in which case the HTML attributes title and alt will be formatted and defined as &quot;rtl&quot;. When a table has its dir set to &quot;rtl&quot;, the column order is arranged from right to left. When an element has its dir set to &quot;auto&quot;, the direction of the element is determined based on its first strong directionality character, or default to the directionality of its parent element. NOTE Note: Browsers might allow users to change the directionality of input and textareas in order to assist with authoring content. Chrome and Safari provide a directionality option in the contextual menu of input fields while pre-Chromium Edge uses the key combinations &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Left Shift&lt;/kbd&gt; and &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Right Shift&lt;/kbd&gt;. Firefox uses &lt;kbd&gt;Ctrl&lt;/kbd&gt;/&lt;kbd&gt;Cmd&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;X&lt;/kbd&gt; but does NOT update the dir attribute value. -Dir -HTML dir global attribute -CSS direction property -CSS :dir pseudo-class See also on MDN Draggable [To(\"FirstCharToLowerCase\")] public bool Draggable { get; set; } Property Value bool Hidden The HTMLElement property hidden reflects the value of the element&apos;s hidden attribute. [To(\"FirstCharToLowerCase\")] public Union19? Hidden { get; set; } Property Value Union19? This attribute may have one of three values:For details on the usage of this attribute, see the page for the hidden HTML attribute that this property reflects. Remarks -hidden attribute -display See also on MDN Inert The HTMLElement property inert reflects the value of the element&apos;s inert attribute. It is a boolean value that, when present, makes the browser &quot;ignore&quot; user input events for the element, including focus events and events from assistive technologies. The browser may also ignore page search and text selection in the element. This can be useful when building UIs such as modals where you would want to &quot;trap&quot; the focus inside the modal when it&apos;s visible. [To(\"FirstCharToLowerCase\")] public bool Inert { get; set; } Property Value bool A Boolean which is true if the element is inert; otherwise, the value is false. Remarks NOTE Note: Do not nest interactive elements or important content within elements with the inert attribute as inert content and their descendants are neither focusable nor perceivable by all users. -Global attribute: inert -dialog -Inert Polyfill -Disabled See also on MDN InnerText The innerText property of the HTMLElement interface represents the rendered text content of a node and its descendants. [To(\"FirstCharToLowerCase\")] public string InnerText { get; set; } Property Value string A string representing the rendered text content of an element.If the element itself is not being rendered (for example, is detached from the document or is hidden from view), the returned value is the same as the TextContent property. WARNING Warning: Setting innerText on a node removes all of the node&apos;s children and replaces them with a single text node with the given string value. Remarks As a getter, it approximates the text the user would get if they highlighted the contents of the element with the cursor and then copied it to the clipboard. As a setter this will replace the element's children with the given value, converting any line breaks into br elements. NOTE Note: innerText is easily confused with TextContent, but there are important differences between the two. Basically, innerText is aware of the rendered appearance of text, while textContent is not. -OuterText -Element.InnerHTML See also on MDN Lang The HTMLElement.lang property gets or sets the base language of an element&apos;s attribute values and text content. [To(\"FirstCharToLowerCase\")] public string Lang { get; set; } Property Value string A string. Remarks The language code returned by this property is defined in {{RFC(5646, \"Tags for Identifying Languages (also known as BCP 47)\")}}. Common examples include &quot;en&quot; for English, &quot;ja&quot; for Japanese, &quot;es&quot; for Spanish and so on. The default value of this attribute is unknown. Note that this attribute, though valid at the individual element level described here, is most often specified for the root element of the document. This also only works with the lang attribute and not with xml:lang. See also on MDN OuterText The outerText property of the HTMLElement interface returns the same value as InnerText. When used as a setter it replaces the whole current node with the given text (this differs from innerText, which replaces the content inside the current node). [To(\"FirstCharToLowerCase\")] public string OuterText { get; set; } Property Value string A string representing the rendered text content of an element and its descendants.If the element itself is not being rendered (for example, is detached from the document or is hidden from view), the returned value is the same as the TextContent property.When used as a setter it replaces the current node with the given text, converting any line breaks into br elements. Remarks See InnerText for more information and examples showing how both properties are used as getters. -InnerText -Element.OuterHTML See also on MDN Spellcheck [To(\"FirstCharToLowerCase\")] public bool Spellcheck { get; set; } Property Value bool Style [To(\"FirstCharToLowerCase\")] public CSSStyleDeclaration Style { get; } Property Value CSSStyleDeclaration Title The HTMLElement.title property represents the title of the element: the text usually displayed in a &apos;tooltip&apos; popup when the mouse is over the node. [To(\"FirstCharToLowerCase\")] public string Title { get; set; } Property Value string A string. Remarks -The HTML title global attribute. See also on MDN Translate [To(\"FirstCharToLowerCase\")] public bool Translate { get; set; } Property Value bool Methods AttachInternals() The HTMLElement.attachInternals() method returns an ElementInternals object. This method allows a custom element to participate in HTML forms. The ElementInternals interface provides utilities for working with these elements in the same way you would work with any standard HTML form element, and also exposes the Accessibility Object Model to the element. [To(\"FirstCharToLowerCase\")] public ElementInternals AttachInternals() Returns ElementInternals An ElementInternals object. Remarks -More capable form controls -Creating custom form controls with ElementInternals See also on MDN Click() The HTMLElement.click() method simulates a mouse click on an element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Click() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks When click() is used with supported elements (such as an input), it fires the element's click event. This event then bubbles up to elements higher in the document tree (or event chain) and fires their click events. -Related event handlers-Element.Click_event -Element.Dblclick_event -Element.Auxclick_event See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLEmbedElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLEmbedElement.html",
    "title": "Class HTMLEmbedElement | CSharpToJavaScript",
    "keywords": "Class HTMLEmbedElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLEmbedElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"embed\")}} elements. [To(\"Default\")] public class HTMLEmbedElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLEmbedElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: This topic describes the HTMLEmbedElement interface as defined in the standard. It does not address earlier, non-standardized version of the interface. -The HTML element implementing this interface: embed See also on MDN Constructors HTMLEmbedElement() public HTMLEmbedElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Height [To(\"FirstCharToLowerCase\")] public string Height { get; set; } Property Value string Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Src [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string Width [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string Methods GetSVGDocument() [To(\"FirstCharToLowerCase\")] public Document? GetSVGDocument() Returns Document"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLFieldSetElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLFieldSetElement.html",
    "title": "Class HTMLFieldSetElement | CSharpToJavaScript",
    "keywords": "Class HTMLFieldSetElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLFieldSetElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{ HTMLElement(\"fieldset\") }} elements. [To(\"Default\")] public class HTMLFieldSetElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLFieldSetElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: fieldset. See also on MDN Constructors HTMLFieldSetElement() public HTMLFieldSetElement() Properties Disabled [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool Elements [To(\"FirstCharToLowerCase\")] public HTMLCollection Elements { get; } Property Value HTMLCollection Form [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; } Property Value string ValidationMessage [To(\"FirstCharToLowerCase\")] public string ValidationMessage { get; } Property Value string Validity [To(\"FirstCharToLowerCase\")] public ValidityState Validity { get; } Property Value ValidityState WillValidate [To(\"FirstCharToLowerCase\")] public bool WillValidate { get; } Property Value bool Methods CheckValidity() [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool ReportValidity() [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool SetCustomValidity(string) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetCustomValidity(string error) Parameters error string Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLFontElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLFontElement.html",
    "title": "Class HTMLFontElement | CSharpToJavaScript",
    "keywords": "Class HTMLFontElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated Implements the document object model (DOM) representation of the font element. The HTML Font Element font defines the font size, font face and color of text. [To(\"Default\")] public class HTMLFontElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLFontElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: font. See also on MDN Constructors HTMLFontElement() public HTMLFontElement() Properties Color IMPORTANT Deprecated The obsolete HTMLFontElement.color property is a string that reflects the color HTML attribute, containing either a named color or a color specified in the hexadecimal #RRGGBB format. [To(\"FirstCharToLowerCase\")] public string Color { get; set; } Property Value string A string. Remarks The format of the string must follow one of the following HTML microsyntaxes: Microsyntax Description Examples Valid name color string nameOfColor (case insensitive) Green, green, GREEN Valid hex color string in color_value: #RRGGBB #008000 RGB using decimal values rgb(x,x,x) (x in 0-255 range) rgb(0,128,0) -The HTMLFontElement interface it belongs to. See also on MDN Face IMPORTANT Deprecated The obsolete HTMLFontElement.face property is a string that reflects the face HTML attribute, containing a comma-separated list of one or more font names. [To(\"FirstCharToLowerCase\")] public string Face { get; set; } Property Value string A string. Remarks The document text, in the default style, is rendered as the first font face that the client&apos;s browser supports. If no font listed is installed on the local system, the browser typically defaults to the proportional or fixed-width font for that system. The format of the string must follow one of the following HTML microsyntax: Microsyntax Description Examples List of one or more valid font family names A list of font names, that have to be present on the local system courier,verdana -The HTMLFontElement interface it belongs to. See also on MDN Size IMPORTANT Deprecated The obsolete HTMLFontElement.size property is a string that reflects the size HTML attribute. It contains either a font size ranging from 1 to 7 or a number relative to the default value 3, for example -2 or +1. [To(\"FirstCharToLowerCase\")] public string Size { get; set; } Property Value string A string. Remarks The format of the string must follow one of the following HTML microsyntaxes: -The HTMLFontElement interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLFormControlsCollection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLFormControlsCollection.html",
    "title": "Class HTMLFormControlsCollection | CSharpToJavaScript",
    "keywords": "Class HTMLFormControlsCollection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLFormControlsCollection interface represents a collection of HTML form control elements, returned by the HTMLFormElement interface's Elements property. [To(\"Default\")] public class HTMLFormControlsCollection : HTMLCollection Inheritance object HTMLCollection HTMLFormControlsCollection Inherited Members HTMLCollection.Length object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface replaces one method from HTMLCollection, on which it is based. -HTMLCollection, RadioNodeList, HTMLOptionsCollection See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLFormElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLFormElement.html",
    "title": "Class HTMLFormElement | CSharpToJavaScript",
    "keywords": "Class HTMLFormElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLFormElement interface represents a form element in the DOM. It allows access to—and, in some cases, modification of—aspects of the form, as well as access to its component elements. [To(\"Default\")] public class HTMLFormElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLFormElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: form. See also on MDN Constructors HTMLFormElement() public HTMLFormElement() Properties AcceptCharset The HTMLFormElement.acceptCharset property represents a list of the supported character encodings for the given form element. This list can be comma-separated or space-separated. [To(\"FirstCharToLowerCase\")] public string AcceptCharset { get; set; } Property Value string A string. Remarks See also on MDN Action The HTMLFormElement.action property represents the action of the form element. [To(\"FirstCharToLowerCase\")] public string Action { get; set; } Property Value string A string. Remarks The action of a form is the program that is executed on the server when the form is submitted. This property can be retrieved or set. See also on MDN Autocomplete [To(\"FirstCharToLowerCase\")] public string Autocomplete { get; set; } Property Value string Elements The HTMLFormElement property elements returns an HTMLFormControlsCollection listing all the form controls contained in the form element. [To(\"FirstCharToLowerCase\")] public HTMLFormControlsCollection Elements { get; } Property Value HTMLFormControlsCollection An HTMLFormControlsCollection containing all non-image controls in the form. This is a live collection; if form controls are added to or removed from the form, this collection will update to reflect the change.The form controls in the returned collection are in the same order in which they appear in the form by following a preorder, depth-first traversal of the tree. This is called tree order.Only the following elements are returned: Remarks Independently, you can obtain just the number of form controls using the Length property. You can access a particular form control in the returned collection by using either an index or the element&apos;s name or id attributes. Prior to HTML 5, the returned object was an HTMLCollection, on which HTMLFormControlsCollection is based. NOTE Note: Similarly, you can get a list of all of the forms contained within a given document using the document's Forms property. See also on MDN Encoding The HTMLFormElement.encoding property is an alternative name for the Enctype element on the DOM HTMLFormElement object. [To(\"FirstCharToLowerCase\")] public string Encoding { get; set; } Property Value string Remarks See also on MDN Enctype The HTMLFormElement.enctype property is the MIME type of content that is used to submit the form to the server. Possible values are: [To(\"FirstCharToLowerCase\")] public string Enctype { get; set; } Property Value string A string. Remarks This value can be overridden by a formenctype attribute on a button or input element. See also on MDN Length The HTMLFormElement.length read-only property returns the number of controls in the form element. [To(\"FirstCharToLowerCase\")] public ulong Length { get; } Property Value ulong A number. Remarks You can access the list of the form&apos;s controls using the Elements property. This includes both elements that are descendants of the &lt;form&gt; element as well as elements that are made members of the form using their form property. Elements that are considered for this property are: button, fieldset, input (with the exception that any whose type is &quot;image&quot; are omitted for historical reasons), object, output, select, and textarea. See also on MDN Method The HTMLFormElement.method property represents the HTTP method used to submit the {{HtmlElement(\"form\")}}. [To(\"FirstCharToLowerCase\")] public string Method { get; set; } Property Value string A string. Remarks Unless explicitly specified, the default method is &apos;get&apos;. See also on MDN Name The HTMLFormElement.name property represents the name of the current form element as a string. [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string A string. Remarks If your Form element contains an element named name then that element overrides the form.name property, so that you can&apos;t access it. See also on MDN NoValidate [To(\"FirstCharToLowerCase\")] public bool NoValidate { get; set; } Property Value bool Rel [To(\"FirstCharToLowerCase\")] public string Rel { get; set; } Property Value string RelList [To(\"FirstCharToLowerCase\")] public DOMTokenList RelList { get; } Property Value DOMTokenList Target The target property of the HTMLFormElement interface represents the target of the form&apos;s action (i.e., the frame in which to render its output). [To(\"FirstCharToLowerCase\")] public string Target { get; set; } Property Value string A string. Remarks See also on MDN Methods CheckValidity() [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool ReportValidity() The HTMLFormElement.reportValidity() method returns true if the element&apos;s child controls satisfy their validation constraints. When false is returned, cancelable invalid events are fired for each invalid child and validation problems are reported to the user. [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool true or false Remarks See also on MDN RequestSubmit(HTMLElement?) The HTMLFormElement method requestSubmit() requests that the form be submitted using a specific submit button. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined RequestSubmit(HTMLElement? submitter) Parameters submitter HTMLElement Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Reset() The HTMLFormElement.reset() method restores a form element&apos;s default values. This method does the same thing as clicking the form&apos;s &lt;input type=&quot;reset&quot;&gt; control. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Reset() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If a form control (such as a reset button) has a name or id of reset it will mask the form&apos;s reset method. It does not reset other attributes in the input, such as disabled. Note that if SetAttribute(string, string) is called to set the value of a particular attribute, a subsequent call to reset() won&apos;t reset the attribute to its default value, but instead will keep the attribute at whatever value the SetAttribute(string, string) call set it to. See also on MDN Submit() The HTMLFormElement.submit() method submits a given form. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Submit() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method is similar, but not identical to, activating a form&apos;s submit button. When invoking this method directly, however: The RequestSubmit(HTMLElement?) method is identical to activating a form's submit button and does not have these differences. A form control (such as a submit button) with a name or id of submit will mask the form&apos;s submit method. Trying to call myForm.submit(); throws an error &quot;submit is not a function&quot; because in this case submit refers to the form control which has a name or id of submit. input with attribute type=\"submit\" will not be submitted with the form when using HTMLFormElement.submit(), but it would be submitted when you do it with original HTML form submit. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLFrameElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLFrameElement.html",
    "title": "Class HTMLFrameElement | CSharpToJavaScript",
    "keywords": "Class HTMLFrameElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class HTMLFrameElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLFrameElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HTMLFrameElement() public HTMLFrameElement() Properties ContentDocument [To(\"FirstCharToLowerCase\")] public Document? ContentDocument { get; } Property Value Document ContentWindow [To(\"FirstCharToLowerCase\")] public Window? ContentWindow { get; } Property Value Window FrameBorder [To(\"FirstCharToLowerCase\")] public string FrameBorder { get; set; } Property Value string LongDesc [To(\"FirstCharToLowerCase\")] public string LongDesc { get; set; } Property Value string MarginHeight [To(\"FirstCharToLowerCase\")] public string MarginHeight { get; set; } Property Value string MarginWidth [To(\"FirstCharToLowerCase\")] public string MarginWidth { get; set; } Property Value string Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string NoResize [To(\"FirstCharToLowerCase\")] public bool NoResize { get; set; } Property Value bool Scrolling [To(\"FirstCharToLowerCase\")] public string Scrolling { get; set; } Property Value string Src [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLFrameSetElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLFrameSetElement.html",
    "title": "Class HTMLFrameSetElement | CSharpToJavaScript",
    "keywords": "Class HTMLFrameSetElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The HTMLFrameSetElement interface provides special properties (beyond those of the regular HTMLElement interface they also inherit) for manipulating {{HTMLELEment(\"frameset\")}} elements. [To(\"Default\")] public class HTMLFrameSetElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement, WindowEventHandlers Inheritance object EventTarget Node Element HTMLElement HTMLFrameSetElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement WindowEventHandlers Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: frameset -The equivalent of this element outside of frames: HTMLFrameSetElement. See also on MDN Constructors HTMLFrameSetElement() public HTMLFrameSetElement() Properties Cols [To(\"FirstCharToLowerCase\")] public string Cols { get; set; } Property Value string Rows [To(\"FirstCharToLowerCase\")] public string Rows { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLHRElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLHRElement.html",
    "title": "Class HTMLHRElement | CSharpToJavaScript",
    "keywords": "Class HTMLHRElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLHRElement interface provides special properties (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"hr\")}} elements. [To(\"Default\")] public class HTMLHRElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLHRElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: hr See also on MDN Constructors HTMLHRElement() public HTMLHRElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Color [To(\"FirstCharToLowerCase\")] public string Color { get; set; } Property Value string NoShade [To(\"FirstCharToLowerCase\")] public bool NoShade { get; set; } Property Value bool Size [To(\"FirstCharToLowerCase\")] public string Size { get; set; } Property Value string Width [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLHeadElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLHeadElement.html",
    "title": "Class HTMLHeadElement | CSharpToJavaScript",
    "keywords": "Class HTMLHeadElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLHeadElement interface contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the HTMLElement interface. [To(\"Default\")] public class HTMLHeadElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLHeadElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: head See also on MDN Constructors HTMLHeadElement() public HTMLHeadElement()"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLHeadingElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLHeadingElement.html",
    "title": "Class HTMLHeadingElement | CSharpToJavaScript",
    "keywords": "Class HTMLHeadingElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLHeadingElement interface represents the different heading elements, &lt;h1&gt; through &lt;h6&gt;. It inherits methods and properties from the HTMLElement interface. [To(\"Default\")] public class HTMLHeadingElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLHeadingElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: Heading_Elements, Heading_Elements, Heading_Elements, Heading_Elements, Heading_Elements, and Heading_Elements. See also on MDN Constructors HTMLHeadingElement() public HTMLHeadingElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLHtmlElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLHtmlElement.html",
    "title": "Class HTMLHtmlElement | CSharpToJavaScript",
    "keywords": "Class HTMLHtmlElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLHtmlElement interface serves as the root node for a given HTML document. This object inherits the properties and methods described in the HTMLElement interface. [To(\"Default\")] public class HTMLHtmlElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLHtmlElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can retrieve the HTMLHtmlElement object for a given document by reading the value of the Document.DocumentElement property. -HTML element implementing this interface: html. See also on MDN Constructors HTMLHtmlElement() public HTMLHtmlElement() Properties Version IMPORTANT Deprecated NOTE Note: This property has been declared as deprecated by the W3C technical recommendation for HTML 4.01 in favor of use of the DTD for obtaining version information for a document. [To(\"FirstCharToLowerCase\")] public string Version { get; set; } Property Value string Remarks Returns version information about the document type definition (DTD) of a document. While this property is recognized by Mozilla, the return value for this property is always an empty string. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLHyperlinkElementUtils.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLHyperlinkElementUtils.html",
    "title": "Interface HTMLHyperlinkElementUtils | CSharpToJavaScript",
    "keywords": "Interface HTMLHyperlinkElementUtils Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface HTMLHyperlinkElementUtils Properties Hash string Hash { get; set; } Property Value string Host string Host { get; set; } Property Value string Hostname string Hostname { get; set; } Property Value string Href string Href { get; set; } Property Value string Origin string Origin { get; } Property Value string Password string Password { get; set; } Property Value string Pathname string Pathname { get; set; } Property Value string Port string Port { get; set; } Property Value string Protocol string Protocol { get; set; } Property Value string Search string Search { get; set; } Property Value string Username string Username { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLIFrameElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLIFrameElement.html",
    "title": "Class HTMLIFrameElement | CSharpToJavaScript",
    "keywords": "Class HTMLIFrameElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLIFrameElement interface provides special properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of inline frame elements. [To(\"Default\")] public class HTMLIFrameElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLIFrameElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: iframe See also on MDN Constructors HTMLIFrameElement() public HTMLIFrameElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Allow [To(\"FirstCharToLowerCase\")] public string Allow { get; set; } Property Value string AllowFullscreen [To(\"FirstCharToLowerCase\")] public bool AllowFullscreen { get; set; } Property Value bool ContentDocument If the iframe and the iframe&apos;s parent document are Same Origin, returns a Document (that is, the active document in the inline frame&apos;s nested browsing context), else returns null. [To(\"FirstCharToLowerCase\")] public Document? ContentDocument { get; } Property Value Document Remarks See also on MDN ContentWindow The contentWindow property returns the Window object of an HTMLIFrameElement. You can use this Window object to access the iframe&apos;s document and its internal DOM. This attribute is read-only, but its properties can be manipulated like the global Window object. [To(\"FirstCharToLowerCase\")] public Window? ContentWindow { get; } Property Value Window A Window object. Remarks See also on MDN FrameBorder [To(\"FirstCharToLowerCase\")] public string FrameBorder { get; set; } Property Value string Height [To(\"FirstCharToLowerCase\")] public string Height { get; set; } Property Value string Loading [To(\"FirstCharToLowerCase\")] public string Loading { get; set; } Property Value string LongDesc [To(\"FirstCharToLowerCase\")] public string LongDesc { get; set; } Property Value string MarginHeight [To(\"FirstCharToLowerCase\")] public string MarginHeight { get; set; } Property Value string MarginWidth [To(\"FirstCharToLowerCase\")] public string MarginWidth { get; set; } Property Value string Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string ReferrerPolicy The HTMLIFrameElement.referrerPolicy property reflects the HTML referrerpolicy attribute of the iframe element defining which referrer is sent when fetching the resource. [To(\"FirstCharToLowerCase\")] public string ReferrerPolicy { get; set; } Property Value string Remarks -ReferrerPolicy, ReferrerPolicy, and ReferrerPolicy. See also on MDN Sandbox [To(\"FirstCharToLowerCase\")] public DOMTokenList Sandbox { get; } Property Value DOMTokenList Scrolling [To(\"FirstCharToLowerCase\")] public string Scrolling { get; set; } Property Value string Src The HTMLIFrameElement.src property reflects the HTML referrerpolicy attribute of the iframe element defining which referrer is sent when fetching the resource. [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string Remarks -HTMLAnchorElement.Src -HTMLAreaElement.Src -HTMLAreaElement.Src. See also on MDN Srcdoc The srcdoc property of the HTMLIFrameElement specifies the content of the page. [To(\"FirstCharToLowerCase\")] public string Srcdoc { get; set; } Property Value string Remarks See also on MDN Width [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string Methods GetSVGDocument() [To(\"FirstCharToLowerCase\")] public Document? GetSVGDocument() Returns Document"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLImageElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLImageElement.html",
    "title": "Class HTMLImageElement | CSharpToJavaScript",
    "keywords": "Class HTMLImageElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLImageElement interface represents an HTML img element, providing the properties and methods used to manipulate image elements. [To(\"Default\")] public class HTMLImageElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLImageElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: img See also on MDN Constructors HTMLImageElement() public HTMLImageElement() Properties Align IMPORTANT Deprecated The obsolete align property of the HTMLImageElement interface is a string which indicates how to position the image relative to its container. [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string A string specifying one of the following strings which set the alignment mode for the image. Remarks You should instead use the CSS property vertical-align, which does in fact also work on images despite its name. You can also use the float property to float the image to the left or right margin. The align property reflects the HTML align content attribute. See also on MDN Alt The HTMLImageElement property alt provides fallback (alternate) text to display when the image specified by the img element is not loaded. [To(\"FirstCharToLowerCase\")] public string Alt { get; set; } Property Value string A string which contains the alternate text to display when the image is not loaded or for use by assistive devices.The alt attribute is officially mandatory; it&apos;s meant to always be specified. If the image doesn&apos;t require a fallback (such as for an image which is decorative or an advisory icon of minimal importance), you may specify an empty string (&quot;&quot;). For compatibility reasons, browsers generally will accept an image without an alt attribute, but you should try to get into the habit of using it. Remarks This may be the case because of an error, because the user has disabled the loading of images, or because the image hasn&apos;t finished loading yet. Perhaps the most important reason to use the alt property is to support accessibility, as the alt text may be used by screen readers and other assistive technologies to help differently-abled users make full use of your content. It will be read aloud or sent to the touch device, for example, to support visually impaired users. Think of it like this: When choosing alt strings for your images, imagine what you would say when reading the page to someone over the phone without mentioning that there&apos;s an image on the page. The alternate text is displayed in the space the image would occupy and should be able to take the place of the image without altering the meaning of the page. See also on MDN Border IMPORTANT Deprecated The obsolete HTMLImageElement property border specifies the number of pixels thick the border surrounding the image should be. A value of 0, the default, indicates that no border should be drawn. [To(\"FirstCharToLowerCase\")] public string Border { get; set; } Property Value string A string containing an integer value specifying the thickness of the border that should surround the image, in CSS pixels. A value of 0, or an empty string, indicates that there should be no border drawn. The default value of border is 0 Remarks You should not use this property! Instead, you should use CSS to style the border. The border property or its longhand properties to not only set the thickness of the border but to potentially apply a wide variety of other styling options to it. The width, specifically, is controlled using the writing-mode aware border-block-start-width, border-block-end-width, border-inline-start-width, and border-inline-end-width properties. For compatibility (or perhaps other) reasons, you can use the older properties instead (or in addition): border-top-width, border-right-width, border-bottom-width, and border-left-width. See also on MDN Complete The read-only HTMLImageElement interface's complete attribute is a Boolean value which indicates whether or not the image has completely loaded. [To(\"FirstCharToLowerCase\")] public bool Complete { get; } Property Value bool A Boolean value which is true if the image has completely loaded; otherwise, the value is false.The image is considered completely loaded if any of the following are true:It&apos;s worth noting that due to the image potentially being received asynchronously, the value of complete may change while your script is running. Remarks See also on MDN CrossOrigin The HTMLImageElement interface&apos;s crossOrigin attribute is a string which specifies the Cross-Origin Resource Sharing (CORS) setting to use when retrieving the image. [To(\"FirstCharToLowerCase\")] public string? CrossOrigin { get; set; } Property Value string A string of a keyword specifying the CORS mode to use when fetching the image resource. If you don&apos;t specify crossOrigin, the image is fetched without CORS (the fetch no-cors mode).Permitted values are:If crossOrigin is an empty string (&quot;&quot;), the anonymous mode is selected. Remarks See also on MDN CurrentSrc The read-only HTMLImageElement property currentSrc indicates the URL of the image which is currently presented in the img element it represents. [To(\"FirstCharToLowerCase\")] public string CurrentSrc { get; } Property Value string A string indicating the full URL of the image currently visible in the img element represented by the HTMLImageElement. This is useful when you provide multiple image options using the Sizes and/or Srcset properties. currentSrc lets you determine which image from the set of provided images was selected by the browser. Remarks See also on MDN Decoding The decoding property of the HTMLImageElement interface represents a hint given to the browser on how it should decode the image. [To(\"FirstCharToLowerCase\")] public string Decoding { get; set; } Property Value string A string representing the decoding hint. Possible values are: Remarks See also on MDN Height The height property of the HTMLImageElement interface indicates the height at which the image is drawn, in CSS pixels if the image is being drawn or rendered to any visual medium such as the screen or a printer; otherwise, it&apos;s the natural, pixel density corrected height of the image. [To(\"FirstCharToLowerCase\")] public ulong Height { get; set; } Property Value ulong An integer value indicating the height of the image. The terms in which the height is defined depends on whether the image is being rendered to a visual medium or not. Remarks See also on MDN Hspace IMPORTANT Deprecated The obsolete hspace property of the HTMLImageElement interface specifies the number of pixels of empty space to leave empty on the left and right sides of the img element when laying out the page. [To(\"FirstCharToLowerCase\")] public ulong Hspace { get; set; } Property Value ulong An integer value specifying the width, in pixels, of the horizontal margin to apply to the left and right sides of the image. Remarks This property reflects the HTML hspace attribute. See also on MDN IsMap The HTMLImageElement property isMap is a Boolean value which indicates that the image is to be used by a server-side image map. This may only be used on images located within an a element. [To(\"FirstCharToLowerCase\")] public bool IsMap { get; set; } Property Value bool A Boolean value which is true if the image is being used for a server-side image map; otherwise, the value is false. Remarks NOTE Note: For accessibility reasons, you should generally avoid using server-side image maps, as they require the use of a mouse. Use a client-side image map instead. See also on MDN Loading The HTMLImageElement property loading is a string whose value provides a hint to the user agent on how to handle the loading of the image which is currently outside the window's visual viewport. [To(\"FirstCharToLowerCase\")] public string Loading { get; set; } Property Value string A string providing a hint to the user agent as to how to best schedule the loading of the image to optimize page performance. The possible values are: Remarks This helps to optimize the loading of the document&apos;s contents by postponing loading the image until it&apos;s expected to be needed, rather than immediately during the initial page load. -The img element -Web performance in the MDN Learning Area -Lazy loading in the MDN web performance guide See also on MDN LongDesc IMPORTANT Deprecated The deprecated property longDesc on the HTMLImageElement interface specifies the URL of a text or HTML file which contains a long-form description of the image. This can be used to provide optional added details beyond the short description provided in the title attribute. [To(\"FirstCharToLowerCase\")] public string LongDesc { get; set; } Property Value string A string which may be either an empty string (indicating that no long description is available) or the URL of a file containing a long form description of the image&apos;s contents.For example, if the image is a PNG of a flowchart. The longDesc property could be used to provide an explanation of the flow of control represented by the chart, using only text. This can be used by readers both as an explanation, but also as a substitute for visually-impaired users. Remarks -aria-details See also on MDN Lowsrc [To(\"FirstCharToLowerCase\")] public string Lowsrc { get; set; } Property Value string Name IMPORTANT Deprecated The HTMLImageElement interface&apos;s deprecated name property specifies a name for the element. This has been replaced by the Id property available on all elements. [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string A string providing a name by which the image can be referenced. WARNING Warning: This property is deprecated and is only in the specification still for backward compatibility purposes. Since it functions identically to id, you can and should use it instead. Remarks See also on MDN NaturalHeight The HTMLImageElement interface's naturalHeight property is a read-only value which returns the intrinsic (natural), density-corrected height of the image in CSS pixel. [To(\"FirstCharToLowerCase\")] public ulong NaturalHeight { get; } Property Value ulong An integer value indicating the intrinsic height, in CSS pixels, of the image. This is the height at which the image is naturally drawn when no constraint or specific value is established for the image. This natural height is corrected for the pixel density of the device on which it&apos;s being presented, unlike {{domxref(&quot;HTMLImageElement.height&quot;, &quot;height&quot;)}}.If the intrinsic height is not available—either because the image does not specify an intrinsic height or because the image data is not available in order to obtain this information, naturalHeight returns 0. Remarks This is the height the image is if drawn with nothing constraining its height; if you don&apos;t specify a height for the image, or place the image inside a container that either limits or expressly specifies the image height, it will be rendered this tall. NOTE Note: Most of the time the natural height is the actual height of the image sent by the server. Nevertheless, browsers can modify an image before pushing it to the renderer. For example, Chrome degrades the resolution of images on low-end devices. In such cases, naturalHeight will consider the height of the image modified by such browser interventions as the natural height, and returns this value. See also on MDN NaturalWidth The HTMLImageElement interface's read-only naturalWidth property returns the intrinsic (natural), density-corrected width of the image in {{Glossary(&quot;CSS pixel&quot;, &quot;CSS pixels&quot;)}}. [To(\"FirstCharToLowerCase\")] public ulong NaturalWidth { get; } Property Value ulong An integer value indicating the intrinsic width of the image, in CSS pixels. This is the width at which the image is naturally drawn when no constraint or specific value is established for the image. This natural width is corrected for the pixel density of the device on which it&apos;s being presented, unlike the value of Width.If the intrinsic width is not available—either because the image does not specify an intrinsic width or because the image data is not available in order to obtain this information, naturalWidth returns 0. Remarks This is the width the image is if drawn with nothing constraining its width; if you neither specify a width for the image nor place the image inside a container that limits or expressly specifies the image width, this is the number of CSS pixels wide the image will be. The corresponding NaturalHeight method returns the natural height of the image. NOTE Note: Most of the time the natural width is the actual width of the image sent by the server. Nevertheless, browsers can modify an image before pushing it to the renderer. For example, Chrome degrades the resolution of images on low-end devices. In such cases, naturalWidth will consider the width of the image modified by such browser interventions as the natural width, and returns this value. See also on MDN ReferrerPolicy The HTMLImageElement.referrerPolicy property reflects the HTML referrerpolicy attribute of the img element defining which referrer is sent when fetching the resource. [To(\"FirstCharToLowerCase\")] public string ReferrerPolicy { get; set; } Property Value string A string; one of the following: Remarks -ReferrerPolicy, ReferrerPolicy, and ReferrerPolicy. See also on MDN Sizes The HTMLImageElement property sizes allows you to specify the layout width of the image for each of a list of media conditions. This provides the ability to automatically select among different images—even images of different orientations or aspect ratios—as the document state changes to match different media conditions. [To(\"FirstCharToLowerCase\")] public string Sizes { get; set; } Property Value string A string containing a comma-separated list of source size descriptors followed by an optional fallback size. Each source size descriptor is comprised of a media condition, then at least one whitespace character, then the source size value to use for the image when the media condition evaluates to true. Remarks Each condition is specified using the same conditional format used by media queries. -Media queries -Using media queries -Images in HTML -Responsive images See also on MDN Src The HTMLImageElement property src, which reflects the HTML src attribute, specifies the image to display in the img element. [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string When providing only a single image, rather than a set of images from which the browser selects the best match for the viewport size and display pixel density, the src attribute is a string specifying the URL of the desired image. This can be set either within the HTML itself using the src content attribute, or programmatically by setting the element&apos;s src property.If you use the srcset content attribute to provide multiple image options for different display pixel densities, the URL specified by the src attribute is used in one of two ways:Additionally, if you use src along with both Sizes (or the corresponding sizes content attribute) and srcset in order to choose an image based on the viewport size, the src attribute is only used as a fallback for browsers that don&apos;t support sizes and srcset; otherwise, it&apos;s not used at all. Remarks See also on MDN Srcset The HTMLImageElement property srcset is a string which identifies one or more image candidate strings, separated using commas (,) each specifying image resources to use under given circumstances. [To(\"FirstCharToLowerCase\")] public string Srcset { get; set; } Property Value string A string containing a comma-separated list of one or more image candidate strings to be used when determining which image resource to present inside the img element represented by the HTMLImageElement.Each image candidate string must begin with a valid URL referencing a non-interactive graphic resource. This is followed by whitespace and then a condition descriptor that indicates the circumstances in which the indicated image should be used. Space characters, other than the whitespace separating the URL and the corresponding condition descriptor, are ignored; this includes both leading and trailing space, as well as space before or after each comma.The condition descriptor may take one of two forms:If the condition descriptor is not provided (in other words, the image candidate provides only a URL), the candidate is assigned a default descriptor of &quot;1x&quot;.This string provides versions of an image to be used at the standard pixel density (undescribed, assigned a default of 1x) as well as double that pixel density (2x).When an image element&apos;s srcset contains &quot;x&quot; descriptors, browsers also consider the URL in the Src attribute (if present) as a candidate, and assign it a default descriptor of 1x.This string provides versions of a header image to use when the {{Glossary(&quot;user agent&quot;, &quot;user agent&apos;s&quot;)}} renderer needs an image of width 640px, 960px, or 1024px.Note that if any resource in a srcset is described with a &quot;w&quot; descriptor, all resources within that srcset must also be described with &quot;w&quot; descriptors, and the image element's Src is not considered a candidate. Remarks Each image candidate string contains an image URL and an optional width or pixel density descriptor that indicates the conditions under which that candidate should be used instead of the image specified by the Src property. The srcset property, along with the {{domxref(&quot;HTMLImageElement.sizes&quot;, &quot;sizes&quot;)}} property, are a crucial component in designing responsive websites, as they can be used together to make pages that use appropriate images for the rendering situation. NOTE Note: If the srcset attribute uses width descriptors, the sizes attribute must also be present, or the srcset itself will be ignored. -Images in HTML -Responsive images -Image file type and format guide See also on MDN UseMap The useMap property on the HTMLImageElement interface reflects the value of the HTML usemap attribute, which is a string providing the name of the client-side image map to apply to the image. [To(\"FirstCharToLowerCase\")] public string UseMap { get; set; } Property Value string A string providing the page-local URL (that is, a URL that begins with the hash or pound symbol, &quot;#\") of the map element which defines the image map to apply to the image.You can learn more about client-side image maps in our learning article Add a hitmap on top of an image. Remarks See also on MDN Vspace IMPORTANT Deprecated The obsolete vspace property of the HTMLImageElement interface specifies the number of pixels of empty space to leave empty on the top and bottom of the img element when laying out the page. [To(\"FirstCharToLowerCase\")] public ulong Vspace { get; set; } Property Value ulong An integer value specifying the height, in pixels, of the vertical margin to apply to the top and bottom sides of the image. Remarks See also on MDN Width The width property of the HTMLImageElement interface indicates the width at which an image is drawn in CSS pixel if it's being drawn or rendered to any visual medium such as a screen or printer. Otherwise, it&apos;s the natural, pixel density-corrected width of the image. [To(\"FirstCharToLowerCase\")] public ulong Width { get; set; } Property Value ulong An integer value indicating the width of the image. The way the width is defined depends on whether or not the image is being rendered to a visual medium, such as a screen or printer: Remarks See also on MDN Methods Decode() The decode() method of the HTMLImageElement interface returns a Promise that resolves when the image is decoded and it is safe to append the image to the DOM. [To(\"FirstCharToLowerCase\")] public Task<GlobalObject.Undefined> Decode() Returns Task<GlobalObject.Undefined> A 'Promise' which is resolved once the image data is ready to be used. Remarks This can be used to initiate loading of the image prior to attaching it to an element in the DOM (or adding it to the DOM as a new element), so that the image can be rendered immediately upon being added to the DOM. This, in turn, prevents the rendering of the next frame after adding the image to the DOM from causing a delay while the image loads. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLInputElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLInputElement.html",
    "title": "Class HTMLInputElement | CSharpToJavaScript",
    "keywords": "Class HTMLInputElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLInputElement interface provides special properties and methods for manipulating the options, layout, and presentation of input elements. [To(\"Default\")] public class HTMLInputElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLInputElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: input See also on MDN Constructors HTMLInputElement() public HTMLInputElement() Properties Accept [To(\"FirstCharToLowerCase\")] public string Accept { get; set; } Property Value string Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Alt [To(\"FirstCharToLowerCase\")] public string Alt { get; set; } Property Value string Autocomplete [To(\"FirstCharToLowerCase\")] public string Autocomplete { get; set; } Property Value string Checked [To(\"FirstCharToLowerCase\")] public bool Checked { get; set; } Property Value bool DefaultChecked [To(\"FirstCharToLowerCase\")] public bool DefaultChecked { get; set; } Property Value bool DefaultValue [To(\"FirstCharToLowerCase\")] public string DefaultValue { get; set; } Property Value string DirName [To(\"FirstCharToLowerCase\")] public string DirName { get; set; } Property Value string Disabled The HTMLInputElement.disabled property is a boolean value that reflects the disabled HTML attribute, which indicates whether the control is disabled. If it is disabled, it does not accept clicks. A disabled element is unusable and un-clickable. [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool A boolean value. Remarks See also on MDN Files The HTMLInputElement.files property allows you to access the FileList selected with the &lt;input type=&quot;file&quot;&gt; element. [To(\"FirstCharToLowerCase\")] public Unsupported? Files { get; set; } Property Value Unsupported A FileList object listing the selected files, if any, or null if the HTMLInputElement is not of type=&quot;file&quot;. Remarks -Files See also on MDN Form [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement FormAction [To(\"FirstCharToLowerCase\")] public string FormAction { get; set; } Property Value string FormEnctype [To(\"FirstCharToLowerCase\")] public string FormEnctype { get; set; } Property Value string FormMethod [To(\"FirstCharToLowerCase\")] public string FormMethod { get; set; } Property Value string FormNoValidate [To(\"FirstCharToLowerCase\")] public bool FormNoValidate { get; set; } Property Value bool FormTarget [To(\"FirstCharToLowerCase\")] public string FormTarget { get; set; } Property Value string Height [To(\"FirstCharToLowerCase\")] public ulong Height { get; set; } Property Value ulong Indeterminate [To(\"FirstCharToLowerCase\")] public bool Indeterminate { get; set; } Property Value bool Labels The HTMLInputElement.labels read-only property returns a NodeList of the {{HTMLElement(\"label\")}} elements associated with the input element, if the element is not hidden. If the element has the type hidden, the property returns null. [To(\"FirstCharToLowerCase\")] public NodeList? Labels { get; } Property Value NodeList A NodeList containing the &lt;label&gt; elements associated with the &lt;input&gt; element. Remarks See also on MDN List [To(\"FirstCharToLowerCase\")] public HTMLElement? List { get; } Property Value HTMLElement Max [To(\"FirstCharToLowerCase\")] public string Max { get; set; } Property Value string MaxLength [To(\"FirstCharToLowerCase\")] public long MaxLength { get; set; } Property Value long Min [To(\"FirstCharToLowerCase\")] public string Min { get; set; } Property Value string MinLength [To(\"FirstCharToLowerCase\")] public long MinLength { get; set; } Property Value long Multiple The HTMLInputElement.multiple property indicates if an input can have more than one value. Firefox currently only supports multiple for &lt;input type=&quot;file&quot;&gt;. [To(\"FirstCharToLowerCase\")] public bool Multiple { get; set; } Property Value bool A boolean value. Remarks -FileList -Bug 523771 - Support &lt;input type=file multiple&gt; See also on MDN Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Pattern [To(\"FirstCharToLowerCase\")] public string Pattern { get; set; } Property Value string Placeholder [To(\"FirstCharToLowerCase\")] public string Placeholder { get; set; } Property Value string ReadOnly [To(\"FirstCharToLowerCase\")] public bool ReadOnly { get; set; } Property Value bool Required [To(\"FirstCharToLowerCase\")] public bool Required { get; set; } Property Value bool SelectionDirection [To(\"FirstCharToLowerCase\")] public string? SelectionDirection { get; set; } Property Value string SelectionEnd [To(\"FirstCharToLowerCase\")] public ulong? SelectionEnd { get; set; } Property Value ulong? SelectionStart [To(\"FirstCharToLowerCase\")] public ulong? SelectionStart { get; set; } Property Value ulong? Size [To(\"FirstCharToLowerCase\")] public ulong Size { get; set; } Property Value ulong Src [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string Step [To(\"FirstCharToLowerCase\")] public string Step { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string UseMap [To(\"FirstCharToLowerCase\")] public string UseMap { get; set; } Property Value string ValidationMessage [To(\"FirstCharToLowerCase\")] public string ValidationMessage { get; } Property Value string Validity [To(\"FirstCharToLowerCase\")] public ValidityState Validity { get; } Property Value ValidityState Value [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string ValueAsDate [To(\"FirstCharToLowerCase\")] public object? ValueAsDate { get; set; } Property Value object ValueAsNumber [To(\"FirstCharToLowerCase\")] public double ValueAsNumber { get; set; } Property Value double Width [To(\"FirstCharToLowerCase\")] public ulong Width { get; set; } Property Value ulong WillValidate [To(\"FirstCharToLowerCase\")] public bool WillValidate { get; } Property Value bool Methods CheckValidity() The HTMLInputElement.checkValidity() method returns a boolean value which indicates validity of the value of the element. If the value is invalid, this method also fires the HTMLInputElement/invalid_event event on the element. [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool Returns true if the value of the element has no validity problems; otherwise returns false. Remarks -reportValidity -Learn: Client-side form validation -Guide: Constraint validation See also on MDN ReportValidity() The reportValidity() method of the 'HTMLInputElement' interface performs the same validity checking steps as the CheckValidity() method. If the value is invalid, this method also fires the HTMLInputElement.Invalid_event event on the element, and (if the event isn't canceled) reports the problem to the user. [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool Returns true if the element&apos;s value has no validity problems; otherwise, returns false. Remarks -checkValidity -Learn: Client-side form validation -Guide: Constraint validation See also on MDN Select() The HTMLInputElement.select() method selects all the text in a textarea element or in an input element that includes a text field. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Select() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -input -textarea -HTMLInputElement -SetSelectionRange(ulong, ulong, string) See also on MDN SetCustomValidity(string) The HTMLInputElement.setCustomValidity() method sets a custom validity message for the element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetCustomValidity(string error) Parameters error string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Learn: Client-side form validation -Guide: Constraint validation -'ValidityState' See also on MDN SetRangeText(string) The HTMLInputElement.setRangeText() method replaces a range of text in an input or textarea element with a new string. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetRangeText(string replacement) Parameters replacement string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -input -textarea -HTMLInputElement -Selection See also on MDN SetRangeText(string, ulong, ulong, SelectionMode) The HTMLInputElement.setRangeText() method replaces a range of text in an input or textarea element with a new string. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetRangeText(string replacement, ulong start, ulong end, SelectionMode selectionMode) Parameters replacement string start ulong end ulong selectionMode SelectionMode Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -input -textarea -HTMLInputElement -Selection See also on MDN SetSelectionRange(ulong, ulong, string) The HTMLInputElement.setSelectionRange() method sets the start and end positions of the current text selection in an input or textarea element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetSelectionRange(ulong start, ulong end, string direction) Parameters start ulong end ulong direction string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Optionally, in newer browser versions, you can specify the direction in which selection should be considered to have occurred. This lets you indicate, for example, that the selection was set by the user clicking and dragging from the end of the selected text toward the beginning. This method updates the HTMLInputElement.selectionStart, selectionEnd, and selectionDirection properties in one call. Note that according to the WHATWG forms spec selectionStart, selectionEnd properties and setSelectionRange method apply only to inputs of types text, search, URL, tel and password. Chrome, starting from version 33, throws an exception while accessing those properties and method on the rest of input types. For example, on input of type number: &quot;Failed to read the &apos;selectionStart&apos; property from &apos;HTMLInputElement&apos;: The input element&apos;s type (&apos;number&apos;) does not support selection&quot;. If you wish to select all text of an input element, you can use the HTMLInputElement.select() method instead. -input -textarea -HTMLInputElement -Selection See also on MDN ShowPicker() The HTMLInputElement.showPicker() method displays the browser picker for an input element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined ShowPicker() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This is the same picker that would normally be displayed when the element is selected, but can be triggered from a button press or other user interaction. Commonly browsers implement it for inputs of these types: &quot;date&quot;, &quot;month&quot;, &quot;week&quot;, &quot;time&quot;, &quot;datetime-local&quot;, &quot;color&quot;, or &quot;file&quot;. It can also be prepopulated with items from a datalist element or autocomplete attribute. More generally, this method should ideally display the picker for any input element on the platform that has a picker. -input -HTMLInputElement -datalist -autocomplete See also on MDN StepDown(long) The HTMLInputElement.stepDown([n]) method decrements the value of a numeric type of input element by the value of the step attribute or up to n multiples of the step attribute if a number is passed as the parameter. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined StepDown(long n) Parameters n long Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The method, when invoked, decrements the value by (step * n), where n defaults to 1 if not specified, and step defaults to the default value for step if not specified. Valid on all numeric, date, and time input types that support the step attribute, including input/date, input/month, input/week, input/time, input/datetime-local, {{HTMLElement(\"input/number\", \"number\")}}, and input/range. Given &lt;input id=&quot;myTime&quot; type=&quot;time&quot; max=&quot;17:00&quot; step=&quot;900&quot; value=&quot;17:00&quot;&gt;, invoking myTime.stepDown(3) will change the value to 16:15, decrementing the time by 3 * 900, or 45 minutes. myTime.stepDown(), with no parameter, would have resulted in 16:45, as n defaults to 1. However, calling stepDown on &lt;input type=&quot;time&quot; max=&quot;17:00&quot; step=&quot;900&quot;&gt; would not set the value to 17:00, as one would expect — and as it does for stepUp when the input is &lt;input type=&quot;time&quot; min=&quot;17:00&quot; step=&quot;900&quot;&gt;. Instead, the first call to stepDown will set the initial value to 23:45 even though the max attribute is set. The second call will set the value to 17:00. And the third call to will set the value to 16:45. The method, when invoked, changes the form control&apos;s value by the value given in the step attribute, multiplied by the parameter, within the constraints set within the form control. The default value for the parameter, if not is passed, is 1. The method will not cause the value to go below the min value set or defy the constraints set by the step attribute. A negative value for n will increment the value, but will not increment beyond the max value. If the value before invoking the stepDown() method is invalid, for example, if it doesn&apos;t match the constraints set by the step attribute, invoking the stepDown() method will return a value that does match the form controls constraints. If the form control is non time, date, or numeric in nature, and therefore does not support the step attribute (see the list of supported input types above), or if the step value is set to any, an InvalidStateError exception is thrown. -input -HTMLInputElement -StepUp(long) -step, min and max attributes See also on MDN StepUp(long) The HTMLInputElement.stepUp() method increments the value of a numeric type of input element by the value of the step attribute, or the default step value if the step attribute is not explicitly set. The method, when invoked, increments the value by (step * n), where n defaults to 1 if not specified, and step defaults to the default value for step if not specified. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined StepUp(long n) Parameters n long Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The method, when invoked, changes the form control&apos;s value by the value given in the step attribute, multiplied by the parameter, within the constraints set on the form control. The default value for the parameter, if no value is passed, is 1. The method will not cause the value to exceed the set max value, or defy the constraints set by the step attribute. If the value before invoking the stepUp() method is invalid—for example, if it doesn&apos;t match the constraints set by the step attribute—invoking the stepUp() method will return a value that does match the form controls constraints. If the form control is non time, date, or numeric in nature, and therefore does not support the step attribute (see the list of supported input types in the table above), or if the step value is set to any, an InvalidStateError exception is thrown. -input -HTMLInputElement -StepDown(long) -step, min and max attributes See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLLIElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLLIElement.html",
    "title": "Class HTMLLIElement | CSharpToJavaScript",
    "keywords": "Class HTMLLIElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLLIElement interface exposes specific properties and methods (beyond those defined by regular HTMLElement interface it also has available to it by inheritance) for manipulating list elements. [To(\"Default\")] public class HTMLLIElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLLIElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: li See also on MDN Constructors HTMLLIElement() public HTMLLIElement() Properties Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string Value [To(\"FirstCharToLowerCase\")] public long Value { get; set; } Property Value long"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLLabelElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLLabelElement.html",
    "title": "Class HTMLLabelElement | CSharpToJavaScript",
    "keywords": "Class HTMLLabelElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLLabelElement interface gives access to properties specific to {{HTMLElement(\"label\")}} elements. It inherits methods and properties from the base HTMLElement interface. [To(\"Default\")] public class HTMLLabelElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLLabelElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: label -form -HTMLFormElement See also on MDN Constructors HTMLLabelElement() public HTMLLabelElement() Properties Control The read-only HTMLLabelElement.control property returns a reference to the control (in the form of an object of type HTMLElement or one of its derivatives) with which the label element is associated, or null if the label isn&apos;t associated with a control. [To(\"FirstCharToLowerCase\")] public HTMLElement? Control { get; } Property Value HTMLElement An HTMLElement derived object representing the control with which the label is associated, or null if the label stands alone. NOTE Note: If this property has a value and HtmlFor has a value, the HtmlFor property must refer to the same control. Remarks -HTMLLabelElement -HTMLElement -label -HTML forms guide See also on MDN Form The read-only HTMLLabelElement.form property returns an HTMLFormElement object which represents the form of which the label's associated control is a part, or null if there is either no associated control, or if that control isn&apos;t in a form. [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement An HTMLFormElement which represents the form with which the label's Control is associated. If Control is null (meaning the label isn&apos;t associated with a control), or if the control isn&apos;t part of a form, this property returns null. Remarks This property is just a shortcut for HTMLLabelElement.control.form. -HTMLLabelElement -HTMLElement -label -HTML forms guide See also on MDN HtmlFor The HTMLLabelElement.htmlFor property reflects the value of the for content property. That means that this script-accessible property is used to set and read the value of the content property for, which is the ID of the label&apos;s associated control element. [To(\"FirstCharToLowerCase\")] public string HtmlFor { get; set; } Property Value string A string which contains the ID string of the element which is associated with the control. NOTE Note: If this property has a value, the Control property must refer to the same control. Remarks -HTMLLabelElement -Control -HTMLElement -label -HTML forms guide See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLLegendElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLLegendElement.html",
    "title": "Class HTMLLegendElement | CSharpToJavaScript",
    "keywords": "Class HTMLLegendElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLLegendElement is an interface allowing to access properties of the {{HTMLElement(\"legend\")}} elements. It inherits properties and methods from the HTMLElement interface. [To(\"Default\")] public class HTMLLegendElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLLegendElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: legend See also on MDN Constructors HTMLLegendElement() public HTMLLegendElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Form [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLLinkElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLLinkElement.html",
    "title": "Class HTMLLinkElement | CSharpToJavaScript",
    "keywords": "Class HTMLLinkElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLLinkElement interface represents reference information for external resources and the relationship of those resources to a document and vice versa (corresponds to &lt;link&gt; element; not to be confused with &lt;a&gt;, which is represented by HTMLAnchorElement). This object inherits all of the properties and methods of the HTMLElement interface. [To(\"Default\")] public class HTMLLinkElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLLinkElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: link. See also on MDN Constructors HTMLLinkElement() public HTMLLinkElement() Properties As The as property of the HTMLLinkElement interface returns a string representing the type of content to be preloaded by a link element. [To(\"FirstCharToLowerCase\")] public string As { get; set; } Property Value string A string with the following allowed values: &quot;audio&quot;, &quot;document&quot;, &quot;embed&quot;, &quot;fetch&quot;, &quot;font&quot;, &quot;image&quot;, &quot;object&quot;, &quot;script&quot;, &quot;style&quot;, &quot;track&quot;, &quot;video&quot;, &quot;worker&quot;. Remarks The as property must have a value for link elements when rel=&quot;preload&quot;, or the resource will not be fetched. It may also be applied to link elements where rel=&quot;modulepreload&quot;, but if omitted, will default to script. The property should not be set for other types of link elements, such as rel=&quot;prefetch&quot;. This property reflects the value of the as attribute of the &lt;link&gt; HTML element. See also on MDN Blocking [To(\"FirstCharToLowerCase\")] public DOMTokenList Blocking { get; } Property Value DOMTokenList Charset [To(\"FirstCharToLowerCase\")] public string Charset { get; set; } Property Value string CrossOrigin [To(\"FirstCharToLowerCase\")] public string? CrossOrigin { get; set; } Property Value string Disabled [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool Href [To(\"FirstCharToLowerCase\")] public string Href { get; set; } Property Value string Hreflang [To(\"FirstCharToLowerCase\")] public string Hreflang { get; set; } Property Value string ImageSizes [To(\"FirstCharToLowerCase\")] public string ImageSizes { get; set; } Property Value string ImageSrcset [To(\"FirstCharToLowerCase\")] public string ImageSrcset { get; set; } Property Value string Integrity [To(\"FirstCharToLowerCase\")] public string Integrity { get; set; } Property Value string Media [To(\"FirstCharToLowerCase\")] public string Media { get; set; } Property Value string ReferrerPolicy The HTMLLinkElement.referrerPolicy property reflects the HTML referrerpolicy attribute of the link element defining which referrer is sent when fetching the resource. [To(\"FirstCharToLowerCase\")] public string ReferrerPolicy { get; set; } Property Value string A string; one of the following: Remarks See the HTTP Referrer-Policy header for details. -HTTP header Referrer-Policy -ReferrerPolicy -ReferrerPolicy -ReferrerPolicy -ReferrerPolicy See also on MDN Rel The HTMLLinkElement.rel property reflects the rel attribute. It is a string containing a space-separated list of link types indicating the relationship between the resource represented by the link element and the current document. [To(\"FirstCharToLowerCase\")] public string Rel { get; set; } Property Value string A string. Remarks The most common use of this attribute is to specify a link to an external style sheet: the property is set to stylesheet, and the href attribute is set to the URL of an external style sheet to format the page. -The equivalent property on a and area, Rel and Rel. -The very same list but as tokens: RelList See also on MDN RelList The HTMLLinkElement.relList read-only property reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the {{HTMLElement(\"link\")}} element and the current document. [To(\"FirstCharToLowerCase\")] public DOMTokenList RelList { get; } Property Value DOMTokenList A live DOMTokenList of strings. Remarks The property itself is read-only, meaning you can not substitute the DOMTokenList by another one, but the content of the returned list can be changed. -The equivalent property on a and area, RelList and RelList. -The very same list but as a space-separated tokens in a string: Rel See also on MDN Rev [To(\"FirstCharToLowerCase\")] public string Rev { get; set; } Property Value string Sizes [To(\"FirstCharToLowerCase\")] public DOMTokenList Sizes { get; } Property Value DOMTokenList Target [To(\"FirstCharToLowerCase\")] public string Target { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLMapElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLMapElement.html",
    "title": "Class HTMLMapElement | CSharpToJavaScript",
    "keywords": "Class HTMLMapElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLMapElement interface provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of map elements. [To(\"Default\")] public class HTMLMapElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLMapElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: map. See also on MDN Constructors HTMLMapElement() public HTMLMapElement() Properties Areas [To(\"FirstCharToLowerCase\")] public HTMLCollection Areas { get; } Property Value HTMLCollection Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLMarqueeElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLMarqueeElement.html",
    "title": "Class HTMLMarqueeElement | CSharpToJavaScript",
    "keywords": "Class HTMLMarqueeElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The HTMLMarqueeElement interface provides methods to manipulate marquee elements. [To(\"Default\")] public class HTMLMarqueeElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLMarqueeElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It inherits properties and methods from the HTMLElement interface. -marquee See also on MDN Constructors HTMLMarqueeElement() public HTMLMarqueeElement() Properties Behavior [To(\"FirstCharToLowerCase\")] public string Behavior { get; set; } Property Value string BgColor [To(\"FirstCharToLowerCase\")] public string BgColor { get; set; } Property Value string Direction [To(\"FirstCharToLowerCase\")] public string Direction { get; set; } Property Value string Height [To(\"FirstCharToLowerCase\")] public string Height { get; set; } Property Value string Hspace [To(\"FirstCharToLowerCase\")] public ulong Hspace { get; set; } Property Value ulong Loop [To(\"FirstCharToLowerCase\")] public long Loop { get; set; } Property Value long ScrollAmount [To(\"FirstCharToLowerCase\")] public ulong ScrollAmount { get; set; } Property Value ulong ScrollDelay [To(\"FirstCharToLowerCase\")] public ulong ScrollDelay { get; set; } Property Value ulong TrueSpeed [To(\"FirstCharToLowerCase\")] public bool TrueSpeed { get; set; } Property Value bool Vspace [To(\"FirstCharToLowerCase\")] public ulong Vspace { get; set; } Property Value ulong Width [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string Methods Start() [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Start() Returns GlobalObject.Undefined Stop() [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Stop() Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLMediaElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLMediaElement.html",
    "title": "Class HTMLMediaElement | CSharpToJavaScript",
    "keywords": "Class HTMLMediaElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLMediaElement interface adds to HTMLElement the properties and methods needed to support basic media-related capabilities that are common to audio and video. [To(\"Default\")] public class HTMLMediaElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLMediaElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Derived HTMLAudioElement HTMLVideoElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The HTMLVideoElement and HTMLAudioElement elements both inherit this interface. See also on MDN Fields HAVE_CURRENT_DATA [To(\"FirstCharToLowerCase\")] public const ushort HAVE_CURRENT_DATA = 2 Field Value ushort HAVE_ENOUGH_DATA [To(\"FirstCharToLowerCase\")] public const ushort HAVE_ENOUGH_DATA = 4 Field Value ushort HAVE_FUTURE_DATA [To(\"FirstCharToLowerCase\")] public const ushort HAVE_FUTURE_DATA = 3 Field Value ushort HAVE_METADATA [To(\"FirstCharToLowerCase\")] public const ushort HAVE_METADATA = 1 Field Value ushort HAVE_NOTHING [To(\"FirstCharToLowerCase\")] public const ushort HAVE_NOTHING = 0 Field Value ushort NETWORK_EMPTY [To(\"FirstCharToLowerCase\")] public const ushort NETWORK_EMPTY = 0 Field Value ushort NETWORK_IDLE [To(\"FirstCharToLowerCase\")] public const ushort NETWORK_IDLE = 1 Field Value ushort NETWORK_LOADING [To(\"FirstCharToLowerCase\")] public const ushort NETWORK_LOADING = 2 Field Value ushort NETWORK_NO_SOURCE [To(\"FirstCharToLowerCase\")] public const ushort NETWORK_NO_SOURCE = 3 Field Value ushort Properties AudioTracks The read-only audioTracks property on HTMLMediaElement objects returns an AudioTrackList object listing all of the AudioTrack objects representing the media element&apos;s audio tracks. [To(\"FirstCharToLowerCase\")] public AudioTrackList AudioTracks { get; } Property Value AudioTrackList An AudioTrackList object representing the list of audio tracks included in the media element. The list of tracks can be accessed using array notation, or using the object's GetTrackById(string) method.Each track is represented by an AudioTrack object which provides information about the track. Remarks The media element may be either an audio element or a video element. The returned list is live; that is, as tracks are added to and removed from the media element, the list&apos;s contents change dynamically. Once you have a reference to the list, you can monitor it for changes to detect when new audio tracks are added or existing ones removed. See AudioTrackList events to learn more about watching for changes to a media element&apos;s track list. -HTMLMediaElement: Interface used to define the HTMLMediaElement.audioTracks property -audio, video -AudioTrack, AudioTrackList See also on MDN Autoplay The HTMLMediaElement.autoplay property reflects the autoplay HTML attribute, indicating whether playback should automatically begin as soon as enough media is available to do so without interruption. [To(\"FirstCharToLowerCase\")] public bool Autoplay { get; set; } Property Value bool A boolean value which is true if the media element will begin playback as soon as enough content has loaded to allow it to do so without interruption. NOTE Note: Some browsers offer users the ability to override autoplay in order to prevent disruptive audio or video from playing without permission or in the background. Do not rely on autoplay actually starting playback and instead use HTMLMediaElement.Play_event event. Remarks A media element whose source is a MediaStream and whose autoplay property is true will begin playback when it becomes active (that is, when MediaStream.Active becomes true). NOTE Note: Sites which automatically play audio (or videos with an audio track) can be an unpleasant experience for users, so it should be avoided when possible. If you must offer autoplay functionality, you should make it opt-in (requiring a user to specifically enable it). However, autoplay can be useful when creating media elements whose source will be set at a later time, under user control. For a much more in-depth look at autoplay, autoplay blocking, and how to respond when autoplay is blocked by the user&apos;s browser, see our article Autoplay guide for media and Web Audio APIs. -HTMLMediaElement: Interface used to define the HTMLMediaElement.autoplay property -audio, video See also on MDN Buffered The buffered read-only property of HTMLMediaElement objects returns a new static normalized TimeRanges object that represents the ranges of the media resource, if any, that the user agent has buffered at the moment the buffered property is accessed. [To(\"FirstCharToLowerCase\")] public TimeRanges Buffered { get; } Property Value TimeRanges A new static normalized TimeRanges object that represents the ranges of the media resource, if any, that the user agent has buffered at the moment the buffered property is accessed. Remarks NOTE Note: This feature is not available in Web Workers. -HTMLMediaElement: Interface used to define the HTMLMediaElement.buffered property See also on MDN BufferingThrottled [To(\"FirstCharToLowerCase\")] public bool BufferingThrottled { get; } Property Value bool Controls The HTMLMediaElement.controls property reflects the controls HTML attribute, which controls whether user interface controls for playing the media item will be displayed. [To(\"FirstCharToLowerCase\")] public bool Controls { get; set; } Property Value bool A boolean value. A value of true means controls will be displayed. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.controls property See also on MDN CrossOrigin The HTMLMediaElement.crossOrigin property is the CORS setting for this media element. See CORS settings attributes for details. [To(\"FirstCharToLowerCase\")] public string? CrossOrigin { get; set; } Property Value string Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.crossOrigin property See also on MDN CurrentSrc The HTMLMediaElement.currentSrc property contains the absolute URL of the chosen media resource. This could happen, for example, if the web server selects a media file based on the resolution of the user&apos;s display. The value is an empty string if the networkState property is EMPTY. [To(\"FirstCharToLowerCase\")] public string CurrentSrc { get; } Property Value string A string object containing the absolute URL of the chosen media source; this may be an empty string if networkState is EMPTY; otherwise, it will be one of the resources listed by the HTMLSourceElement contained within the media element, or the value or src if no source element is provided. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.currentSrc property See also on MDN CurrentTime The HTMLMediaElement interface's currentTime property specifies the current playback time in seconds. [To(\"FirstCharToLowerCase\")] public double CurrentTime { get; set; } Property Value double A double-precision floating-point value indicating the current playback time in seconds.If the media is not yet playing, the value of currentTime indicates the time position within the media at which playback will begin once the Play() method is called.Setting currentTime to a new value seeks the media to the given time, if the media is available.For media without a known duration—such as media being streamed live—it&apos;s possible that the browser may not be able to obtain parts of the media that have expired from the media buffer. Also, media whose timeline doesn&apos;t begin at 0 seconds cannot be seeked to a time before its timeline&apos;s earliest time.The length of the media in seconds can be determined using the Duration property. Remarks Changing the value of currentTime seeks the media to the new time. -HTMLMediaElement: Interface used to define the HTMLMediaElement.currentTime property -FastSeek(double): Another way to set the time -Duration: The duration of the media in seconds See also on MDN DefaultMuted The HTMLMediaElement.defaultMuted property reflects the muted HTML attribute, which indicates whether the media element's audio output should be muted by default. This property has no dynamic effect. To mute and unmute the audio output, use the Muted property. [To(\"FirstCharToLowerCase\")] public bool DefaultMuted { get; set; } Property Value bool A boolean value. A value of true means that the audio output will be muted by default. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.defaultMuted property -Muted -Volume See also on MDN DefaultPlaybackRate The HTMLMediaElement.defaultPlaybackRate property indicates the default playback rate for the media. [To(\"FirstCharToLowerCase\")] public double DefaultPlaybackRate { get; set; } Property Value double A double. 1.0 is &quot;normal speed,&quot; values lower than 1.0 make the media play slower than normal, higher values make it play faster. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.defaultPlaybackRate property See also on MDN Duration The read-only HTMLMediaElement property duration indicates the length of the element&apos;s media in seconds. [To(\"FirstCharToLowerCase\")] public double Duration { get; } Property Value double A double-precision floating-point value indicating the duration of the media in seconds. If no media data is available, the value NaN is returned. If the element&apos;s media doesn&apos;t have a known duration—such as for live media streams—the value of duration is +Infinity. Remarks -Web media technologies -CurrentTime: The current playback position of the media -The audio and video elements See also on MDN Ended The HTMLMediaElement.ended property indicates whether the media element has ended playback. [To(\"FirstCharToLowerCase\")] public bool Ended { get; } Property Value bool A boolean value which is true if the media contained in the element has finished playing.If the source of the media is a MediaStream, this value is true if the value of the stream&apos;s {{domxref(&quot;MediaStream.active&quot;, &quot;active&quot;)}} property is false. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.ended property -MediaStream -MediaStream.Active See also on MDN Error The HTMLMediaElement.error property is the MediaError object for the most recent error, or null if there has not been an error. When an HTMLMediaElement/error_event event is received by the element, you can determine details about what happened by examining this object. [To(\"FirstCharToLowerCase\")] public MediaError? Error { get; } Property Value MediaError A MediaError object describing the most recent error to occur on the media element or null if no errors have occurred. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.error property -audio and video See also on MDN Loop The HTMLMediaElement.loop property reflects the loop HTML attribute, which controls whether the media element should start over when it reaches the end. [To(\"FirstCharToLowerCase\")] public bool Loop { get; set; } Property Value bool A boolean value. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.loop property See also on MDN Muted The HTMLMediaElement.muted property indicates whether the media element is muted. [To(\"FirstCharToLowerCase\")] public bool Muted { get; set; } Property Value bool A boolean value. true means muted and false means not muted. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.muted property -DefaultMuted -Volume See also on MDN NetworkState The HTMLMediaElement.networkState property indicates the current state of the fetching of media over the network. [To(\"FirstCharToLowerCase\")] public ushort NetworkState { get; } Property Value ushort An unsigned short. Possible values are: Constant Value Description NETWORK_EMPTY 0 There is no data yet. Also, readyState is HAVE_NOTHING. NETWORK_IDLE 1 HTMLMediaElement is active and has selected a resource, but is not using the network. NETWORK_LOADING 2 The browser is downloading HTMLMediaElement data. NETWORK_NO_SOURCE 3 No HTMLMediaElement src found. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.networkState property See also on MDN Paused The read-only HTMLMediaElement.paused property tells whether the media element is paused. [To(\"FirstCharToLowerCase\")] public bool Paused { get; } Property Value bool A boolean value. true is paused and false is not paused. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.paused property See also on MDN PlaybackRate The HTMLMediaElement.playbackRate property sets the rate at which the media is being played back. This is used to implement user controls for fast forward, slow motion, and so forth. The normal playback rate is multiplied by this value to obtain the current rate, so a value of 1.0 indicates normal speed. [To(\"FirstCharToLowerCase\")] public double PlaybackRate { get; set; } Property Value double A double. 1.0 is &quot;normal speed,&quot; values lower than 1.0 make the media play slower than normal, higher values make it play faster. (Default: 1.0) Remarks If playbackRate is negative, the media is not played backwards. The audio is muted when the fast forward or slow motion is outside a useful range (for example, Gecko mutes the sound outside the range 0.25 to 4.0). The pitch of the audio is corrected by default. You can disable pitch correction using the PreservesPitch property. -HTMLMediaElement: Interface used to define the HTMLMediaElement.playbackRate property See also on MDN Played [To(\"FirstCharToLowerCase\")] public TimeRanges Played { get; } Property Value TimeRanges Preload [To(\"FirstCharToLowerCase\")] public string Preload { get; set; } Property Value string PreservesPitch The HTMLMediaElement.preservesPitch property determines whether or not the browser should adjust the pitch of the audio to compensate for changes to the playback rate made by setting PlaybackRate. [To(\"FirstCharToLowerCase\")] public bool PreservesPitch { get; set; } Property Value bool A boolean value defaulting to true. Remarks -PlaybackRate -Web Audio playbackRate explained See also on MDN ReadyState The HTMLMediaElement.readyState property indicates the readiness state of the media. [To(\"FirstCharToLowerCase\")] public ushort ReadyState { get; } Property Value ushort An unsigned short. Possible values are: Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.readyState property See also on MDN Seekable The seekable read-only property of HTMLMediaElement objects returns a new static normalized TimeRanges object that represents the ranges of the media resource, if any, that the user agent is able to seek to at the time seekable property is accessed. [To(\"FirstCharToLowerCase\")] public TimeRanges Seekable { get; } Property Value TimeRanges A new static normalized TimeRanges object that represents the ranges of the media resource, if any, that the user agent is able to seek to at the time seekable property is accessed. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.seekable property -Media Source API -Media buffering, seeking, and time ranges See also on MDN Seeking [To(\"FirstCharToLowerCase\")] public bool Seeking { get; } Property Value bool Src The HTMLMediaElement.src property reflects the value of the HTML media element&apos;s src attribute, which indicates the URL of a media resource to use in the element. [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string A string object containing the URL of a media resource to use in the element; this property reflects the value of the HTML element&apos;s src attribute. Remarks NOTE Note: The best way to know the URL of the media resource currently in active use in this element is to look at the value of the CurrentSrc attribute, which also takes into account selection of a best or preferred media resource from a list provided in an HTMLSourceElement (which represents a {{HTMLElement(\"source\")}} element). -HTMLMediaElement: Interface used to define the HTMLMediaElement.src property See also on MDN SrcObject The srcObject property of the HTMLMediaElement interface sets or returns the object which serves as the source of the media associated with the HTMLMediaElement. [To(\"FirstCharToLowerCase\")] public Union20? SrcObject { get; set; } Property Value Union20? A 'MediaStream', 'MediaSource', 'Blob', or 'File' object (though see the compatibility table for what is actually supported). Remarks The object can be a MediaStream, a MediaSource, a Blob, or a File (which inherits from Blob). NOTE Note: As of March 2020, only Safari has full support for srcObject, i.e. using MediaSource, MediaStream, Blob, and File objects as values. Other browsers support MediaStream objects; until they catch up, consider falling back to creating a URL with URL.CreateObjectURL and assigning it to Src (see below for an example). In addition, as of version 108 Chromium supports attaching a dedicated worker MediaSource object by assigning that object's MediaSourceHandle instance (transferred from the worker) to srcObject. See also on MDN TextTracks The read-only textTracks property on HTMLMediaElement objects returns a TextTrackList object listing all of the TextTrack objects representing the media element&apos;s text tracks, in the same order as in the list of text tracks. [To(\"FirstCharToLowerCase\")] public TextTrackList TextTracks { get; } Property Value TextTrackList A TextTrackList object representing the list of text tracks included in the media element. The list of tracks can be accessed using textTracks[n] to get the n-th text track from the object&apos;s list of text tracks, or using the textTracks.getTrackById() method.Each track is represented by a TextTrack object which provides information about the track. Remarks You can detect when tracks are added to and removed from an &lt;audio&gt; or &lt;video&gt; element using the addtrack and removetrack events. However, these events aren&apos;t sent directly to the media element itself. Instead, they&apos;re sent to the track list object of the HTMLMediaElement that corresponds to the type of track that was added to the element The returned list is live; that is, as tracks are added to and removed from the media element, the list&apos;s contents change dynamically. Once you have a reference to the list, you can monitor it for changes to detect when new text tracks are added or existing ones removed. See TextTrackList events to learn more about watching for changes to a media element&apos;s track list. -HTMLMediaElement: Interface used to define the HTMLMediaElement.textTracks property -audio, video -AudioTrack, AudioTrackList -VideoTrack, VideoTrackList -addtrack, change, removetrack: AudioTrackList events -addtrack, change, removetrack: VideoTrackList events See also on MDN VideoTracks The read-only videoTracks property on HTMLMediaElement objects returns a VideoTrackList object listing all of the VideoTrack objects representing the media element&apos;s video tracks. [To(\"FirstCharToLowerCase\")] public VideoTrackList VideoTracks { get; } Property Value VideoTrackList A VideoTrackList object representing the list of video tracks included in the media element. The list of tracks can be accessed using array notation, or using the object's GetTrackById(string) method.Each track is represented by a VideoTrack object which provides information about the track. Remarks The returned list is live; that is, as tracks are added to and removed from the media element, the list&apos;s contents change dynamically. Once you have a reference to the list, you can monitor it for changes to detect when new video tracks are added or existing ones removed. See VideoTrackList events to learn more about watching for changes to a media element&apos;s track list. -HTMLMediaElement: Interface used to define the HTMLMediaElement.videoTracks property -video -VideoTrack, VideoTrackList See also on MDN Volume The HTMLMediaElement.volume property sets the volume at which the media will be played. [To(\"FirstCharToLowerCase\")] public double Volume { get; set; } Property Value double A double values must fall between 0 and 1, where 0 is effectively muted and 1 is the loudest possible value. Remarks -HTMLMediaElement: Interface used to define the HTMLMediaElement.volume property -Muted See also on MDN Methods AddTextTrack(TextTrackKind, string, string) [To(\"FirstCharToLowerCase\")] public TextTrack AddTextTrack(TextTrackKind kind, string label, string language) Parameters kind TextTrackKind label string language string Returns TextTrack CanPlayType(string) The HTMLMediaElement method canPlayType() reports how likely it is that the current browser will be able to play media of a given MIME type. [To(\"FirstCharToLowerCase\")] public CanPlayTypeResult CanPlayType(string type) Parameters type string Returns CanPlayTypeResult A string indicating how likely it is that the media can be played. The string will be one of the following values: Remarks NOTE Note: This feature is not available in Web Workers. -HTMLMediaElement: Interface used to define the HTMLMediaElement.canPlayType() method -MediaCapabilities -Handling media support issues in web content -Media type and format guide -Codecs in common media types See also on MDN FastSeek(double) The HTMLMediaElement.fastSeek() method quickly seeks the media to the new time with precision tradeoff. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined FastSeek(double time) Parameters time double Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: If you need to seek with precision, you should set HTMLMediaElement.currentTime instead. -HTMLMediaElement.currentTime for seeking without precision tradeoff See also on MDN GetStartDate() [To(\"FirstCharToLowerCase\")] public object GetStartDate() Returns object Load() The HTMLMediaElement method load() resets the media element to its initial state and begins the process of selecting a media source and loading the media in preparation for playback to begin at the beginning. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Load() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The amount of media data that is prefetched is determined by the value of the element&apos;s preload attribute. This method is generally only useful when you&apos;ve made dynamic changes to the set of sources available for the media element, either by changing the element&apos;s src attribute or by adding or removing source elements nested within the media element itself. load() will reset the element and rescan the available sources, thereby causing the changes to take effect. See also on MDN Pause() The HTMLMediaElement.pause() method will pause playback of the media, if the media is already in a paused state this method will have no effect. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Pause() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Play() The HTMLMediaElement play() method attempts to begin playback of the media. It returns a Promise which is resolved when playback has been successfully started. [To(\"FirstCharToLowerCase\")] public Task<GlobalObject.Undefined> Play() Returns Task<GlobalObject.Undefined> A Promise which is resolved when playback has been started, or is rejected if for any reason playback cannot be started. NOTE Note: Browsers released before 2019 may not return a value from play(). Remarks Failure to begin playback for any reason, such as permission issues, result in the promise being rejected. -Web media technologies -Learning: Video and audio content -Autoplay guide for media and Web Audio APIs -Using the Web Audio API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLMenuElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLMenuElement.html",
    "title": "Class HTMLMenuElement | CSharpToJavaScript",
    "keywords": "Class HTMLMenuElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLMenuElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"menu\")}} elements. [To(\"Default\")] public class HTMLMenuElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLMenuElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTMLMenuItemElement See also on MDN Constructors HTMLMenuElement() public HTMLMenuElement() Properties Compact [To(\"FirstCharToLowerCase\")] public bool Compact { get; set; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLMetaElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLMetaElement.html",
    "title": "Class HTMLMetaElement | CSharpToJavaScript",
    "keywords": "Class HTMLMetaElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLMetaElement interface contains descriptive metadata about a document provided in HTML as &lt;meta&gt; elements. This interface inherits all of the properties and methods described in the HTMLElement interface. [To(\"Default\")] public class HTMLMetaElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLMetaElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: meta See also on MDN Constructors HTMLMetaElement() public HTMLMetaElement() Properties Content The HTMLMetaElement.content property gets or sets the content attribute of pragma directives and named {{htmlelement(\"meta\")}} data in conjunction with Name or HttpEquiv. For more information, see the content attribute. [To(\"FirstCharToLowerCase\")] public string Content { get; set; } Property Value string A string. Remarks -meta -Name -HttpEquiv -Learn: Metadata in HTML See also on MDN HttpEquiv The HTMLMetaElement.httpEquiv property gets or sets the pragma directive or an HTTP response header name for the Content attribute. For more details on the possible values, see the http-equiv attribute. [To(\"FirstCharToLowerCase\")] public string HttpEquiv { get; set; } Property Value string A string. Remarks -meta See also on MDN Media The HTMLMetaElement.media property enables specifying the media for theme-color metadata. [To(\"FirstCharToLowerCase\")] public string Media { get; set; } Property Value string A string. Remarks The theme-color property enables setting the color of the browser&apos;s toolbar or UI in browsers and operating systems that support this property. The media property enables setting different theme colors for different media values. -meta -Possible values for media queries See also on MDN Name The HTMLMetaElement.name property is used in combination with Content to define the name-value pairs for the metadata of a document. The name attribute defines the metadata name and the content attribute defines the value. [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string A string. Remarks -meta -Possible values for the name attribute See also on MDN Scheme IMPORTANT Deprecated The HTMLMetaElement.scheme property defines the scheme of the value in the Content attribute. The scheme property was created to enable providing additional information to be used to interpret the value of the content property. The scheme property takes as its value a scheme format (i.e. YYYY-MM-DD) or scheme format name (i.e. ISBN), or a URI providing more information regarding the scheme format. The scheme defines the format of the value of the content attribute. The scheme content is interpreted as an extension of the element's Name if a browser or user agent recognizes the scheme. [To(\"FirstCharToLowerCase\")] public string Scheme { get; set; } Property Value string A string. Remarks This property is deprecated and should not be used on new web pages. -meta See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLMeterElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLMeterElement.html",
    "title": "Class HTMLMeterElement | CSharpToJavaScript",
    "keywords": "Class HTMLMeterElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class HTMLMeterElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLMeterElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: meter See also on MDN Constructors HTMLMeterElement() public HTMLMeterElement() Properties High [To(\"FirstCharToLowerCase\")] public double High { get; set; } Property Value double Labels The HTMLMeterElement.labels read-only property returns a NodeList of the {{HTMLElement(\"label\")}} elements associated with the meter element. [To(\"FirstCharToLowerCase\")] public NodeList Labels { get; } Property Value NodeList A NodeList containing the &lt;label&gt; elements associated with the &lt;meter&gt; element. Remarks See also on MDN Low [To(\"FirstCharToLowerCase\")] public double Low { get; set; } Property Value double Max [To(\"FirstCharToLowerCase\")] public double Max { get; set; } Property Value double Min [To(\"FirstCharToLowerCase\")] public double Min { get; set; } Property Value double Optimum [To(\"FirstCharToLowerCase\")] public double Optimum { get; set; } Property Value double Value [To(\"FirstCharToLowerCase\")] public double Value { get; set; } Property Value double"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLModElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLModElement.html",
    "title": "Class HTMLModElement | CSharpToJavaScript",
    "keywords": "Class HTMLModElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLModElement interface provides special properties (beyond the regular methods and properties available through the HTMLElement interface they also have available to them by inheritance) for manipulating modification elements, that is {{HTMLElement(\"del\")}} and {{HTMLElement(\"ins\")}}. [To(\"Default\")] public class HTMLModElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLModElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML elements implementing this interface: ins, del. See also on MDN Constructors HTMLModElement() public HTMLModElement() Properties Cite [To(\"FirstCharToLowerCase\")] public string Cite { get; set; } Property Value string DateTime [To(\"FirstCharToLowerCase\")] public string DateTime { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLOListElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLOListElement.html",
    "title": "Class HTMLOListElement | CSharpToJavaScript",
    "keywords": "Class HTMLOListElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLOListElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating ordered list elements. [To(\"Default\")] public class HTMLOListElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLOListElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: ol. See also on MDN Constructors HTMLOListElement() public HTMLOListElement() Properties Compact [To(\"FirstCharToLowerCase\")] public bool Compact { get; set; } Property Value bool Reversed [To(\"FirstCharToLowerCase\")] public bool Reversed { get; set; } Property Value bool Start [To(\"FirstCharToLowerCase\")] public long Start { get; set; } Property Value long Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLObjectElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLObjectElement.html",
    "title": "Class HTMLObjectElement | CSharpToJavaScript",
    "keywords": "Class HTMLObjectElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLObjectElement interface provides special properties and methods (beyond those on the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{HTMLElement(\"object\")}} element, representing external resources. [To(\"Default\")] public class HTMLObjectElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLObjectElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: object See also on MDN Constructors HTMLObjectElement() public HTMLObjectElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Archive [To(\"FirstCharToLowerCase\")] public string Archive { get; set; } Property Value string Border [To(\"FirstCharToLowerCase\")] public string Border { get; set; } Property Value string Code [To(\"FirstCharToLowerCase\")] public string Code { get; set; } Property Value string CodeBase [To(\"FirstCharToLowerCase\")] public string CodeBase { get; set; } Property Value string CodeType [To(\"FirstCharToLowerCase\")] public string CodeType { get; set; } Property Value string ContentDocument The contentDocument read-only property of the HTMLObjectElement interface Returns a Document representing the active document of the object element&apos;s nested browsing context, if any; otherwise null. [To(\"FirstCharToLowerCase\")] public Document? ContentDocument { get; } Property Value Document A 'Document'. Remarks See also on MDN ContentWindow The contentWindow read-only property of the HTMLObjectElement interface returns a {{glossary(\"WindowProxy\")}} representing the window proxy of the object element&apos;s nested browsing context, if any; otherwise null. [To(\"FirstCharToLowerCase\")] public Window? ContentWindow { get; } Property Value Window A 'Window', or null if there are none. Remarks See also on MDN Data The data property of the HTMLObjectElement interface returns a string that reflects the data HTML attribute, specifying the address of a resource&apos;s data. [To(\"FirstCharToLowerCase\")] public string Data { get; set; } Property Value string A string. Remarks See also on MDN Declare [To(\"FirstCharToLowerCase\")] public bool Declare { get; set; } Property Value bool Form The form read-only property of the HTMLObjectElement interface returns a HTMLFormElement representing the object element&apos;s form owner, or null if there isn&apos;t one. [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement A 'HTMLFormElement'. Remarks See also on MDN Height The height property of the HTMLObjectElement interface Returns a string that reflects the height HTML attribute, specifying the displayed height of the resource in CSS pixels. [To(\"FirstCharToLowerCase\")] public string Height { get; set; } Property Value string A string. Remarks See also on MDN Hspace [To(\"FirstCharToLowerCase\")] public ulong Hspace { get; set; } Property Value ulong Name The name property of the HTMLObjectElement interface returns a string that reflects the name HTML attribute, specifying the name of the browsing context. [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string A string. Remarks See also on MDN Standby [To(\"FirstCharToLowerCase\")] public string Standby { get; set; } Property Value string Type The type property of the HTMLObjectElement interface returns a string that reflects the type HTML attribute, specifying the MIME type of the resource. [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string A string. Remarks See also on MDN UseMap The useMap property of the HTMLObjectElement interface returns a string that reflects the usemap HTML attribute, specifying a map element to use. [To(\"FirstCharToLowerCase\")] public string UseMap { get; set; } Property Value string A string. Remarks See also on MDN ValidationMessage The validationMessage read-only property of the HTMLObjectElement interface returns a string representing a localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (willValidate is false), or it satisfies its constraints. [To(\"FirstCharToLowerCase\")] public string ValidationMessage { get; } Property Value string A string. Remarks See also on MDN Validity The validity read-only property of the HTMLObjectElement interface returns a ValidityState with the validity states that this element is in. [To(\"FirstCharToLowerCase\")] public ValidityState Validity { get; } Property Value ValidityState A ValidityState object. Remarks See also on MDN Vspace [To(\"FirstCharToLowerCase\")] public ulong Vspace { get; set; } Property Value ulong Width The width property of the HTMLObjectElement interface returns a string that reflects the width HTML attribute, specifying the displayed width of the resource in CSS pixels. [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string A string. Remarks See also on MDN WillValidate The willValidate read-only property of the HTMLObjectElement interface returns a boolean value that indicates whether the element is a candidate for constraint validation. Always false for HTMLObjectElement objects. [To(\"FirstCharToLowerCase\")] public bool WillValidate { get; } Property Value bool A boolean value. Remarks See also on MDN Methods CheckValidity() The checkValidity() method of the HTMLObjectElement interface returns a boolean value that always is true, because object objects are never candidates for constraint validation. [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool true Remarks See also on MDN GetSVGDocument() [To(\"FirstCharToLowerCase\")] public Document? GetSVGDocument() Returns Document ReportValidity() [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool SetCustomValidity(string) The setCustomValidity() method of the HTMLObjectElement interface sets a custom validity message for the element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetCustomValidity(string error) Parameters error string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -'validityState' -'validityState.ValueMissing' -'validityState.TypeMismatch' -'validityState.PatternMismatch' -'validityState.TooLong' -'validityState.TooShort' -'validityState.RangeUnderflow' -'validityState.RangeOverflow' -'validityState.StepMismatch' -'validityState.Valid' -'validityState.CustomError' See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLOptGroupElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLOptGroupElement.html",
    "title": "Class HTMLOptGroupElement | CSharpToJavaScript",
    "keywords": "Class HTMLOptGroupElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLOptGroupElement interface provides special properties and methods (beyond the regular HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of {{HTMLElement(\"optgroup\")}} elements. [To(\"Default\")] public class HTMLOptGroupElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLOptGroupElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: optgroup. See also on MDN Constructors HTMLOptGroupElement() public HTMLOptGroupElement() Properties Disabled [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool Label [To(\"FirstCharToLowerCase\")] public string Label { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLOptionElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLOptionElement.html",
    "title": "Class HTMLOptionElement | CSharpToJavaScript",
    "keywords": "Class HTMLOptionElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLOptionElement interface represents {{HTMLElement(\"option\")}} elements and inherits all properties and methods of the HTMLElement interface. [To(\"Default\")] public class HTMLOptionElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLOptionElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: option. -The HTMLOptionsCollection interface. See also on MDN Constructors HTMLOptionElement() public HTMLOptionElement() Properties DefaultSelected [To(\"FirstCharToLowerCase\")] public bool DefaultSelected { get; set; } Property Value bool Disabled [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool Form [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement Index [To(\"FirstCharToLowerCase\")] public long Index { get; } Property Value long Label [To(\"FirstCharToLowerCase\")] public string Label { get; set; } Property Value string Selected [To(\"FirstCharToLowerCase\")] public bool Selected { get; set; } Property Value bool Text [To(\"FirstCharToLowerCase\")] public string Text { get; set; } Property Value string Value [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLOptionsCollection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLOptionsCollection.html",
    "title": "Class HTMLOptionsCollection | CSharpToJavaScript",
    "keywords": "Class HTMLOptionsCollection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLOptionsCollection interface represents a collection of &lt;option&gt; HTML elements (in document order) and offers methods and properties for selecting from the list as well as optionally altering its items. This object is returned only by the options property of select. [To(\"Default\")] public class HTMLOptionsCollection : HTMLCollection Inheritance object HTMLCollection HTMLOptionsCollection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTMLCollection See also on MDN Properties Length [To(\"FirstCharToLowerCase\")] public ulong Length { get; set; } Property Value ulong SelectedIndex [To(\"FirstCharToLowerCase\")] public long SelectedIndex { get; set; } Property Value long Methods Add(Union16, Union17?) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Add(Union16 element, Union17? before) Parameters element Union16 before Union17? Returns GlobalObject.Undefined Remove(long) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Remove(long index) Parameters index long Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLOrSVGElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLOrSVGElement.html",
    "title": "Interface HTMLOrSVGElement | CSharpToJavaScript",
    "keywords": "Interface HTMLOrSVGElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface HTMLOrSVGElement Properties Autofocus bool Autofocus { get; set; } Property Value bool Dataset string Dataset { get; } Property Value string Nonce string Nonce { get; set; } Property Value string TabIndex long TabIndex { get; set; } Property Value long Methods Blur() GlobalObject.Undefined Blur() Returns GlobalObject.Undefined Focus(FocusOptions) GlobalObject.Undefined Focus(FocusOptions options) Parameters options FocusOptions Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLOutputElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLOutputElement.html",
    "title": "Class HTMLOutputElement | CSharpToJavaScript",
    "keywords": "Class HTMLOutputElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLOutputElement interface provides properties and methods (beyond those inherited from HTMLElement) for manipulating the layout and presentation of {{HTMLElement(\"output\")}} elements. [To(\"Default\")] public class HTMLOutputElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLOutputElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: output. See also on MDN Constructors HTMLOutputElement() public HTMLOutputElement() Properties DefaultValue [To(\"FirstCharToLowerCase\")] public string DefaultValue { get; set; } Property Value string Form [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement HtmlFor [To(\"FirstCharToLowerCase\")] public DOMTokenList HtmlFor { get; } Property Value DOMTokenList Labels The HTMLOutputElement.labels read-only property returns a NodeList of the {{HTMLElement(\"label\")}} elements associated with the output element. [To(\"FirstCharToLowerCase\")] public NodeList Labels { get; } Property Value NodeList A NodeList containing the &lt;label&gt; elements associated with the &lt;output&gt; element. Remarks See also on MDN Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; } Property Value string ValidationMessage [To(\"FirstCharToLowerCase\")] public string ValidationMessage { get; } Property Value string Validity [To(\"FirstCharToLowerCase\")] public ValidityState Validity { get; } Property Value ValidityState Value [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string WillValidate [To(\"FirstCharToLowerCase\")] public bool WillValidate { get; } Property Value bool Methods CheckValidity() [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool ReportValidity() [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool SetCustomValidity(string) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetCustomValidity(string error) Parameters error string Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLParagraphElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLParagraphElement.html",
    "title": "Class HTMLParagraphElement | CSharpToJavaScript",
    "keywords": "Class HTMLParagraphElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLParagraphElement interface provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating {{HTMLElement(\"p\")}} elements. [To(\"Default\")] public class HTMLParagraphElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLParagraphElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: p. See also on MDN Constructors HTMLParagraphElement() public HTMLParagraphElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLParamElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLParamElement.html",
    "title": "Class HTMLParamElement | CSharpToJavaScript",
    "keywords": "Class HTMLParamElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The HTMLParamElement interface provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating {{HTMLElement(\"param\")}} elements, representing a pair of a key and a value that acts as a parameter for an {{HTMLElement(\"object\")}} element. [To(\"Default\")] public class HTMLParamElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLParamElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: param. See also on MDN Constructors HTMLParamElement() public HTMLParamElement() Properties Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string Value [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string ValueType [To(\"FirstCharToLowerCase\")] public string ValueType { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLPictureElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLPictureElement.html",
    "title": "Class HTMLPictureElement | CSharpToJavaScript",
    "keywords": "Class HTMLPictureElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLPictureElement interface represents a picture HTML element. It doesn't implement specific properties or methods. [To(\"Default\")] public class HTMLPictureElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLPictureElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The picture HTML element that implements it. -The HTMLImageElement and HTMLSourceElement interfaces, often used in conjunction with a {{HTMLElement(\"picture\")}} element. See also on MDN Constructors HTMLPictureElement() public HTMLPictureElement()"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLPreElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLPreElement.html",
    "title": "Class HTMLPreElement | CSharpToJavaScript",
    "keywords": "Class HTMLPreElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLPreElement interface exposes specific properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating a block of preformatted text ({{HtmlElement(\"pre\")}}). [To(\"Default\")] public class HTMLPreElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLPreElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: pre See also on MDN Constructors HTMLPreElement() public HTMLPreElement() Properties Width [To(\"FirstCharToLowerCase\")] public long Width { get; set; } Property Value long"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLProgressElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLProgressElement.html",
    "title": "Class HTMLProgressElement | CSharpToJavaScript",
    "keywords": "Class HTMLProgressElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLProgressElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{HTMLElement(\"progress\")}} elements. [To(\"Default\")] public class HTMLProgressElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLProgressElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: progress See also on MDN Constructors HTMLProgressElement() public HTMLProgressElement() Properties Labels The HTMLProgressElement.labels read-only property returns a NodeList of the {{HTMLElement(\"label\")}} elements associated with the progress element. [To(\"FirstCharToLowerCase\")] public NodeList Labels { get; } Property Value NodeList A NodeList containing the &lt;label&gt; elements associated with the &lt;progress&gt; element. Remarks See also on MDN Max [To(\"FirstCharToLowerCase\")] public double Max { get; set; } Property Value double Position [To(\"FirstCharToLowerCase\")] public double Position { get; } Property Value double Value [To(\"FirstCharToLowerCase\")] public double Value { get; set; } Property Value double"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLQuoteElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLQuoteElement.html",
    "title": "Class HTMLQuoteElement | CSharpToJavaScript",
    "keywords": "Class HTMLQuoteElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLQuoteElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating quoting elements, like {{HTMLElement(\"blockquote\")}} and {{HTMLElement(\"q\")}}, but not the {{HTMLElement(\"cite\")}} element. [To(\"Default\")] public class HTMLQuoteElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLQuoteElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML elements implementing this interface: blockquote and q, but not cite. See also on MDN Constructors HTMLQuoteElement() public HTMLQuoteElement() Properties Cite [To(\"FirstCharToLowerCase\")] public string Cite { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLScriptElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLScriptElement.html",
    "title": "Class HTMLScriptElement | CSharpToJavaScript",
    "keywords": "Class HTMLScriptElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll JavaScript files should be served with the application/javascript MIME type, but browsers are lenient and block them only if the script is served with an image type (image/), video type (video/), audio type (audio/*), or text/csv. If the script is blocked, its element receives an Element/error_event event; otherwise, it receives a Window/load_event event. [To(\"Default\")] public class HTMLScriptElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLScriptElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML script element -HTML noscript element -CurrentScript -Web Workers (code snippets similar to scripts but executed in another global context) See also on MDN Constructors HTMLScriptElement() public HTMLScriptElement() Properties Async [To(\"FirstCharToLowerCase\")] public bool Async { get; set; } Property Value bool Blocking [To(\"FirstCharToLowerCase\")] public DOMTokenList Blocking { get; } Property Value DOMTokenList Charset [To(\"FirstCharToLowerCase\")] public string Charset { get; set; } Property Value string CrossOrigin [To(\"FirstCharToLowerCase\")] public string? CrossOrigin { get; set; } Property Value string Defer [To(\"FirstCharToLowerCase\")] public bool Defer { get; set; } Property Value bool Event [To(\"FirstCharToLowerCase\")] public string Event { get; set; } Property Value string HtmlFor [To(\"FirstCharToLowerCase\")] public string HtmlFor { get; set; } Property Value string Integrity [To(\"FirstCharToLowerCase\")] public string Integrity { get; set; } Property Value string NoModule [To(\"FirstCharToLowerCase\")] public bool NoModule { get; set; } Property Value bool ReferrerPolicy The referrerPolicy property of the HTMLScriptElement interface reflects the HTML referrerpolicy of the script element and fetches made by that script, defining which referrer is sent when fetching the resource. [To(\"FirstCharToLowerCase\")] public string ReferrerPolicy { get; set; } Property Value string A string; one of the following: NOTE Note: An empty string value (&quot;&quot;) is both the default value, and a fallback value if referrerpolicy is not supported. If referrerpolicy is not explicitly specified on the &lt;script&gt; element, it will adopt a higher-level referrer policy, i.e. one set on the whole document or domain. If a higher-level policy is not available, the empty string is treated as being equivalent to no-referrer-when-downgrade. Remarks -ReferrerPolicy See also on MDN Src [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string Text [To(\"FirstCharToLowerCase\")] public string Text { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string Methods Supports(string) [To(\"FirstCharToLowerCase\")] public static bool Supports(string type) Parameters type string Returns bool"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLSelectElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLSelectElement.html",
    "title": "Class HTMLSelectElement | CSharpToJavaScript",
    "keywords": "Class HTMLSelectElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLSelectElement interface represents a {{HTMLElement(\"select\")}} HTML Element. These elements also share all of the properties and methods of other HTML elements via the HTMLElement interface. [To(\"Default\")] public class HTMLSelectElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLSelectElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The select HTML element, which implements this interface. See also on MDN Constructors HTMLSelectElement() public HTMLSelectElement() Properties Autocomplete [To(\"FirstCharToLowerCase\")] public string Autocomplete { get; set; } Property Value string Disabled The HTMLSelectElement.disabled property is a boolean value that reflects the disabled HTML attribute, which indicates whether the control is disabled. If it is disabled, it does not accept clicks. A disabled element is unusable and un-clickable. [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool A boolean value. Remarks See also on MDN Form The HTMLSelectElement.form read-only property returns a HTMLFormElement representing the form that this element is associated with. If the element is not associated with a form element, then it returns null. [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement A HTMLFormElement. Remarks See also on MDN Labels The HTMLSelectElement.labels read-only property returns a NodeList of the {{HTMLElement(\"label\")}} elements associated with the select element. [To(\"FirstCharToLowerCase\")] public NodeList Labels { get; } Property Value NodeList A NodeList containing the &lt;label&gt; elements associated with the &lt;select&gt; element. Remarks See also on MDN Length [To(\"FirstCharToLowerCase\")] public ulong Length { get; set; } Property Value ulong Multiple [To(\"FirstCharToLowerCase\")] public bool Multiple { get; set; } Property Value bool Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Options The HTMLSelectElement.options read-only property returns a HTMLOptionsCollection of the {{HTMLElement(\"option\")}} elements contained by the select element. [To(\"FirstCharToLowerCase\")] public HTMLOptionsCollection Options { get; } Property Value HTMLOptionsCollection A HTMLOptionsCollection containing the &lt;option&gt; elements contained by the &lt;select&gt; element. Remarks See also on MDN Required [To(\"FirstCharToLowerCase\")] public bool Required { get; set; } Property Value bool SelectedIndex The HTMLSelectElement.selectedIndex property is a long that reflects the index of the first or last selected option element, depending on the value of multiple. The value -1 indicates that no element is selected. [To(\"FirstCharToLowerCase\")] public long SelectedIndex { get; set; } Property Value long A number. Remarks See also on MDN SelectedOptions The read-only HTMLSelectElement property selectedOptions contains a list of the option elements contained within the select element that are currently selected. The list of selected options is an HTMLCollection object with one entry per currently selected option. [To(\"FirstCharToLowerCase\")] public HTMLCollection SelectedOptions { get; } Property Value HTMLCollection An HTMLCollection which lists every currently selected HTMLOptionElement which is either a child of the HTMLSelectElement or of an HTMLOptGroupElement within the &lt;select&gt; element.In other words, any option contained within the &lt;select&gt; element may be part of the results, but option groups are not included in the list.If no options are currently selected, the collection is empty and returns a Length of 0. Remarks An option is considered selected if it has an Selected attribute. -Drop-down controls See also on MDN Size [To(\"FirstCharToLowerCase\")] public ulong Size { get; set; } Property Value ulong Type The HTMLSelectElement.type read-only property returns the form control&apos;s type. [To(\"FirstCharToLowerCase\")] public string Type { get; } Property Value string One of the following: Remarks -The select HTML element, implementing this interface. See also on MDN ValidationMessage [To(\"FirstCharToLowerCase\")] public string ValidationMessage { get; } Property Value string Validity [To(\"FirstCharToLowerCase\")] public ValidityState Validity { get; } Property Value ValidityState Value [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string WillValidate [To(\"FirstCharToLowerCase\")] public bool WillValidate { get; } Property Value bool Methods Add(Union24, Union25?) The HTMLSelectElement.add() method adds an element to the collection of option elements for this select element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Add(Union24 element, Union25? before) Parameters element Union24 before Union25? Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN CheckValidity() The HTMLSelectElement.checkValidity() method checks whether the element has any constraints and whether it satisfies them. If the element fails its constraints, the browser fires a cancelable HTMLSelectElement/invalid_event event at the element, and then returns false. [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool None (GlobalObject.Undefined). Remarks -Form validation See also on MDN NamedItem(string) The HTMLSelectElement.namedItem() method returns the HTMLOptionElement corresponding to the HTMLOptionElement whose name or id match the specified name, or null if no option matches. [To(\"FirstCharToLowerCase\")] public HTMLOptionElement? NamedItem(string name) Parameters name string Returns HTMLOptionElement Remarks In JavaScript, using selectElt.namedItem(&apos;value&apos;) is equivalent to selectElt.options.namedItem(&apos;value&apos;). -HTMLSelectElement that implements it. See also on MDN Remove() The HTMLSelectElement.remove() method removes the element at the specified index from the options collection for this select element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Remove() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Element.Remove, the method that gets called when remove is called without arguments on a HTMLSelectElement. -HTMLSelectElement that implements it. See also on MDN Remove(long) The HTMLSelectElement.remove() method removes the element at the specified index from the options collection for this select element. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Remove(long index) Parameters index long Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Element.Remove, the method that gets called when remove is called without arguments on a HTMLSelectElement. -HTMLSelectElement that implements it. See also on MDN ReportValidity() [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool SetCustomValidity(string) The HTMLSelectElement.setCustomValidity() method sets the custom validity message for the selection element to the specified message. Use the empty string to indicate that the element does not have a custom validity error. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetCustomValidity(string error) Parameters error string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Form validation. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLSlotElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLSlotElement.html",
    "title": "Class HTMLSlotElement | CSharpToJavaScript",
    "keywords": "Class HTMLSlotElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLSlotElement interface of the Shadow DOM API enables access to the name and assigned nodes of an HTML slot element. [To(\"Default\")] public class HTMLSlotElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLSlotElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors HTMLSlotElement() public HTMLSlotElement() Properties Name The name property of the HTMLSlotElement interface returns or sets the slot name. A slot is a placeholder inside a web component that users can fill with their own markup. [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string A string. Remarks See also on MDN Methods Assign(params Union26[]) The assign() method of the HTMLSlotElement interface sets the slot's manually assigned nodes to an ordered set of slottables. The manually assigned nodes set is initially empty until nodes are assigned using assign(). [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Assign(params Union26[] nodes) Parameters nodes Union26[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: you cannot mix manually (imperative) and named (declarative, automatic) slot assignments. Therefore, for this method to work, the shadow tree needs to have been created with the slotAssignment: &quot;manual&quot; option. -AttachShadow(ShadowRootInit) See also on MDN AssignedElements(AssignedNodesOptions) The assignedElements() method of the HTMLSlotElement interface returns a sequence of the elements assigned to this slot (and no other nodes). [To(\"FirstCharToLowerCase\")] public List<Element> AssignedElements(AssignedNodesOptions options) Parameters options AssignedNodesOptions Returns List<Element> An array of elements. Remarks If the flatten option is set to true, it returns a sequence of both the elements assigned to this slot, as well as the elements assigned to any other slots that are descendants of this slot. If no assigned elements are found, it returns the slot&apos;s fallback content. See also on MDN AssignedNodes(AssignedNodesOptions) The assignedNodes() method of the HTMLSlotElement interface returns a sequence of the nodes assigned to this slot. [To(\"FirstCharToLowerCase\")] public List<Node> AssignedNodes(AssignedNodesOptions options) Parameters options AssignedNodesOptions Returns List<Node> An array of nodes. Remarks If the flatten option is set to true, it returns a sequence of both the nodes assigned to this slot, as well as the nodes assigned to any other slots that are descendants of this slot. If no assigned nodes are found, it returns the slot&apos;s fallback content. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLSourceElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLSourceElement.html",
    "title": "Class HTMLSourceElement | CSharpToJavaScript",
    "keywords": "Class HTMLSourceElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLSourceElement interface provides special properties (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating {{htmlelement(\"source\")}} elements. [To(\"Default\")] public class HTMLSourceElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLSourceElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: source. -The HTML DOM APIs of the elements that can contain a {{HTMLElement(\"source\")}} element: HTMLVideoElement, HTMLAudioElement, HTMLPictureElement. See also on MDN Constructors HTMLSourceElement() public HTMLSourceElement() Properties Height [To(\"FirstCharToLowerCase\")] public ulong Height { get; set; } Property Value ulong Media [To(\"FirstCharToLowerCase\")] public string Media { get; set; } Property Value string Sizes [To(\"FirstCharToLowerCase\")] public string Sizes { get; set; } Property Value string Src [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string Srcset [To(\"FirstCharToLowerCase\")] public string Srcset { get; set; } Property Value string Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string Width [To(\"FirstCharToLowerCase\")] public ulong Width { get; set; } Property Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLSpanElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLSpanElement.html",
    "title": "Class HTMLSpanElement | CSharpToJavaScript",
    "keywords": "Class HTMLSpanElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLSpanElement interface represents a {{HTMLElement(\"span\")}} element and derives from the HTMLElement interface, but without implementing any additional properties or methods. [To(\"Default\")] public class HTMLSpanElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLSpanElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: span. See also on MDN Constructors HTMLSpanElement() public HTMLSpanElement()"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLStyleElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLStyleElement.html",
    "title": "Class HTMLStyleElement | CSharpToJavaScript",
    "keywords": "Class HTMLStyleElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLStyleElement interface represents a {{HTMLElement(\"style\")}} element. It inherits properties and methods from its parent, HTMLElement. [To(\"Default\")] public class HTMLStyleElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLStyleElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface doesn&apos;t allow to manipulate the CSS it contains (in most case). To manipulate CSS, see Using dynamic styling information for an overview of the objects used to manipulate specified CSS properties using the DOM. -The HTML element implementing this interface: style. -Using dynamic styling information to see how to manipulate CSS. See also on MDN Constructors HTMLStyleElement() public HTMLStyleElement() Properties Blocking [To(\"FirstCharToLowerCase\")] public DOMTokenList Blocking { get; } Property Value DOMTokenList Disabled The HTMLStyleElement.disabled property can be used to get and set whether the stylesheet is disabled (true) or not (false). [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool Returns true if the stylesheet is disabled, or there is no associated stylesheet; otherwise false. The value is false by default (if there is an associated stylesheet).The property can be used to enable or disable an associated stylesheet. Setting the property to true when there is no associated stylesheet has no effect. Remarks Note that there is no corresponding disabled attribute on the HTML &lt;style&gt; element. -SVGStyleElement.Disabled See also on MDN Media The HTMLStyleElement.media property specifies the intended destination medium for style information. [To(\"FirstCharToLowerCase\")] public string Media { get; set; } Property Value string A string describing a single medium or a comma-separated list. Remarks See also on MDN Type IMPORTANT Deprecated The HTMLStyleElement.type property returns the type of the current style. The value mirrors the HTML &lt;style&gt; element&apos;s type attribute. [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string The permitted values are an empty string or a case-insensitive match for &quot;text/css&quot;. Remarks Authors should not use this property or rely on the value. -SVGStyleElement.Type See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTableCaptionElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTableCaptionElement.html",
    "title": "Class HTMLTableCaptionElement | CSharpToJavaScript",
    "keywords": "Class HTMLTableCaptionElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTableCaptionElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating table {{HTMLElement(\"caption\")}} elements. [To(\"Default\")] public class HTMLTableCaptionElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLTableCaptionElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: caption. See also on MDN Constructors HTMLTableCaptionElement() public HTMLTableCaptionElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTableCellElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTableCellElement.html",
    "title": "Class HTMLTableCellElement | CSharpToJavaScript",
    "keywords": "Class HTMLTableCellElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTableCellElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of table cells, either header cells ({{HTMLElement(\"th\")}})) or data cells ({{HTMLElement(\"td\")}}), in an HTML document. [To(\"Default\")] public class HTMLTableCellElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLTableCellElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML elements implementing this interface: th and td. See also on MDN Constructors HTMLTableCellElement() public HTMLTableCellElement() Properties Abbr [To(\"FirstCharToLowerCase\")] public string Abbr { get; set; } Property Value string Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Axis [To(\"FirstCharToLowerCase\")] public string Axis { get; set; } Property Value string BgColor [To(\"FirstCharToLowerCase\")] public string BgColor { get; set; } Property Value string CellIndex [To(\"FirstCharToLowerCase\")] public long CellIndex { get; } Property Value long Ch [To(\"FirstCharToLowerCase\")] public string Ch { get; set; } Property Value string ChOff [To(\"FirstCharToLowerCase\")] public string ChOff { get; set; } Property Value string ColSpan [To(\"FirstCharToLowerCase\")] public ulong ColSpan { get; set; } Property Value ulong Headers [To(\"FirstCharToLowerCase\")] public string Headers { get; set; } Property Value string Height [To(\"FirstCharToLowerCase\")] public string Height { get; set; } Property Value string NoWrap [To(\"FirstCharToLowerCase\")] public bool NoWrap { get; set; } Property Value bool RowSpan [To(\"FirstCharToLowerCase\")] public ulong RowSpan { get; set; } Property Value ulong Scope [To(\"FirstCharToLowerCase\")] public string Scope { get; set; } Property Value string VAlign [To(\"FirstCharToLowerCase\")] public string VAlign { get; set; } Property Value string Width [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTableColElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTableColElement.html",
    "title": "Class HTMLTableColElement | CSharpToJavaScript",
    "keywords": "Class HTMLTableColElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTableColElement interface provides properties for manipulating single or grouped table column elements. [To(\"Default\")] public class HTMLTableColElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLTableColElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: col and colgroup. See also on MDN Constructors HTMLTableColElement() public HTMLTableColElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Ch [To(\"FirstCharToLowerCase\")] public string Ch { get; set; } Property Value string ChOff [To(\"FirstCharToLowerCase\")] public string ChOff { get; set; } Property Value string Span [To(\"FirstCharToLowerCase\")] public ulong Span { get; set; } Property Value ulong VAlign [To(\"FirstCharToLowerCase\")] public string VAlign { get; set; } Property Value string Width [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTableElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTableElement.html",
    "title": "Class HTMLTableElement | CSharpToJavaScript",
    "keywords": "Class HTMLTableElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTableElement interface provides special properties and methods (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating the layout and presentation of tables in an HTML document. [To(\"Default\")] public class HTMLTableElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLTableElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: table. See also on MDN Constructors HTMLTableElement() public HTMLTableElement() Properties Align IMPORTANT Deprecated The HTMLTableElement.align property represents the alignment of the table. [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string One of the following string values: Remarks See also on MDN BgColor IMPORTANT Deprecated The bgcolor property of the HTMLTableElement represents the background color of the table. [To(\"FirstCharToLowerCase\")] public string BgColor { get; set; } Property Value string A string representing a color value. Remarks NOTE Note: Do not use this attribute anymore. Instead, use the CSS background-color property by modifying the element's style attribute or using a style rule. -background-color See also on MDN Border IMPORTANT Deprecated The HTMLTableElement.border property represents the border width of the table element. [To(\"FirstCharToLowerCase\")] public string Border { get; set; } Property Value string A string representing the width of the border in pixels. Remarks See also on MDN Caption The HTMLTableElement.caption property represents the table caption. If no caption element is associated with the table, this property is null. [To(\"FirstCharToLowerCase\")] public HTMLTableCaptionElement? Caption { get; set; } Property Value HTMLTableCaptionElement A string. Remarks -The interface implementing this property: HTMLTableElement. See also on MDN CellPadding IMPORTANT Deprecated The HTMLTableElement.cellPadding property represents the padding around the individual cells of the table. [To(\"FirstCharToLowerCase\")] public string CellPadding { get; set; } Property Value string A string representing pixels (e.g. &quot;10&quot;) or a percentage value (e.g. &quot;10%&quot;). Remarks See also on MDN CellSpacing IMPORTANT Deprecated While you should instead use the CSS {{cssxref(\"border-spacing\")}} property, the obsolete HTMLTableElement interface&apos;s cellSpacing property represents the spacing around the individual th and td elements representing a table&apos;s cells. Any two cells are separated by the sum of the cellSpacing of each of the two cells. [To(\"FirstCharToLowerCase\")] public string CellSpacing { get; set; } Property Value string A string which is either a number of pixels (such as &quot;10&quot;) or a percentage value (like &quot;10%&quot;). Remarks See also on MDN Frame IMPORTANT Deprecated The HTMLTableElement interface's frame property is a string that indicates which of the table&apos;s exterior borders should be drawn. [To(\"FirstCharToLowerCase\")] public string Frame { get; set; } Property Value string One of the following: Remarks See also on MDN Rows The read-only HTMLTableElement property rows returns a live HTMLCollection of all the rows in the table, including the rows contained within any thead, tfoot, and tbody elements. [To(\"FirstCharToLowerCase\")] public HTMLCollection Rows { get; } Property Value HTMLCollection An HTMLCollection providing a live-updating list of the HTMLTableRowElement objects representing all of the {{HTMLElement(\"tr\")}} elements contained in the table. This provides quick access to all of the table rows, without having to manually search for them. Remarks Although the property itself is read-only, the returned object is live and allows the modification of its content. See also on MDN Rules IMPORTANT Deprecated The HTMLTableElement.rules property indicates which cell borders to render in the table. [To(\"FirstCharToLowerCase\")] public string Rules { get; set; } Property Value string One of the following: Remarks See also on MDN Summary IMPORTANT Deprecated The HTMLTableElement.summary property represents the table description. [To(\"FirstCharToLowerCase\")] public string Summary { get; set; } Property Value string A string. Remarks See also on MDN TBodies The HTMLTableElement.tBodies read-only property returns a live HTMLCollection of the bodies in a {{htmlElement(\"table\")}}. [To(\"FirstCharToLowerCase\")] public HTMLCollection TBodies { get; } Property Value HTMLCollection A live HTMLCollection. Remarks Although the property is read-only, the returned object is live and allows the modification of its content. The collection returned includes implicit tbody elements. For example: The HTML DOM generated from the above HTML will have a tbody element even though the tags are not included in the source HTML. -HTMLCollection -tbody See also on MDN TFoot The HTMLTableElement.tFoot property represents the tfoot element of a table. Its value will be null if there is no such element. [To(\"FirstCharToLowerCase\")] public HTMLTableSectionElement? TFoot { get; set; } Property Value HTMLTableSectionElement A tfoot element or null. Remarks -The interface implementing this property: HTMLTableElement. See also on MDN THead The HTMLTableElement.tHead represents the thead element of a table. Its value will be null if there is no such element. [To(\"FirstCharToLowerCase\")] public HTMLTableSectionElement? THead { get; set; } Property Value HTMLTableSectionElement A HTMLTableSectionElement. Remarks -The interface implementing this property: HTMLTableElement. See also on MDN Width IMPORTANT Deprecated The HTMLTableElement.width property represents the desired width of the table. [To(\"FirstCharToLowerCase\")] public string Width { get; set; } Property Value string A string representing the width in number of pixels or as a percentage value. Remarks See also on MDN Methods CreateCaption() The HTMLTableElement.createCaption() method returns the caption element associated with a given table. If no &lt;caption&gt; element exists on the table, this method creates it, and then returns it. [To(\"FirstCharToLowerCase\")] public HTMLTableCaptionElement CreateCaption() Returns HTMLTableCaptionElement HTMLTableCaptionElement Remarks NOTE Note: If no caption exists, createCaption() inserts a new caption directly into the table. The caption does not need to be added separately as would be the case if CreateElement(string, string) had been used to create the new &lt;caption&gt; element. See also on MDN CreateTBody() The createTBody() method of HTMLTableElement objects creates and returns a new tbody element associated with a given table. [To(\"FirstCharToLowerCase\")] public HTMLTableSectionElement CreateTBody() Returns HTMLTableSectionElement HTMLTableSectionElement Remarks NOTE Note: Unlike CreateTHead() and CreateTFoot(), createTBody() systematically creates a new &lt;tbody&gt; element, even if the table already contains one or more bodies. If so, the new one is inserted after the existing ones. See also on MDN CreateTFoot() The createTFoot() method of HTMLTableElement objects returns the {{HTMLElement(\"tfoot\")}} element associated with a given table. If no footer exists in the table, this method creates it, and then returns it. [To(\"FirstCharToLowerCase\")] public HTMLTableSectionElement CreateTFoot() Returns HTMLTableSectionElement HTMLTableSectionElement Remarks NOTE Note: If no footer exists, createTFoot() inserts a new footer directly into the table. The footer does not need to be added separately as would be the case if CreateElement(string, string) had been used to create the new &lt;tfoot&gt; element. See also on MDN CreateTHead() The createTHead() method of HTMLTableElement objects returns the {{HTMLElement(\"thead\")}} element associated with a given table. If no header exists in the table, this method creates it, and then returns it. [To(\"FirstCharToLowerCase\")] public HTMLTableSectionElement CreateTHead() Returns HTMLTableSectionElement HTMLTableSectionElement Remarks NOTE Note: If no header exists, createTHead() inserts a new header directly into the table. The header does not need to be added separately as would be the case if CreateElement(string, string) had been used to create the new &lt;thead&gt; element. See also on MDN DeleteCaption() The HTMLTableElement.deleteCaption() method removes the caption element from a given table. If there is no &lt;caption&gt; element associated with the table, this method does nothing. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined DeleteCaption() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN DeleteRow(long) The HTMLTableElement.deleteRow() method removes a specific row (tr) from a given table. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined DeleteRow(long index) Parameters index long Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN DeleteTFoot() The HTMLTableElement.deleteTFoot() method removes the tfoot element from a given table. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined DeleteTFoot() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN DeleteTHead() The HTMLTableElement.deleteTHead() removes the thead element from a given table. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined DeleteTHead() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN InsertRow(long) The HTMLTableElement.insertRow() method inserts a new row (tr) in a given table, and returns a reference to the new row. [To(\"FirstCharToLowerCase\")] public HTMLTableRowElement InsertRow(long index) Parameters index long Returns HTMLTableRowElement An HTMLTableRowElement that references the new row. Remarks If a table has multiple tbody elements, by default, the new row is inserted into the last &lt;tbody&gt;. To insert the row into a specific &lt;tbody&gt;: NOTE Note: insertRow() inserts the row directly into the table. The row does not need to be appended separately as would be the case if CreateElement(string, string) had been used to create the new &lt;tr&gt; element. -InsertCell(long) -The HTML element representing rows: HTMLTableRowElement See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTableRowElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTableRowElement.html",
    "title": "Class HTMLTableRowElement | CSharpToJavaScript",
    "keywords": "Class HTMLTableRowElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTableRowElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table. [To(\"Default\")] public class HTMLTableRowElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLTableRowElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: tr. See also on MDN Constructors HTMLTableRowElement() public HTMLTableRowElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string BgColor [To(\"FirstCharToLowerCase\")] public string BgColor { get; set; } Property Value string Cells [To(\"FirstCharToLowerCase\")] public HTMLCollection Cells { get; } Property Value HTMLCollection Ch [To(\"FirstCharToLowerCase\")] public string Ch { get; set; } Property Value string ChOff [To(\"FirstCharToLowerCase\")] public string ChOff { get; set; } Property Value string RowIndex The HTMLTableRowElement.rowIndex read-only property represents the position of a row in relation to the whole table. [To(\"FirstCharToLowerCase\")] public long RowIndex { get; } Property Value long Returns the index of the row, or -1 if the row is not part of a table. Remarks Even when the thead, tbody, and tfoot elements are out of order in the HTML, browsers render the table in the right order. Therefore the rows count from &lt;thead&gt; to &lt;tbody&gt;, from &lt;tbody&gt; to &lt;tfoot&gt;. See also on MDN SectionRowIndex [To(\"FirstCharToLowerCase\")] public long SectionRowIndex { get; } Property Value long VAlign [To(\"FirstCharToLowerCase\")] public string VAlign { get; set; } Property Value string Methods DeleteCell(long) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined DeleteCell(long index) Parameters index long Returns GlobalObject.Undefined InsertCell(long) The HTMLTableRowElement.insertCell() method inserts a new cell (td) into a table row (tr) and returns a reference to the cell. [To(\"FirstCharToLowerCase\")] public HTMLTableCellElement InsertCell(long index) Parameters index long Returns HTMLTableCellElement An HTMLTableCellElement that references the new cell. Remarks NOTE Note: insertCell() inserts the cell directly into the row. The cell does not need to be appended separately with AppendChild(Node) as would be the case if CreateElement(string, string) had been used to create the new &lt;td&gt; element. You can not use insertCell() to create a new &lt;th&gt; element though. -InsertRow(long) -The HTML element representing cells: HTMLTableCellElement See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTableSectionElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTableSectionElement.html",
    "title": "Class HTMLTableSectionElement | CSharpToJavaScript",
    "keywords": "Class HTMLTableSectionElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTableSectionElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies ({{HTMLElement(\"thead\")}}, {{HTMLElement(\"tfoot\")}}, and {{HTMLElement(\"tbody\")}}, respectively) in an HTML table. [To(\"Default\")] public class HTMLTableSectionElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLTableSectionElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML elements implementing this interface: tfoot, thead, and tbody. See also on MDN Constructors HTMLTableSectionElement() public HTMLTableSectionElement() Properties Align [To(\"FirstCharToLowerCase\")] public string Align { get; set; } Property Value string Ch [To(\"FirstCharToLowerCase\")] public string Ch { get; set; } Property Value string ChOff [To(\"FirstCharToLowerCase\")] public string ChOff { get; set; } Property Value string Rows [To(\"FirstCharToLowerCase\")] public HTMLCollection Rows { get; } Property Value HTMLCollection VAlign [To(\"FirstCharToLowerCase\")] public string VAlign { get; set; } Property Value string Methods DeleteRow(long) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined DeleteRow(long index) Parameters index long Returns GlobalObject.Undefined InsertRow(long) [To(\"FirstCharToLowerCase\")] public HTMLTableRowElement InsertRow(long index) Parameters index long Returns HTMLTableRowElement"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTemplateElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTemplateElement.html",
    "title": "Class HTMLTemplateElement | CSharpToJavaScript",
    "keywords": "Class HTMLTemplateElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTemplateElement interface enables access to the contents of an HTML template element. [To(\"Default\")] public class HTMLTemplateElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLTemplateElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors HTMLTemplateElement() public HTMLTemplateElement() Properties Content The HTMLTemplateElement.content property returns a &lt;template&gt; element&apos;s template contents (a DocumentFragment). [To(\"FirstCharToLowerCase\")] public DocumentFragment Content { get; } Property Value DocumentFragment A DocumentFragment. Remarks -HTMLTemplateElement See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTextAreaElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTextAreaElement.html",
    "title": "Class HTMLTextAreaElement | CSharpToJavaScript",
    "keywords": "Class HTMLTextAreaElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTextAreaElement interface provides special properties and methods for manipulating the layout and presentation of textarea elements. [To(\"Default\")] public class HTMLTextAreaElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLTextAreaElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors HTMLTextAreaElement() public HTMLTextAreaElement() Properties Autocomplete [To(\"FirstCharToLowerCase\")] public string Autocomplete { get; set; } Property Value string Cols [To(\"FirstCharToLowerCase\")] public ulong Cols { get; set; } Property Value ulong DefaultValue [To(\"FirstCharToLowerCase\")] public string DefaultValue { get; set; } Property Value string DirName [To(\"FirstCharToLowerCase\")] public string DirName { get; set; } Property Value string Disabled [To(\"FirstCharToLowerCase\")] public bool Disabled { get; set; } Property Value bool Form [To(\"FirstCharToLowerCase\")] public HTMLFormElement? Form { get; } Property Value HTMLFormElement Labels The HTMLTextAreaElement.labels read-only property returns a NodeList of the {{HTMLElement(\"label\")}} elements associated with the textArea element. [To(\"FirstCharToLowerCase\")] public NodeList Labels { get; } Property Value NodeList A NodeList containing the &lt;label&gt; elements associated with the &lt;textArea&gt; element. Remarks See also on MDN MaxLength [To(\"FirstCharToLowerCase\")] public long MaxLength { get; set; } Property Value long MinLength [To(\"FirstCharToLowerCase\")] public long MinLength { get; set; } Property Value long Name [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string Placeholder [To(\"FirstCharToLowerCase\")] public string Placeholder { get; set; } Property Value string ReadOnly [To(\"FirstCharToLowerCase\")] public bool ReadOnly { get; set; } Property Value bool Required [To(\"FirstCharToLowerCase\")] public bool Required { get; set; } Property Value bool Rows [To(\"FirstCharToLowerCase\")] public ulong Rows { get; set; } Property Value ulong SelectionDirection [To(\"FirstCharToLowerCase\")] public string SelectionDirection { get; set; } Property Value string SelectionEnd [To(\"FirstCharToLowerCase\")] public ulong SelectionEnd { get; set; } Property Value ulong SelectionStart [To(\"FirstCharToLowerCase\")] public ulong SelectionStart { get; set; } Property Value ulong TextLength [To(\"FirstCharToLowerCase\")] public ulong TextLength { get; } Property Value ulong Type [To(\"FirstCharToLowerCase\")] public string Type { get; } Property Value string ValidationMessage [To(\"FirstCharToLowerCase\")] public string ValidationMessage { get; } Property Value string Validity [To(\"FirstCharToLowerCase\")] public ValidityState Validity { get; } Property Value ValidityState Value [To(\"FirstCharToLowerCase\")] public string Value { get; set; } Property Value string WillValidate [To(\"FirstCharToLowerCase\")] public bool WillValidate { get; } Property Value bool Wrap [To(\"FirstCharToLowerCase\")] public string Wrap { get; set; } Property Value string Methods CheckValidity() [To(\"FirstCharToLowerCase\")] public bool CheckValidity() Returns bool ReportValidity() [To(\"FirstCharToLowerCase\")] public bool ReportValidity() Returns bool Select() [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Select() Returns GlobalObject.Undefined SetCustomValidity(string) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetCustomValidity(string error) Parameters error string Returns GlobalObject.Undefined SetRangeText(string) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetRangeText(string replacement) Parameters replacement string Returns GlobalObject.Undefined SetRangeText(string, ulong, ulong, SelectionMode) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetRangeText(string replacement, ulong start, ulong end, SelectionMode selectionMode) Parameters replacement string start ulong end ulong selectionMode SelectionMode Returns GlobalObject.Undefined SetSelectionRange(ulong, ulong, string) [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined SetSelectionRange(ulong start, ulong end, string direction) Parameters start ulong end ulong direction string Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTimeElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTimeElement.html",
    "title": "Class HTMLTimeElement | CSharpToJavaScript",
    "keywords": "Class HTMLTimeElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTimeElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"time\")}} elements. [To(\"Default\")] public class HTMLTimeElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLTimeElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: time. See also on MDN Constructors HTMLTimeElement() public HTMLTimeElement() Properties DateTime The HTMLTimeElement.dateTime property is a string that reflects the datetime HTML attribute, containing a machine-readable form of the element&apos;s date and time value. [To(\"FirstCharToLowerCase\")] public string DateTime { get; set; } Property Value string A string. Remarks The format of the string must follow one of the following HTML microsyntaxes: -The HTMLTimeElement interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTitleElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTitleElement.html",
    "title": "Class HTMLTitleElement | CSharpToJavaScript",
    "keywords": "Class HTMLTitleElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTitleElement interface is implemented by a document's {{ HTMLElement( \"title\" )}}. This element inherits all of the properties and methods of the HTMLElement interface. [To(\"Default\")] public class HTMLTitleElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLTitleElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: title. See also on MDN Constructors HTMLTitleElement() public HTMLTitleElement() Properties Text [To(\"FirstCharToLowerCase\")] public string Text { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLTrackElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLTrackElement.html",
    "title": "Class HTMLTrackElement | CSharpToJavaScript",
    "keywords": "Class HTMLTrackElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLTrackElement interface represents an HTML {{HTMLElement(\"track\")}} element within the DOM. This element can be used as a child of either {{HTMLElement(\"audio\")}} or {{HTMLElement(\"video\")}} to specify a text track containing information such as closed captions or subtitles. [To(\"Default\")] public class HTMLTrackElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLTrackElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: track. See also on MDN Constructors HTMLTrackElement() public HTMLTrackElement() Fields ERROR [To(\"FirstCharToLowerCase\")] public const ushort ERROR = 3 Field Value ushort LOADED [To(\"FirstCharToLowerCase\")] public const ushort LOADED = 2 Field Value ushort LOADING [To(\"FirstCharToLowerCase\")] public const ushort LOADING = 1 Field Value ushort NONE [To(\"FirstCharToLowerCase\")] public const ushort NONE = 0 Field Value ushort Properties Default [To(\"FirstCharToLowerCase\")] public bool Default { get; set; } Property Value bool Kind [To(\"FirstCharToLowerCase\")] public string Kind { get; set; } Property Value string Label [To(\"FirstCharToLowerCase\")] public string Label { get; set; } Property Value string ReadyState [To(\"FirstCharToLowerCase\")] public ushort ReadyState { get; } Property Value ushort Src The HTMLTrackElement.src property reflects the value of the track element's src attribute, which indicates the URL of the text track&apos;s data. [To(\"FirstCharToLowerCase\")] public string Src { get; set; } Property Value string A string object containing the URL of the text track data. Remarks -HTMLTrackElement: Interface used to define the HTMLTrackElement.src property -track See also on MDN Srclang [To(\"FirstCharToLowerCase\")] public string Srclang { get; set; } Property Value string Track [To(\"FirstCharToLowerCase\")] public TextTrack Track { get; } Property Value TextTrack"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLUListElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLUListElement.html",
    "title": "Class HTMLUListElement | CSharpToJavaScript",
    "keywords": "Class HTMLUListElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLUListElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating unordered list ({{HTMLElement(\"ul\")}}) elements. [To(\"Default\")] public class HTMLUListElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLUListElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The HTML element implementing this interface: ul. See also on MDN Constructors HTMLUListElement() public HTMLUListElement() Properties Compact [To(\"FirstCharToLowerCase\")] public bool Compact { get; set; } Property Value bool Type [To(\"FirstCharToLowerCase\")] public string Type { get; set; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLUnknownElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLUnknownElement.html",
    "title": "Class HTMLUnknownElement | CSharpToJavaScript",
    "keywords": "Class HTMLUnknownElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HTMLUnknownElement interface represents an invalid HTML element and derives from the HTMLElement interface, but without implementing any additional properties or methods. [To(\"Default\")] public class HTMLUnknownElement : HTMLElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLUnknownElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HTMLVideoElement.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HTMLVideoElement.html",
    "title": "Class HTMLVideoElement | CSharpToJavaScript",
    "keywords": "Class HTMLVideoElement Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The list of supported media formats varies from one browser to the other. You should either provide your video in a single format that all the relevant browsers supports, or provide multiple video sources in enough different formats that all the browsers you need to support are covered. [To(\"Default\")] public class HTMLVideoElement : HTMLMediaElement, ParentNode, NonDocumentTypeChildNode, ChildNode, Slottable, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement Inheritance object EventTarget Node Element HTMLElement HTMLMediaElement HTMLVideoElement Implements ParentNode NonDocumentTypeChildNode ChildNode Slottable GlobalEventHandlers DocumentAndElementEventHandlers ElementContentEditable HTMLOrSVGElement Inherited Members HTMLMediaElement.Error HTMLMediaElement.Src HTMLMediaElement.SrcObject HTMLMediaElement.CurrentSrc HTMLMediaElement.CrossOrigin HTMLMediaElement.NETWORK_EMPTY HTMLMediaElement.NETWORK_IDLE HTMLMediaElement.NETWORK_LOADING HTMLMediaElement.NETWORK_NO_SOURCE HTMLMediaElement.NetworkState HTMLMediaElement.Preload HTMLMediaElement.BufferingThrottled HTMLMediaElement.Buffered HTMLMediaElement.Load() HTMLMediaElement.CanPlayType(string) HTMLMediaElement.HAVE_NOTHING HTMLMediaElement.HAVE_METADATA HTMLMediaElement.HAVE_CURRENT_DATA HTMLMediaElement.HAVE_FUTURE_DATA HTMLMediaElement.HAVE_ENOUGH_DATA HTMLMediaElement.ReadyState HTMLMediaElement.Seeking HTMLMediaElement.CurrentTime HTMLMediaElement.FastSeek(double) HTMLMediaElement.Duration HTMLMediaElement.GetStartDate() HTMLMediaElement.Paused HTMLMediaElement.DefaultPlaybackRate HTMLMediaElement.PlaybackRate HTMLMediaElement.PreservesPitch HTMLMediaElement.Played HTMLMediaElement.Seekable HTMLMediaElement.Ended HTMLMediaElement.Autoplay HTMLMediaElement.Loop HTMLMediaElement.Play() HTMLMediaElement.Pause() HTMLMediaElement.Controls HTMLMediaElement.Volume HTMLMediaElement.Muted HTMLMediaElement.DefaultMuted HTMLMediaElement.AudioTracks HTMLMediaElement.VideoTracks HTMLMediaElement.TextTracks HTMLMediaElement.AddTextTrack(TextTrackKind, string, string) HTMLElement.Title HTMLElement.Lang HTMLElement.Translate HTMLElement.Dir HTMLElement.Hidden HTMLElement.Inert HTMLElement.Click() HTMLElement.AccessKey HTMLElement.AccessKeyLabel HTMLElement.Draggable HTMLElement.Spellcheck HTMLElement.Autocapitalize HTMLElement.InnerText HTMLElement.OuterText HTMLElement.AttachInternals() HTMLElement.Style Element.NamespaceURI Element.Prefix Element.LocalName Element.TagName Element.Id Element.ClassName Element.ClassList Element.Slot Element.HasAttributes() Element.Attributes Element.GetAttributeNames() Element.GetAttribute(string) Element.GetAttributeNS(string, string) Element.SetAttribute(string, string) Element.SetAttributeNS(string, string, string) Element.RemoveAttribute(string) Element.RemoveAttributeNS(string, string) Element.ToggleAttribute(string, bool) Element.HasAttribute(string) Element.HasAttributeNS(string, string) Element.GetAttributeNode(string) Element.GetAttributeNodeNS(string, string) Element.SetAttributeNode(Attr) Element.SetAttributeNodeNS(Attr) Element.RemoveAttributeNode(Attr) Element.AttachShadow(ShadowRootInit) Element.ShadowRoot Element.Closest(string) Element.Matches(string) Element.WebkitMatchesSelector(string) Element.GetElementsByTagName(string) Element.GetElementsByTagNameNS(string, string) Element.GetElementsByClassName(string) Element.InsertAdjacentElement(string, Element) Element.InsertAdjacentText(string, string) Element.RequestFullscreen(FullscreenOptions) Element.Onfullscreenchange Element.Onfullscreenerror Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTML element implementing this interface: video. -Supported media formats See also on MDN Constructors HTMLVideoElement() public HTMLVideoElement() Properties Height [To(\"FirstCharToLowerCase\")] public ulong Height { get; set; } Property Value ulong PlaysInline [To(\"FirstCharToLowerCase\")] public bool PlaysInline { get; set; } Property Value bool Poster [To(\"FirstCharToLowerCase\")] public string Poster { get; set; } Property Value string VideoHeight The HTMLVideoElement interface's read-only videoHeight property indicates the intrinsic height of the video, expressed in CSS pixels. In simple terms, this is the height of the media in its natural size. [To(\"FirstCharToLowerCase\")] public ulong VideoHeight { get; } Property Value ulong An integer value specifying the intrinsic height of the video in CSS pixels. If the element's ReadyState is HTMLMediaElement.HAVE_NOTHING, then the value of this property is 0, because neither video nor poster frame size information is yet available. Remarks See also on MDN VideoWidth The HTMLVideoElement interface's read-only videoWidth property indicates the intrinsic width of the video, expressed in CSS pixels. In simple terms, this is the width of the media in its natural size. [To(\"FirstCharToLowerCase\")] public ulong VideoWidth { get; } Property Value ulong An integer value specifying the intrinsic width of the video in CSS pixels. If the element's ReadyState is HTMLMediaElement.HAVE_NOTHING, then the value of this property is 0, because neither video nor poster frame size information is yet available. Remarks See HTMLVideoElement.videoHeight &gt; About intrinsic width and height for more details. See also on MDN Width [To(\"FirstCharToLowerCase\")] public ulong Width { get; set; } Property Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.HashChangeEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HashChangeEvent.html",
    "title": "Class HashChangeEvent | CSharpToJavaScript",
    "keywords": "Class HashChangeEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The HashChangeEvent interface represents events that fire when the fragment identifier of the URL has changed. [To(\"FirstCharToLowerCase\")] public class HashChangeEvent : Event Inheritance object Event HashChangeEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The fragment identifier is the part of the URL that follows (and includes) the # symbol. See also on MDN Constructors HashChangeEvent(string, HashChangeEventInit) The HashChangeEvent() constructor creates a new HashChangeEvent object, that is used by the Window/hashchange_event event fired at the Window object when the fragment of the URL changes. public HashChangeEvent(string type, HashChangeEventInit eventInitDict) Parameters type string eventInitDict HashChangeEventInit Remarks NOTE Note: A web developer doesn't typically need to call this constructor, as the browser creates these objects itself when firing Window/hashchange_event events. -Window/hashchange_event event See also on MDN Properties NewURL The newURL read-only property of the HashChangeEvent interface returns the new URL to which the window is navigating. public string NewURL { get; } Property Value string A string. Remarks See also on MDN OldURL The oldURL read-only property of the HashChangeEvent interface returns the previous URL from which the window was navigated. public string OldURL { get; } Property Value string A string. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.HashChangeEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.HashChangeEventInit.html",
    "title": "Class HashChangeEventInit | CSharpToJavaScript",
    "keywords": "Class HashChangeEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class HashChangeEventInit : EventInit Inheritance object EventInit HashChangeEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NewURL public string NewURL Field Value string OldURL public string OldURL Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.Headers.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Headers.html",
    "title": "Class Headers | CSharpToJavaScript",
    "keywords": "Class Headers Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Headers interface of the Fetch API allows you to perform various actions on HTTP request and response headers. These actions include retrieving, setting, adding to, and removing headers from the list of the request&apos;s headers. [To(\"FirstCharToLowerCase\")] public class Headers Inheritance object Headers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs. You can add to this using methods like Append(string, string) (see Examples.) In all methods of this interface, header names are matched by case-insensitive byte sequence. For security reasons, some headers can only be controlled by the user agent. These headers include the Forbidden_header_name and Forbidden_response_header_name. A Headers object also has an associated guard, which takes a value of immutable, request, request-no-cors, response, or none. This affects whether the Set(string, string), Delete(string), and Append(string, string) methods will mutate the header. For more information see {{Glossary(\"Guard\")}}. You can retrieve a Headers object via the Headers and Headers properties, and create a new Headers object using the Headers(Union9) constructor. An object implementing Headers can directly be used in a {{jsxref(\"Statements/for...of\", \"for...of\")}} structure, instead of 'Headers.Entries': for (const p of myHeaders) is equivalent to for (const p of myHeaders.entries()). NOTE Note: you can find out more about the available headers by reading our HTTP headers reference. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Constructors Headers(Union9) The Headers() constructor creates a new Headers object. public Headers(Union9 init) Parameters init Union9 Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Properties this[int] public string this[int i] { get; set; } Parameters i int Property Value string Methods Append(string, string) The append() method of the Headers interface appends a new value onto an existing header inside a Headers object, or adds the header if it does not already exist. public GlobalObject.Undefined Append(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The difference between Set(string, string) and append() is that if the specified header already exists and accepts multiple values, set() will overwrite the existing value with the new one, whereas append() will append the new value onto the end of the set of values. For security reasons, some headers can only be controlled by the user agent. These headers include the Forbidden_header_name and Forbidden_response_header_name. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Delete(string) The delete() method of the Headers interface deletes a header from the current Headers object. public GlobalObject.Undefined Delete(string name) Parameters name string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method throws a TypeError for the following reasons: For security reasons, some headers can only be controlled by the user agent. These headers include the Forbidden_header_name and Forbidden_response_header_name. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Get(string) The get() method of the Headers interface returns a byte string of all the values of a header within a Headers object with a given name. If the requested header doesn&apos;t exist in the Headers object, it returns null. public string? Get(string name) Parameters name string Returns string A String sequence representing the values of the retrieved header or null if this header is not set. Remarks For security reasons, some headers can only be controlled by the user agent. These headers include the Forbidden_header_name and Forbidden_response_header_name. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Has(string) The has() method of the Headers interface returns a boolean stating whether a Headers object contains a certain header. public bool Has(string name) Parameters name string Returns bool A boolean value. Remarks For security reasons, some headers can only be controlled by the user agent. These headers include the Forbidden_header_name and Forbidden_response_header_name. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Set(string, string) The set() method of the Headers interface sets a new value for an existing header inside a Headers object, or adds the header if it does not already exist. public GlobalObject.Undefined Set(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The difference between set() and Append(string, string) is that if the specified header already exists and accepts multiple values, set() overwrites the existing value with the new one, whereas Append(string, string) appends the new value to the end of the set of values. For security reasons, some headers can only be controller by the user agent. These headers include the Forbidden_header_name and Forbidden_response_header_name. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.History.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.History.html",
    "title": "Class History | CSharpToJavaScript",
    "keywords": "Class History Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The History interface allows manipulation of the browser session history, that is the pages visited in the tab or frame that the current page is loaded in. [To(\"FirstCharToLowerCase\")] public class History Inheritance object History Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks There is only one instance of history (It is a singleton.) accessible via the global object History. NOTE Note: This interface is only available on the main thread (Window). It cannot be accessed in Worker or Worklet contexts. -History global object See also on MDN Properties Length The History.length read-only property returns an integer representing the number of elements in the session history, including the currently loaded page. public ulong Length { get; } Property Value ulong A number. Remarks For example, for a page loaded in a new tab this property returns 1. -The History interface it belongs to. See also on MDN ScrollRestoration The scrollRestoration property of History interface allows web applications to explicitly set default scroll restoration behavior on history navigation. public ScrollRestoration ScrollRestoration { get; set; } Property Value ScrollRestoration One of the following: Remarks See also on MDN State The History.state property returns a value representing the state at the top of the history stack. This is a way to look at the state without having to wait for a Window/popstate_event event. public dynamic State { get; } Property Value dynamic The state at the top of the history stack. The value is null until the PushState(dynamic, string, string?) or ReplaceState(dynamic, string, string?) method is used. Remarks -Working with the History API -History.pushState() -History.replaceState() -PopStateEvent.state See also on MDN Methods Back() The History.back() method causes the browser to move back one page in the session history. public GlobalObject.Undefined Back() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks It has the same effect as calling Go(long). If there is no previous page, this method call does nothing. This method is asynchronous. Add a listener for the Window/popstate_event event in order to determine when the navigation has completed. -History -Working with the History API See also on MDN Forward() The History.forward() method causes the browser to move forward one page in the session history. It has the same effect as calling Go(long). public GlobalObject.Undefined Forward() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method is {{glossary(\"asynchronous\")}}. Add a listener for the Window/popstate_event event in order to determine when the navigation has completed. -History -Window/popstate_event -Working with the History API See also on MDN Go(long) The History.go() method loads a specific page from the session history. You can use it to move forwards and backwards through the history depending on the value of a parameter. public GlobalObject.Undefined Go(long delta) Parameters delta long Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method is asynchronous. Add a listener for the Window/popstate_event event in order to determine when the navigation has completed. -History -Back() -Forward() -Window/popstate_event event -Working with the History API See also on MDN PushState(dynamic, string, string?) In an HTML document, the history.pushState() method adds an entry to the browser&apos;s session history stack. public GlobalObject.Undefined PushState(dynamic data, string unused, string? url) Parameters data dynamic unused string url string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method is {{glossary(\"asynchronous\")}}. Add a listener for the Window/popstate_event event in order to determine when the navigation has completed. The state parameter will be available in it. -Working with the History API -Window: popstate event See also on MDN ReplaceState(dynamic, string, string?) The History.replaceState() method modifies the current history entry, replacing it with the state object and URL passed in the method parameters. This method is particularly useful when you want to update the state object or URL of the current history entry in response to some user action. public GlobalObject.Undefined ReplaceState(dynamic data, string unused, string? url) Parameters data dynamic unused string url string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method is {{glossary(\"asynchronous\")}}. Add a listener for the Window/popstate_event event in order to determine when the navigation has completed. The state parameter will be available in it. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageBitmap.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageBitmap.html",
    "title": "Class ImageBitmap | CSharpToJavaScript",
    "keywords": "Class ImageBitmap Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ImageBitmap interface represents a bitmap image which can be drawn to a {{HTMLElement(\"canvas\")}} without undue latency. It can be created from a variety of source objects using the CreateImageBitmap factory method. ImageBitmap provides an asynchronous and resource efficient pathway to prepare textures for rendering in WebGL. [To(\"FirstCharToLowerCase\")] public class ImageBitmap Inheritance object ImageBitmap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks ImageBitmap is a transferable object. -CreateImageBitmap -CanvasRenderingContext2D.DrawImage -WebGLRenderingContext.TexImage2D -TransferToImageBitmap() See also on MDN Properties Height The read-only ImageBitmap.height property returns the ImageBitmap object's height in CSS pixels. public ulong Height { get; } Property Value ulong Remarks See also on MDN Width The read-only ImageBitmap.width property returns the ImageBitmap object's width in CSS pixels. public ulong Width { get; } Property Value ulong Remarks See also on MDN Methods Close() The ImageBitmap.close() method disposes of all graphical resources associated with an ImageBitmap. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The interface defining this method, ImageBitmap. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageBitmapOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageBitmapOptions.html",
    "title": "Class ImageBitmapOptions | CSharpToJavaScript",
    "keywords": "Class ImageBitmapOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ImageBitmapOptions Inheritance object ImageBitmapOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ColorSpaceConversion public ColorSpaceConversion ColorSpaceConversion Field Value ColorSpaceConversion ImageOrientation public ImageOrientation ImageOrientation Field Value ImageOrientation PremultiplyAlpha public PremultiplyAlpha PremultiplyAlpha Field Value PremultiplyAlpha ResizeHeight public ulong ResizeHeight Field Value ulong ResizeQuality public ResizeQuality ResizeQuality Field Value ResizeQuality ResizeWidth public ulong ResizeWidth Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageBitmapRenderingContext.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageBitmapRenderingContext.html",
    "title": "Class ImageBitmapRenderingContext | CSharpToJavaScript",
    "keywords": "Class ImageBitmapRenderingContext Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ImageBitmapRenderingContext interface is a canvas rendering context that provides the functionality to replace the canvas's contents with the given ImageBitmap. Its context id (the first argument to GetContext(string, dynamic) or GetContext(OffscreenRenderingContextId, dynamic)) is &quot;bitmaprenderer&quot;. [To(\"FirstCharToLowerCase\")] public class ImageBitmapRenderingContext Inheritance object ImageBitmapRenderingContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface is available in both the window and the worker context. -OffscreenCanvas See also on MDN Properties Canvas public Union37 Canvas { get; } Property Value Union37 Methods TransferFromImageBitmap(ImageBitmap?) The ImageBitmapRenderingContext.transferFromImageBitmap() method displays the given ImageBitmap in the canvas associated with this rendering context. The ownership of the ImageBitmap is transferred to the canvas as well. public GlobalObject.Undefined TransferFromImageBitmap(ImageBitmap? bitmap) Parameters bitmap ImageBitmap Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method was previously named transferImageBitmap(), but was renamed in a spec change. The old name is being kept as an alias to avoid code breakage. -The interface defining this method, ImageBitmapRenderingContext -OffscreenCanvas -TransferToImageBitmap() See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageBitmapRenderingContextSettings.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageBitmapRenderingContextSettings.html",
    "title": "Class ImageBitmapRenderingContextSettings | CSharpToJavaScript",
    "keywords": "Class ImageBitmapRenderingContextSettings Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ImageBitmapRenderingContextSettings Inheritance object ImageBitmapRenderingContextSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Alpha public bool Alpha Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageData.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageData.html",
    "title": "Class ImageData | CSharpToJavaScript",
    "keywords": "Class ImageData Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ImageData interface represents the underlying pixel data of an area of a canvas element. [To(\"FirstCharToLowerCase\")] public class ImageData Inheritance object ImageData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It is created using the ImageData(ulong, ulong, ImageDataSettings) constructor or creator methods on the CanvasRenderingContext2D object associated with a canvas: CanvasRenderingContext2D.CreateImageData and CanvasRenderingContext2D.GetImageData. It can also be used to set a part of the canvas by using CanvasRenderingContext2D.PutImageData. AvailableInWorkers -CanvasRenderingContext2D -The {{HTMLElement(\"canvas\")}} element and its associated interface, HTMLCanvasElement. See also on MDN Constructors ImageData(Unsupported, ulong, ulong, ImageDataSettings) The ImageData() constructor returns a newly instantiated 'ImageData' object built from the typed array given and having the specified width and height. public ImageData(Unsupported data, ulong sw, ulong sh, ImageDataSettings settings) Parameters data Unsupported sw ulong sh ulong settings ImageDataSettings Remarks This constructor is the preferred way of creating such an object in a 'Worker'. -CanvasRenderingContext2D.CreateImageData, the creator method that can be used outside workers. See also on MDN ImageData(ulong, ulong, ImageDataSettings) The ImageData() constructor returns a newly instantiated 'ImageData' object built from the typed array given and having the specified width and height. public ImageData(ulong sw, ulong sh, ImageDataSettings settings) Parameters sw ulong sh ulong settings ImageDataSettings Remarks This constructor is the preferred way of creating such an object in a 'Worker'. -CanvasRenderingContext2D.CreateImageData, the creator method that can be used outside workers. See also on MDN Properties ColorSpace The read-only ImageData.colorSpace property is a string indicating the color space of the image data. public PredefinedColorSpace ColorSpace { get; } Property Value PredefinedColorSpace This property can have the following values: Remarks The color space can be set during ImageData initialization using either the ImageData() constructor or the createImageData() method. -CanvasRenderingContext2D.createImageData() -CanvasRenderingContext2D.getImageData() -colorSpace setting in canvas.getContext() -Setting WebGL color spaces:-WebGLRenderingContext.drawingBufferColorSpace -WebGLRenderingContext.unpackColorSpace See also on MDN Data The readonly ImageData.data property returns a {{jsxref(\"Uint8ClampedArray\")}} that contains the ImageData object's pixel data. Data is stored as a one-dimensional array in the RGBA order, with integer values between 0 and 255 (inclusive). public Unsupported Data { get; } Property Value Unsupported A Uint8ClampedArray. Remarks -Height -Width -ImageData -CanvasRenderingContext2D.CreateImageData -CanvasRenderingContext2D.PutImageData -Pixel manipulation with canvas See also on MDN Height The readonly ImageData.height property returns the number of rows in the ImageData object. public ulong Height { get; } Property Value ulong A number. Remarks -Width -ImageData See also on MDN Width The readonly ImageData.width property returns the number of pixels per row in the ImageData object. public ulong Width { get; } Property Value ulong A number. Remarks -Height -ImageData See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageDataSettings.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageDataSettings.html",
    "title": "Class ImageDataSettings | CSharpToJavaScript",
    "keywords": "Class ImageDataSettings Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ImageDataSettings Inheritance object ImageDataSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ColorSpace public PredefinedColorSpace ColorSpace Field Value PredefinedColorSpace"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageEncodeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageEncodeOptions.html",
    "title": "Class ImageEncodeOptions | CSharpToJavaScript",
    "keywords": "Class ImageEncodeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ImageEncodeOptions Inheritance object ImageEncodeOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Quality public double Quality Field Value double Type public string Type Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageOrientation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageOrientation.html",
    "title": "Enum ImageOrientation | CSharpToJavaScript",
    "keywords": "Enum ImageOrientation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ImageOrientation Fields FlipY = 1 None = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.ImageSmoothingQuality.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ImageSmoothingQuality.html",
    "title": "Enum ImageSmoothingQuality | CSharpToJavaScript",
    "keywords": "Enum ImageSmoothingQuality Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ImageSmoothingQuality Fields High = 2 Low = 0 Medium = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.Location.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Location.html",
    "title": "Class Location | CSharpToJavaScript",
    "keywords": "Class Location Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Location interface represents the location (URL) of the object it is linked to. Changes done on it are reflected on the object it relates to. Both the Document and Window interface have such a linked Location, accessible via Location and Location respectively. [To(\"FirstCharToLowerCase\")] public class Location Inheritance object Location Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Two Location properties: Location and Location. -URL manipulation interfaces: URL and URLSearchParams. See also on MDN Properties AncestorOrigins The ancestorOrigins read-only property of the Location interface is a static DOMStringList containing, in reverse order, the origins of all ancestor browsing contexts of the document associated with the given Location object. public string AncestorOrigins { get; } Property Value string A DOMStringList. Remarks You can use location.ancestorOrigins in the script for a document to determine, for example, whenever the document is being framed by a site which you don&apos;t expect it to be framed by. You can also use it to vary the behavior of the document based on what site or list of sites is framing it. See also on MDN Hash The hash property of the Location interface returns a string containing a &apos;#&apos; followed by the fragment identifier of the URL — the ID on the page that the URL is trying to target. public string Hash { get; set; } Property Value string A string. Remarks The fragment is not URL decoded. If the URL does not have a fragment identifier, this property contains an empty string, &quot;&quot;. See also on MDN Host The host property of the Location interface is a string containing the host, that is the hostname, and then, if the port of the URL is nonempty, a &apos;:&apos;, and the port of the URL. public string Host { get; set; } Property Value string A string. Remarks See also on MDN Hostname The hostname property of the Location interface is a string containing the domain of the URL. public string Hostname { get; set; } Property Value string A string. Remarks See also on MDN Href The href property of the Location interface is a stringifier that returns a string containing the whole URL, and allows the href to be updated. public string Href { get; set; } Property Value string A string. Remarks Setting the value of href navigates to the provided URL. If you want redirection, use Location/replace. The difference from setting the href property value is that when using the location.replace() method, after navigating to the given URL, the current page will not be saved in session history — meaning the user won&apos;t be able to use the back button to navigate to it. See also on MDN Origin The origin read-only property of the Location interface is a string containing the Unicode serialization of the origin of the represented URL. public string Origin { get; } Property Value string A string. Remarks That is: AvailableInWorkers See also on MDN Pathname The pathname property of the Location interface is a string containing the path of the URL for the location. If there is no path, pathname will be empty: otherwise, pathname contains an initial &apos;/&apos; followed by the path of the URL, not including the query string or fragment. public string Pathname { get; set; } Property Value string A string. Remarks See also on MDN Port The port property of the Location interface is a string containing the port number of the URL. If the URL does not contain an explicit port number, it will be set to &apos;&apos;. public string Port { get; set; } Property Value string A string. Remarks See also on MDN Protocol The protocol property of the Location interface is a string representing the protocol scheme of the URL, including the final &apos;:&apos;. public string Protocol { get; set; } Property Value string A string. Remarks See also on MDN Search The search property of the Location interface is a search string, also called a query string; that is, a string containing a &apos;?&apos; followed by the parameters of the URL. public string Search { get; set; } Property Value string A string. Remarks Modern browsers provide URLSearchParams and URL.searchParams to make it easy to parse out the parameters from the querystring. See also on MDN Methods Assign(string) The Location.assign() method causes the window to load and display the document at the URL specified. After the navigation occurs, the user can navigate back to the page that called Location.assign() by pressing the &quot;back&quot; button. public GlobalObject.Undefined Assign(string url) Parameters url string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If the assignment can&apos;t happen because of a security violation, a DOMException of the SECURITY_ERROR type is thrown. This happens if the origin of the script calling the method is different from the origin of the page originally described by the Location object, mostly when the script is hosted on a different domain. If the provided URL is not valid, a DOMException of the SYNTAX_ERROR type is thrown. -The Location interface it belongs to. -Similar methods: Replace(string) and Reload(). See also on MDN Reload() The location.reload() method reloads the current URL, like the Refresh button. public GlobalObject.Undefined Reload() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The reload may be blocked and a SECURITY_ERROR DOMException thrown. This happens if the origin of the script calling location.reload() differs from the origin of the page that owns the Location object. See Same-origin policy for more information. -The Location interface it belongs to. -Similar methods: Assign(string) and Replace(string). See also on MDN Replace(string) The replace() method of the Location interface replaces the current resource with the one at the provided URL. The difference from the Assign(string) method is that after using replace() the current page will not be saved in session History, meaning the user won't be able to use the back button to navigate to it. public GlobalObject.Undefined Replace(string url) Parameters url string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If the assignment can&apos;t happen because of a security violation, a DOMException of the SECURITY_ERROR type is thrown. This happens if the origin of the script calling the method is different from the origin of the page originally described by the Location object, mostly when the script is hosted on a different domain. If the provided URL is not valid, a DOMException of the SYNTAX_ERROR type is thrown. -The Location interface it belongs to. -Similar methods: Assign(string) and Reload(). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Math.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Math.html",
    "title": "Class Math | CSharpToJavaScript",
    "keywords": "Class Math Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class Math Inheritance object Math Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields E public const float E = 2.7182817 Field Value float LN10 public const float LN10 = 2.3025851 Field Value float LN2 public const float LN2 = 0.6931472 Field Value float LOG10E public const float LOG10E = 0.4342945 Field Value float LOG2E public const float LOG2E = 1.442695 Field Value float PI public const float PI = 3.1415927 Field Value float SQRT1_2 public const float SQRT1_2 = 0.70710677 Field Value float SQRT2 public const float SQRT2 = 1.4142135 Field Value float Methods Abs(float) [To(\"FirstCharToLowerCase\")] public static float Abs(float x) Parameters x float Returns float Acos(float) [To(\"FirstCharToLowerCase\")] public static float Acos(float x) Parameters x float Returns float Acosh(float) [To(\"FirstCharToLowerCase\")] public static float Acosh(float x) Parameters x float Returns float Asin(float) [To(\"FirstCharToLowerCase\")] public static float Asin(float x) Parameters x float Returns float Asinh(float) [To(\"FirstCharToLowerCase\")] public static float Asinh(float x) Parameters x float Returns float Atan(float) [To(\"FirstCharToLowerCase\")] public static float Atan(float x) Parameters x float Returns float Atan2(float) [To(\"FirstCharToLowerCase\")] public static float Atan2(float x) Parameters x float Returns float Atanh(float) [To(\"FirstCharToLowerCase\")] public static float Atanh(float x) Parameters x float Returns float Cbrt(float) [To(\"FirstCharToLowerCase\")] public static float Cbrt(float x) Parameters x float Returns float Ceil(float) [To(\"FirstCharToLowerCase\")] public static float Ceil(float x) Parameters x float Returns float Clz32(float) [To(\"FirstCharToLowerCase\")] public static float Clz32(float x) Parameters x float Returns float Cos(float) [To(\"FirstCharToLowerCase\")] public static float Cos(float x) Parameters x float Returns float Cosh(float) [To(\"FirstCharToLowerCase\")] public static float Cosh(float x) Parameters x float Returns float Exp(float) [To(\"FirstCharToLowerCase\")] public static float Exp(float x) Parameters x float Returns float Expm1(float) [To(\"FirstCharToLowerCase\")] public static float Expm1(float x) Parameters x float Returns float Floor(float) [To(\"FirstCharToLowerCase\")] public static int Floor(float x) Parameters x float Returns int Fround(float) [To(\"FirstCharToLowerCase\")] public static float Fround(float x) Parameters x float Returns float Hypot(params float[]) [To(\"FirstCharToLowerCase\")] public static float Hypot(params float[] args) Parameters args float[] Returns float Imul(float, float) [To(\"FirstCharToLowerCase\")] public static float Imul(float x, float y) Parameters x float y float Returns float Log(float) [To(\"FirstCharToLowerCase\")] public static float Log(float x) Parameters x float Returns float Log10(float) [To(\"FirstCharToLowerCase\")] public static float Log10(float x) Parameters x float Returns float Log1p(float) [To(\"FirstCharToLowerCase\")] public static float Log1p(float x) Parameters x float Returns float Log2(float) [To(\"FirstCharToLowerCase\")] public static float Log2(float x) Parameters x float Returns float Max(params float[]) [To(\"FirstCharToLowerCase\")] public static float Max(params float[] args) Parameters args float[] Returns float Min(params float[]) [To(\"FirstCharToLowerCase\")] public static float Min(params float[] args) Parameters args float[] Returns float Pow(float, float) [To(\"FirstCharToLowerCase\")] public static float Pow(float base_, float exponent) Parameters base_ float exponent float Returns float Random() [To(\"FirstCharToLowerCase\")] public static float Random() Returns float Round(float) [To(\"FirstCharToLowerCase\")] public static float Round(float x) Parameters x float Returns float Sign(float) [To(\"FirstCharToLowerCase\")] public static float Sign(float x) Parameters x float Returns float Sin(float) [To(\"FirstCharToLowerCase\")] public static float Sin(float x) Parameters x float Returns float Sinh(float) [To(\"FirstCharToLowerCase\")] public static float Sinh(float x) Parameters x float Returns float Sqrt(float) [To(\"FirstCharToLowerCase\")] public static float Sqrt(float x) Parameters x float Returns float Tan(float) [To(\"FirstCharToLowerCase\")] public static float Tan(float x) Parameters x float Returns float Tanh(float) [To(\"FirstCharToLowerCase\")] public static float Tanh(float x) Parameters x float Returns float Trunc(float) [To(\"FirstCharToLowerCase\")] public static int Trunc(float x) Parameters x float Returns int"
  },
  "api/CSharpToJavaScript.APIs.JS.MediaError.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MediaError.html",
    "title": "Class MediaError | CSharpToJavaScript",
    "keywords": "Class MediaError Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MediaError interface represents an error which occurred while handling media in an HTML media element based on HTMLMediaElement, such as {{HTMLElement(\"audio\")}} or {{HTMLElement(\"video\")}}. [To(\"FirstCharToLowerCase\")] public class MediaError Inheritance object MediaError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A MediaError object describes the error in general terms using a numeric code categorizing the kind of error, and a message, which provides specific diagnostics about what went wrong. -Error See also on MDN Fields MEDIA_ERR_ABORTED public const ushort MEDIA_ERR_ABORTED = 1 Field Value ushort MEDIA_ERR_DECODE public const ushort MEDIA_ERR_DECODE = 3 Field Value ushort MEDIA_ERR_NETWORK public const ushort MEDIA_ERR_NETWORK = 2 Field Value ushort MEDIA_ERR_SRC_NOT_SUPPORTED public const ushort MEDIA_ERR_SRC_NOT_SUPPORTED = 4 Field Value ushort Properties Code The read-only property MediaError.code returns a numeric value which represents the kind of error that occurred on a media element. To get a text string with specific diagnostic information, see Message. public ushort Code { get; } Property Value ushort A numeric value indicating the general type of error which occurred. The possible values are described below, in Media error code constants. Remarks -MediaError: Interface used to define the MediaError.code property See also on MDN Message The read-only property MediaError.message returns a human-readable string offering specific diagnostic details related to the error described by the MediaError object, or an empty string (&quot;&quot;) if no diagnostic information can be determined or provided. public string Message { get; } Property Value string A string providing a detailed, specific explanation of what went wrong and possibly how it might be fixed. This is not a generic description of the Code property's value, but instead goes deeper into the specifics of this particular error and its circumstances. If no specific details are available, this string is empty. Remarks -MediaError: Interface used to define the MediaError.message property -audio, video See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MessageChannel.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MessageChannel.html",
    "title": "Class MessageChannel | CSharpToJavaScript",
    "keywords": "Class MessageChannel Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MessageChannel interface of the Channel Messaging API allows us to create a new message channel and send data through it via its two MessagePort properties. [To(\"FirstCharToLowerCase\")] public class MessageChannel Inheritance object MessageChannel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -Using channel messaging See also on MDN Constructors MessageChannel() The MessageChannel() constructor of the MessageChannel interface returns a new MessageChannel object with two new MessagePort objects. public MessageChannel() Remarks AvailableInWorkers -Using channel messaging See also on MDN Properties Port1 The port1 read-only property of the MessageChannel interface returns the first port of the message channel — the port attached to the context that originated the channel. public MessagePort Port1 { get; } Property Value MessagePort A MessagePort object, the first port of the channel, that is the port attached to the context that originated the channel. Remarks AvailableInWorkers -Using channel messaging See also on MDN Port2 The port2 read-only property of the MessageChannel interface returns the second port of the message channel — the port attached to the context at the other end of the channel, which the message is initially sent to. public MessagePort Port2 { get; } Property Value MessagePort A MessagePort object representing the second port of the channel, the port attached to the context at the other end of the channel. Remarks AvailableInWorkers -Using channel messaging See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MessageEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MessageEvent.html",
    "title": "Class MessageEvent | CSharpToJavaScript",
    "keywords": "Class MessageEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MessageEvent interface represents a message received by a target object. [To(\"FirstCharToLowerCase\")] public class MessageEvent : Event Inheritance object Event MessageEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This is used to represent messages in: The action triggered by this event is defined in a function set as the event handler for the relevant message event (e.g. using an onmessage handler as listed above). AvailableInWorkers -ExtendableMessageEvent — similar to this interface but used in interfaces that needs to give more flexibility to authors. See also on MDN Constructors MessageEvent(string, MessageEventInit) The MessageEvent() constructor creates a new MessageEvent object. public MessageEvent(string type, MessageEventInit eventInitDict) Parameters type string eventInitDict MessageEventInit Remarks -ExtendableMessageEvent — similar to this interface but used in interfaces that needs to give more flexibility to authors. See also on MDN Properties Data The data read-only property of the MessageEvent interface represents the data sent by the message emitter. public dynamic Data { get; } Property Value dynamic The data sent by the message emitter; this can be any data type.If the data is sent by a WebSocket connector, the type of this property depends on the type of the WebSocket message and the value of WebSocket.BinaryType. Remarks -ExtendableMessageEvent — similar to this interface but used in interfaces that needs to give more flexibility to authors. See also on MDN LastEventId The lastEventId read-only property of the MessageEvent interface is a string representing a unique ID for the event. public string LastEventId { get; } Property Value string A string representing the ID. Remarks -ExtendableMessageEvent — similar to this interface but used in interfaces that needs to give more flexibility to authors. See also on MDN Origin The origin read-only property of the MessageEvent interface is a string representing the origin of the message emitter. public string Origin { get; } Property Value string A string representing the origin. Remarks -ExtendableMessageEvent — similar to this interface but used in interfaces that needs to give more flexibility to authors. See also on MDN Ports The ports read-only property of the MessageEvent interface is an array of MessagePort objects representing the ports associated with the channel the message is being sent through (where appropriate, e.g. in channel messaging or when sending a message to a shared worker). public MessagePort[] Ports { get; } Property Value MessagePort[] An array of MessagePort objects. Remarks -ExtendableMessageEvent — similar to this interface but used in interfaces that needs to give more flexibility to authors. See also on MDN Source The source read-only property of the MessageEvent interface is a MessageEventSource (which can be a {{glossary(\"WindowProxy\")}}, MessagePort, or ServiceWorker object) representing the message emitter. public Union45? Source { get; } Property Value Union45? a MessageEventSource (which can be a WindowProxy, MessagePort, or ServiceWorker object) representing the message emitter. Remarks -ExtendableMessageEvent — similar to this interface but used in interfaces that needs to give more flexibility to authors. See also on MDN Methods InitMessageEvent(string, bool, bool, dynamic, string, string, Union45?, List<MessagePort>) public GlobalObject.Undefined InitMessageEvent(string type, bool bubbles, bool cancelable, dynamic data, string origin, string lastEventId, Union45? source, List<MessagePort> ports) Parameters type string bubbles bool cancelable bool data dynamic origin string lastEventId string source Union45? ports List<MessagePort> Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.MessageEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MessageEventInit.html",
    "title": "Class MessageEventInit | CSharpToJavaScript",
    "keywords": "Class MessageEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MessageEventInit : EventInit Inheritance object EventInit MessageEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Data public dynamic Data Field Value dynamic LastEventId public string LastEventId Field Value string Origin public string Origin Field Value string Ports public List<MessagePort> Ports Field Value List<MessagePort> Source public Union45? Source Field Value Union45?"
  },
  "api/CSharpToJavaScript.APIs.JS.MessagePort.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MessagePort.html",
    "title": "Class MessagePort | CSharpToJavaScript",
    "keywords": "Class MessagePort Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MessagePort interface of the Channel Messaging API represents one of the two ports of a MessageChannel, allowing messages to be sent from one port and listening out for them arriving at the other. [To(\"FirstCharToLowerCase\")] public class MessagePort : EventTarget Inheritance object EventTarget MessagePort Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks MessagePort is a transferable object. AvailableInWorkers -Using channel messaging See also on MDN Properties Onmessage public EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onmessageerror public EventHandlerNonNull Onmessageerror { get; set; } Property Value EventHandlerNonNull Methods Close() The close() method of the MessagePort interface disconnects the port, so it is no longer active. This stops the flow of messages to that port. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -Using channel messaging See also on MDN PostMessage(dynamic, StructuredSerializeOptions) The postMessage() method of the MessagePort interface sends a message from the port, and optionally, transfers ownership of objects to other browsing contexts. public GlobalObject.Undefined PostMessage(dynamic message, StructuredSerializeOptions options) Parameters message dynamic options StructuredSerializeOptions Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -Using channel messaging See also on MDN PostMessage(dynamic, List<object>) The postMessage() method of the MessagePort interface sends a message from the port, and optionally, transfers ownership of objects to other browsing contexts. public GlobalObject.Undefined PostMessage(dynamic message, List<object> transfer) Parameters message dynamic transfer List<object> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -Using channel messaging See also on MDN Start() The start() method of the MessagePort interface starts the sending of messages queued on the port. This method is only needed when using AddEventListener(string, Action?, Union1); it is implied when using MessagePort.Message_event. public GlobalObject.Undefined Start() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -Using channel messaging See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MimeType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MimeType.html",
    "title": "Class MimeType | CSharpToJavaScript",
    "keywords": "Class MimeType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The MimeType interface provides contains information about a MIME type associated with a particular plugin. Navigator.MimeTypes returns an array of this object. [To(\"FirstCharToLowerCase\")] public class MimeType Inheritance object MimeType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Description public string Description { get; } Property Value string EnabledPlugin public Plugin EnabledPlugin { get; } Property Value Plugin Suffixes public string Suffixes { get; } Property Value string Type public string Type { get; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.MimeTypeArray.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MimeTypeArray.html",
    "title": "Class MimeTypeArray | CSharpToJavaScript",
    "keywords": "Class MimeTypeArray Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The MimeTypeArray interface returns an array of 'MimeType' instances, each of which contains information about a supported browser plugins. This object is returned by Navigator.MimeTypes. [To(\"FirstCharToLowerCase\")] public class MimeTypeArray Inheritance object MimeTypeArray Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: This interface was an attempt to create an unmodifiable list and only continues to be supported to not break code that&apos;s already using it. Modern APIs use types that wrap around ECMAScript array types instead, so you can treat them like ECMAScript arrays, and at the same time impose additional semantics on their usage (such as making their items read-only). See also on MDN Properties Length public ulong Length { get; } Property Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.MouseEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MouseEvent.html",
    "title": "Class MouseEvent | CSharpToJavaScript",
    "keywords": "Class MouseEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MouseEvent : Event Inheritance object Event MouseEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Button [To(\"FirstCharToLowerCase\")] public int Button { get; } Property Value int"
  },
  "api/CSharpToJavaScript.APIs.JS.MutationCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MutationCallback.html",
    "title": "Struct MutationCallback | CSharpToJavaScript",
    "keywords": "Struct MutationCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct MutationCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.MutationObserver.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MutationObserver.html",
    "title": "Class MutationObserver | CSharpToJavaScript",
    "keywords": "Class MutationObserver Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MutationObserver interface provides the ability to watch for changes being made to the DOM tree. It is designed as a replacement for the older Mutation Events feature, which was part of the DOM3 Events specification. [To(\"FirstCharToLowerCase\")] public class MutationObserver Inheritance object MutationObserver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -'PerformanceObserver' -'ResizeObserver' -'IntersectionObserver' -A brief overview -A more in-depth discussion -A screencast by Chromium developer Rafael Weinstein See also on MDN Constructors MutationObserver(MutationCallback) The DOM MutationObserver() constructor — part of the MutationObserver interface — creates and returns a new observer which invokes a specified callback when DOM events occur. public MutationObserver(MutationCallback callback) Parameters callback MutationCallback Remarks DOM observation does not begin immediately; the Observe(Node, MutationObserverInit) method must be called first to establish which portion of the DOM to watch and what kinds of changes to watch for. See also on MDN Methods Disconnect() The MutationObserver method disconnect() tells the observer to stop watching for mutations. public GlobalObject.Undefined Disconnect() Returns GlobalObject.Undefined undefined. NOTE Note: All notifications of mutations that have already been detected, but not yet reported to the observer, are discarded. To hold on to and handle the detected but unreported mutations, use the TakeRecords() method. Remarks The observer can be reused by calling its Observe(Node, MutationObserverInit) method again. See also on MDN Observe(Node, MutationObserverInit) The MutationObserver method observe() configures the MutationObserver callback to begin receiving notifications of changes to the DOM that match the given options. public GlobalObject.Undefined Observe(Node target, MutationObserverInit options) Parameters target Node options MutationObserverInit Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Depending on the configuration, the observer may watch a single Node in the DOM tree, or that node and some or all of its descendant nodes. To stop the MutationObserver (so that none of its callbacks will be triggered any longer), call Disconnect(). See also on MDN TakeRecords() The MutationObserver method takeRecords() returns a list of all matching DOM changes that have been detected but not yet processed by the observer&apos;s callback function, leaving the mutation queue empty. public List<MutationRecord> TakeRecords() Returns List<MutationRecord> An array of MutationRecord objects, each describing one change applied to the observed portion of the document&apos;s DOM tree. NOTE Note: The queue of mutations which have occurred, but not been delivered to the observer&apos;s callback is left empty after calling takeRecords(). Remarks The most common use case for this is to immediately fetch all pending mutation records immediately prior to disconnecting the observer, so that any pending mutations can be processed when shutting down the observer. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.MutationObserverInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MutationObserverInit.html",
    "title": "Class MutationObserverInit | CSharpToJavaScript",
    "keywords": "Class MutationObserverInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class MutationObserverInit Inheritance object MutationObserverInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AttributeFilter public List<string> AttributeFilter Field Value List<string> AttributeOldValue public bool AttributeOldValue Field Value bool Attributes public bool Attributes Field Value bool CharacterData public bool CharacterData Field Value bool CharacterDataOldValue public bool CharacterDataOldValue Field Value bool ChildList public bool ChildList Field Value bool Subtree public bool Subtree Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.MutationRecord.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.MutationRecord.html",
    "title": "Class MutationRecord | CSharpToJavaScript",
    "keywords": "Class MutationRecord Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The MutationRecord is a read-only interface that represents an individual DOM mutation observed by a MutationObserver. It is the object inside the array passed to the callback of a MutationObserver. [To(\"FirstCharToLowerCase\")] public class MutationRecord Inheritance object MutationRecord Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties AddedNodes The MutationRecord read-only property addedNodes is a NodeList of nodes added to a target node by a mutation observed with a MutationObserver. public NodeList AddedNodes { get; } Property Value NodeList A NodeList containing the nodes added to the target of the mutation observed by the MutationObserver. Remarks See also on MDN AttributeName The MutationRecord read-only property attributeName contains the name of a changed attribute belonging to a node that is observed by a MutationObserver. public string? AttributeName { get; } Property Value string If the record&apos;s type is attributes, this is a string representing the name of the mutated attribute of the mutation target.If the record&apos;s type is not attributes, this is null. Remarks See also on MDN AttributeNamespace The MutationRecord read-only property attributeNamespace is the namespace of the mutated attribute in the MutationRecord observed by a MutationObserver. public string? AttributeNamespace { get; } Property Value string If the record&apos;s type is attributes, the property is a string representing the namespace of the mutated attribute of the mutation target. The value is null otherwise. Remarks See also on MDN NextSibling The MutationRecord read-only property nextSibling is the next sibling of an added or removed child node of the target of a MutationObserver. public Node? NextSibling { get; } Property Value Node If a node is added to or removed from the target of a MutationObserver, the value is the Node that is the next sibling of the added or removed node: that is, the node immediately following this one in the parent's ChildNodes list.The value is null if there are no added or removed nodes, or if the node is the last child of its parent. Remarks See also on MDN OldValue The MutationRecord read-only property oldValue contains the character data or attribute value of an observed node before it was changed. public string? OldValue { get; } Property Value string A string representing the old value of an attribute which has been changed, if:A string representing the old value of a CharacterData node that has been changed, if:Otherwise this property is null. Remarks See also on MDN PreviousSibling The MutationRecord read-only property previousSibling is the previous sibling of an added or removed child node of the target of a MutationObserver. public Node? PreviousSibling { get; } Property Value Node If a node is added to or removed from the target of a MutationObserver, the value is the Node that is the previous sibling of the added or removed node: that is, the node immediately before this one in the parent's ChildNodes list.The value is null if there are no added or removed nodes, or if the node is the first child of its parent. Remarks See also on MDN RemovedNodes The MutationRecord read-only property removedNodes is a NodeList of nodes removed from a target node by a mutation observed with a MutationObserver. public NodeList RemovedNodes { get; } Property Value NodeList A NodeList containing the nodes removed from the target of the mutation observed by the MutationObserver. Remarks See also on MDN Target The MutationRecord read-only property target is the target (i.e. the mutated/changed node) of a mutation observed with a MutationObserver. public Node Target { get; } Property Value Node The Node that the mutation affected. Remarks See also on MDN Type The MutationRecord read-only property type is the type of the MutationRecord observed by a MutationObserver. public string Type { get; } Property Value string The property is set to the type of the mutation as a string. The value can be one of the following: Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NamedNodeMap.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NamedNodeMap.html",
    "title": "Class NamedNodeMap | CSharpToJavaScript",
    "keywords": "Class NamedNodeMap Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The NamedNodeMap interface represents a collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array. [To(\"FirstCharToLowerCase\")] public class NamedNodeMap Inheritance object NamedNodeMap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A NamedNodeMap object is live and will thus be auto-updated if changes are made to its contents internally or elsewhere. NOTE Note: Although called NamedNodeMap, this interface doesn't deal with Node objects but with Attr objects, which are a specialized class of Node objects. -Attributes See also on MDN Properties Length The read-only length property of the NamedNodeMap interface is the number of objects stored in the map. public ulong Length { get; } Property Value ulong A number containing the number of objects in the map Remarks See also on MDN Methods GetNamedItemNS(string?, string) The getNamedItemNS() method of the NamedNodeMap interface returns the Attr corresponding to the given local name in the given namespace, or null if there is no corresponding attribute. public Attr? GetNamedItemNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns Attr An Attr corresponding to the namespace and local name given in parameters, or null if none has been found. Remarks See also on MDN RemoveNamedItem(string) The removeNamedItem() method of the NamedNodeMap interface removes the Attr corresponding to the given name from the map. public Attr RemoveNamedItem(string qualifiedName) Parameters qualifiedName string Returns Attr The removed Attr. Remarks See also on MDN RemoveNamedItemNS(string?, string) The removedNamedItemNS() method of the NamedNodeMap interface removes the Attr corresponding to the given namespace and local name from the map. public Attr RemoveNamedItemNS(string? namespace_, string localName) Parameters namespace_ string localName string Returns Attr The removed Attr. Remarks See also on MDN SetNamedItem(Attr) The setNamedItem() method of the NamedNodeMap interface puts the Attr identified by its name in the map. If there is already an Attr with the same name in the map, it is replaced. public Attr? SetNamedItem(Attr attr) Parameters attr Attr Returns Attr Returns the old attribute if replaced, or null if the attribute is new. Remarks See also on MDN SetNamedItemNS(Attr) The setNamedItemNS() method of the NamedNodeMap interface puts the Attr identified by its name in the map. If there was already an Attr with the same name in the map, it is replaced. public Attr? SetNamedItemNS(Attr attr) Parameters attr Attr Returns Attr Returns the old attribute if replaced, or null if the attribute is new. Remarks NOTE Note: This method is an alias of setNamedItem() you can use them interchangeably. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Navigator.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Navigator.html",
    "title": "Class Navigator | CSharpToJavaScript",
    "keywords": "Class Navigator Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Navigator interface represents the state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities. [To(\"FirstCharToLowerCase\")] public class Navigator Inheritance object Navigator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A Navigator object can be retrieved using the read-only Navigator property. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorConcurrentHardware.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorConcurrentHardware.html",
    "title": "Interface NavigatorConcurrentHardware | CSharpToJavaScript",
    "keywords": "Interface NavigatorConcurrentHardware Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NavigatorConcurrentHardware Properties HardwareConcurrency ulong HardwareConcurrency { get; } Property Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorContentUtils.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorContentUtils.html",
    "title": "Interface NavigatorContentUtils | CSharpToJavaScript",
    "keywords": "Interface NavigatorContentUtils Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NavigatorContentUtils Methods RegisterProtocolHandler(string, string) GlobalObject.Undefined RegisterProtocolHandler(string scheme, string url) Parameters scheme string url string Returns GlobalObject.Undefined UnregisterProtocolHandler(string, string) GlobalObject.Undefined UnregisterProtocolHandler(string scheme, string url) Parameters scheme string url string Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorCookies.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorCookies.html",
    "title": "Interface NavigatorCookies | CSharpToJavaScript",
    "keywords": "Interface NavigatorCookies Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NavigatorCookies Properties CookieEnabled bool CookieEnabled { get; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorID.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorID.html",
    "title": "Interface NavigatorID | CSharpToJavaScript",
    "keywords": "Interface NavigatorID Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NavigatorID Properties AppCodeName string AppCodeName { get; } Property Value string AppName string AppName { get; } Property Value string AppVersion string AppVersion { get; } Property Value string Oscpu string Oscpu { get; } Property Value string Platform string Platform { get; } Property Value string Product string Product { get; } Property Value string ProductSub string ProductSub { get; } Property Value string UserAgent string UserAgent { get; } Property Value string Vendor string Vendor { get; } Property Value string VendorSub string VendorSub { get; } Property Value string Methods TaintEnabled() bool TaintEnabled() Returns bool"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorLanguage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorLanguage.html",
    "title": "Interface NavigatorLanguage | CSharpToJavaScript",
    "keywords": "Interface NavigatorLanguage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Navigator.language read-only property returns a string representing the preferred language of the user, usually the language of the browser UI. [To(\"FirstCharToLowerCase\")] public interface NavigatorLanguage Remarks -Navigator.Languages -Navigator See also on MDN Properties Language string Language { get; } Property Value string Languages string[] Languages { get; } Property Value string[]"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorOnLine.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorOnLine.html",
    "title": "Interface NavigatorOnLine | CSharpToJavaScript",
    "keywords": "Interface NavigatorOnLine Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Returns the online status of the browser. The property returns a boolean value, with true meaning online and false meaning offline. The property sends updates whenever the browser&apos;s ability to connect to the network changes. The update occurs when the user follows links or when a script requests a remote page. For example, the property should return false when users click links soon after they lose internet connection. [To(\"FirstCharToLowerCase\")] public interface NavigatorOnLine Remarks Browsers implement this property differently. In Chrome and Safari, if the browser is not able to connect to a local area network (LAN) or a router, it is offline; all other conditions return true. So while you can assume that the browser is offline when it returns a false value, you cannot assume that a true value necessarily means that the browser can access the internet. You could be getting false positives, such as in cases where the computer is running a virtualization software that has virtual ethernet adapters that are always &quot;connected.&quot; Therefore, if you really want to determine the online status of the browser, you should develop additional means for checking. In Firefox, switching the browser to offline mode sends a false value. Until Firefox 41, all other conditions returned a true value; testing actual behavior on Nightly 68 on Windows shows that it only looks for LAN connection like Chrome and Safari giving false positives. You can see changes in the network state by listening to the online and offline events. See also on MDN Properties OnLine bool OnLine { get; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorPlugins.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorPlugins.html",
    "title": "Interface NavigatorPlugins | CSharpToJavaScript",
    "keywords": "Interface NavigatorPlugins Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated Returns a PluginArray object, listing the Plugin objects describing the plugins installed in the application. Named properties of returned object are not enumerable (except in very old browser versions). [To(\"FirstCharToLowerCase\")] public interface NavigatorPlugins Remarks Recent versions of the specification hard-code the returned list. If inline viewing of PDF files is supported the property lists five standard plugins If inline PDF viewing is not supported then an empty list is returned. NOTE Note: Use Navigator.PdfViewerEnabled to determine if inline viewing of PDF files is supported. Do not infer it from this property. The &quot;five standard plugins&quot; are those that developers have most commonly used to feature detect inline PDF viewing. Returning these ensures that legacy code can more reliably determine whether inline viewing is supported. However this approach is not recommended for new code because this property may eventually be removed. Legacy browser versions also list plugins for Adobe Flash and PDF viewer extensions. See also on MDN Properties MimeTypes MimeTypeArray MimeTypes { get; } Property Value MimeTypeArray PdfViewerEnabled bool PdfViewerEnabled { get; } Property Value bool Plugins PluginArray Plugins { get; } Property Value PluginArray Methods JavaEnabled() bool JavaEnabled() Returns bool"
  },
  "api/CSharpToJavaScript.APIs.JS.NavigatorStorage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NavigatorStorage.html",
    "title": "Interface NavigatorStorage | CSharpToJavaScript",
    "keywords": "Interface NavigatorStorage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Navigator.storage read-only property returns the singleton StorageManager object used to access the overall storage capabilities of the browser for the current site or app. The returned object lets you examine and configure persistence of data stores and learn approximately how much more space your browser has available for local storage use. [To(\"FirstCharToLowerCase\")] public interface NavigatorStorage Remarks -StorageManager -Navigator See also on MDN Properties Storage StorageManager Storage { get; } Property Value StorageManager"
  },
  "api/CSharpToJavaScript.APIs.JS.Node.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Node.html",
    "title": "Class Node | CSharpToJavaScript",
    "keywords": "Class Node Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll In addition, every kind of DOM node is represented by an interface based on Node. These include Attr, CharacterData (which Text, Comment, CDATASection and ProcessingInstruction are all based on), and DocumentType. [To(\"FirstCharToLowerCase\")] public class Node : EventTarget Inheritance object EventTarget Node Derived Attr CharacterData DocumentFragment DocumentType Element Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks In some cases, a particular feature of the base Node interface may not apply to one of its child interfaces; in that case, the inheriting node may return null or throw an exception, depending on circumstances. For example, attempting to add children to a node type that cannot have children will throw an exception. See also on MDN Fields ATTRIBUTE_NODE public const ushort ATTRIBUTE_NODE = 2 Field Value ushort CDATA_SECTION_NODE public const ushort CDATA_SECTION_NODE = 4 Field Value ushort COMMENT_NODE public const ushort COMMENT_NODE = 8 Field Value ushort DOCUMENT_FRAGMENT_NODE public const ushort DOCUMENT_FRAGMENT_NODE = 11 Field Value ushort DOCUMENT_NODE public const ushort DOCUMENT_NODE = 9 Field Value ushort DOCUMENT_POSITION_CONTAINED_BY public const ushort DOCUMENT_POSITION_CONTAINED_BY = 16 Field Value ushort DOCUMENT_POSITION_CONTAINS public const ushort DOCUMENT_POSITION_CONTAINS = 8 Field Value ushort DOCUMENT_POSITION_DISCONNECTED public const ushort DOCUMENT_POSITION_DISCONNECTED = 1 Field Value ushort DOCUMENT_POSITION_FOLLOWING public const ushort DOCUMENT_POSITION_FOLLOWING = 4 Field Value ushort DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC public const ushort DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 32 Field Value ushort DOCUMENT_POSITION_PRECEDING public const ushort DOCUMENT_POSITION_PRECEDING = 2 Field Value ushort DOCUMENT_TYPE_NODE public const ushort DOCUMENT_TYPE_NODE = 10 Field Value ushort ELEMENT_NODE public const ushort ELEMENT_NODE = 1 Field Value ushort ENTITY_NODE public const ushort ENTITY_NODE = 6 Field Value ushort ENTITY_REFERENCE_NODE public const ushort ENTITY_REFERENCE_NODE = 5 Field Value ushort NOTATION_NODE public const ushort NOTATION_NODE = 12 Field Value ushort PROCESSING_INSTRUCTION_NODE public const ushort PROCESSING_INSTRUCTION_NODE = 7 Field Value ushort TEXT_NODE public const ushort TEXT_NODE = 3 Field Value ushort Properties BaseURI The read-only baseURI property of the Node interface returns the absolute base URL of the document containing the node. public string BaseURI { get; } Property Value string A string representing the base URL of the Node. Remarks The base URL is used to resolve relative URLs when the browser needs to obtain an absolute URL, for example when processing the HTML img element's src attribute or the xlink:href or href attributes in SVG. Although this property is read-only, its value is determined by an algorithm each time the property is accessed, and may change if the conditions changed. The base URL is determined as follows: -base element. See also on MDN ChildNodes The read-only childNodes property of the Node interface returns a live NodeList of child Node of the given element where the first child node is assigned index 0. Child nodes include elements, text and comments. public NodeList ChildNodes { get; } Property Value NodeList A live NodeList containing the children of the node. NOTE Note: Several calls to childNodes return the same NodeList. Remarks NOTE Note: The NodeList being live means that its content is changed each time new children are added or removed. The items in the collection of nodes are objects, not strings. To get data from node objects, use their properties. For example, to get the name of the first childNode, you can use elementNodeReference.childNodes[0].nodeName. The Document object itself has two children: the Doctype declaration and the root element, typically referred to as documentElement. In HTML documents the latter is the html element. It is important to keep in mind that childNodes includes all child nodes, including non-element nodes like text and comment. To get a collection containing only elements, use Element.Children instead. -FirstChild -LastChild -NextSibling -PreviousSibling -Element.Children See also on MDN FirstChild The read-only firstChild property of the Node interface returns the node&apos;s first child in the tree, or null if the node has no children. public Node? FirstChild { get; } Property Value Node A Node, or null if there are none. Remarks If the node is a Document, this property returns the first node in the list of its direct children. NOTE Note: This property returns any type of node that is the first child of this one. It may be a Text or a Comment node. If you want to get the first Element that is a child of another element, consider using Element.FirstElementChild. -Element.FirstElementChild -LastChild See also on MDN IsConnected The read-only isConnected property of the Node interface returns a boolean indicating whether the node is connected (directly or indirectly) to a Document object. public bool IsConnected { get; } Property Value bool A boolean value that is true if the node is connected to its relevant context object, and false if not. Remarks -Node.prototype.isConnected polyfill See also on MDN LastChild The read-only lastChild property of the Node interface returns the last child of the node, or null if there are no child nodes. public Node? LastChild { get; } Property Value Node A Node that is the last child of the node, or null is there are no child nodes. Remarks NOTE Note: This property returns any type of node that is the last child of this one. It may be a Text or a Comment node. If you want to get the last Element that is a child of another element, consider using Element.LastElementChild. -FirstChild -Element.LastElementChild See also on MDN NextSibling The read-only nextSibling property of the Node interface returns the node immediately following the specified one in their parent's ChildNodes, or returns null if the specified node is the last child in the parent element. public Node? NextSibling { get; } Property Value Node A Node representing the next sibling of the current node, or null if there are none. Remarks NOTE Note: Browsers insert Text nodes into a document to represent whitespace in the source markup. Therefore a node obtained, for example, using Node.firstChild or Node.previousSibling may refer to a whitespace text node rather than the actual element the author intended to get. The article Whitespace in the DOM contains more information about this behavior. You can use Element.NextElementSibling to obtain the next element skipping any whitespace nodes, other between-element text, or comments. To navigate the opposite way through the child nodes list use Node.previousSibling. -Element.NextElementSibling -PreviousSibling See also on MDN NodeName The read-only nodeName property of Node returns the name of the current node as a string. public string NodeName { get; } Property Value string A string. Values for the different types of nodes are: Remarks -TagName -Name -Name -Target See also on MDN NodeType The read-only nodeType property of a Node interface is an integer that identifies what the node is. It distinguishes different kind of nodes from each other, such as Element, Text and Comment. public ushort NodeType { get; } Property Value ushort An integer which specifies the type of the node. Possible values are:The following constants have been deprecated and are not in use anymore: Node.ENTITY_REFERENCE_NODE (5), Node.ENTITY_NODE (6), and Node.NOTATION_NODE (12). Remarks See also on MDN NodeValue The nodeValue property of the Node interface returns or sets the value of the current node. public string? NodeValue { get; set; } Property Value string A string containing the value of the current node, if any. For the document itself, nodeValue returns null. For text, comment, and CDATA nodes, nodeValue returns the content of the node. For attribute nodes, the value of the attribute is returned.The following table shows the return values for different types of nodes. Node Value of nodeValue CDATASection Content of the CDATA section Comment Content of the comment Document null DocumentFragment null DocumentType null Element null NamedNodeMap null ProcessingInstruction Entire content excluding the target Text Content of the text node NOTE Note: When nodeValue is defined to be null, setting it has no effect. Remarks See also on MDN OwnerDocument The read-only ownerDocument property of the Node interface returns the top-level document object of the node. public Document? OwnerDocument { get; } Property Value Document A Document that is the top-level object in which all the child nodes are created.If this property is used on a node that is itself a document, the value is null. Remarks See also on MDN ParentElement The read-only parentElement property of Node interface returns the DOM node's parent Element, or null if the node either has no parent, or its parent isn't a DOM Element. public Element? ParentElement { get; } Property Value Element An Element that is the parent element of the current node, or null if there isn&apos;t one. Remarks -ParentNode See also on MDN ParentNode The read-only parentNode property of the Node interface returns the parent of the specified node in the DOM tree. public Node? ParentNode { get; } Property Value Node A Node that is the parent of the current node. The parent of an element is an Element node, a Document node, or a DocumentFragment node. Remarks Document and DocumentFragment nodes can never have a parent, so parentNode will always return null. It also returns null if the node has just been created and is not yet attached to the tree. -FirstChild -LastChild -ChildNodes -NextSibling -ParentElement -PreviousSibling -RemoveChild(Node) See also on MDN PreviousSibling The read-only previousSibling property of the Node interface returns the node immediately preceding the specified one in its parent&apos;s ChildNodes list, or null if the specified node is the first in that list. public Node? PreviousSibling { get; } Property Value Node A Node representing the previous sibling of the current node, or null if there are none. Remarks NOTE Note: Browsers insert text nodes into a document to represent whitespace in the source markup. Therefore a node obtained, for example, using Node.firstChild or Node.previousSibling may refer to a whitespace text node rather than the actual element the author intended to get. See Whitespace in the DOM for more information. You can use previousElementSibling to get the previous element node (skipping text nodes and any other non-element nodes). To navigate the opposite way through the child nodes list use Node.nextSibling. -NextSibling -Element.PreviousElementSibling See also on MDN TextContent The textContent property of the {{domxref (\"Node\")}} interface represents the text content of the node and its descendants. public string? TextContent { get; set; } Property Value string A string, or null. Its value depends on the situation: WARNING Warning: Setting textContent on a node removes all of the node&apos;s children and replaces them with a single text node with the given string value. Remarks NOTE Note: textContent and InnerText are easily confused, but the two properties are different in important ways. -InnerText -Element.InnerHTML -More on differences between innerText and textContent (blog post) See also on MDN Methods AppendChild(Node) The appendChild() method of the Node interface adds a node to the end of the list of children of a specified parent node. public Node AppendChild(Node node) Parameters node Node Returns Node A Node that is the appended child (aChild), except when aChild is a DocumentFragment, in which case the empty DocumentFragment is returned. Remarks NOTE Note: If the given child is a reference to an existing node in the document, appendChild() moves it from its current position to the new position. If the given child is a DocumentFragment, the entire contents of the DocumentFragment are moved into the child list of the specified parent node. appendChild() returns the newly appended node, or if the child is a DocumentFragment, the emptied fragment. NOTE Note: Unlike this method, the Element.Append method supports multiple arguments and appending strings. You can prefer using it if your node is an element. -RemoveChild(Node) -ReplaceChild(Node, Node) -InsertBefore(Node, Node?) -HasChildNodes() -InsertAdjacentElement(string, Element) -Element.Append See also on MDN CloneNode(bool) The cloneNode() method of the Node interface returns a duplicate of the node on which this method was called. Its parameter controls if the subtree contained in a node is also cloned or not. public Node CloneNode(bool deep) Parameters deep bool Returns Node The new Node cloned. The cloned node has no parent and is not part of the document, until it is added to another node that is part of the document, using AppendChild(Node) or a similar method. Remarks Cloning a node copies all of its attributes and their values, including intrinsic (inline) listeners. It does not copy event listeners added using addEventListener() or those assigned to element properties (e.g., node.onclick = someFunction). Additionally, for a canvas element, the painted image is not copied. WARNING Warning: cloneNode() may lead to duplicate element IDs in a document! If the original node has an id attribute, and the clone will be placed in the same document, then you should modify the clone&apos;s ID to be unique. Also, name attributes may need to be modified, depending on whether duplicate names are expected. To clone a node to insert into a different document, use Document.ImportNode instead. See also on MDN CompareDocumentPosition(Node) The compareDocumentPosition() method of the Node interface reports the position of its argument node relative to the node on which it is called. public ushort CompareDocumentPosition(Node other) Parameters other Node Returns ushort An integer value representing otherNode&apos;s position relative to node as a bitmask combining the following constant properties of Node:More than one bit is set if multiple scenarios apply. For example, if otherNode is located earlier in the document and contains the node on which compareDocumentPosition() was called, then both the DOCUMENT_POSITION_CONTAINS and DOCUMENT_POSITION_PRECEDING bits would be set, producing a value of 10 (0x0A). Remarks -Contains(Node?) See also on MDN Contains(Node?) The contains() method of the Node interface returns a boolean value indicating whether a node is a descendant of a given node, that is the node itself, one of its direct children (ChildNodes), one of the children&apos;s direct children, and so on. public bool Contains(Node? other) Parameters other Node Returns bool A boolean value that is true if otherNode is contained in the node, false if not.If the otherNode parameter is null, contains() always returns false. Remarks NOTE Note: A node is contained inside itself. -CompareDocumentPosition(Node) -HasChildNodes() See also on MDN GetRootNode(GetRootNodeOptions) The getRootNode() method of the Node interface returns the context object&apos;s root, which optionally includes the shadow root if it is available. public Node GetRootNode(GetRootNodeOptions options) Parameters options GetRootNodeOptions Returns Node An object inheriting from 'Node'. This will differ in exact form depending on where you called getRootNode(); for example: Remarks See also on MDN HasChildNodes() The hasChildNodes() method of the Node interface returns a boolean value indicating whether the given Node has child nodes or not. public bool HasChildNodes() Returns bool A boolean value that is true if the node has child nodes, and false otherwise. Remarks -ChildNodes See also on MDN InsertBefore(Node, Node?) The insertBefore() method of the Node interface inserts a node before a reference node as a child of a specified parent node. public Node InsertBefore(Node node, Node? child) Parameters node Node child Node Returns Node Returns the added child (unless newNode is a DocumentFragment, in which case the empty DocumentFragment is returned). Remarks If the given node already exists in the document, insertBefore() moves it from its current position to the new position. (That is, it will automatically be removed from its existing parent before appending it to the specified new parent.) This means that a node cannot be in two locations of the document simultaneously. NOTE Note: The CloneNode(bool) can be used to make a copy of the node before appending it under the new parent. Note that the copies made with cloneNode() will not be automatically kept in sync. If the given child is a DocumentFragment, the entire contents of the DocumentFragment are moved into the child list of the specified parent node. -RemoveChild(Node) -ReplaceChild(Node, Node) -AppendChild(Node) -HasChildNodes() -InsertAdjacentElement(string, Element) -Element.Prepend -Element.Before -Element.After See also on MDN IsDefaultNamespace(string?) The isDefaultNamespace() method of the Node interface accepts a namespace URI as an argument. It returns a boolean value that is true if the namespace is the default namespace on the given node and false if not. public bool IsDefaultNamespace(string? namespace_) Parameters namespace_ string Returns bool A boolean value that holds the return value true or false, indicating if the parameter is the default namespace, or not. Remarks NOTE Note: The default namespace of an HTML element is always &quot;&quot;. For a SVG element, it is set by the xmlns attribute. -LookupNamespaceURI(string?) -LookupPrefix(string?) See also on MDN IsEqualNode(Node?) The isEqualNode() method of the Node interface tests whether two nodes are equal. Two nodes are equal when they have the same type, defining characteristics (for elements, this would be their ID, number of children, and so forth), its attributes match, and so on. The specific set of data points that must match varies depending on the types of the nodes. public bool IsEqualNode(Node? otherNode) Parameters otherNode Node Returns bool A boolean value that is true if the two nodes are equals, or false if not. If otherNode is null, isEqualNode() always return false. Remarks -IsSameNode(Node?) See also on MDN IsSameNode(Node?) The isSameNode() method of the Node interface is a legacy alias the for the === strict equality operator. That is, it tests whether two nodes are the same (in other words, whether they reference the same object). public bool IsSameNode(Node? otherNode) Parameters otherNode Node Returns bool A boolean value that is true if both nodes are strictly equal, false if not. Remarks NOTE Note: There is no need to use isSameNode(); instead use the === strict equality operator. -IsEqualNode(Node?) See also on MDN LookupNamespaceURI(string?) The lookupNamespaceURI() method of the Node interface takes a prefix as parameter and returns the namespace URI associated with it on the given node if found (and null if not). public string? LookupNamespaceURI(string? prefix) Parameters prefix string Returns string A string containing the namespace URI corresponding to the prefix. If the prefix is not found, it returns null. If the requested prefix is null, it returns the default namespace URI. Remarks -LookupPrefix(string?) -Node.IsDefaultNameSpace See also on MDN LookupPrefix(string?) The lookupPrefix() method of the Node interface returns a string containing the prefix for a given namespace URI, if present, and null if not. When multiple prefixes are possible, the first prefix is returned. public string? LookupPrefix(string? namespace_) Parameters namespace_ string Returns string A string containing the corresponding prefix, or null if none has been found. If namespace is null, or the empty string, lookupPrefix() returns null.If the node is a DocumentType or a DocumentFragment, lookupPrefix() always returns null. Remarks -http://www.w3.org/TR/DOM-Level-3-Cor...amespacePrefix See also on MDN Normalize() The normalize() method of the Node interface puts the specified node and all of its sub-tree into a normalized form. In a normalized sub-tree, no text nodes in the sub-tree are empty and there are no adjacent text nodes. public GlobalObject.Undefined Normalize() Returns GlobalObject.Undefined None. Remarks -SplitText(ulong), its opposite. See also on MDN RemoveChild(Node) The removeChild() method of the Node interface removes a child node from the DOM and returns the removed node. public Node RemoveChild(Node child) Parameters child Node Returns Node Remarks NOTE Note: As long as a reference is kept on the removed child, it still exists in memory, but is no longer part of the DOM. It can still be reused later in the code. If the return value of removeChild() is not stored, and no other reference is kept, it will be automatically deleted from memory after a short time. Unlike CloneNode(bool) the return value preserves the EventListener objects associated with it. -ReplaceChild(Node, Node) -ParentNode -Element.Remove -CloneNode(bool) See also on MDN ReplaceChild(Node, Node) The replaceChild() method of the Node interface replaces a child node within the given (parent) node. public Node ReplaceChild(Node node, Node child) Parameters node Node child Node Returns Node The replaced Node. This is the same node as oldChild. Remarks -RemoveChild(Node) -Element.ReplaceWith See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NodeFilter.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NodeFilter.html",
    "title": "Interface NodeFilter | CSharpToJavaScript",
    "keywords": "Interface NodeFilter Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NodeFilter Fields FILTER_ACCEPT public const ushort FILTER_ACCEPT = 1 Field Value ushort FILTER_REJECT public const ushort FILTER_REJECT = 2 Field Value ushort FILTER_SKIP public const ushort FILTER_SKIP = 3 Field Value ushort SHOW_ALL public const ulong SHOW_ALL = 4294967295 Field Value ulong SHOW_ATTRIBUTE public const ulong SHOW_ATTRIBUTE = 2 Field Value ulong SHOW_CDATA_SECTION public const ulong SHOW_CDATA_SECTION = 8 Field Value ulong SHOW_COMMENT public const ulong SHOW_COMMENT = 128 Field Value ulong SHOW_DOCUMENT public const ulong SHOW_DOCUMENT = 256 Field Value ulong SHOW_DOCUMENT_FRAGMENT public const ulong SHOW_DOCUMENT_FRAGMENT = 1024 Field Value ulong SHOW_DOCUMENT_TYPE public const ulong SHOW_DOCUMENT_TYPE = 512 Field Value ulong SHOW_ELEMENT public const ulong SHOW_ELEMENT = 1 Field Value ulong SHOW_ENTITY public const ulong SHOW_ENTITY = 32 Field Value ulong SHOW_ENTITY_REFERENCE public const ulong SHOW_ENTITY_REFERENCE = 16 Field Value ulong SHOW_NOTATION public const ulong SHOW_NOTATION = 2048 Field Value ulong SHOW_PROCESSING_INSTRUCTION public const ulong SHOW_PROCESSING_INSTRUCTION = 64 Field Value ulong SHOW_TEXT public const ulong SHOW_TEXT = 4 Field Value ulong Methods AcceptNode(Node) ushort AcceptNode(Node node) Parameters node Node Returns ushort"
  },
  "api/CSharpToJavaScript.APIs.JS.NodeIterator.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NodeIterator.html",
    "title": "Class NodeIterator | CSharpToJavaScript",
    "keywords": "Class NodeIterator Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The NodeIterator interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order. [To(\"FirstCharToLowerCase\")] public class NodeIterator Inheritance object NodeIterator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The creator method: Document.CreateNodeIterator. -Related interfaces:-NodeFilter -TreeWalker See also on MDN Properties Filter The NodeIterator.filter read-only property returns a NodeFilter object, that is an object which implements an acceptNode(node) method, used to screen nodes. public NodeFilter? Filter { get; } Property Value NodeFilter A NodeFilter object. Remarks When creating the NodeIterator, the filter object is passed in as the third parameter, and the object method acceptNode(node) is called on every single node to determine whether or not to accept it. This function should return the constant NodeFilter.FILTER_ACCEPT for cases when the node should be accepted and NodeFilter.FILTER_REJECT for cases when the node should be rejected. -The interface this property belongs to: NodeIterator. See also on MDN PointerBeforeReferenceNode The NodeIterator.pointerBeforeReferenceNode read-only property returns a boolean flag that indicates whether the NodeFilter is anchored before (if this value is true) or after (if this value is false) the anchor node indicated by the ReferenceNode property. public bool PointerBeforeReferenceNode { get; } Property Value bool A boolean. Remarks -The interface it belongs to: NodeIterator See also on MDN ReferenceNode The NodeIterator.referenceNode read-only property returns the Node to which the iterator is anchored; as new nodes are inserted, the iterator remains anchored to the reference node as specified by this property. public Node ReferenceNode { get; } Property Value Node A Node. Remarks -The interface it belongs to: NodeIterator See also on MDN Root The NodeIterator.root read-only property represents the Node that is the root of what the NodeIterator traverses. public Node Root { get; } Property Value Node A Node. Remarks -The interface it belongs to: NodeIterator. See also on MDN WhatToShow The NodeIterator.whatToShow read-only property represents an unsigned integer representing a bitmask signifying what types of nodes should be returned by the NodeIterator. public ulong WhatToShow { get; } Property Value ulong An unsigned integer.The values that can be combined to form the bitmask are: Remarks -The interface this property belongs to: NodeIterator. See also on MDN Methods Detach() IMPORTANT Deprecated The NodeIterator.detach() method is a no-op, kept for backward compatibility only. public GlobalObject.Undefined Detach() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Originally, it detached the NodeIterator from the set over which it iterates, releasing any resources used by the set and setting the iterator&apos;s state to INVALID. Once this method had been called, calls to other methods on NodeIterator would raise the INVALID_STATE_ERR exception. -The interface it belongs to: NodeIterator. See also on MDN NextNode() The NodeIterator.nextNode() method returns the next node in the set represented by the NodeIterator and advances the position of the iterator within the set. The first call to nextNode() returns the first node in the set. public Node? NextNode() Returns Node A Node representing the node after the current node in the set represented by this NodeIterator, or null if the current node is the last node in the set. Remarks This method returns null when there are no nodes left in the set. In old browsers, as specified in old versions of the specifications, the method may throws the INVALID_STATE_ERR DOMException if this method is called after the Detach()method. Recent browsers never throw. -The interface it belongs to: NodeIterator. See also on MDN PreviousNode() The NodeIterator.previousNode() method returns the previous node in the set represented by the NodeIterator and moves the position of the iterator backwards within the set. public Node? PreviousNode() Returns Node A Node representing the node before the current node in the set represented by this NodeIterator, or null if the current node is the first node in the set. Remarks This method returns null when the current node is the first node in the set. In old browsers, as specified in old versions of the specifications, the method may throws the INVALID_STATE_ERR DOMException if this method is called after the Detach()method. Recent browsers never throw. -The interface it belongs to: NodeIterator. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NodeList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NodeList.html",
    "title": "Class NodeList | CSharpToJavaScript",
    "keywords": "Class NodeList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll NodeList objects are collections of nodes, usually returned by properties such as ChildNodes and methods such as Document.QuerySelectorAll. [To(\"FirstCharToLowerCase\")] public class NodeList Inheritance object NodeList Derived RadioNodeList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: Although NodeList is not an Array, it is possible to iterate over it with forEach(). It can also be converted to a real Array using ArrayFrom. See also on MDN Properties this[int] public Node this[int i] { get; set; } Parameters i int Property Value Node Length The NodeList.length property returns the number of items in a NodeList. public ulong Length { get; } Property Value ulong An integer value representing the number of items in a NodeList. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NonDocumentTypeChildNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NonDocumentTypeChildNode.html",
    "title": "Interface NonDocumentTypeChildNode | CSharpToJavaScript",
    "keywords": "Interface NonDocumentTypeChildNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NonDocumentTypeChildNode Properties NextElementSibling Element? NextElementSibling { get; } Property Value Element PreviousElementSibling Element? PreviousElementSibling { get; } Property Value Element"
  },
  "api/CSharpToJavaScript.APIs.JS.NonElementParentNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NonElementParentNode.html",
    "title": "Interface NonElementParentNode | CSharpToJavaScript",
    "keywords": "Interface NonElementParentNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface NonElementParentNode Methods GetElementById(string) Element? GetElementById(string elementId) Parameters elementId string Returns Element"
  },
  "api/CSharpToJavaScript.APIs.JS.Notification.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Notification.html",
    "title": "Class Notification | CSharpToJavaScript",
    "keywords": "Class Notification Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Notification interface of the Notifications API is used to configure and display desktop notifications to the user. [To(\"FirstCharToLowerCase\")] public class Notification : EventTarget Inheritance object EventTarget Notification Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks These notifications&apos; appearance and specific functionality vary across platforms but generally they provide a way to asynchronously provide information to the user. -Using the Notifications API See also on MDN Constructors Notification(string, NotificationOptions) The Notification() constructor creates a new Notification object instance, which represents a user notification. public Notification(string title, NotificationOptions options) Parameters title string options NotificationOptions Remarks -Using the Notifications API See also on MDN Properties Actions The actions read-only property of the Notification interface provides the actions available for users to choose from for interacting with the notification. public NotificationAction[] Actions { get; } Property Value NotificationAction[] A read-only array of actions. Each element in the array is an object with the following members: Remarks The actions are set using the actions option of the second argument for the showNotification() method and Notification() constructor. NOTE Note: Browsers typically limit the maximum number of actions they will display for a particular notification. Check the static MaxActions property to determine the limit. -Using the Notifications API -MaxActions See also on MDN Badge The badge property of the Notification interface returns the URL of the image used to represent the notification when there is not enough space to display the notification itself. public string Badge { get; } Property Value string A string containing a URL. Remarks See also on MDN Body The body read-only property of the Notification interface indicates the body string of the notification, as specified in the body option of the Notification(string, NotificationOptions) constructor. public string Body { get; } Property Value string A string. Remarks -Using the Notifications API See also on MDN Data The data read-only property of the Notification interface returns a structured clone of the notification's data, as specified in the data option of the Notification(string, NotificationOptions) constructor. public dynamic Data { get; } Property Value dynamic A structured clone. Remarks The notification&apos;s data can be any arbitrary data that you want associated with the notification. -Using the Notifications API See also on MDN Dir The dir read-only property of the Notification interface indicates the text direction of the notification, as specified in the dir option of the Notification(string, NotificationOptions) constructor. public NotificationDirection Dir { get; } Property Value NotificationDirection A string specifying the text direction. Possible values are: NOTE Note: Most browsers seem to ignore explicit ltr and rtl settings, and just go with the browser-wide setting. Remarks -Using the Notifications API See also on MDN Icon The icon read-only property of the Notification interface contains the URL of an icon to be displayed as part of the notification, as specified in the icon option of the Notification(string, NotificationOptions) constructor. public string Icon { get; } Property Value string A string. Remarks -Using the Notifications API See also on MDN Image The image read-only property of the Notification interface contains the URL of an image to be displayed as part of the notification, as specified in the image option of the Notification(string, NotificationOptions) constructor. public string Image { get; } Property Value string A string. Remarks -Using the Notifications API See also on MDN Lang The lang read-only property of the Notification interface indicates the language used in the notification, as specified in the lang option of the Notification(string, NotificationOptions) constructor. public string Lang { get; } Property Value string A string specifying the language tag. Remarks The language itself is specified using a string representing a language tag according to {{RFC(5646, \"Tags for Identifying Languages (also known as BCP 47)\")}}. See the Sitepoint ISO 2 letter language codes page for a simple reference. -Using the Notifications API See also on MDN MaxActions public static ulong MaxActions { get; } Property Value ulong Onclick public EventHandlerNonNull Onclick { get; set; } Property Value EventHandlerNonNull Onclose public EventHandlerNonNull Onclose { get; set; } Property Value EventHandlerNonNull Onerror public EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull Onshow public EventHandlerNonNull Onshow { get; set; } Property Value EventHandlerNonNull Permission public static NotificationPermission Permission { get; } Property Value NotificationPermission Renotify The renotify read-only property of the Notification interface specifies whether the user should be notified after a new notification replaces an old one, as specified in the renotify option of the Notification(string, NotificationOptions) constructor. public bool Renotify { get; } Property Value bool A boolean value. false is the default; true makes the notification renotify the user. Remarks -Using the Notifications API See also on MDN RequireInteraction The requireInteraction read-only property of the Notification interface returns a boolean value indicating that a notification should remain active until the user clicks or dismisses it, rather than closing automatically. public bool RequireInteraction { get; } Property Value bool A boolean value. Remarks NOTE Note: This can be set when the notification is first created by setting the requireInteraction option to true in the options object of the Notification(string, NotificationOptions) constructor. -Using the Notifications API See also on MDN Silent The silent read-only property of the Notification interface specifies whether the notification should be silent, i.e., no sounds or vibrations should be issued, regardless of the device settings. This is specified in the silent option of the Notification(string, NotificationOptions) constructor. public bool Silent { get; } Property Value bool A boolean value. false is the default; true makes the notification silent. Remarks -Using the Notifications API See also on MDN Tag The tag read-only property of the Notification interface signifies an identifying tag for the notification, as specified in the tag option of the Notification(string, NotificationOptions) constructor. public string Tag { get; } Property Value string A string. Remarks The idea of notification tags is that more than one notification can share the same tag, linking them together. One notification can then be programmatically replaced with another to avoid the users&apos; screen being filled up with a huge number of similar notifications. -Using the Notifications API See also on MDN Timestamp The timestamp read-only property of the Notification interface returns a number, as specified in the timestamp option of the Notification(string, NotificationOptions) constructor. public Unsupported Timestamp { get; } Property Value Unsupported A number representing a timestamp, given as Unix time in milliseconds. Remarks The notification&apos;s timestamp can represent the time, in milliseconds since 00:00:00 UTC on 1 January 1970, of the event for which the notification was created, or it can be an arbitrary timestamp that you want associated with the notification. For example, a timestamp for an upcoming meeting could be set in the future, whereas a timestamp for a missed message could be set in the past. -Using the Notifications API See also on MDN Title The title read-only property of the Notification interface indicates the title of the notification, as specified in the title parameter of the Notification(string, NotificationOptions) constructor. public string Title { get; } Property Value string A string. Remarks -Using the Notifications API See also on MDN Vibrate The vibrate read-only property of the Notification interface specifies a vibration pattern for the device&apos;s vibration hardware to emit when the notification fires. This is specified in the vibrate option of the Notification(string, NotificationOptions) constructor. public ulong[] Vibrate { get; } Property Value ulong[] A vibration pattern, as specified in the Vibration API spec. Remarks -Using the Notifications API See also on MDN Methods Close() The close() method of the Notification interface is used to close/remove a previously displayed notification. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: This API shouldn&apos;t be used just to have the notification removed from the screen after a fixed delay since this method will also remove the notification from any notification tray, preventing users from interacting with it after it was initially shown. A valid use for this API would be to remove a notification that is no longer relevant (e.g. the user already read the notification on the webpage in the case of a messaging app or the following song is already playing in a music app). -Using the Notifications API See also on MDN RequestPermission(NotificationPermissionCallback) public static Task<NotificationPermission> RequestPermission(NotificationPermissionCallback deprecatedCallback) Parameters deprecatedCallback NotificationPermissionCallback Returns Task<NotificationPermission>"
  },
  "api/CSharpToJavaScript.APIs.JS.NotificationAction.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NotificationAction.html",
    "title": "Class NotificationAction | CSharpToJavaScript",
    "keywords": "Class NotificationAction Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NotificationAction Inheritance object NotificationAction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Action public required string Action Field Value string Icon public string Icon Field Value string Title public required string Title Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.NotificationDirection.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NotificationDirection.html",
    "title": "Enum NotificationDirection | CSharpToJavaScript",
    "keywords": "Enum NotificationDirection Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum NotificationDirection Fields Auto = 0 Ltr = 1 Rtl = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.NotificationEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NotificationEvent.html",
    "title": "Class NotificationEvent | CSharpToJavaScript",
    "keywords": "Class NotificationEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The parameter passed into the ServiceWorkerGlobalScope.Notificationclick_event handler, the NotificationEvent interface represents a notification click event that is dispatched on the ServiceWorkerGlobalScope of a ServiceWorker. [To(\"FirstCharToLowerCase\")] public class NotificationEvent Inheritance object NotificationEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface inherits from the ExtendableEvent interface. See also on MDN Constructors NotificationEvent(string, NotificationEventInit) The NotificationEvent() constructor creates a new NotificationEvent object. public NotificationEvent(string type, NotificationEventInit eventInitDict) Parameters type string eventInitDict NotificationEventInit Remarks See also on MDN Properties Action Returns the string ID of the notification button the user clicked. This value returns an empty string if the user clicked the notification somewhere other than an action button, or the notification does not have a button. The notification id is set during the creation of the Notification via the actions array attribute and can&apos;t be modified unless the notification is replaced. public string Action { get; } Property Value string A string. Remarks See also on MDN Notification The notification read-only property of the NotificationEvent interface returns the instance of the Notification that was clicked to fire the event. The Notification provides read-only access to many properties that were set at the instantiation time of the Notification such as tag and data attributes that allow you to store information for deferred use in the notificationclick event. public Notification Notification { get; } Property Value Notification A Notification object. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.NotificationEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NotificationEventInit.html",
    "title": "Class NotificationEventInit | CSharpToJavaScript",
    "keywords": "Class NotificationEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NotificationEventInit Inheritance object NotificationEventInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Action public string Action Field Value string Notification public required Notification Notification Field Value Notification"
  },
  "api/CSharpToJavaScript.APIs.JS.NotificationOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NotificationOptions.html",
    "title": "Class NotificationOptions | CSharpToJavaScript",
    "keywords": "Class NotificationOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class NotificationOptions Inheritance object NotificationOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Actions public List<NotificationAction> Actions Field Value List<NotificationAction> Badge public string Badge Field Value string Body public string Body Field Value string Data public dynamic Data Field Value dynamic Dir public NotificationDirection Dir Field Value NotificationDirection Icon public string Icon Field Value string Image public string Image Field Value string Lang public string Lang Field Value string Renotify public bool Renotify Field Value bool RequireInteraction public bool RequireInteraction Field Value bool Silent public bool Silent Field Value bool Tag public string Tag Field Value string Timestamp public Unsupported Timestamp Field Value Unsupported Vibrate public Unsupported Vibrate Field Value Unsupported"
  },
  "api/CSharpToJavaScript.APIs.JS.NotificationPermission.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NotificationPermission.html",
    "title": "Enum NotificationPermission | CSharpToJavaScript",
    "keywords": "Enum NotificationPermission Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum NotificationPermission Fields Default = 0 Denied = 1 Granted = 2"
  },
  "api/CSharpToJavaScript.APIs.JS.NotificationPermissionCallback.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.NotificationPermissionCallback.html",
    "title": "Struct NotificationPermissionCallback | CSharpToJavaScript",
    "keywords": "Struct NotificationPermissionCallback Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct NotificationPermissionCallback Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.Object.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Object.html",
    "title": "Class Object | CSharpToJavaScript",
    "keywords": "Class Object Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class Object : ObjectPrototype Inheritance object ObjectPrototype Object Inherited Members ObjectPrototype.HasOwnProperty(dynamic) ObjectPrototype.IsPrototypeOf(dynamic) ObjectPrototype.PropertyIsEnumerable(dynamic) ObjectPrototype.ToLocaleString(dynamic, dynamic) ObjectPrototype.ToString() ObjectPrototype.ValueOf() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Object(dynamic?) public Object(dynamic? value = null) Parameters value dynamic Properties Prototype [To(\"FirstCharToLowerCase\")] public static ObjectPrototype Prototype { get; } Property Value ObjectPrototype Methods Assign(dynamic, params dynamic[]) [To(\"FirstCharToLowerCase\")] public static dynamic Assign(dynamic target, params dynamic[] sources) Parameters target dynamic sources dynamic[] Returns dynamic Create(dynamic, dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic Create(dynamic O, dynamic Properties) Parameters O dynamic Properties dynamic Returns dynamic DefineProperties(dynamic, dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic DefineProperties(dynamic O, dynamic Properties) Parameters O dynamic Properties dynamic Returns dynamic DefineProperty(dynamic, dynamic, dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic DefineProperty(dynamic O, dynamic P, dynamic Attributes) Parameters O dynamic P dynamic Attributes dynamic Returns dynamic Entries(dynamic) [To(\"FirstCharToLowerCase\")] public static KeyValuePair<string, dynamic> Entries(dynamic O) Parameters O dynamic Returns KeyValuePair<string, dynamic> Freeze(dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic Freeze(dynamic O) Parameters O dynamic Returns dynamic FromEntries(dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic FromEntries(dynamic iterable) Parameters iterable dynamic Returns dynamic GetOwnPropertyDescriptor(dynamic, dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic GetOwnPropertyDescriptor(dynamic O, dynamic P) Parameters O dynamic P dynamic Returns dynamic GetOwnPropertyDescriptors(dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic GetOwnPropertyDescriptors(dynamic O) Parameters O dynamic Returns dynamic GetOwnPropertyNames(dynamic) [To(\"FirstCharToLowerCase\")] public static string[] GetOwnPropertyNames(dynamic O) Parameters O dynamic Returns string[] GetOwnPropertySymbols(dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic[] GetOwnPropertySymbols(dynamic O) Parameters O dynamic Returns dynamic[] GetPrototypeOf(dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic GetPrototypeOf(dynamic O) Parameters O dynamic Returns dynamic HasOwn(dynamic, dynamic) [To(\"FirstCharToLowerCase\")] public static bool HasOwn(dynamic O, dynamic P) Parameters O dynamic P dynamic Returns bool Is(dynamic, dynamic) [To(\"FirstCharToLowerCase\")] public static bool Is(dynamic value1, dynamic value2) Parameters value1 dynamic value2 dynamic Returns bool IsExtensible(dynamic) [To(\"FirstCharToLowerCase\")] public static bool IsExtensible(dynamic O) Parameters O dynamic Returns bool IsFrozen(dynamic) [To(\"FirstCharToLowerCase\")] public static bool IsFrozen(dynamic O) Parameters O dynamic Returns bool IsSealed(dynamic) [To(\"FirstCharToLowerCase\")] public static bool IsSealed(dynamic O) Parameters O dynamic Returns bool Keys(dynamic) [To(\"FirstCharToLowerCase\")] public static string[] Keys(dynamic O) Parameters O dynamic Returns string[] PreventExtensions(dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic PreventExtensions(dynamic O) Parameters O dynamic Returns dynamic Seal(dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic Seal(dynamic O) Parameters O dynamic Returns dynamic SetPrototypeOf(dynamic, dynamic) [To(\"FirstCharToLowerCase\")] public static dynamic SetPrototypeOf(dynamic O, dynamic proto) Parameters O dynamic proto dynamic Returns dynamic Values(dynamic) [To(\"FirstCharToLowerCase\")] public static string[] Values(dynamic O) Parameters O dynamic Returns string[]"
  },
  "api/CSharpToJavaScript.APIs.JS.ObjectPrototype.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ObjectPrototype.html",
    "title": "Class ObjectPrototype | CSharpToJavaScript",
    "keywords": "Class ObjectPrototype Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ObjectPrototype Inheritance object ObjectPrototype Derived Object Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ObjectPrototype() public ObjectPrototype() Methods HasOwnProperty(dynamic) public bool HasOwnProperty(dynamic V) Parameters V dynamic Returns bool IsPrototypeOf(dynamic) public bool IsPrototypeOf(dynamic V) Parameters V dynamic Returns bool PropertyIsEnumerable(dynamic) public bool PropertyIsEnumerable(dynamic V) Parameters V dynamic Returns bool ToLocaleString(dynamic?, dynamic?) public string ToLocaleString(dynamic? reserved1 = null, dynamic? reserved2 = null) Parameters reserved1 dynamic reserved2 dynamic Returns string ToString() public string ToString() Returns string ValueOf() public dynamic ValueOf() Returns dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.OffscreenCanvas.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OffscreenCanvas.html",
    "title": "Class OffscreenCanvas | CSharpToJavaScript",
    "keywords": "Class OffscreenCanvas Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The OffscreenCanvas interface provides a canvas that can be rendered off screen, decoupling the DOM and the Canvas API so that the canvas element is no longer entirely dependent on the DOM. Rendering operations can also be run inside a worker context, allowing you to run some tasks in a separate thread and avoid heavy work on the main thread. [To(\"FirstCharToLowerCase\")] public class OffscreenCanvas : EventTarget Inheritance object EventTarget OffscreenCanvas Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks OffscreenCanvas is a transferable object. AvailableInWorkers -CanvasRenderingContext2D -OffscreenCanvasRenderingContext2D -ImageBitmap -ImageBitmapRenderingContext -TransferControlToOffscreen() -Window.RequestAnimationFrame -WebGL Off the Main Thread – Mozilla Hacks (2016) See also on MDN Constructors OffscreenCanvas(ulong, ulong) The OffscreenCanvas() constructor returns a newly instantiated OffscreenCanvas object. public OffscreenCanvas(ulong width, ulong height) Parameters width ulong height ulong Remarks -OffscreenCanvas, the interface this constructor belongs to See also on MDN Properties Height The height property returns and sets the height of an OffscreenCanvas object. public ulong Height { get; set; } Property Value ulong Remarks -OffscreenCanvas, the interface this property belongs to. See also on MDN Oncontextlost public EventHandlerNonNull Oncontextlost { get; set; } Property Value EventHandlerNonNull Oncontextrestored public EventHandlerNonNull Oncontextrestored { get; set; } Property Value EventHandlerNonNull Width The width property returns and sets the width of an OffscreenCanvas object. public ulong Width { get; set; } Property Value ulong Remarks -OffscreenCanvas, the interface this property belongs to. See also on MDN Methods ConvertToBlob(ImageEncodeOptions) The OffscreenCanvas.convertToBlob() method creates a Blob object representing the image contained in the canvas. public Task<Unsupported> ConvertToBlob(ImageEncodeOptions options) Parameters options ImageEncodeOptions Returns Task<Unsupported> A {{jsxref(\"Promise\")}} returning a Blob object representing the image contained in the canvas. Remarks The desired file format and image quality may be specified. If the file format is not specified, or if the given format is not supported, then the data will be exported as image/png. Browsers are required to support image/png; many will support additional formats including image/jpeg and image/webp. The created image will have a resolution of 96dpi for file formats that support encoding resolution metadata. -The interface defining this method, OffscreenCanvas. See also on MDN GetContext(OffscreenRenderingContextId, dynamic) The OffscreenCanvas.getContext() method returns a drawing context for an offscreen canvas, or null if the context identifier is not supported. public Union38? GetContext(OffscreenRenderingContextId contextId, dynamic options) Parameters contextId OffscreenRenderingContextId options dynamic Returns Union38? A rendering context which is either aIf the contextType doesn&apos;t match a possible drawing context, null is returned. Remarks -The interface defining this method: OffscreenCanvas -GetContext(string, dynamic) -Available rendering contexts: CanvasRenderingContext2D, WebGLRenderingContext, WebGL2RenderingContext, ImageBitmapRenderingContext, and OffscreenCanvasRenderingContext2D See also on MDN TransferToImageBitmap() The OffscreenCanvas.transferToImageBitmap() method creates an ImageBitmap object from the most recently rendered image of the OffscreenCanvas. public ImageBitmap TransferToImageBitmap() Returns ImageBitmap An ImageBitmap. Remarks -The interface defining this method, OffscreenCanvas -TransferFromImageBitmap(ImageBitmap?) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.OffscreenCanvasRenderingContext2D.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OffscreenCanvasRenderingContext2D.html",
    "title": "Class OffscreenCanvasRenderingContext2D | CSharpToJavaScript",
    "keywords": "Class OffscreenCanvasRenderingContext2D Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The OffscreenCanvasRenderingContext2D interface is a CanvasRenderingContext2D rendering context for drawing to the bitmap of an OffscreenCanvas object. It is similar to the CanvasRenderingContext2D object, with the following differences: [To(\"FirstCharToLowerCase\")] public class OffscreenCanvasRenderingContext2D Inheritance object OffscreenCanvasRenderingContext2D Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -HTMLCanvasElement -canvas See also on MDN Properties Canvas public OffscreenCanvas Canvas { get; } Property Value OffscreenCanvas Methods Commit() The OffscreenCanvasRenderingContext2D.commit() method of the Canvas 2D API copies the rendering context's bitmap to the bitmap of the placeholder canvas element of the associated OffscreenCanvas object. The copy operation is synchronous. Calling this method is not needed for the transfer, since it happens automatically during the event-loop execution. public GlobalObject.Undefined Commit() Returns GlobalObject.Undefined Remarks -The interface defining this method: OffscreenCanvasRenderingContext2D See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.OffscreenRenderingContextId.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OffscreenRenderingContextId.html",
    "title": "Enum OffscreenRenderingContextId | CSharpToJavaScript",
    "keywords": "Enum OffscreenRenderingContextId Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum OffscreenRenderingContextId Fields Bitmaprenderer = 1 Webgl = 2 Webgl2 = 3 Webgpu = 4 _2d = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.OnBeforeUnloadEventHandlerNonNull.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OnBeforeUnloadEventHandlerNonNull.html",
    "title": "Struct OnBeforeUnloadEventHandlerNonNull | CSharpToJavaScript",
    "keywords": "Struct OnBeforeUnloadEventHandlerNonNull Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct OnBeforeUnloadEventHandlerNonNull Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.OnErrorEventHandlerNonNull.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.OnErrorEventHandlerNonNull.html",
    "title": "Struct OnErrorEventHandlerNonNull | CSharpToJavaScript",
    "keywords": "Struct OnErrorEventHandlerNonNull Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct OnErrorEventHandlerNonNull Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.PageTransitionEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PageTransitionEvent.html",
    "title": "Class PageTransitionEvent | CSharpToJavaScript",
    "keywords": "Class PageTransitionEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The PageTransitionEvent event object is available inside handler functions for the pageshow and pagehide events, fired when a document is being loaded or unloaded. [To(\"FirstCharToLowerCase\")] public class PageTransitionEvent : Event Inheritance object Event PageTransitionEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -pageshow event -pagehide event See also on MDN Constructors PageTransitionEvent(string, PageTransitionEventInit) The PageTransitionEvent() constructor creates a new PageTransitionEvent object, that is used by the Window/pageshow_event or Window/pagehide_event events, fired at the Window object when a page is loaded or unloaded. public PageTransitionEvent(string type, PageTransitionEventInit eventInitDict) Parameters type string eventInitDict PageTransitionEventInit Remarks NOTE Note: A web developer doesn't typically need to call this constructor, as the browser creates these objects itself when firing Window/pageshow_event or Window/pagehide_event events. -pageshow event -pagehide event See also on MDN Properties Persisted The persisted read-only property indicates if a webpage is loading from a cache. public bool Persisted { get; } Property Value bool A boolean value. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PageTransitionEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PageTransitionEventInit.html",
    "title": "Class PageTransitionEventInit | CSharpToJavaScript",
    "keywords": "Class PageTransitionEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PageTransitionEventInit : EventInit Inheritance object EventInit PageTransitionEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Persisted public bool Persisted Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.ParentNode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ParentNode.html",
    "title": "Interface ParentNode | CSharpToJavaScript",
    "keywords": "Interface ParentNode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface ParentNode Properties ChildElementCount ulong ChildElementCount { get; } Property Value ulong Children HTMLCollection Children { get; } Property Value HTMLCollection FirstElementChild Element? FirstElementChild { get; } Property Value Element LastElementChild Element? LastElementChild { get; } Property Value Element Methods Append(params Union4[]) GlobalObject.Undefined Append(params Union4[] nodes) Parameters nodes Union4[] Returns GlobalObject.Undefined Prepend(params Union3[]) GlobalObject.Undefined Prepend(params Union3[] nodes) Parameters nodes Union3[] Returns GlobalObject.Undefined QuerySelector(string) Element? QuerySelector(string selectors) Parameters selectors string Returns Element QuerySelectorAll(string) NodeList QuerySelectorAll(string selectors) Parameters selectors string Returns NodeList ReplaceChildren(params Union5[]) GlobalObject.Undefined ReplaceChildren(params Union5[] nodes) Parameters nodes Union5[] Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.Path2D.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Path2D.html",
    "title": "Class Path2D | CSharpToJavaScript",
    "keywords": "Class Path2D Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Path2D interface of the Canvas 2D API is used to declare a path that can then be used on a CanvasRenderingContext2D object. The path methods of the CanvasRenderingContext2D interface are also present on this interface, which gives you the convenience of being able to retain and replay your path whenever desired. [To(\"FirstCharToLowerCase\")] public class Path2D Inheritance object Path2D Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -CanvasRenderingContext2D See also on MDN Constructors Path2D(Union36) The Path2D() constructor returns a newly instantiated Path2D object, optionally with another path as an argument (creates a copy), or optionally with a string consisting of SVG path data. public Path2D(Union36 path) Parameters path Union36 Remarks -Path2D, the interface this constructor belongs to See also on MDN Methods AddPath(Path2D, Unsupported) The Path2D.addPath() method of the Canvas 2D API adds one Path2D object to another Path2D object. public GlobalObject.Undefined AddPath(Path2D path, Unsupported transform) Parameters path Path2D transform Unsupported Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The interface defining this method: Path2D See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Plugin.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Plugin.html",
    "title": "Class Plugin | CSharpToJavaScript",
    "keywords": "Class Plugin Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The Plugin interface provides information about a browser plugin. [To(\"FirstCharToLowerCase\")] public class Plugin Inheritance object Plugin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: Own properties of Plugin objects are no longer enumerable in the latest browser versions. See also on MDN Properties Description public string Description { get; } Property Value string Filename public string Filename { get; } Property Value string Length public ulong Length { get; } Property Value ulong Name public string Name { get; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.PluginArray.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PluginArray.html",
    "title": "Class PluginArray | CSharpToJavaScript",
    "keywords": "Class PluginArray Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll IMPORTANT Deprecated The PluginArray interface is used to store a list of Plugin objects describing the available plugins; it's returned by the Navigator.Plugins property. The PluginArray is not a JavaScript array, but has the length property and supports accessing individual items using bracket notation (plugins[2]), as well as via item(index) and namedItem(&quot;name&quot;) methods. [To(\"FirstCharToLowerCase\")] public class PluginArray Inheritance object PluginArray Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: Own properties of PluginArray objects are no longer enumerable in the latest browser versions. See also on MDN Properties Length public ulong Length { get; } Property Value ulong Methods Refresh() public GlobalObject.Undefined Refresh() Returns GlobalObject.Undefined"
  },
  "api/CSharpToJavaScript.APIs.JS.PopStateEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PopStateEvent.html",
    "title": "Class PopStateEvent | CSharpToJavaScript",
    "keywords": "Class PopStateEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll PopStateEvent is an interface for the popstate event. [To(\"FirstCharToLowerCase\")] public class PopStateEvent : Event Inheritance object Event PopStateEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A popstate event is dispatched to the window every time the active history entry changes between two history entries for the same document. If the history entry being activated was created by a call to history.pushState() or was affected by a call to history.replaceState(), the popstate event&apos;s state property contains a copy of the history entry&apos;s state object. -popstate event -hashchange event See also on MDN Constructors PopStateEvent(string, PopStateEventInit) The PopStateEvent() constructor creates a new PopStateEvent object. public PopStateEvent(string type, PopStateEventInit eventInitDict) Parameters type string eventInitDict PopStateEventInit Remarks NOTE Note: A web developer doesn't typically need to call this constructor, as the browser creates these objects itself when firing Window/popstate_event events. -PushState(dynamic, string, string?) -ReplaceState(dynamic, string, string?) -Window/popstate_event event See also on MDN Properties State The state read-only property of the PopStateEvent interface represents the state stored when the event was created. public dynamic State { get; } Property Value dynamic An object, or null. Remarks Practically it is a value provided by the call to PushState(dynamic, string, string?) or ReplaceState(dynamic, string, string?) -PopStateEvent constructor -State See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PopStateEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PopStateEventInit.html",
    "title": "Class PopStateEventInit | CSharpToJavaScript",
    "keywords": "Class PopStateEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PopStateEventInit : EventInit Inheritance object EventInit PopStateEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields State public dynamic State Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.PredefinedColorSpace.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PredefinedColorSpace.html",
    "title": "Enum PredefinedColorSpace | CSharpToJavaScript",
    "keywords": "Enum PredefinedColorSpace Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum PredefinedColorSpace Fields DisplayP3 = 1 Srgb = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.PremultiplyAlpha.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PremultiplyAlpha.html",
    "title": "Enum PremultiplyAlpha | CSharpToJavaScript",
    "keywords": "Enum PremultiplyAlpha Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum PremultiplyAlpha Fields Default = 2 None = 0 Premultiply = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.ProcessingInstruction.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ProcessingInstruction.html",
    "title": "Class ProcessingInstruction | CSharpToJavaScript",
    "keywords": "Class ProcessingInstruction Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ProcessingInstruction interface represents a processing instruction; that is, a Node which embeds an instruction targeting a specific application but that can be ignored by any other applications which don't recognize the instruction. [To(\"FirstCharToLowerCase\")] public class ProcessingInstruction : CharacterData, NonDocumentTypeChildNode, ChildNode Inheritance object EventTarget Node CharacterData ProcessingInstruction Implements NonDocumentTypeChildNode ChildNode Inherited Members CharacterData.Data CharacterData.Length CharacterData.SubstringData(ulong, ulong) CharacterData.AppendData(string) CharacterData.InsertData(ulong, string) CharacterData.DeleteData(ulong, ulong) CharacterData.ReplaceData(ulong, ulong, string) Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks WARNING Warning: ProcessingInstruction nodes are only supported in XML documents, not in HTML documents. In these, a process instruction will be considered as a comment and be represented as a Comment object in the tree. A processing instruction may be different than the XML declaration. NOTE Note: User-defined processing instructions cannot begin with &quot;xml&quot;, as xml-prefixed processing-instruction target names are reserved by the XML specification for particular, standard uses (see, for example, &lt;?xml-stylesheet ?&gt;. For example: is a processing instruction whose target is xml. -document.createProcessingInstruction() -The DOM API See also on MDN Properties Target The read-only target property of the ProcessingInstruction interface represent the application to which the ProcessingInstruction is targeted. public string Target { get; } Property Value string A string containing the name of the application. Remarks For example: is a processing instruction whose target is xml. -The DOM API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ProgressEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ProgressEvent.html",
    "title": "Class ProgressEvent | CSharpToJavaScript",
    "keywords": "Class ProgressEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ProgressEvent interface represents events measuring progress of an underlying process, like an HTTP request (for an XMLHttpRequest, or the loading of the underlying resource of an img, audio, video, style or link). [To(\"FirstCharToLowerCase\")] public class ProgressEvent : Event Inheritance object Event ProgressEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The Event base interface. See also on MDN Constructors ProgressEvent(string, ProgressEventInit) The ProgressEvent() constructor returns a new ProgressEvent object, representing the current completion of a long process. public ProgressEvent(string type, ProgressEventInit eventInitDict) Parameters type string eventInitDict ProgressEventInit Remarks -The ProgressEvent interface it belongs to. See also on MDN Properties LengthComputable The ProgressEvent.lengthComputable read-only property is a boolean flag indicating if the resource concerned by the ProgressEvent has a length that can be calculated. If not, the Total property has no significant value. public bool LengthComputable { get; } Property Value bool A boolean. Remarks -The ProgressEvent interface it belongs to. See also on MDN Loaded The ProgressEvent.loaded read-only property is an integer representing the amount of work already performed by the underlying process. The ratio of work done can be calculated with the property and ProgressEvent.total. When downloading a resource using HTTP, this value is specified in bytes (not bits), and only represents the part of the content itself, not headers and other overhead. public ulong Loaded { get; } Property Value ulong A number. Remarks -The ProgressEvent interface it belongs to. See also on MDN Total The ProgressEvent.total read-only property is an unsigned 64-bit integer value indicating the total size of the data being processed or transmitted. In the case of an HTTP transmission, this is the size of the body of the message (the Content-Length), and does not include headers and other overhead. public ulong Total { get; } Property Value ulong An integer. Remarks If the event's LengthComputable property is false, this value is meaningless and should be ignored. -The ProgressEvent interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ProgressEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ProgressEventInit.html",
    "title": "Class ProgressEventInit | CSharpToJavaScript",
    "keywords": "Class ProgressEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ProgressEventInit : EventInit Inheritance object EventInit ProgressEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LengthComputable public bool LengthComputable Field Value bool Loaded public ulong Loaded Field Value ulong Total public ulong Total Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.PromiseRejectionEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PromiseRejectionEvent.html",
    "title": "Class PromiseRejectionEvent | CSharpToJavaScript",
    "keywords": "Class PromiseRejectionEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The PromiseRejectionEvent interface represents events which are sent to the global script context when JavaScript Promises are rejected. These events are particularly useful for telemetry and debugging purposes. [To(\"FirstCharToLowerCase\")] public class PromiseRejectionEvent : Event Inheritance object Event PromiseRejectionEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks For details, see Promise rejection events. -Using promises -Promise -Window/rejectionhandled_event -Window/unhandledrejection_event See also on MDN Constructors PromiseRejectionEvent(string, PromiseRejectionEventInit) The PromiseRejectionEvent() constructor returns a new PromiseRejectionEvent object, which represents events fired when a JavaScript Promise is rejected. public PromiseRejectionEvent(string type, PromiseRejectionEventInit eventInitDict) Parameters type string eventInitDict PromiseRejectionEventInit Remarks With promise rejection events, it becomes possible to detect and report promises which fail and whose failures go unnoticed. It also becomes easier to write a global handler for errors. There are two types of PromiseRejectionEvent: Window.Unhandledrejection_event is sent by the JavaScript runtime when a promise is rejected but the rejection goes unhandled. A Window.Rejectionhandled_eventevent is emitted if a promise is rejected but the rejection is caught by a rejection handler. -Using promises -Promise -PromiseRejectionEvent See also on MDN Properties Promise The PromiseRejectionEvent interface's promise read-only property indicates the JavaScript Promise which was rejected. You can examine the event's Reason property to learn why the promise was rejected. public Task<dynamic> Promise { get; } Property Value Task<dynamic> The JavaScript Promise which was rejected, and whose rejection went unhandled. Remarks -Promise rejection events -Promise -PromiseRejectionEvent -Window.Rejectionhandled_event -Window.Unhandledrejection_event See also on MDN Reason The PromiseRejectionEvent reason read-only property is any JavaScript value or Object which provides the reason passed into PromiseReject. This in theory provides information about why the promise was rejected. public dynamic Reason { get; } Property Value dynamic A value or object which provides information you can use to understand why the promise was rejected. This could be anything from an error code to an object with text, links, and whatever else you might wish to include. Remarks -Promise -PromiseRejectionEvent -Window.Rejectionhandled_event -Window.Unhandledrejection_event See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.PromiseRejectionEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.PromiseRejectionEventInit.html",
    "title": "Class PromiseRejectionEventInit | CSharpToJavaScript",
    "keywords": "Class PromiseRejectionEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class PromiseRejectionEventInit : EventInit Inheritance object EventInit PromiseRejectionEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Promise public required Task<dynamic> Promise Field Value Task<dynamic> Reason public dynamic Reason Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.RadioNodeList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RadioNodeList.html",
    "title": "Class RadioNodeList | CSharpToJavaScript",
    "keywords": "Class RadioNodeList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The RadioNodeList interface represents a collection of radio elements in a form or a fieldset element. [To(\"FirstCharToLowerCase\")] public class RadioNodeList : NodeList Inheritance object NodeList RadioNodeList Inherited Members NodeList.Length NodeList.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -The form, fieldset, input elements. See also on MDN Properties Value If the underlying element collection contains radio buttons, the RadioNodeList.value property represents the checked radio button. On retrieving the value property, the value of the currently checked radio button is returned as a string. If the collection does not contain any radio buttons or none of the radio buttons in the collection is in checked state, the empty string is returned. On setting the value property, the first radio button input element whose value property is equal to the new value will be set to checked. public string Value { get; set; } Property Value string Remarks -The form, fieldset, input elements. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Range.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Range.html",
    "title": "Class Range | CSharpToJavaScript",
    "keywords": "Class Range Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Range interface represents a fragment of a document that can contain nodes and parts of text nodes. [To(\"FirstCharToLowerCase\")] public class Range : AbstractRange Inheritance object AbstractRange Range Inherited Members AbstractRange.StartContainer AbstractRange.StartOffset AbstractRange.EndContainer AbstractRange.EndOffset AbstractRange.Collapsed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A range can be created by using the Document.CreateRange method. Range objects can also be retrieved by using the Selection/getRangeAt method of the Selection object or the Document/caretRangeFromPoint method of the Document object. There also is the Range() constructor available. -The DOM interfaces index See also on MDN Constructors Range() The Range() constructor returns a newly created Range object whose start and end is the global Document object. public Range() Remarks -The DOM interfaces index -Document.CreateRange See also on MDN Fields END_TO_END public const ushort END_TO_END = 2 Field Value ushort END_TO_START public const ushort END_TO_START = 3 Field Value ushort START_TO_END public const ushort START_TO_END = 1 Field Value ushort START_TO_START public const ushort START_TO_START = 0 Field Value ushort Properties CommonAncestorContainer The Range.commonAncestorContainer read-only property returns the deepest — or furthest down the document tree — Node that contains both boundary points of the Range. This means that if Range.StartContainer and Range.EndContainer both refer to the same node, this node is the common ancestor container. public Node CommonAncestorContainer { get; } Property Value Node A Node object. Remarks Since a Range need not be continuous, and may also partially select nodes, this is a convenient way to find a Node which encloses a Range. This property is read-only. To change the ancestor container of a Node, consider using the various methods available to set the start and end positions of the Range, such as SetStart(Node, ulong) and SetEnd(Node, ulong). -The DOM interfaces index See also on MDN Methods CloneContents() The Range.cloneContents() returns a {{ domxref(\"DocumentFragment\") }} copying the objects of type Node included in the Range. public DocumentFragment CloneContents() Returns DocumentFragment A DocumentFragment object. Remarks Event listeners added using AddEventListener(string, Action?, Union1) are not copied during cloning. HTML attribute events are duplicated as they are for the CloneNode(bool) method. HTML id attributes are also cloned, which can lead to an invalid document through cloning. Partially selected nodes include the parent tags necessary to make the document fragment valid. -The DOM interfaces index See also on MDN CloneRange() The Range.cloneRange() method returns a Range object with boundary points identical to the cloned Range. public Range CloneRange() Returns Range A Range object. Remarks The returned clone is copied by value, not reference, so a change in either Range does not affect the other. -The DOM interfaces index See also on MDN Collapse(bool) The Range.collapse() method collapses the Range to one of its boundary points. public GlobalObject.Undefined Collapse(bool toStart) Parameters toStart bool Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks A collapsed Range is empty, containing no content, specifying a single-point in a DOM tree. To determine if a Range is already collapsed, see the Range.Collapsed property. -The DOM interfaces index See also on MDN CompareBoundaryPoints(ushort, Range) The Range.compareBoundaryPoints() method compares the boundary points of the Range with those of another range. public short CompareBoundaryPoints(ushort how, Range sourceRange) Parameters how ushort sourceRange Range Returns short A number, -1, 0, or 1, indicating whether the corresponding boundary-point of the Range is respectively before, equal to, or after the corresponding boundary-point of sourceRange. Remarks -The DOM interfaces index See also on MDN ComparePoint(Node, ulong) The Range.comparePoint() method returns -1, 0, or 1 depending on whether the referenceNode is before, the same as, or after the Range. public short ComparePoint(Node node, ulong offset) Parameters node Node offset ulong Returns short Returns -1, 0, or 1. Remarks If the reference node is a Node of type Text, Comment, or CDATASection, then offset is the number of characters from the start of reference node. For other Node types, offset is the number of child nodes between the start of the reference node. -The DOM interfaces index See also on MDN DeleteContents() The Range.deleteContents() method removes the contents of the Range from the Document. public GlobalObject.Undefined DeleteContents() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Unlike ExtractContents(), this method does not return a DocumentFragment containing the deleted content. -The DOM interfaces index See also on MDN Detach() The Range.detach() method does nothing. It used to disable the Range object and enable the browser to release associated resources. The method has been kept for compatibility. public GlobalObject.Undefined Detach() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The DOM interfaces index See also on MDN ExtractContents() The Range.extractContents() method moves contents of the Range from the document tree into a DocumentFragment. public DocumentFragment ExtractContents() Returns DocumentFragment A DocumentFragment object. Remarks Event listeners added using DOM Events are not retained during extraction. HTML attribute events are retained or duplicated as they are for the CloneNode(bool) method. HTML id attributes are also cloned, which can lead to an invalid document if a partially-selected node is extracted and appended to the document. Partially selected nodes are cloned to include the parent tags necessary to make the document fragment valid. -The DOM interfaces index See also on MDN InsertNode(Node) The Range.insertNode() method inserts a node at the start of the Range. public GlobalObject.Undefined InsertNode(Node node) Parameters node Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The new node is inserted at the start boundary point of the Range. If the new node is to be added to a text Node, that Node is split at the insertion point, and the insertion occurs between the two text nodes. If the new node is a document fragment, the children of the document fragment are inserted instead. -The DOM interfaces index See also on MDN IntersectsNode(Node) The Range.intersectsNode() method returns a boolean indicating whether the given Node intersects the Range. public bool IntersectsNode(Node node) Parameters node Node Returns bool A boolean. Remarks -The DOM interfaces index See also on MDN IsPointInRange(Node, ulong) The Range.isPointInRange() method returns a boolean indicating whether the given point is in the Range. It returns true if the point (cursor position) at offset within ReferenceNode is within this range. public bool IsPointInRange(Node node, ulong offset) Parameters node Node offset ulong Returns bool A boolean. Remarks -The DOM interfaces index See also on MDN SelectNode(Node) The Range.selectNode() method sets the Range to contain the Node and its contents. The parent Node of the start and end of the Range will be the same as the parent of the referenceNode. public GlobalObject.Undefined SelectNode(Node node) Parameters node Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The DOM interfaces index See also on MDN SelectNodeContents(Node) The Range.selectNodeContents() method sets the Range to contain the contents of a Node. public GlobalObject.Undefined SelectNodeContents(Node node) Parameters node Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The parent Node of the start and end of the Range will be the reference node. The startOffset is 0, and the endOffset is the number of child Nodes or number of characters contained in the reference node. -The DOM interfaces index See also on MDN SetEnd(Node, ulong) The Range.setEnd() method sets the end position of a {{ domxref(&quot;Range&quot;) }} to be located at the given offset into the specified node x.Setting the end point above (higher in the document) than the start point will result in a collapsed range with the start and end points both set to the specified end position. public GlobalObject.Undefined SetEnd(Node node, ulong offset) Parameters node Node offset ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The DOM interfaces index See also on MDN SetEndAfter(Node) The Range.setEndAfter() method sets the end position of a Range relative to another Node. The parent Node of end of the Range will be the same as that for the referenceNode. public GlobalObject.Undefined SetEndAfter(Node node) Parameters node Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The DOM interfaces index See also on MDN SetEndBefore(Node) The Range.setEndBefore() method sets the end position of a Range relative to another Node. The parent Node of end of the Range will be the same as that for the referenceNode. public GlobalObject.Undefined SetEndBefore(Node node) Parameters node Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The DOM interfaces index See also on MDN SetStart(Node, ulong) The Range.setStart() method sets the start position of a Range. public GlobalObject.Undefined SetStart(Node node, ulong offset) Parameters node Node offset ulong Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If the startNode is a Node of type Text, Comment, or CDataSection, then startOffset is the number of characters from the start of startNode. For other Node types, startOffset is the number of child nodes between the start of the startNode. Setting the start point below (lower in the document) the end point will result in a collapsed range with the start and end points both set to the specified start position. -The DOM interfaces index See also on MDN SetStartAfter(Node) The Range.setStartAfter() method sets the start position of a Range relative to a Node. The parent Node of the start of the Range will be the same as that for the referenceNode. public GlobalObject.Undefined SetStartAfter(Node node) Parameters node Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The DOM interfaces index See also on MDN SetStartBefore(Node) The Range.setStartBefore() method sets the start position of a Range relative to another Node. The parent Node of the start of the Range will be the same as that for the referenceNode. public GlobalObject.Undefined SetStartBefore(Node node) Parameters node Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The DOM interfaces index See also on MDN SurroundContents(Node) The Range.surroundContents() method moves content of the Range into a new node, placing the new node at the start of the specified range. public GlobalObject.Undefined SurroundContents(Node newParent) Parameters newParent Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method is nearly equivalent to newNode.appendChild(range.extractContents()); range.insertNode(newNode). After surrounding, the boundary points of the range include newNode. An exception will be thrown, however, if the Range splits a non-{{ domxref(&quot;Text&quot;) }} node with only one of its boundary points. That is, unlike the alternative above, if there are partially selected nodes, they will not be cloned and instead the operation will fail. -The DOM interfaces index See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.RegExp.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RegExp.html",
    "title": "Class RegExp | CSharpToJavaScript",
    "keywords": "Class RegExp Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class RegExp : RegExpPrototype Inheritance object RegExpPrototype RegExp Inherited Members RegExpPrototype.DotAll RegExpPrototype.Flags RegExpPrototype.Global RegExpPrototype.HasIndices RegExpPrototype.IgnoreCase RegExpPrototype.Multiline RegExpPrototype.Source RegExpPrototype.Sticky RegExpPrototype.Unicode RegExpPrototype.Exec(string) RegExpPrototype.Test(string) RegExpPrototype.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RegExp(string) public RegExp(string pattern) Parameters pattern string RegExp(string, string) public RegExp(string pattern, string flags) Parameters pattern string flags string Properties Prototype [To(\"FirstCharToLowerCase\")] public static RegExpPrototype Prototype { get; } Property Value RegExpPrototype"
  },
  "api/CSharpToJavaScript.APIs.JS.RegExpPrototype.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RegExpPrototype.html",
    "title": "Class RegExpPrototype | CSharpToJavaScript",
    "keywords": "Class RegExpPrototype Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RegExpPrototype Inheritance object RegExpPrototype Derived RegExp Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RegExpPrototype() public RegExpPrototype() Properties DotAll public bool DotAll { get; } Property Value bool Flags public string Flags { get; } Property Value string Global public bool Global { get; } Property Value bool HasIndices public bool HasIndices { get; } Property Value bool IgnoreCase public bool IgnoreCase { get; } Property Value bool Multiline public bool Multiline { get; } Property Value bool Source public string Source { get; } Property Value string Sticky public bool Sticky { get; } Property Value bool Unicode public bool Unicode { get; } Property Value bool Methods Exec(string) public string[] Exec(string str) Parameters str string Returns string[] Test(string) public bool Test(string S) Parameters S string Returns bool ToString() public string ToString() Returns string"
  },
  "api/CSharpToJavaScript.APIs.JS.Request.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Request.html",
    "title": "Class Request | CSharpToJavaScript",
    "keywords": "Class Request Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Request interface of the Fetch API represents a resource request. [To(\"FirstCharToLowerCase\")] public class Request Inheritance object Request Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can create a new Request object using the Request(Union12, RequestInit) constructor, but you are more likely to encounter a Request object being returned as the result of another API operation, such as a service worker FetchEvent.Request. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Constructors Request(Union12, RequestInit) The Request() constructor creates a new Request object. public Request(Union12 input, RequestInit init) Parameters input Union12 init RequestInit Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Properties Cache The cache read-only property of the Request interface contains the cache mode of the request. It controls how the request will interact with the browser's HTTP cache. public RequestCache Cache { get; } Property Value RequestCache A RequestCache value. The available values are: Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Credentials The credentials read-only property of the Request interface indicates whether the user agent should send or receive cookies from the other domain in the case of cross-origin requests. public RequestCredentials Credentials { get; } Property Value RequestCredentials A RequestCredentials dictionary value indicating whether the user agent should send or receive cookies from the other domain in the case of cross-origin requests. Possible values are:This is similar to XHR&apos;s withCredentials flag, but with three available values instead of two. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Destination The destination read-only property of the Request interface returns a string describing the type of content being requested. public RequestDestination Destination { get; } Property Value RequestDestination A string which indicates the type of content the request is asking for. This type is much broader than the usual document type values (such as &quot;document&quot; or &quot;manifest&quot;), and may include contextual cues such as &quot;image&quot; or &quot;worker&quot; or &quot;audioworklet&quot;.Possible values are: Remarks The string must be one of the audio, audioworklet, document, embed, font, frame, iframe, image, manifest, object, paintworklet, report, script, sharedworker, style, track, video, worker or xslt strings, or the empty string, which is the default value. The destination is used by the user agent to, for example, help determine which set of rules to follow for CORS purposes, or how to navigate any complicated code paths that affect how specific types of request get handled. These destinations vary substantially in how they operate. Some are data receptacles, where the received data is stored for processing later. Others are script-based, in which case the received data is delivered to a script by calling it and passing the data along. Script-based destinations include script elements, as well as any of the Worklet-based destinations (including subclasses like AudioWorklet), and the Worker-based destinations, including ServiceWorker and SharedWorker. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Headers The headers read-only property of the Request interface contains the Headers object associated with the request. public Headers Headers { get; } Property Value Headers A Headers object. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Integrity The integrity read-only property of the Request interface contains the subresource integrity value of the request. public string Integrity { get; } Property Value string The value that was passed as the options.integrity argument when constructing the Request.If an integrity has not been specified, the property returns &apos;&apos;. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN IsHistoryNavigation public bool IsHistoryNavigation { get; } Property Value bool IsReloadNavigation public bool IsReloadNavigation { get; } Property Value bool Keepalive public bool Keepalive { get; } Property Value bool Method The method read-only property of the Request interface contains the request's method (GET, POST, etc.) public string Method { get; } Property Value string A String indicating the method of the request. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Mode The mode read-only property of the Request interface contains the mode of the request (e.g., cors, no-cors, same-origin, navigate or websocket.) This is used to determine if cross-origin requests lead to valid responses, and which properties of the response are readable. public RequestMode Mode { get; } Property Value RequestMode Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Redirect The redirect read-only property of the Request interface contains the mode for how redirects are handled. public RequestRedirect Redirect { get; } Property Value RequestRedirect A RequestRedirect enum value, which can be one the following strings:If not specified when the request is created, it takes the default value of follow. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Referrer The referrer read-only property of the Request interface is set by the user agent to be the referrer of the Request. (e.g., client, no-referrer, or a URL.) public string Referrer { get; } Property Value string A string representing the request&apos;s referrer. Remarks NOTE Note: If referrer&apos;s value is no-referrer, it returns an empty string. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN ReferrerPolicy The referrerPolicy read-only property of the Request interface returns the referrer policy, which governs what referrer information, sent in the Referer header, should be included with the request. public Unsupported ReferrerPolicy { get; } Property Value Unsupported A string representing the request&apos;s referrerPolicy. For more information and possible values, see the Referrer-Policy HTTP header page. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Signal The read-only signal property of the Request interface returns the AbortSignal associated with the request. public AbortSignal Signal { get; } Property Value AbortSignal An AbortSignal object. Remarks See also on MDN Url The url read-only property of the Request interface contains the URL of the request. public string Url { get; } Property Value string A string indicating the URL of the request. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Methods Clone() The clone() method of the Request interface creates a copy of the current Request object. public Request Clone() Returns Request A Request object, which is an exact copy of the Request that clone() was called on. Remarks Like the underlying ReadableStream.Tee api, the Request.Body of a cloned Response will signal backpressure at the rate of the faster consumer of the two bodies, and unread data is enqueued internally on the slower consumed body without any limit or backpressure. Beware when you construct a Request from a stream and then clone it. clone() throws a TypeError if the request body has already been used. In fact, the main reason clone() exists is to allow multiple uses of body objects (when they are one-use only.) If you intend to modify the request, you may prefer the Request constructor. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.RequestCache.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RequestCache.html",
    "title": "Enum RequestCache | CSharpToJavaScript",
    "keywords": "Enum RequestCache Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The cache read-only property of the Request interface contains the cache mode of the request. It controls how the request will interact with the browser's HTTP cache. public enum RequestCache Fields Default = 0 ForceCache = 4 NoCache = 3 NoStore = 1 OnlyIfCached = 5 Reload = 2 Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.RequestCredentials.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RequestCredentials.html",
    "title": "Enum RequestCredentials | CSharpToJavaScript",
    "keywords": "Enum RequestCredentials Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The credentials read-only property of the Request interface indicates whether the user agent should send or receive cookies from the other domain in the case of cross-origin requests. public enum RequestCredentials Fields Include = 2 Omit = 0 SameOrigin = 1 Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.RequestDestination.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RequestDestination.html",
    "title": "Enum RequestDestination | CSharpToJavaScript",
    "keywords": "Enum RequestDestination Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The destination read-only property of the Request interface returns a string describing the type of content being requested. public enum RequestDestination Fields Audio = 1 Audioworklet = 2 Document = 3 Embed = 4 Empty = 0 Font = 5 Frame = 6 Iframe = 7 Image = 8 Manifest = 9 Object = 10 Paintworklet = 11 Report = 12 Script = 13 Sharedworker = 14 Style = 15 Track = 16 Video = 17 Worker = 18 Xslt = 19 Remarks The string must be one of the audio, audioworklet, document, embed, font, frame, iframe, image, manifest, object, paintworklet, report, script, sharedworker, style, track, video, worker or xslt strings, or the empty string, which is the default value. The destination is used by the user agent to, for example, help determine which set of rules to follow for CORS purposes, or how to navigate any complicated code paths that affect how specific types of request get handled. These destinations vary substantially in how they operate. Some are data receptacles, where the received data is stored for processing later. Others are script-based, in which case the received data is delivered to a script by calling it and passing the data along. Script-based destinations include script elements, as well as any of the Worklet-based destinations (including subclasses like AudioWorklet), and the Worker-based destinations, including ServiceWorker and SharedWorker. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.RequestInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RequestInit.html",
    "title": "Class RequestInit | CSharpToJavaScript",
    "keywords": "Class RequestInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class RequestInit Inheritance object RequestInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Body public Union11? Body Field Value Union11? Cache public RequestCache Cache Field Value RequestCache Credentials public RequestCredentials Credentials Field Value RequestCredentials Headers public Union9 Headers Field Value Union9 Integrity public string Integrity Field Value string Keepalive public bool Keepalive Field Value bool Method public string Method Field Value string Mode public RequestMode Mode Field Value RequestMode Redirect public RequestRedirect Redirect Field Value RequestRedirect Referrer public string Referrer Field Value string ReferrerPolicy public Unsupported ReferrerPolicy Field Value Unsupported Signal public AbortSignal? Signal Field Value AbortSignal Window public dynamic Window Field Value dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.RequestMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RequestMode.html",
    "title": "Enum RequestMode | CSharpToJavaScript",
    "keywords": "Enum RequestMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The mode read-only property of the Request interface contains the mode of the request (e.g., cors, no-cors, same-origin, navigate or websocket.) This is used to determine if cross-origin requests lead to valid responses, and which properties of the response are readable. public enum RequestMode Fields Cors = 3 Navigate = 0 NoCors = 2 SameOrigin = 1 Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.RequestRedirect.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.RequestRedirect.html",
    "title": "Enum RequestRedirect | CSharpToJavaScript",
    "keywords": "Enum RequestRedirect Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The redirect read-only property of the Request interface contains the mode for how redirects are handled. public enum RequestRedirect Fields Error = 1 Follow = 0 Manual = 2 Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ResizeQuality.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ResizeQuality.html",
    "title": "Enum ResizeQuality | CSharpToJavaScript",
    "keywords": "Enum ResizeQuality Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ResizeQuality Fields High = 3 Low = 1 Medium = 2 Pixelated = 0"
  },
  "api/CSharpToJavaScript.APIs.JS.Response.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Response.html",
    "title": "Class Response | CSharpToJavaScript",
    "keywords": "Class Response Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Response interface of the Fetch API represents the response to a request. [To(\"FirstCharToLowerCase\")] public class Response Inheritance object Response Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can create a new Response object using the Response(Union11?, ResponseInit) constructor, but you are more likely to encounter a Response object being returned as the result of another API operation—for example, a service worker FetchEvent.RespondWith, or a simple Fetch. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Constructors Response(Union11?, ResponseInit) The Response() constructor creates a new Response object. public Response(Union11? body, ResponseInit init) Parameters body Union11? init ResponseInit Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Properties Headers The headers read-only property of the Response interface contains the Headers object associated with the response. public Headers Headers { get; } Property Value Headers A Headers object. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Ok The ok read-only property of the Response interface contains a Boolean stating whether the response was successful (status in the range 200-299) or not. public bool Ok { get; } Property Value bool A boolean value. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Redirected The read-only redirected property of the Response interface indicates whether or not the response is the result of a request you made which was redirected. public bool Redirected { get; } Property Value bool A boolean value which is true if the response indicates that your request was redirected. Remarks NOTE Note: Relying on redirected to filter out redirects makes it easy for a forged redirect to prevent your content from working as expected. Instead, you should do the filtering when you call Fetch. See the example Disallowing redirects, which shows this being done. -Fetch API -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Status The status read-only property of the Response interface contains the HTTP status codes of the response. public ushort Status { get; } Property Value ushort An unsigned short number. This is one of the HTTP response status codes. Remarks For example, 200 for success, 404 if the resource could not be found. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN StatusText The statusText read-only property of the Response interface contains the status message corresponding to the HTTP status code in Status. public string StatusText { get; } Property Value string A String containing the HTTP status message associated with the response. The default value is &quot;&quot;.See HTTP response status codes for a list of codes and their associated status messages. Note that HTTP/2 does not support status messages. Remarks For example, this would be OK for a status code 200, Continue for 100, Not Found for 404. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Type The type read-only property of the Response interface contains the type of the response. It can be one of the following: public ResponseType Type { get; } Property Value ResponseType A ResponseType string indicating the type of the response. Remarks NOTE Note: An \"error\" Response never really gets exposed to script: such a response to a Fetch would reject the promise. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Url The url read-only property of the Response interface contains the URL of the response. The value of the url property will be the final URL obtained after any redirects. public string Url { get; } Property Value string A string. Remarks -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Methods Clone() The clone() method of the Response interface creates a clone of a response object, identical in every way, but stored in a different variable. public Response Clone() Returns Response A Response object. Remarks Like the underlying ReadableStream.Tee api, the Response.Body of a cloned Response will signal backpressure at the rate of the faster consumer of the two bodies, and unread data is enqueued internally on the slower consumed body without any limit or backpressure. Backpressure refers to the mechanism by which the streaming consumer of data (in this case, the code that reads the body) slows down the producer of data (such as the TCP server) so as not to load large amounts of data in memory that is waiting to be used by the application. If only one cloned branch is consumed, then the entire body will be buffered in memory. Therefore, clone() is one way to read a response twice in sequence, but you should not use it to read very large bodies in parallel at different speeds. clone() throws a TypeError if the response body has already been used. In fact, the main reason clone() exists is to allow multiple uses of body objects (when they are one-use only.) -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN Error() public static Response Error() Returns Response Json(dynamic, ResponseInit) The json() method of the Response interface takes a Response stream and reads it to completion. It returns a promise which resolves with the result of parsing the body text as JSON. public static Response Json(dynamic data, ResponseInit init) Parameters data dynamic init ResponseInit Returns Response A Promise that resolves to a JavaScript object. This object could be anything that can be represented by JSON — an object, an array, a string, a number… Remarks Note that despite the method being named json(), the result is not JSON but is instead the result of taking JSON as input and parsing it to produce a JavaScript object. -ServiceWorker API -Cross-Origin Resource Sharing (CORS) -HTTP See also on MDN Redirect(string, ushort) public static Response Redirect(string url, ushort status) Parameters url string status ushort Returns Response"
  },
  "api/CSharpToJavaScript.APIs.JS.ResponseInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ResponseInit.html",
    "title": "Class ResponseInit | CSharpToJavaScript",
    "keywords": "Class ResponseInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ResponseInit Inheritance object ResponseInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Headers public Union9 Headers Field Value Union9 Status public ushort Status Field Value ushort StatusText public string StatusText Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.ResponseType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ResponseType.html",
    "title": "Enum ResponseType | CSharpToJavaScript",
    "keywords": "Enum ResponseType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The type read-only property of the Response interface contains the type of the response. It can be one of the following: public enum ResponseType Fields Basic = 0 Cors = 1 Default = 2 Error = 3 Opaque = 4 Opaqueredirect = 5 Remarks NOTE Note: An \"error\" Response never really gets exposed to script: such a response to a Fetch would reject the promise. -ServiceWorker API -HTTP access control (CORS) -HTTP See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ScrollRestoration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ScrollRestoration.html",
    "title": "Enum ScrollRestoration | CSharpToJavaScript",
    "keywords": "Enum ScrollRestoration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum ScrollRestoration Fields Auto = 0 Manual = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.SelectionMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SelectionMode.html",
    "title": "Enum SelectionMode | CSharpToJavaScript",
    "keywords": "Enum SelectionMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum SelectionMode Fields End = 2 Preserve = 3 Select = 0 Start = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.ServiceWorkerGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ServiceWorkerGlobalScope.html",
    "title": "Class ServiceWorkerGlobalScope | CSharpToJavaScript",
    "keywords": "Class ServiceWorkerGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ServiceWorkerGlobalScope interface of the Service Worker API represents the global execution context of a service worker. [To(\"FirstCharToLowerCase\")] public class ServiceWorkerGlobalScope Inheritance object ServiceWorkerGlobalScope Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Developers should keep in mind that the ServiceWorker state is not persisted across the termination/restart cycle, so each event handler should assume it&apos;s being invoked with a bare, default global state. Once successfully registered, a service worker can and will be terminated when idle to conserve memory and processor power. An active service worker is automatically restarted to respond to events, such as ServiceWorkerGlobalScope.Fetch_event or ServiceWorkerGlobalScope.Message_event. Additionally, synchronous requests are not allowed from within a service worker — only asynchronous requests, like those initiated via the Fetch method, can be used. This interface inherits from the WorkerGlobalScope interface, and its parent EventTarget. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise See also on MDN Properties Onnotificationclick public EventHandlerNonNull Onnotificationclick { get; set; } Property Value EventHandlerNonNull Onnotificationclose public EventHandlerNonNull Onnotificationclose { get; set; } Property Value EventHandlerNonNull"
  },
  "api/CSharpToJavaScript.APIs.JS.ServiceWorkerRegistration.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ServiceWorkerRegistration.html",
    "title": "Class ServiceWorkerRegistration | CSharpToJavaScript",
    "keywords": "Class ServiceWorkerRegistration Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ServiceWorkerRegistration interface of the Service Worker API represents the service worker registration. You register a service worker to control one or more pages that share the same origin. [To(\"FirstCharToLowerCase\")] public class ServiceWorkerRegistration Inheritance object ServiceWorkerRegistration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The lifetime of a service worker registration is beyond that of the ServiceWorkerRegistration objects that represent them within the lifetime of their corresponding service worker clients. The browser maintains a persistent list of active ServiceWorkerRegistration objects. NOTE Note: This feature is available in Web Workers. -Using Service Workers -Service workers basic code example -Is ServiceWorker ready? -Promise -Using web workers See also on MDN Methods GetNotifications(GetNotificationOptions) The getNotifications() method of the ServiceWorkerRegistration interface returns a list of the notifications in the order that they were created from the current origin via the current service worker registration. Origins can have many active but differently-scoped service worker registrations. Notifications created by one service worker on the same origin will not be available to other active services workers on that same origin. public Task<List<Notification>> GetNotifications(GetNotificationOptions filter) Parameters filter GetNotificationOptions Returns Task<List<Notification>> A {{jsxref(\"Promise\")}} that resolves to a list of Notification objects. Remarks See also on MDN ShowNotification(string, NotificationOptions) The showNotification() method of the ServiceWorkerRegistration interface creates a notification on an active service worker. public Task<GlobalObject.Undefined> ShowNotification(string title, NotificationOptions options) Parameters title string options NotificationOptions Returns Task<GlobalObject.Undefined> A 'Promise' that resolves to undefined. Remarks NOTE Note: This feature is available in Web Workers. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ShadowRoot.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ShadowRoot.html",
    "title": "Class ShadowRoot | CSharpToJavaScript",
    "keywords": "Class ShadowRoot Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ShadowRoot interface of the Shadow DOM API is the root node of a DOM subtree that is rendered separately from a document&apos;s main DOM tree. [To(\"FirstCharToLowerCase\")] public class ShadowRoot : DocumentFragment, NonElementParentNode, ParentNode, DocumentOrShadowRoot Inheritance object EventTarget Node DocumentFragment ShadowRoot Implements NonElementParentNode ParentNode DocumentOrShadowRoot Inherited Members Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You can retrieve a reference to an element's shadow root using its ShadowRoot property, provided it was created using AttachShadow(ShadowRootInit) with the mode option set to open. See also on MDN Properties DelegatesFocus The delegatesFocus read-only property of the ShadowRoot interface returns true if the shadow root delegates focus, and false otherwise. public bool DelegatesFocus { get; } Property Value bool Remarks If true, when a non-focusable part of the shadow DOM is clicked, or .focus() is called on the host element, the first focusable part is given focus, and the shadow host is given any available :focus styling. Focus is of particular importance for keyboard users (including those using screen readers). delegatesFocus default behavior is to focus the first focusable element — which may be undesirable if that element is not meant to be part of the tabbing order (for example, an element with tabindex=&quot;-1&quot;), or if a more &apos;important&apos; focusable element should receive initial focus (for instance, the first text field rather than the &apos;close&apos; button which precedes it). In such cases, the autofocus attribute can be specified on the element which should receive initial focus. Use the autofocus attribute with caution as it can introduce accessibility issues, such as bypassing important content which may go unnoticed due to focus being set to an element later in the DOM order. The property value is set using the delegatesFocus property of the object passed to AttachShadow(ShadowRootInit)). See also on MDN Host The host read-only property of the ShadowRoot returns a reference to the DOM element the ShadowRoot is attached to. public Element Host { get; } Property Value Element A DOM 'Element'. Remarks See also on MDN Mode The mode read-only property of the ShadowRoot specifies its mode — either open or closed. This defines whether or not the shadow root&apos;s internal features are accessible from JavaScript. public ShadowRootMode Mode { get; } Property Value ShadowRootMode A value defined in the ShadowRootMode enum — either open or closed. Remarks When the mode of a shadow root is &quot;closed&quot;, the shadow root&apos;s implementation internals are inaccessible and unchangeable from JavaScript—in the same way the implementation internals of, for example, the video element are inaccessible and unchangeable from JavaScript. See also on MDN Onslotchange public EventHandlerNonNull Onslotchange { get; set; } Property Value EventHandlerNonNull SlotAssignment The read-only slotAssignment property of the ShadowRoot interface returns the slot assignment mode for the shadow DOM tree. Nodes are either automatically assigned (named) or manually assigned (manual). The value of this property defined using the slotAssignment option when calling AttachShadow(ShadowRootInit). public SlotAssignmentMode SlotAssignment { get; } Property Value SlotAssignmentMode A string that can be one of: Remarks -AttachShadow(ShadowRootInit) -Assign(params Union26[]) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ShadowRootInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ShadowRootInit.html",
    "title": "Class ShadowRootInit | CSharpToJavaScript",
    "keywords": "Class ShadowRootInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ShadowRootInit Inheritance object ShadowRootInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DelegatesFocus public bool DelegatesFocus Field Value bool Mode public required ShadowRootMode Mode Field Value ShadowRootMode SlotAssignment public SlotAssignmentMode SlotAssignment Field Value SlotAssignmentMode"
  },
  "api/CSharpToJavaScript.APIs.JS.ShadowRootMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ShadowRootMode.html",
    "title": "Enum ShadowRootMode | CSharpToJavaScript",
    "keywords": "Enum ShadowRootMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The mode read-only property of the ShadowRoot specifies its mode — either open or closed. This defines whether or not the shadow root&apos;s internal features are accessible from JavaScript. public enum ShadowRootMode Fields Closed = 1 Open = 0 Remarks When the mode of a shadow root is &quot;closed&quot;, the shadow root&apos;s implementation internals are inaccessible and unchangeable from JavaScript—in the same way the implementation internals of, for example, the video element are inaccessible and unchangeable from JavaScript. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SharedWorker.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SharedWorker.html",
    "title": "Class SharedWorker | CSharpToJavaScript",
    "keywords": "Class SharedWorker Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SharedWorker interface represents a specific kind of worker that can be accessed from several browsing contexts, such as several windows, iframes or even workers. They implement an interface different than dedicated workers and have a different global scope, SharedWorkerGlobalScope. [To(\"FirstCharToLowerCase\")] public class SharedWorker : EventTarget, AbstractWorker Inheritance object EventTarget SharedWorker Implements AbstractWorker Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: If SharedWorker can be accessed from several browsing contexts, all those browsing contexts must share the exact same origin (same protocol, host and port). -Worker See also on MDN Constructors SharedWorker(string, Union46) The SharedWorker() constructor creates a SharedWorker object that executes the script at the specified URL. This script must obey the same-origin policy. public SharedWorker(string scriptURL, Union46 options) Parameters scriptURL string options Union46 Remarks NOTE Note: there is disagreement among browser manufacturers about whether a data URL is of the same origin or not. Although Firefox 10.0 and later accept data URLs, that&apos;s not the case in all other browsers. -The SharedWorker interface it belongs to. See also on MDN Properties Port The port property of the SharedWorker interface returns a MessagePort object used to communicate and control the shared worker. public MessagePort Port { get; } Property Value MessagePort A MessagePort object. Remarks -SharedWorker See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SharedWorkerGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SharedWorkerGlobalScope.html",
    "title": "Class SharedWorkerGlobalScope | CSharpToJavaScript",
    "keywords": "Class SharedWorkerGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SharedWorkerGlobalScope object (the SharedWorker global scope) is accessible through the Self keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See the complete list of functions available to workers. [To(\"FirstCharToLowerCase\")] public class SharedWorkerGlobalScope : WorkerGlobalScope, WindowOrWorkerGlobalScope Inheritance object EventTarget WorkerGlobalScope SharedWorkerGlobalScope Implements WindowOrWorkerGlobalScope Inherited Members WorkerGlobalScope.Self WorkerGlobalScope.Location WorkerGlobalScope.Navigator WorkerGlobalScope.ImportScripts(params string[]) WorkerGlobalScope.Onerror WorkerGlobalScope.Onlanguagechange WorkerGlobalScope.Onoffline WorkerGlobalScope.Ononline WorkerGlobalScope.Onrejectionhandled WorkerGlobalScope.Onunhandledrejection EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -SharedWorker -WorkerGlobalScope -Using Web workers -Functions available to workers See also on MDN Properties Name The name read-only property of the SharedWorkerGlobalScope interface returns the name that the SharedWorker was (optionally) given when it was created. This is the name that the SharedWorker(string, Union46) constructor can pass to get a reference to the SharedWorkerGlobalScope. public string Name { get; } Property Value string A string. Remarks -SharedWorkerGlobalScope See also on MDN Onconnect public EventHandlerNonNull Onconnect { get; set; } Property Value EventHandlerNonNull Methods Close() The close() method of the SharedWorkerGlobalScope interface discards any tasks queued in the SharedWorkerGlobalScope&apos;s event loop, effectively closing this particular scope. public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks DedicatedWorkerGlobalScope See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SlotAssignmentMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SlotAssignmentMode.html",
    "title": "Enum SlotAssignmentMode | CSharpToJavaScript",
    "keywords": "Enum SlotAssignmentMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum SlotAssignmentMode Fields Manual = 0 Named = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.Slottable.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Slottable.html",
    "title": "Interface Slottable | CSharpToJavaScript",
    "keywords": "Interface Slottable Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface Slottable Properties AssignedSlot HTMLSlotElement? AssignedSlot { get; } Property Value HTMLSlotElement"
  },
  "api/CSharpToJavaScript.APIs.JS.StaticRange.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StaticRange.html",
    "title": "Class StaticRange | CSharpToJavaScript",
    "keywords": "Class StaticRange Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The DOM StaticRange interface extends AbstractRange to provide a method to specify a range of content in the DOM whose contents don't update to reflect changes which occur within the DOM tree. [To(\"FirstCharToLowerCase\")] public class StaticRange : AbstractRange Inheritance object AbstractRange StaticRange Inherited Members AbstractRange.StartContainer AbstractRange.StartOffset AbstractRange.EndContainer AbstractRange.EndOffset AbstractRange.Collapsed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface offers the same set of properties and methods as AbstractRange. AbstractRange and StaticRange are not available from web workers. -Live updating range of content within the DOM: Range -AbstractRange, the abstract interface from which all ranges are derived See also on MDN Constructors StaticRange(StaticRangeInit) The StaticRange() constructor creates a new StaticRange object representing a span of content within the DOM. public StaticRange(StaticRangeInit init) Parameters init StaticRangeInit Remarks This constructor includes properties identifying the standard and end positions of the range as well as a Boolean indicating whether or not the range is collapsed (that is, empty). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.StaticRangeInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StaticRangeInit.html",
    "title": "Class StaticRangeInit | CSharpToJavaScript",
    "keywords": "Class StaticRangeInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class StaticRangeInit Inheritance object StaticRangeInit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields EndContainer public required Node EndContainer Field Value Node EndOffset public required ulong EndOffset Field Value ulong StartContainer public required Node StartContainer Field Value Node StartOffset public required ulong StartOffset Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.Storage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Storage.html",
    "title": "Class Storage | CSharpToJavaScript",
    "keywords": "Class Storage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Storage interface of the Web Storage API provides access to a particular domain&apos;s session or local storage. It allows, for example, the addition, modification, or deletion of stored data items. [To(\"FirstCharToLowerCase\")] public class Storage Inheritance object Storage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To manipulate, for instance, the session storage for a domain, a call to Window.SessionStorage is made; whereas for local storage the call is made to Window.LocalStorage. -Using the Web Storage API -Window.LocalStorage -Window.SessionStorage -CacheStorage See also on MDN Properties Length The length read-only property of the Storage interface returns the number of data items stored in a given Storage object. public ulong Length { get; } Property Value ulong The number of items stored in the Storage object. Remarks -Using the Web Storage API See also on MDN Methods Clear() The clear() method of the Storage interface clears all keys stored in a given Storage object. public GlobalObject.Undefined Clear() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Using the Web Storage API See also on MDN Key(ulong) The key() method of the Storage interface, when passed a number n, returns the name of the nth key in a given Storage object. The order of keys is user-agent defined, so you should not rely on it. public string? Key(ulong index) Parameters index ulong Returns string A string containing the name of the key. If the index does not exist, null is returned. Remarks -Using the Web Storage API See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.StorageEstimate.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StorageEstimate.html",
    "title": "Class StorageEstimate | CSharpToJavaScript",
    "keywords": "Class StorageEstimate Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class StorageEstimate Inheritance object StorageEstimate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Quota public ulong Quota Field Value ulong Usage public ulong Usage Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.StorageEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StorageEvent.html",
    "title": "Class StorageEvent | CSharpToJavaScript",
    "keywords": "Class StorageEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The StorageEvent interface is implemented by the Window/storage_event event, which is sent to a window when a storage area the window has access to is changed within the context of another document. [To(\"FirstCharToLowerCase\")] public class StorageEvent : Event Inheritance object Event StorageEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors StorageEvent(string, StorageEventInit) public StorageEvent(string type, StorageEventInit eventInitDict) Parameters type string eventInitDict StorageEventInit Properties Key public string? Key { get; } Property Value string NewValue public string? NewValue { get; } Property Value string OldValue public string? OldValue { get; } Property Value string StorageArea public Storage? StorageArea { get; } Property Value Storage Url public string Url { get; } Property Value string Methods InitStorageEvent(string, bool, bool, string?, string?, string?, string, Storage?) IMPORTANT Deprecated The StorageEvent.initStorageEvent() method is used to initialize the value of a StorageEvent. public GlobalObject.Undefined InitStorageEvent(string type, bool bubbles, bool cancelable, string? key, string? oldValue, string? newValue, string url, Storage? storageArea) Parameters type string bubbles bool cancelable bool key string oldValue string newValue string url string storageArea Storage Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -The constructor to use instead of this deprecated method: {{domxref(&quot;StorageEvent.StorageEvent&quot;, &quot;StorageEvent()&quot;)}}. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.StorageEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StorageEventInit.html",
    "title": "Class StorageEventInit | CSharpToJavaScript",
    "keywords": "Class StorageEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class StorageEventInit : EventInit Inheritance object EventInit StorageEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Key public string? Key Field Value string NewValue public string? NewValue Field Value string OldValue public string? OldValue Field Value string StorageArea public Storage? StorageArea Field Value Storage Url public string Url Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.StorageManager.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StorageManager.html",
    "title": "Class StorageManager | CSharpToJavaScript",
    "keywords": "Class StorageManager Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The StorageManager interface of the Storage API provides an interface for managing persistence permissions and estimating available storage. You can get a reference to this interface using either Navigator.Storage or WorkerNavigator.Storage. [To(\"FirstCharToLowerCase\")] public class StorageManager Inheritance object StorageManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Methods Estimate() The estimate() method of the StorageManager interface asks the Storage Manager for how much storage the current origin takes up (usage), and how much space is available (quota). public Task<StorageEstimate> Estimate() Returns Task<StorageEstimate> A 'Promise' that resolves to an object with the following properties: NOTE Note: The returned values are not exact: between compression, deduplication, and obfuscation for security reasons, they will be imprecise. You may find that the quota varies from origin to origin. This variance is based on factors such as: Remarks This method operates asynchronously, so it returns a Promise which resolves once the information is available. The promise's fulfillment handler is called with an object containing the usage and quota data. -Storage API -Storage, the object returned by Window.LocalStorage -StorageManager -Navigator.Storage See also on MDN Persist() The persist() method of the StorageManager interface requests permission to use persistent storage, and returns a {{jsxref('Promise')}} that resolves to true if permission is granted and bucket mode is persistent, and false otherwise. public Task<bool> Persist() Returns Task<bool> A 'Promise' that resolves to a 'Boolean'. Remarks See also on MDN Persisted() The persisted() method of the StorageManager interface returns a {{jsxref('Promise')}} that resolves to true if your site&apos;s storage bucket is persistent. public Task<bool> Persisted() Returns Task<bool> A 'Promise' that resolves to a 'Boolean'. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.StructuredSerializeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.StructuredSerializeOptions.html",
    "title": "Class StructuredSerializeOptions | CSharpToJavaScript",
    "keywords": "Class StructuredSerializeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class StructuredSerializeOptions Inheritance object StructuredSerializeOptions Derived WindowPostMessageOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Transfer public List<object> Transfer Field Value List<object>"
  },
  "api/CSharpToJavaScript.APIs.JS.SubmitEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SubmitEvent.html",
    "title": "Class SubmitEvent | CSharpToJavaScript",
    "keywords": "Class SubmitEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The SubmitEvent interface defines the object used to represent an {{Glossary(\"HTML\")}} form's HTMLFormElement.Submit_event event. This event is fired at the {{HTMLElement(\"form\")}} when the form's submit action is invoked. [To(\"FirstCharToLowerCase\")] public class SubmitEvent : Event Inheritance object Event SubmitEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Constructors SubmitEvent(string, SubmitEventInit) The SubmitEvent() constructor creates and returns a new SubmitEvent object, which is used to represent a HTMLFormElement.Submit_event event fired at an HTML form. public SubmitEvent(string type, SubmitEventInit eventInitDict) Parameters type string eventInitDict SubmitEventInit Remarks See also on MDN Properties Submitter The read-only submitter property found on the SubmitEvent interface specifies the submit button or other element that was invoked to cause the form to be submitted. public HTMLElement? Submitter { get; } Property Value HTMLElement An element, indicating the element that sent the HTMLFormElement.Submit_event event to the form. While this is often an input element whose type is submit or a button element whose type is submit, it could be some other element which has initiated a submission process.If the submission was not triggered by a button of some kind, the value of submitter is null. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.SubmitEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.SubmitEventInit.html",
    "title": "Class SubmitEventInit | CSharpToJavaScript",
    "keywords": "Class SubmitEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class SubmitEventInit : EventInit Inheritance object EventInit SubmitEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Submitter public HTMLElement? Submitter Field Value HTMLElement"
  },
  "api/CSharpToJavaScript.APIs.JS.Text.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Text.html",
    "title": "Class Text | CSharpToJavaScript",
    "keywords": "Class Text Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Text interface represents a text Node in a DOM tree. [To(\"Default\")] public class Text : CharacterData, NonDocumentTypeChildNode, ChildNode, Slottable Inheritance object EventTarget Node CharacterData Text Implements NonDocumentTypeChildNode ChildNode Slottable Derived CDATASection Inherited Members CharacterData.Data CharacterData.Length CharacterData.SubstringData(ulong, ulong) CharacterData.AppendData(string) CharacterData.InsertData(ulong, string) CharacterData.DeleteData(ulong, ulong) CharacterData.ReplaceData(ulong, ulong, string) Node.ELEMENT_NODE Node.ATTRIBUTE_NODE Node.TEXT_NODE Node.CDATA_SECTION_NODE Node.ENTITY_REFERENCE_NODE Node.ENTITY_NODE Node.PROCESSING_INSTRUCTION_NODE Node.COMMENT_NODE Node.DOCUMENT_NODE Node.DOCUMENT_TYPE_NODE Node.DOCUMENT_FRAGMENT_NODE Node.NOTATION_NODE Node.NodeType Node.NodeName Node.BaseURI Node.IsConnected Node.OwnerDocument Node.GetRootNode(GetRootNodeOptions) Node.ParentNode Node.ParentElement Node.HasChildNodes() Node.ChildNodes Node.FirstChild Node.LastChild Node.PreviousSibling Node.NextSibling Node.NodeValue Node.TextContent Node.Normalize() Node.CloneNode(bool) Node.IsEqualNode(Node) Node.IsSameNode(Node) Node.DOCUMENT_POSITION_DISCONNECTED Node.DOCUMENT_POSITION_PRECEDING Node.DOCUMENT_POSITION_FOLLOWING Node.DOCUMENT_POSITION_CONTAINS Node.DOCUMENT_POSITION_CONTAINED_BY Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC Node.CompareDocumentPosition(Node) Node.Contains(Node) Node.LookupPrefix(string) Node.LookupNamespaceURI(string) Node.IsDefaultNamespace(string) Node.InsertBefore(Node, Node) Node.AppendChild(Node) Node.ReplaceChild(Node, Node) Node.RemoveChild(Node) EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks To understand what a text node is, consider the following document: In that document, there are five text nodes, with the following contents: Each of those text nodes is an object that has the properties and methods documented in this article. -The DOM API See also on MDN Constructors Text() public Text() Text(string) The Text() constructor returns a new Text object with the optional string given in parameter as its textual content. public Text(string data) Parameters data string Remarks -The DOM API See also on MDN Properties WholeText The read-only wholeText property of the Text interface returns the full text of all Text nodes logically adjacent to the node. The text is concatenated in document order. This allows specifying any text node and obtaining all adjacent text as a single string. [To(\"FirstCharToLowerCase\")] public string WholeText { get; } Property Value string A string with the concatenated text. Remarks NOTE Note: This is similar to call Normalize() followed by reading the text value, but without modifying the tree. -The Text interface it belongs to. See also on MDN Methods SplitText(ulong) The splitText() method of the Text interface breaks the Text node into two nodes at the specified offset, keeping both nodes in the tree as siblings. [To(\"FirstCharToLowerCase\")] public Text SplitText(ulong offset) Parameters offset ulong Returns Text Returns the newly created Text node that contains the text after the specified offset point. Remarks After the split, the current node contains all the content up to the specified offset point, and a newly created node of the same type contains the remaining text. The newly created node is returned to the caller. If the original node had a parent, the new node is inserted as the next sibling of the original node. If the offset is equal to the length of the original node, the newly created node has no data. Separated text nodes can be concatenated using the Normalize() method. -The Text interface it belongs to. -The opposite method: Normalize(). See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextDecodeOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextDecodeOptions.html",
    "title": "Class TextDecodeOptions | CSharpToJavaScript",
    "keywords": "Class TextDecodeOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class TextDecodeOptions Inheritance object TextDecodeOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Stream [To(\"FirstCharToLowerCase\")] public bool Stream Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.TextDecoder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextDecoder.html",
    "title": "Class TextDecoder | CSharpToJavaScript",
    "keywords": "Class TextDecoder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextDecoder interface represents a decoder for a specific text encoding, such as UTF-8, ISO-8859-2, KOI8-R, GBK, etc. A decoder takes a stream of bytes as input and emits a stream of code points. [To(\"Default\")] public class TextDecoder Inheritance object TextDecoder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -The TextEncoder interface describing the inverse operation. -A shim allowing to use this interface in browsers that do not support it. -Node.js supports global export from v11.0.0 See also on MDN Constructors TextDecoder(string, TextDecoderOptions) The TextDecoder() constructor returns a newly created TextDecoder object for the encoding specified in parameter. public TextDecoder(string label, TextDecoderOptions options) Parameters label string options TextDecoderOptions Remarks -The TextDecoder interface it belongs to. See also on MDN Methods Decode(Union49, TextDecodeOptions) The TextDecoder.decode() method returns a string containing text decoded from the buffer passed as a parameter. [To(\"FirstCharToLowerCase\")] public string Decode(Union49 input, TextDecodeOptions options) Parameters input Union49 options TextDecodeOptions Returns string A string. Remarks The decoding method is defined in the current TextDecoder object. This includes the expected encoding of the data, and how decoding errors are handled. -The TextDecoder interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextDecoderCommon.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextDecoderCommon.html",
    "title": "Interface TextDecoderCommon | CSharpToJavaScript",
    "keywords": "Interface TextDecoderCommon Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface TextDecoderCommon Properties Encoding string Encoding { get; } Property Value string Fatal bool Fatal { get; } Property Value bool IgnoreBOM bool IgnoreBOM { get; } Property Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.TextDecoderOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextDecoderOptions.html",
    "title": "Class TextDecoderOptions | CSharpToJavaScript",
    "keywords": "Class TextDecoderOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class TextDecoderOptions Inheritance object TextDecoderOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Fatal [To(\"FirstCharToLowerCase\")] public bool Fatal Field Value bool IgnoreBOM [To(\"FirstCharToLowerCase\")] public bool IgnoreBOM Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.TextDecoderStream.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextDecoderStream.html",
    "title": "Class TextDecoderStream | CSharpToJavaScript",
    "keywords": "Class TextDecoderStream Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextDecoderStream interface of the 'Encoding API' converts a stream of text in a binary encoding, such as UTF-8 etc., to a stream of strings. It is the streaming equivalent of TextDecoder. [To(\"Default\")] public class TextDecoderStream Inheritance object TextDecoderStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -TextEncoderStream -Streams API Concepts -Experimenting with the Streams API See also on MDN Constructors TextDecoderStream(string, TextDecoderOptions) The TextDecoderStream() constructor creates a new TextDecoderStream object which is used to convert a stream of text in a binary encoding into strings. public TextDecoderStream(string label, TextDecoderOptions options) Parameters label string options TextDecoderOptions Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextEncoder.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextEncoder.html",
    "title": "Class TextEncoder | CSharpToJavaScript",
    "keywords": "Class TextEncoder Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextEncoder interface takes a stream of code points as input and emits a stream of UTF-8 bytes. [To(\"Default\")] public class TextEncoder Inheritance object TextEncoder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers -The TextDecoder interface describing the inverse operation. -Node.js supports global export from v11.0.0 See also on MDN Constructors TextEncoder() The TextEncoder() constructor returns a newly created TextEncoder object that will generate a byte stream with UTF-8 encoding. public TextEncoder() Remarks -The TextEncoder interface it belongs to. See also on MDN Methods Encode(string) The TextEncoder.encode() method takes a string as input, and returns a {{jsxref(\"Global_Objects/Uint8Array\", \"Uint8Array\")}} containing the text given in parameters encoded with the specific method for that TextEncoder object. [To(\"FirstCharToLowerCase\")] public byte Encode(string input) Parameters input string Returns byte A Uint8Array object. Remarks -The TextEncoder interface it belongs to. See also on MDN EncodeInto(string, byte) The TextEncoder.encodeInto() method takes a string to encode and a destination Uint8Array to put resulting UTF-8 encoded text into, and returns a dictionary object indicating the progress of the encoding. This is potentially more performant than the older encode() method — especially when the target buffer is a view into a Wasm heap. [To(\"FirstCharToLowerCase\")] public TextEncoderEncodeIntoResult EncodeInto(string source, byte destination) Parameters source string destination byte Returns TextEncoderEncodeIntoResult An object, which contains two members: Remarks -The TextEncoder interface it belongs to. -Encode(string) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextEncoderCommon.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextEncoderCommon.html",
    "title": "Interface TextEncoderCommon | CSharpToJavaScript",
    "keywords": "Interface TextEncoderCommon Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface TextEncoderCommon Properties Encoding string Encoding { get; } Property Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.TextEncoderEncodeIntoResult.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextEncoderEncodeIntoResult.html",
    "title": "Class TextEncoderEncodeIntoResult | CSharpToJavaScript",
    "keywords": "Class TextEncoderEncodeIntoResult Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"Default\")] public class TextEncoderEncodeIntoResult Inheritance object TextEncoderEncodeIntoResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Read [To(\"FirstCharToLowerCase\")] public ulong Read Field Value ulong Written [To(\"FirstCharToLowerCase\")] public ulong Written Field Value ulong"
  },
  "api/CSharpToJavaScript.APIs.JS.TextEncoderStream.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextEncoderStream.html",
    "title": "Class TextEncoderStream | CSharpToJavaScript",
    "keywords": "Class TextEncoderStream Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextEncoderStream interface of the 'Encoding API' converts a stream of strings into bytes in the UTF-8 encoding. It is the streaming equivalent of TextEncoder. [To(\"Default\")] public class TextEncoderStream Inheritance object TextEncoderStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -TextDecoderStream -Streams API Concepts -Experimenting with the Streams API See also on MDN Constructors TextEncoderStream() The TextEncoderStream() constructor creates a new TextEncoderStream object which is used to convert a stream of strings into bytes using UTF-8 encoding. public TextEncoderStream() Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextMetrics.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextMetrics.html",
    "title": "Class TextMetrics | CSharpToJavaScript",
    "keywords": "Class TextMetrics Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextMetrics interface represents the dimensions of a piece of text in the canvas; a TextMetrics instance can be retrieved using the CanvasRenderingContext2D.MeasureText method. [To(\"Default\")] public class TextMetrics Inheritance object TextMetrics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Creator method in CanvasRenderingContext2D -The {{HTMLElement(\"canvas\")}} element and its associated interface, HTMLCanvasElement See also on MDN Properties ActualBoundingBoxAscent The read-only actualBoundingBoxAscent property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline attribute to the top of the bounding rectangle used to render the text, in CSS pixels. [To(\"FirstCharToLowerCase\")] public double ActualBoundingBoxAscent { get; } Property Value double Remarks -TextMetrics See also on MDN ActualBoundingBoxDescent The read-only actualBoundingBoxDescent property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline attribute to the bottom of the bounding rectangle used to render the text, in CSS pixels. [To(\"FirstCharToLowerCase\")] public double ActualBoundingBoxDescent { get; } Property Value double Remarks -TextMetrics See also on MDN ActualBoundingBoxLeft The read-only actualBoundingBoxLeft property of the TextMetrics interface is a double giving the distance parallel to the baseline from the alignment point given by the CanvasRenderingContext2D.TextAlign property to the left side of the bounding rectangle of the given text, in CSS pixels; positive numbers indicating a distance going left from the given alignment point. [To(\"FirstCharToLowerCase\")] public double ActualBoundingBoxLeft { get; } Property Value double Remarks -TextMetrics See also on MDN ActualBoundingBoxRight The read-only actualBoundingBoxRight property of the TextMetrics interface is a double giving the distance parallel to the baseline from the alignment point given by the CanvasRenderingContext2D.TextAlign property to the right side of the bounding rectangle of the given text, in CSS pixels. [To(\"FirstCharToLowerCase\")] public double ActualBoundingBoxRight { get; } Property Value double Remarks -TextMetrics See also on MDN AlphabeticBaseline The read-only alphabeticBaseline property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline property to the alphabetic baseline of the line box, in CSS pixels. [To(\"FirstCharToLowerCase\")] public double AlphabeticBaseline { get; } Property Value double Remarks -TextMetrics See also on MDN EmHeightAscent The read-only emHeightAscent property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline property to the top of the em square in the line box, in CSS pixels. [To(\"FirstCharToLowerCase\")] public double EmHeightAscent { get; } Property Value double Remarks -TextMetrics See also on MDN EmHeightDescent The read-only emHeightDescent property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline property to the bottom of the em square in the line box, in CSS pixels. [To(\"FirstCharToLowerCase\")] public double EmHeightDescent { get; } Property Value double Remarks -TextMetrics See also on MDN FontBoundingBoxAscent The read-only fontBoundingBoxAscent property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline attribute to the top of the highest bounding rectangle of all the fonts used to render the text, in CSS pixels. [To(\"FirstCharToLowerCase\")] public double FontBoundingBoxAscent { get; } Property Value double Remarks -TextMetrics See also on MDN FontBoundingBoxDescent The read-only fontBoundingBoxDescent property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline attribute to the bottom of the bounding rectangle of all the fonts used to render the text, in CSS pixels. [To(\"FirstCharToLowerCase\")] public double FontBoundingBoxDescent { get; } Property Value double Remarks -TextMetrics See also on MDN HangingBaseline The read-only hangingBaseline property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline property to the hanging baseline of the line box, in CSS pixels. [To(\"FirstCharToLowerCase\")] public double HangingBaseline { get; } Property Value double Remarks -TextMetrics See also on MDN IdeographicBaseline The read-only ideographicBaseline property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.TextBaseline property to the ideographic baseline of the line box, in CSS pixels. [To(\"FirstCharToLowerCase\")] public double IdeographicBaseline { get; } Property Value double Remarks -TextMetrics See also on MDN Width The read-only width property of the TextMetrics interface contains the text's advance width (the width of that inline box) in CSS pixels. [To(\"FirstCharToLowerCase\")] public double Width { get; } Property Value double Remarks -TextMetrics See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextTrack.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextTrack.html",
    "title": "Class TextTrack | CSharpToJavaScript",
    "keywords": "Class TextTrack Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextTrack interface—part of the API for handling WebVTT (text tracks on media presentations)—describes and controls the text track associated with a particular track element. [To(\"Default\")] public class TextTrack : EventTarget Inheritance object EventTarget TextTrack Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -WebVTT -TextTrackCueList -VTTCue -track -HTMLTrackElement See also on MDN Properties ActiveCues The activeCues read-only property of the TextTrack interface returns a TextTrackCueList object listing the currently active cues. [To(\"FirstCharToLowerCase\")] public TextTrackCueList? ActiveCues { get; } Property Value TextTrackCueList A TextTrackCueList object. Remarks See also on MDN Cues The cues read-only property of the TextTrack interface returns a TextTrackCueList object containing all of the track's cues. [To(\"FirstCharToLowerCase\")] public TextTrackCueList? Cues { get; } Property Value TextTrackCueList A TextTrackCueList object. Remarks See also on MDN Id The id read-only property of the TextTrack interface returns the ID of the track if it has one. [To(\"FirstCharToLowerCase\")] public string Id { get; } Property Value string A string containing the ID, or an empty string. Remarks See also on MDN InBandMetadataTrackDispatchType The inBandMetadataTrackDispatchType read-only property of the TextTrack interface returns the text track's in-band metadata dispatch type of the text track represented by the TextTrack object. [To(\"FirstCharToLowerCase\")] public string InBandMetadataTrackDispatchType { get; } Property Value string A string containing the inBandMetadataTrackDispatchType, or an empty string. Remarks An in-band metadata dispatch type is a string extracted from a media resource specifically for in-band metadata tracks. An example of a media resource that might have such tracks is a TV station streaming a broadcast on the web. Text Tracks may be used to include metadata for ad targeting, additional information such as recipe data during a cooking show, or trivia game data during a game show. The value of this attribute could be used to attach these tracks to dedicated script modules as they are loaded. See also on MDN Kind The kind read-only property of the TextTrack interface returns the kind of text track this object represents. This decides how the track will be handled by a user agent. [To(\"FirstCharToLowerCase\")] public TextTrackKind Kind { get; } Property Value TextTrackKind A string. One of: Remarks See also on MDN Label The label read-only property of the TextTrack interface returns a human-readable label for the text track, if it is available. [To(\"FirstCharToLowerCase\")] public string Label { get; } Property Value string A string containing the label, or an empty string. Remarks See also on MDN Language The language read-only property of the TextTrack interface returns the language of the text track. [To(\"FirstCharToLowerCase\")] public string Language { get; } Property Value string A string containing a language identifier. For example, &quot;en-US&quot; for United States English or &quot;pt-BR&quot; for Brazilian Portuguese. Remarks This uses the same values as the HTML lang attribute. These values are documented in {{RFC(5646, \"Tags for Identifying Languages (also known as BCP 47)\")}}. See also on MDN Mode The TextTrack interface's mode property is a string specifying and controlling the text track&apos;s mode: disabled, hidden, or showing. You can read this value to determine the current mode, and you can change this value to switch modes. [To(\"FirstCharToLowerCase\")] public TextTrackMode Mode { get; set; } Property Value TextTrackMode A string which indicates the track&apos;s current mode. One of: Remarks Safari additionally requires the default boolean attribute to be set to true when implementing your own video player controls in order for the subtitles cues to be shown. -WebVTT -TextTrack -TextTrackList -TextTrackCueList -VTTCue -track -HTMLTrackElement See also on MDN Oncuechange [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Oncuechange { get; set; } Property Value EventHandlerNonNull Methods AddCue(TextTrackCue) The addCue() method of the TextTrack interface adds a new cue to the list of cues. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined AddCue(TextTrackCue cue) Parameters cue TextTrackCue Returns GlobalObject.Undefined Undefined. Remarks See also on MDN RemoveCue(TextTrackCue) The removeCue() method of the TextTrack interface removes a cue from the list of cues. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined RemoveCue(TextTrackCue cue) Parameters cue TextTrackCue Returns GlobalObject.Undefined Undefined. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextTrackCue.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextTrackCue.html",
    "title": "Class TextTrackCue | CSharpToJavaScript",
    "keywords": "Class TextTrackCue Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll TextTrackCue is an abstract class which is used as the basis for the various derived cue types, such as VTTCue; you will instead work with those derived types. These cues represent strings of text presented for some duration of time during the performance of a TextTrack. The cue includes the start time (the time at which the text will be displayed) and the end time (the time at which it will be removed from the display), as well as other information. [To(\"Default\")] public class TextTrackCue : EventTarget Inheritance object EventTarget TextTrackCue Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties EndTime The endTime property of the TextTrackCue interface returns and sets the end time of the cue. [To(\"FirstCharToLowerCase\")] public double EndTime { get; set; } Property Value double A number representing the end time, in seconds. Remarks See also on MDN Id The id property of the TextTrackCue interface returns and sets the identifier for this cue. [To(\"FirstCharToLowerCase\")] public string Id { get; set; } Property Value string A string containing the ID of this cue. Remarks See also on MDN Onenter [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onenter { get; set; } Property Value EventHandlerNonNull Onexit [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onexit { get; set; } Property Value EventHandlerNonNull PauseOnExit The pauseOnExit property of the TextTrackCue interface returns or sets the flag indicating whether playback of the media should pause when the end of the range to which this cue applies is reached. [To(\"FirstCharToLowerCase\")] public bool PauseOnExit { get; set; } Property Value bool A Boolean, true if the media will pause. Remarks See also on MDN StartTime The startTime property of the TextTrackCue interface returns and sets the start time of the cue. [To(\"FirstCharToLowerCase\")] public double StartTime { get; set; } Property Value double A number representing the start time, in seconds. Remarks See also on MDN Track The track read-only property of the TextTrackCue interface returns the TextTrack object that this cue belongs to. [To(\"FirstCharToLowerCase\")] public TextTrack? Track { get; } Property Value TextTrack A TextTrack object. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextTrackCueList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextTrackCueList.html",
    "title": "Class TextTrackCueList | CSharpToJavaScript",
    "keywords": "Class TextTrackCueList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextTrackCueList array-like object represents a dynamically updating list of TextTrackCue objects. [To(\"Default\")] public class TextTrackCueList Inheritance object TextTrackCueList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface has no constructor. Retrieve an instance of this object with 'TextTrack.Cues' which returns all of the cues in a TextTrack object. See also on MDN Properties Length The length read-only property of the TextTrackCueList interface returns the number of cues in the list. [To(\"FirstCharToLowerCase\")] public ulong Length { get; } Property Value ulong An unsigned long which is the number of cues in the list. Remarks See also on MDN Methods GetCueById(string) The getCueById() method of the TextTrackCueList interface returns the first VTTCue in the list represented by the TextTrackCueList object whose identifier matches the value of id. [To(\"FirstCharToLowerCase\")] public TextTrackCue? GetCueById(string id) Parameters id string Returns TextTrackCue A VTTCue object. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextTrackKind.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextTrackKind.html",
    "title": "Enum TextTrackKind | CSharpToJavaScript",
    "keywords": "Enum TextTrackKind Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The kind read-only property of the TextTrack interface returns the kind of text track this object represents. This decides how the track will be handled by a user agent. public enum TextTrackKind Fields Captions = 1 Chapters = 3 Descriptions = 2 Metadata = 4 Subtitles = 0 Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextTrackList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextTrackList.html",
    "title": "Class TextTrackList | CSharpToJavaScript",
    "keywords": "Class TextTrackList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextTrackList interface is used to represent a list of the text tracks defined by the {{HTMLElement(\"track\")}} element, with each track represented by a separate TextTrack object in the list. [To(\"Default\")] public class TextTrackList : EventTarget Inheritance object EventTarget TextTrackList Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Retrieve an instance of this object with the 'HTMLMediaElement.TextTracks' property of an 'HTMLMediaElement' object. For a given 'HTMLMediaElement' object media, the individual tracks can be accessed using: See also on MDN Properties Length The read-only TextTrackList property length returns the number of entries in the TextTrackList, each of which is a TextTrack representing one track in the media element. [To(\"FirstCharToLowerCase\")] public ulong Length { get; } Property Value ulong A number indicating how many text tracks are included in the TextTrackList. Each track can be accessed by treating the TextTrackList as an array of objects of type TextTrack. Remarks A value of 0 indicates that there are no text tracks in the media. See also on MDN Onaddtrack [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onaddtrack { get; set; } Property Value EventHandlerNonNull Onchange [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onchange { get; set; } Property Value EventHandlerNonNull Onremovetrack [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onremovetrack { get; set; } Property Value EventHandlerNonNull Methods GetTrackById(string) The TextTrackList method getTrackById() returns the first TextTrack object from the track list whose id matches the specified string. This lets you find a specified track if you know its ID string. [To(\"FirstCharToLowerCase\")] public TextTrack? GetTrackById(string id) Parameters id string Returns TextTrack A TextTrack object indicating the first track found within the TextTrackList whose id matches the specified string. If no match is found, this method returns null.The tracks are searched in their natural order; that is, in the order defined by the media resource itself, or, if the resource doesn&apos;t define an order, the relative order in which the tracks are declared by the media resource. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TextTrackMode.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TextTrackMode.html",
    "title": "Enum TextTrackMode | CSharpToJavaScript",
    "keywords": "Enum TextTrackMode Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TextTrack interface's mode property is a string specifying and controlling the text track&apos;s mode: disabled, hidden, or showing. You can read this value to determine the current mode, and you can change this value to switch modes. public enum TextTrackMode Fields Disabled = 0 Hidden = 1 Showing = 2 Remarks Safari additionally requires the default boolean attribute to be set to true when implementing your own video player controls in order for the subtitles cues to be shown. -WebVTT -TextTrack -TextTrackList -TextTrackCueList -VTTCue -track -HTMLTrackElement See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TimeRanges.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TimeRanges.html",
    "title": "Class TimeRanges | CSharpToJavaScript",
    "keywords": "Class TimeRanges Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll A TimeRanges object includes one or more ranges of time, each specified by a starting time offset and an ending time offset. You reference each time range by using the start() and end() methods, passing the index number of the time range you want to retrieve. [To(\"FirstCharToLowerCase\")] public class TimeRanges Inheritance object TimeRanges Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See also on MDN Properties Length The TimeRanges.length read-only property returns the number of ranges in the object. public ulong Length { get; } Property Value ulong A number. Remarks See also on MDN Methods End(ulong) The end() method of the TimeRanges interface returns the time offset at which a specified time range ends. public double End(ulong index) Parameters index ulong Returns double A number. Remarks See also on MDN Start(ulong) The start() method of the TimeRanges interface returns the time offset at which a specified time range begins. public double Start(ulong index) Parameters index ulong Returns double A number. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TrackEvent.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TrackEvent.html",
    "title": "Class TrackEvent | CSharpToJavaScript",
    "keywords": "Class TrackEvent Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TrackEvent interface, which is part of the HTML DOM specification, is used for events which represent changes to a set of available tracks on an HTML media element; these events are addtrack and removetrack. [To(\"FirstCharToLowerCase\")] public class TrackEvent : Event Inheritance object Event TrackEvent Inherited Members Event.Type Event.Target Event.SrcElement Event.CurrentTarget Event.ComposedPath() Event.NONE Event.CAPTURING_PHASE Event.AT_TARGET Event.BUBBLING_PHASE Event.EventPhase Event.StopPropagation() Event.CancelBubble Event.StopImmediatePropagation() Event.Bubbles Event.Cancelable Event.ReturnValue Event.PreventDefault() Event.DefaultPrevented Event.Composed Event.IsTrusted Event.TimeStamp Event.InitEvent(string, bool, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks It&apos;s important not to confuse TrackEvent with the RTCTrackEvent interface, which is used for tracks which are part of an RTCPeerConnection. Events based on TrackEvent are always sent to one of the media track list types: See also on MDN Constructors TrackEvent(string, TrackEventInit) The TrackEvent() constructor creates and returns a new TrackEvent object describing an event which occurred on a list of tracks (AudioTrackList, VideoTrackList, or TextTrackList). public TrackEvent(string type, TrackEventInit eventInitDict) Parameters type string eventInitDict TrackEventInit Remarks See also on MDN Properties Track The read-only track property of the TrackEvent interface specifies the media track object to which the event applies. public Union21? Track { get; } Property Value Union21? An object which is one of the types AudioTrack, VideoTrack, or TextTrack, depending on the type of media represented by the track. This identifies the track to which the event applies. Remarks The media track will be an AudioTrack, VideoTrack, or TextTrack object. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.TrackEventInit.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TrackEventInit.html",
    "title": "Class TrackEventInit | CSharpToJavaScript",
    "keywords": "Class TrackEventInit Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class TrackEventInit : EventInit Inheritance object EventInit TrackEventInit Inherited Members EventInit.Bubbles EventInit.Cancelable EventInit.Composed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Track public Union22? Track Field Value Union22?"
  },
  "api/CSharpToJavaScript.APIs.JS.TreeWalker.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.TreeWalker.html",
    "title": "Class TreeWalker | CSharpToJavaScript",
    "keywords": "Class TreeWalker Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The TreeWalker object represents the nodes of a document subtree and a position within them. [To(\"FirstCharToLowerCase\")] public class TreeWalker Inheritance object TreeWalker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A TreeWalker can be created using the Document.CreateTreeWalker method. -The creator method: Document.CreateTreeWalker. -Related interfaces: NodeFilter, NodeIterator. See also on MDN Properties CurrentNode The TreeWalker.currentNode property represents the Node which the TreeWalker is currently pointing at. public Node CurrentNode { get; set; } Property Value Node A Node. Remarks -The TreeWalker interface. See also on MDN Filter The TreeWalker.filter read-only property returns a NodeFilter that is the filtering object associated with the TreeWalker. public NodeFilter? Filter { get; } Property Value NodeFilter A NodeFilter object. Remarks When creating the TreeWalker, the filter object is passed in as the third parameter, and its method AcceptNode(Node) is called on every single node to determine whether or not to accept it. -The TreeWalker interface it belongs to. See also on MDN Root The TreeWalker.root read-only property returns the node that is the root of what the TreeWalker traverses. public Node Root { get; } Property Value Node A Node object. Remarks -The TreeWalker interface. See also on MDN WhatToShow The TreeWalker.whatToShow read-only property returns a bitmask that indicates the types of nodes to show. Non-matching nodes are skipped, but their children may be included, if relevant. The possible values are: public ulong WhatToShow { get; } Property Value ulong A bitmask. Remarks -The TreeWalker interface. See also on MDN Methods FirstChild() The TreeWalker.firstChild() method moves the current Node to the first visible child of the current node, and returns the found child. If no such child exists, it returns null and the current node is not changed. public Node? FirstChild() Returns Node A Node object or null. Remarks -The TreeWalker interface it belongs to. See also on MDN LastChild() The TreeWalker.lastChild() method moves the current Node to the last visible child of the current node, and returns the found child. If no such child exists, it returns null and the current node is not changed. public Node? LastChild() Returns Node A Node object or null. Remarks -The TreeWalker interface it belongs to. See also on MDN NextNode() The TreeWalker.nextNode() method moves the current Node to the next visible node in the document order, and returns the found node. If no such node exists, it returns null and the current node is not changed. public Node? NextNode() Returns Node A Node object or null. Remarks -The TreeWalker interface it belongs to. See also on MDN NextSibling() The TreeWalker.nextSibling() method moves the current Node to its next sibling, if any, and returns the found sibling. If there is no such node, it returns null and the current node is not changed. public Node? NextSibling() Returns Node A Node object or null. Remarks -The TreeWalker interface it belongs to. See also on MDN ParentNode() The TreeWalker.parentNode() method moves the current Node to the first visible ancestor node in the document order, and returns the found node. If no such node exists, or if it is above the TreeWalker&apos;s root node, it returns null and the current node is not changed. public Node? ParentNode() Returns Node A Node object or null. Remarks -The TreeWalker interface it belongs to. See also on MDN PreviousNode() The TreeWalker.previousNode() method moves the current Node to the previous visible node in the document order, and returns the found node. If no such node exists, or if it is before that the root node defined at the object construction, it returns null and the current node is not changed. public Node? PreviousNode() Returns Node A Node object or null. Remarks -The TreeWalker interface it belongs to. See also on MDN PreviousSibling() The TreeWalker.previousSibling() method moves the current Node to its previous sibling, if any, and returns the found sibling. If there is no such node, it returns null and the current node is not changed. public Node? PreviousSibling() Returns Node A Node object or null. Remarks -The TreeWalker interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.URL.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.URL.html",
    "title": "Class URL | CSharpToJavaScript",
    "keywords": "Class URL Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The URL interface is used to parse, construct, normalize, and encode URL. It works by providing properties which allow you to easily read and modify the components of a URL. [To(\"FirstCharToLowerCase\")] public class URL Inheritance object URL Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You normally create a new URL object by specifying the URL as a string when calling its constructor, or by providing a relative URL and a base URL. You can then easily read the parsed components of the URL or make changes to the URL. If a browser doesn't yet support the URL(string, string) constructor, you can access a URL object using the Window interface's URL property. Be sure to check to see if any of your target browsers require this to be prefixed. AvailableInWorkers -Polyfill of URL in core-js -URL API -What is a URL? -Property to obtain a URL object: URL. -URLSearchParams. See also on MDN Constructors URL(string, string) The URL() constructor returns a newly created URL object representing the URL defined by the parameters. public URL(string url, string base_) Parameters url string base_ string Remarks If the given base URL or the resulting URL are not valid URLs, the JavaScript TypeError exception is thrown. AvailableInWorkers -Polyfill of URL in core-js -The interface it belongs to: URL. See also on MDN Properties Hash The hash property of the URL interface is a string containing a &apos;#&apos; followed by the fragment identifier of the URL. public string Hash { get; set; } Property Value string A string. Remarks The fragment is not URL decoded. If the URL does not have a fragment identifier, this property contains an empty string — &quot;&quot;. AvailableInWorkers -The URL interface it belongs to. See also on MDN Host The host property of the URL interface is a string containing the host, that is the {{domxref(&quot;URL.hostname&quot;, \"hostname\")}}, and then, if the port of the URL is nonempty, a &apos;:&apos;, followed by the Port of the URL. public string Host { get; set; } Property Value string A string. Remarks AvailableInWorkers -The URL interface it belongs to. See also on MDN Hostname The hostname property of the URL interface is a string containing the domain name of the URL. public string Hostname { get; set; } Property Value string A string. Remarks AvailableInWorkers -The URL interface it belongs to. See also on MDN Href The href property of the URL interface is a string containing the whole URL. public string Href { get; set; } Property Value string A string. Remarks AvailableInWorkers -The URL interface it belongs to. See also on MDN Origin The origin read-only property of the URL interface returns a string containing the Unicode serialization of the origin of the represented URL. public string Origin { get; } Property Value string A string. Remarks The exact structure varies depending on the type of URL: AvailableInWorkers -The URL interface See also on MDN Password The password property of the URL interface is a string containing the password specified before the domain name. public string Password { get; set; } Property Value string A string. Remarks If it is set without first setting the Username property, it silently fails. AvailableInWorkers -The URL interface it belongs to. See also on MDN Pathname The pathname property of the URL interface represents a location in a hierarchical structure. It is a string constructed from a list of path segments, each of which is prefixed by a / character. If the URL has no path segments, the value of its pathname property will be the empty string. public string Pathname { get; set; } Property Value string A string. Remarks URLs such as https and http URLs that have hierarchical schemes (which the URL standard calls &quot;special schemes&quot;) always have at least one (invisible) path segment: the empty string. Thus the pathname value for such &quot;special scheme&quot; URLs can never be the empty string, but will instead always have a least one / character. For example, the URL https://developer.mozilla.org has just one path segment: the empty string, so its pathname value is constructed by prefixing a / character to the empty string. Some systems define the term slug to mean the final segment of a non-empty path if it identifies a page in human-readable keywords. For example, the URL https://example.org/articles/this-that-other-outre-collection has this-that-other-outre-collection as its slug. Some systems use the ; and = characters to delimit parameters and parameter values applicable to a path segment. For example, with the URL https://example.org/users;id=42/tasks;state=open?sort=modified, a system might extract and use the path segment parameters id=42 and state=open from the path segments users;id=42 and tasks;state=open. AvailableInWorkers -The URL interface it belongs to. See also on MDN Port The port property of the URL interface is a string containing the port number of the URL. public string Port { get; set; } Property Value string A string. Remarks NOTE Note: If an input string passed to the URL() constructor doesn&apos;t contain an explicit port number (e.g., https://localhost) or contains a port number that&apos;s the default port number corresponding to the protocol part of the input string (e.g., https://localhost:443), then in the URL object the constructor returns, the value of the port property will be the empty string: &apos;&apos;. AvailableInWorkers -The URL interface it belongs to. See also on MDN Protocol The protocol property of the URL interface is a string representing the protocol scheme of the URL, including the final &apos;:&apos;. public string Protocol { get; set; } Property Value string A string. Remarks AvailableInWorkers -The URL interface it belongs to. See also on MDN Search The search property of the URL interface is a search string, also called a query string, that is a string containing a &apos;?&apos; followed by the parameters of the URL. public string Search { get; set; } Property Value string A string. Remarks Modern browsers provide the SearchParams property to make it easy to parse out the parameters from the query string. AvailableInWorkers -The URL interface it belongs to. See also on MDN SearchParams The URLSearchParams interface defines utility methods to work with the query string of a URL. public URLSearchParams SearchParams { get; } Property Value URLSearchParams Remarks An object implementing URLSearchParams can directly be used in a Statements/forOf structure to iterate over key/value pairs in the same order as they appear in the query string, for example the following two lines are equivalent: availableinworkers -Polyfill of URLSearchParams in core-js -The URL interface. -Google Developers: Easy URL manipulation with URLSearchParams See also on MDN Username The username property of the URL interface is a string containing the username specified before the domain name. public string Username { get; set; } Property Value string A string. Remarks AvailableInWorkers -The URL interface it belongs to. See also on MDN Methods ToJSON() The toJSON() method of the URL interface returns a string containing a serialized version of the URL, although in practice it seems to have the same effect as URL.ToString. public string ToJSON() Returns string A string. Remarks AvailableInWorkers -Polyfill of URL.prototype.toJSON in core-js See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.URLSearchParams.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.URLSearchParams.html",
    "title": "Class URLSearchParams | CSharpToJavaScript",
    "keywords": "Class URLSearchParams Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The URLSearchParams interface defines utility methods to work with the query string of a URL. [To(\"FirstCharToLowerCase\")] public class URLSearchParams Inheritance object URLSearchParams Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks An object implementing URLSearchParams can directly be used in a Statements/forOf structure to iterate over key/value pairs in the same order as they appear in the query string, for example the following two lines are equivalent: availableinworkers -Polyfill of URLSearchParams in core-js -The URL interface. -Google Developers: Easy URL manipulation with URLSearchParams See also on MDN Constructors URLSearchParams(Union47) The URLSearchParams() constructor creates and returns a new URLSearchParams object. public URLSearchParams(Union47 init) Parameters init Union47 Remarks availableinworkers See also on MDN Properties this[int] public string this[int i] { get; set; } Parameters i int Property Value string Methods Append(string, string) The append() method of the URLSearchParams interface appends a specified key/value pair as a new search parameter. public GlobalObject.Undefined Append(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks As shown in the example below, if the same key is appended multiple times it will appear in the parameter string multiple times for each value. availableinworkers -URL -Google Developers: Easy URL manipulation with URLSearchParams See also on MDN Delete(string) The delete() method of the URLSearchParams interface deletes specified parameters and their associated value(s) from the list of all search parameters. public GlobalObject.Undefined Delete(string name) Parameters name string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks A parameter name and optional value are used to match parameters. If only a parameter name is specified, then all search parameters that match the name are deleted, along with their associated values. If both a parameter name and value are specified, then all search parameters that match both the parameter name and value are deleted. AvailableInWorkers -Polyfill of URLSearchParams in core-js See also on MDN Get(string) The get() method of the URLSearchParams interface returns the first value associated to the given search parameter. public string? Get(string name) Parameters name string Returns string A string if the given search parameter is found; otherwise, null. Remarks availableinworkers See also on MDN GetAll(string) The getAll() method of the URLSearchParams interface returns all the values associated with a given search parameter as an array. public List<string> GetAll(string name) Parameters name string Returns List<string> An array of strings. Remarks availableinworkers See also on MDN Has(string) The has() method of the URLSearchParams interface returns a boolean value that indicates whether the specified parameter is in the search parameters. public bool Has(string name) Parameters name string Returns bool A boolean value. Remarks A parameter name and optional value are used to match parameters. If only a parameter name is specified, then the method will return true if any parameters in the query string match the name, and false otherwise. If both a parameter name and value are specified, then the method will return true if a parameter matches both the name and value. AvailableInWorkers -Polyfill of URLSearchParams in core-js See also on MDN Set(string, string) The set() method of the URLSearchParams interface sets the value associated with a given search parameter to the given value. If there were several matching values, this method deletes the others. If the search parameter doesn&apos;t exist, this method creates it. public GlobalObject.Undefined Set(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks availableinworkers See also on MDN Sort() The URLSearchParams.sort() method sorts all key/value pairs contained in this object in place and returns undefined. The sort order is according to unicode code points of the keys. This method uses a stable sorting algorithm (i.e. the relative order between key/value pairs with equal keys will be preserved). public GlobalObject.Undefined Sort() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks availableinworkers See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.Union0.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union0.html",
    "title": "Struct Union0 | CSharpToJavaScript",
    "keywords": "Struct Union0 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Event or GlobalObject.Undefined public struct Union0 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union0(Event) public static implicit operator Union0(Event value) Parameters value Event Returns Union0 implicit operator Union0(Undefined) public static implicit operator Union0(GlobalObject.Undefined value) Parameters value GlobalObject.Undefined Returns Union0"
  },
  "api/CSharpToJavaScript.APIs.JS.Union1.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union1.html",
    "title": "Struct Union1 | CSharpToJavaScript",
    "keywords": "Struct Union1 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll AddEventListenerOptions or bool public struct Union1 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union1(AddEventListenerOptions) public static implicit operator Union1(AddEventListenerOptions value) Parameters value AddEventListenerOptions Returns Union1 implicit operator Union1(bool) public static implicit operator Union1(bool value) Parameters value bool Returns Union1"
  },
  "api/CSharpToJavaScript.APIs.JS.Union10.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union10.html",
    "title": "Struct Union10 | CSharpToJavaScript",
    "keywords": "Struct Union10 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Unsupported /Blob/ or Union49 or FormData or URLSearchParams or string public struct Union10 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union10(FormData) public static implicit operator Union10(FormData value) Parameters value FormData Returns Union10 implicit operator Union10(URLSearchParams) public static implicit operator Union10(URLSearchParams value) Parameters value URLSearchParams Returns Union10 implicit operator Union10(Union49) public static implicit operator Union10(Union49 value) Parameters value Union49 Returns Union10 implicit operator Union10(Unsupported) public static implicit operator Union10(Unsupported value) Parameters value Unsupported Returns Union10 implicit operator Union10(string) public static implicit operator Union10(string value) Parameters value string Returns Union10"
  },
  "api/CSharpToJavaScript.APIs.JS.Union11.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union11.html",
    "title": "Struct Union11 | CSharpToJavaScript",
    "keywords": "Struct Union11 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Unsupported /ReadableStream/ or Union10 public struct Union11 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union11(Union10) public static implicit operator Union11(Union10 value) Parameters value Union10 Returns Union11 implicit operator Union11(Unsupported) public static implicit operator Union11(Unsupported value) Parameters value Unsupported Returns Union11"
  },
  "api/CSharpToJavaScript.APIs.JS.Union12.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union12.html",
    "title": "Struct Union12 | CSharpToJavaScript",
    "keywords": "Struct Union12 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Request or string public struct Union12 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union12(Request) public static implicit operator Union12(Request value) Parameters value Request Returns Union12 implicit operator Union12(string) public static implicit operator Union12(string value) Parameters value string Returns Union12"
  },
  "api/CSharpToJavaScript.APIs.JS.Union13.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union13.html",
    "title": "Struct Union13 | CSharpToJavaScript",
    "keywords": "Struct Union13 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLCollection or Element public struct Union13 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union13(Element) public static implicit operator Union13(Element value) Parameters value Element Returns Union13 implicit operator Union13(HTMLCollection) public static implicit operator Union13(HTMLCollection value) Parameters value HTMLCollection Returns Union13"
  },
  "api/CSharpToJavaScript.APIs.JS.Union14.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union14.html",
    "title": "Struct Union14 | CSharpToJavaScript",
    "keywords": "Struct Union14 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLCollection or Element public struct Union14 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union14(Element) public static implicit operator Union14(Element value) Parameters value Element Returns Union14 implicit operator Union14(HTMLCollection) public static implicit operator Union14(HTMLCollection value) Parameters value HTMLCollection Returns Union14"
  },
  "api/CSharpToJavaScript.APIs.JS.Union15.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union15.html",
    "title": "Struct Union15 | CSharpToJavaScript",
    "keywords": "Struct Union15 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll RadioNodeList or Element public struct Union15 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union15(Element) public static implicit operator Union15(Element value) Parameters value Element Returns Union15 implicit operator Union15(RadioNodeList) public static implicit operator Union15(RadioNodeList value) Parameters value RadioNodeList Returns Union15"
  },
  "api/CSharpToJavaScript.APIs.JS.Union16.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union16.html",
    "title": "Struct Union16 | CSharpToJavaScript",
    "keywords": "Struct Union16 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLOptionElement or HTMLOptGroupElement public struct Union16 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union16(HTMLOptGroupElement) public static implicit operator Union16(HTMLOptGroupElement value) Parameters value HTMLOptGroupElement Returns Union16 implicit operator Union16(HTMLOptionElement) public static implicit operator Union16(HTMLOptionElement value) Parameters value HTMLOptionElement Returns Union16"
  },
  "api/CSharpToJavaScript.APIs.JS.Union17.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union17.html",
    "title": "Struct Union17 | CSharpToJavaScript",
    "keywords": "Struct Union17 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLElement or long public struct Union17 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union17(HTMLElement) public static implicit operator Union17(HTMLElement value) Parameters value HTMLElement Returns Union17 implicit operator Union17(long) public static implicit operator Union17(long value) Parameters value long Returns Union17"
  },
  "api/CSharpToJavaScript.APIs.JS.Union18.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union18.html",
    "title": "Struct Union18 | CSharpToJavaScript",
    "keywords": "Struct Union18 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLScriptElement or Unsupported /SVGScriptElement/ public struct Union18 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union18(HTMLScriptElement) public static implicit operator Union18(HTMLScriptElement value) Parameters value HTMLScriptElement Returns Union18 implicit operator Union18(Unsupported) public static implicit operator Union18(Unsupported value) Parameters value Unsupported Returns Union18"
  },
  "api/CSharpToJavaScript.APIs.JS.Union19.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union19.html",
    "title": "Struct Union19 | CSharpToJavaScript",
    "keywords": "Struct Union19 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll bool or double or string public struct Union19 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union19(bool) public static implicit operator Union19(bool value) Parameters value bool Returns Union19 implicit operator Union19(double) public static implicit operator Union19(double value) Parameters value double Returns Union19 implicit operator Union19(string) public static implicit operator Union19(string value) Parameters value string Returns Union19"
  },
  "api/CSharpToJavaScript.APIs.JS.Union2.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union2.html",
    "title": "Struct Union2 | CSharpToJavaScript",
    "keywords": "Struct Union2 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll EventListenerOptions or bool public struct Union2 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union2(EventListenerOptions) public static implicit operator Union2(EventListenerOptions value) Parameters value EventListenerOptions Returns Union2 implicit operator Union2(bool) public static implicit operator Union2(bool value) Parameters value bool Returns Union2"
  },
  "api/CSharpToJavaScript.APIs.JS.Union20.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union20.html",
    "title": "Struct Union20 | CSharpToJavaScript",
    "keywords": "Struct Union20 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Unsupported /MediaStream/ or Unsupported /MediaSource/ or Unsupported /Blob/ public struct Union20 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union20(Unsupported) public static implicit operator Union20(Unsupported value) Parameters value Unsupported Returns Union20"
  },
  "api/CSharpToJavaScript.APIs.JS.Union21.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union21.html",
    "title": "Struct Union21 | CSharpToJavaScript",
    "keywords": "Struct Union21 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll VideoTrack or AudioTrack or TextTrack public struct Union21 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union21(AudioTrack) public static implicit operator Union21(AudioTrack value) Parameters value AudioTrack Returns Union21 implicit operator Union21(TextTrack) public static implicit operator Union21(TextTrack value) Parameters value TextTrack Returns Union21 implicit operator Union21(VideoTrack) public static implicit operator Union21(VideoTrack value) Parameters value VideoTrack Returns Union21"
  },
  "api/CSharpToJavaScript.APIs.JS.Union22.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union22.html",
    "title": "Struct Union22 | CSharpToJavaScript",
    "keywords": "Struct Union22 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll VideoTrack or AudioTrack or TextTrack public struct Union22 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union22(AudioTrack) public static implicit operator Union22(AudioTrack value) Parameters value AudioTrack Returns Union22 implicit operator Union22(TextTrack) public static implicit operator Union22(TextTrack value) Parameters value TextTrack Returns Union22 implicit operator Union22(VideoTrack) public static implicit operator Union22(VideoTrack value) Parameters value VideoTrack Returns Union22"
  },
  "api/CSharpToJavaScript.APIs.JS.Union23.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union23.html",
    "title": "Struct Union23 | CSharpToJavaScript",
    "keywords": "Struct Union23 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll RadioNodeList or Element public struct Union23 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union23(Element) public static implicit operator Union23(Element value) Parameters value Element Returns Union23 implicit operator Union23(RadioNodeList) public static implicit operator Union23(RadioNodeList value) Parameters value RadioNodeList Returns Union23"
  },
  "api/CSharpToJavaScript.APIs.JS.Union24.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union24.html",
    "title": "Struct Union24 | CSharpToJavaScript",
    "keywords": "Struct Union24 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLOptionElement or HTMLOptGroupElement public struct Union24 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union24(HTMLOptGroupElement) public static implicit operator Union24(HTMLOptGroupElement value) Parameters value HTMLOptGroupElement Returns Union24 implicit operator Union24(HTMLOptionElement) public static implicit operator Union24(HTMLOptionElement value) Parameters value HTMLOptionElement Returns Union24"
  },
  "api/CSharpToJavaScript.APIs.JS.Union25.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union25.html",
    "title": "Struct Union25 | CSharpToJavaScript",
    "keywords": "Struct Union25 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLElement or long public struct Union25 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union25(HTMLElement) public static implicit operator Union25(HTMLElement value) Parameters value HTMLElement Returns Union25 implicit operator Union25(long) public static implicit operator Union25(long value) Parameters value long Returns Union25"
  },
  "api/CSharpToJavaScript.APIs.JS.Union26.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union26.html",
    "title": "Struct Union26 | CSharpToJavaScript",
    "keywords": "Struct Union26 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Element or Text public struct Union26 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union26(Element) public static implicit operator Union26(Element value) Parameters value Element Returns Union26 implicit operator Union26(Text) public static implicit operator Union26(Text value) Parameters value Text Returns Union26"
  },
  "api/CSharpToJavaScript.APIs.JS.Union27.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union27.html",
    "title": "Struct Union27 | CSharpToJavaScript",
    "keywords": "Struct Union27 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll CanvasRenderingContext2D or ImageBitmapRenderingContext or Unsupported /WebGLRenderingContext/ or Unsupported /WebGL2RenderingContext/ or Unsupported /GPUCanvasContext/ public struct Union27 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union27(CanvasRenderingContext2D) public static implicit operator Union27(CanvasRenderingContext2D value) Parameters value CanvasRenderingContext2D Returns Union27 implicit operator Union27(ImageBitmapRenderingContext) public static implicit operator Union27(ImageBitmapRenderingContext value) Parameters value ImageBitmapRenderingContext Returns Union27 implicit operator Union27(Unsupported) public static implicit operator Union27(Unsupported value) Parameters value Unsupported Returns Union27"
  },
  "api/CSharpToJavaScript.APIs.JS.Union28.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union28.html",
    "title": "Struct Union28 | CSharpToJavaScript",
    "keywords": "Struct Union28 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLImageElement or Unsupported /SVGImageElement/ public struct Union28 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union28(HTMLImageElement) public static implicit operator Union28(HTMLImageElement value) Parameters value HTMLImageElement Returns Union28 implicit operator Union28(Unsupported) public static implicit operator Union28(Unsupported value) Parameters value Unsupported Returns Union28"
  },
  "api/CSharpToJavaScript.APIs.JS.Union29.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union29.html",
    "title": "Struct Union29 | CSharpToJavaScript",
    "keywords": "Struct Union29 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Union28 or HTMLVideoElement or HTMLCanvasElement or ImageBitmap or OffscreenCanvas or Unsupported /VideoFrame/ public struct Union29 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union29(HTMLCanvasElement) public static implicit operator Union29(HTMLCanvasElement value) Parameters value HTMLCanvasElement Returns Union29 implicit operator Union29(HTMLVideoElement) public static implicit operator Union29(HTMLVideoElement value) Parameters value HTMLVideoElement Returns Union29 implicit operator Union29(ImageBitmap) public static implicit operator Union29(ImageBitmap value) Parameters value ImageBitmap Returns Union29 implicit operator Union29(OffscreenCanvas) public static implicit operator Union29(OffscreenCanvas value) Parameters value OffscreenCanvas Returns Union29 implicit operator Union29(Union28) public static implicit operator Union29(Union28 value) Parameters value Union28 Returns Union29 implicit operator Union29(Unsupported) public static implicit operator Union29(Unsupported value) Parameters value Unsupported Returns Union29"
  },
  "api/CSharpToJavaScript.APIs.JS.Union3.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union3.html",
    "title": "Struct Union3 | CSharpToJavaScript",
    "keywords": "Struct Union3 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Node or string public struct Union3 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union3(Node) public static implicit operator Union3(Node value) Parameters value Node Returns Union3 implicit operator Union3(string) public static implicit operator Union3(string value) Parameters value string Returns Union3"
  },
  "api/CSharpToJavaScript.APIs.JS.Union30.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union30.html",
    "title": "Struct Union30 | CSharpToJavaScript",
    "keywords": "Struct Union30 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or CanvasGradient or CanvasPattern public struct Union30 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union30(CanvasGradient) public static implicit operator Union30(CanvasGradient value) Parameters value CanvasGradient Returns Union30 implicit operator Union30(CanvasPattern) public static implicit operator Union30(CanvasPattern value) Parameters value CanvasPattern Returns Union30 implicit operator Union30(string) public static implicit operator Union30(string value) Parameters value string Returns Union30"
  },
  "api/CSharpToJavaScript.APIs.JS.Union31.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union31.html",
    "title": "Struct Union31 | CSharpToJavaScript",
    "keywords": "Struct Union31 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or CanvasGradient or CanvasPattern public struct Union31 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union31(CanvasGradient) public static implicit operator Union31(CanvasGradient value) Parameters value CanvasGradient Returns Union31 implicit operator Union31(CanvasPattern) public static implicit operator Union31(CanvasPattern value) Parameters value CanvasPattern Returns Union31 implicit operator Union31(string) public static implicit operator Union31(string value) Parameters value string Returns Union31"
  },
  "api/CSharpToJavaScript.APIs.JS.Union32.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union32.html",
    "title": "Struct Union32 | CSharpToJavaScript",
    "keywords": "Struct Union32 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or CanvasFilter public struct Union32 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union32(CanvasFilter) public static implicit operator Union32(CanvasFilter value) Parameters value CanvasFilter Returns Union32 implicit operator Union32(string) public static implicit operator Union32(string value) Parameters value string Returns Union32"
  },
  "api/CSharpToJavaScript.APIs.JS.Union33.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union33.html",
    "title": "Struct Union33 | CSharpToJavaScript",
    "keywords": "Struct Union33 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Dictionary<TKey, TValue> or List{CanvasFilterInput} public struct Union33 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union33(Dictionary<string, dynamic>) public static implicit operator Union33(Dictionary<string, dynamic> value) Parameters value Dictionary<string, dynamic> Returns Union33 implicit operator Union33(List<Dictionary<string, dynamic>>) public static implicit operator Union33(List<Dictionary<string, dynamic>> value) Parameters value List<Dictionary<string, dynamic>> Returns Union33"
  },
  "api/CSharpToJavaScript.APIs.JS.Union34.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union34.html",
    "title": "Struct Union34 | CSharpToJavaScript",
    "keywords": "Struct Union34 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll double or Unsupported /DOMPointInit/ or List{Union35} public struct Union34 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union34(Unsupported) public static implicit operator Union34(Unsupported value) Parameters value Unsupported Returns Union34 implicit operator Union34(List<Union35>) public static implicit operator Union34(List<Union35> value) Parameters value List<Union35> Returns Union34 implicit operator Union34(double) public static implicit operator Union34(double value) Parameters value double Returns Union34"
  },
  "api/CSharpToJavaScript.APIs.JS.Union35.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union35.html",
    "title": "Struct Union35 | CSharpToJavaScript",
    "keywords": "Struct Union35 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll double or Unsupported /DOMPointInit/ public struct Union35 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union35(Unsupported) public static implicit operator Union35(Unsupported value) Parameters value Unsupported Returns Union35 implicit operator Union35(double) public static implicit operator Union35(double value) Parameters value double Returns Union35"
  },
  "api/CSharpToJavaScript.APIs.JS.Union36.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union36.html",
    "title": "Struct Union36 | CSharpToJavaScript",
    "keywords": "Struct Union36 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Path2D or string public struct Union36 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union36(Path2D) public static implicit operator Union36(Path2D value) Parameters value Path2D Returns Union36 implicit operator Union36(string) public static implicit operator Union36(string value) Parameters value string Returns Union36"
  },
  "api/CSharpToJavaScript.APIs.JS.Union37.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union37.html",
    "title": "Struct Union37 | CSharpToJavaScript",
    "keywords": "Struct Union37 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll HTMLCanvasElement or OffscreenCanvas public struct Union37 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union37(HTMLCanvasElement) public static implicit operator Union37(HTMLCanvasElement value) Parameters value HTMLCanvasElement Returns Union37 implicit operator Union37(OffscreenCanvas) public static implicit operator Union37(OffscreenCanvas value) Parameters value OffscreenCanvas Returns Union37"
  },
  "api/CSharpToJavaScript.APIs.JS.Union38.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union38.html",
    "title": "Struct Union38 | CSharpToJavaScript",
    "keywords": "Struct Union38 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll OffscreenCanvasRenderingContext2D or ImageBitmapRenderingContext or Unsupported /WebGLRenderingContext/ or Unsupported /WebGL2RenderingContext/ or Unsupported /GPUCanvasContext/ public struct Union38 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union38(ImageBitmapRenderingContext) public static implicit operator Union38(ImageBitmapRenderingContext value) Parameters value ImageBitmapRenderingContext Returns Union38 implicit operator Union38(OffscreenCanvasRenderingContext2D) public static implicit operator Union38(OffscreenCanvasRenderingContext2D value) Parameters value OffscreenCanvasRenderingContext2D Returns Union38 implicit operator Union38(Unsupported) public static implicit operator Union38(Unsupported value) Parameters value Unsupported Returns Union38"
  },
  "api/CSharpToJavaScript.APIs.JS.Union39.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union39.html",
    "title": "Struct Union39 | CSharpToJavaScript",
    "keywords": "Struct Union39 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll CustomElementConstructor or GlobalObject.Undefined public struct Union39 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union39(CustomElementConstructor) public static implicit operator Union39(CustomElementConstructor value) Parameters value CustomElementConstructor Returns Union39 implicit operator Union39(Undefined) public static implicit operator Union39(GlobalObject.Undefined value) Parameters value GlobalObject.Undefined Returns Union39"
  },
  "api/CSharpToJavaScript.APIs.JS.Union4.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union4.html",
    "title": "Struct Union4 | CSharpToJavaScript",
    "keywords": "Struct Union4 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Node or string public struct Union4 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union4(Node) public static implicit operator Union4(Node value) Parameters value Node Returns Union4 implicit operator Union4(string) public static implicit operator Union4(string value) Parameters value string Returns Union4"
  },
  "api/CSharpToJavaScript.APIs.JS.Union40.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union40.html",
    "title": "Struct Union40 | CSharpToJavaScript",
    "keywords": "Struct Union40 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Unsupported /File/ or string or FormData public struct Union40 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union40(FormData) public static implicit operator Union40(FormData value) Parameters value FormData Returns Union40 implicit operator Union40(Unsupported) public static implicit operator Union40(Unsupported value) Parameters value Unsupported Returns Union40 implicit operator Union40(string) public static implicit operator Union40(string value) Parameters value string Returns Union40"
  },
  "api/CSharpToJavaScript.APIs.JS.Union41.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union41.html",
    "title": "Struct Union41 | CSharpToJavaScript",
    "keywords": "Struct Union41 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Unsupported /File/ or string or FormData public struct Union41 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union41(FormData) public static implicit operator Union41(FormData value) Parameters value FormData Returns Union41 implicit operator Union41(Unsupported) public static implicit operator Union41(Unsupported value) Parameters value Unsupported Returns Union41 implicit operator Union41(string) public static implicit operator Union41(string value) Parameters value string Returns Union41"
  },
  "api/CSharpToJavaScript.APIs.JS.Union42.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union42.html",
    "title": "Struct Union42 | CSharpToJavaScript",
    "keywords": "Struct Union42 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Event or string public struct Union42 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union42(Event) public static implicit operator Union42(Event value) Parameters value Event Returns Union42 implicit operator Union42(string) public static implicit operator Union42(string value) Parameters value string Returns Union42"
  },
  "api/CSharpToJavaScript.APIs.JS.Union43.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union43.html",
    "title": "Struct Union43 | CSharpToJavaScript",
    "keywords": "Struct Union43 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or Function public struct Union43 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union43(Function) public static implicit operator Union43(Function value) Parameters value Function Returns Union43 implicit operator Union43(string) public static implicit operator Union43(string value) Parameters value string Returns Union43"
  },
  "api/CSharpToJavaScript.APIs.JS.Union44.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union44.html",
    "title": "Struct Union44 | CSharpToJavaScript",
    "keywords": "Struct Union44 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Union29 or Unsupported /Blob/ or ImageData public struct Union44 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union44(ImageData) public static implicit operator Union44(ImageData value) Parameters value ImageData Returns Union44 implicit operator Union44(Union29) public static implicit operator Union44(Union29 value) Parameters value Union29 Returns Union44 implicit operator Union44(Unsupported) public static implicit operator Union44(Unsupported value) Parameters value Unsupported Returns Union44"
  },
  "api/CSharpToJavaScript.APIs.JS.Union45.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union45.html",
    "title": "Struct Union45 | CSharpToJavaScript",
    "keywords": "Struct Union45 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Window or MessagePort or Unsupported /ServiceWorker/ public struct Union45 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union45(MessagePort) public static implicit operator Union45(MessagePort value) Parameters value MessagePort Returns Union45 implicit operator Union45(Window) public static implicit operator Union45(Window value) Parameters value Window Returns Union45 implicit operator Union45(Unsupported) public static implicit operator Union45(Unsupported value) Parameters value Unsupported Returns Union45"
  },
  "api/CSharpToJavaScript.APIs.JS.Union46.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union46.html",
    "title": "Struct Union46 | CSharpToJavaScript",
    "keywords": "Struct Union46 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll string or WorkerOptions public struct Union46 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union46(WorkerOptions) public static implicit operator Union46(WorkerOptions value) Parameters value WorkerOptions Returns Union46 implicit operator Union46(string) public static implicit operator Union46(string value) Parameters value string Returns Union46"
  },
  "api/CSharpToJavaScript.APIs.JS.Union47.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union47.html",
    "title": "Struct Union47 | CSharpToJavaScript",
    "keywords": "Struct Union47 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll List{List{string}} or Dictionary{string, string} or string public struct Union47 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union47(Dictionary<string, string>) public static implicit operator Union47(Dictionary<string, string> value) Parameters value Dictionary<string, string> Returns Union47 implicit operator Union47(List<List<string>>) public static implicit operator Union47(List<List<string>> value) Parameters value List<List<string>> Returns Union47 implicit operator Union47(string) public static implicit operator Union47(string value) Parameters value string Returns Union47"
  },
  "api/CSharpToJavaScript.APIs.JS.Union48.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union48.html",
    "title": "Struct Union48 | CSharpToJavaScript",
    "keywords": "Struct Union48 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll sbyte or short or int or byte or ushort or uint or Unsupported /Uint8ClampedArray/ or long or ulong or float or double or Unsupported /DataView/ public struct Union48 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union48(Unsupported) public static implicit operator Union48(Unsupported value) Parameters value Unsupported Returns Union48 implicit operator Union48(byte) public static implicit operator Union48(byte value) Parameters value byte Returns Union48 implicit operator Union48(double) public static implicit operator Union48(double value) Parameters value double Returns Union48 implicit operator Union48(short) public static implicit operator Union48(short value) Parameters value short Returns Union48 implicit operator Union48(int) public static implicit operator Union48(int value) Parameters value int Returns Union48 implicit operator Union48(long) public static implicit operator Union48(long value) Parameters value long Returns Union48 implicit operator Union48(sbyte) public static implicit operator Union48(sbyte value) Parameters value sbyte Returns Union48 implicit operator Union48(float) public static implicit operator Union48(float value) Parameters value float Returns Union48 implicit operator Union48(ushort) public static implicit operator Union48(ushort value) Parameters value ushort Returns Union48 implicit operator Union48(uint) public static implicit operator Union48(uint value) Parameters value uint Returns Union48 implicit operator Union48(ulong) public static implicit operator Union48(ulong value) Parameters value ulong Returns Union48"
  },
  "api/CSharpToJavaScript.APIs.JS.Union49.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union49.html",
    "title": "Struct Union49 | CSharpToJavaScript",
    "keywords": "Struct Union49 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Union48 or byte[] public struct Union49 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union49(Union48) public static implicit operator Union49(Union48 value) Parameters value Union48 Returns Union49 implicit operator Union49(byte[]) public static implicit operator Union49(byte[] value) Parameters value byte[] Returns Union49"
  },
  "api/CSharpToJavaScript.APIs.JS.Union5.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union5.html",
    "title": "Struct Union5 | CSharpToJavaScript",
    "keywords": "Struct Union5 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Node or string public struct Union5 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union5(Node) public static implicit operator Union5(Node value) Parameters value Node Returns Union5 implicit operator Union5(string) public static implicit operator Union5(string value) Parameters value string Returns Union5"
  },
  "api/CSharpToJavaScript.APIs.JS.Union50.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union50.html",
    "title": "Struct Union50 | CSharpToJavaScript",
    "keywords": "Struct Union50 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Document or Union10 public struct Union50 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union50(Document) public static implicit operator Union50(Document value) Parameters value Document Returns Union50 implicit operator Union50(Union10) public static implicit operator Union50(Union10 value) Parameters value Union10 Returns Union50"
  },
  "api/CSharpToJavaScript.APIs.JS.Union51.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union51.html",
    "title": "Struct Union51 | CSharpToJavaScript",
    "keywords": "Struct Union51 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Unsupported /File/ or string public struct Union51 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union51(Unsupported) public static implicit operator Union51(Unsupported value) Parameters value Unsupported Returns Union51 implicit operator Union51(string) public static implicit operator Union51(string value) Parameters value string Returns Union51"
  },
  "api/CSharpToJavaScript.APIs.JS.Union6.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union6.html",
    "title": "Struct Union6 | CSharpToJavaScript",
    "keywords": "Struct Union6 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Node or string public struct Union6 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union6(Node) public static implicit operator Union6(Node value) Parameters value Node Returns Union6 implicit operator Union6(string) public static implicit operator Union6(string value) Parameters value string Returns Union6"
  },
  "api/CSharpToJavaScript.APIs.JS.Union7.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union7.html",
    "title": "Struct Union7 | CSharpToJavaScript",
    "keywords": "Struct Union7 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Node or string public struct Union7 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union7(Node) public static implicit operator Union7(Node value) Parameters value Node Returns Union7 implicit operator Union7(string) public static implicit operator Union7(string value) Parameters value string Returns Union7"
  },
  "api/CSharpToJavaScript.APIs.JS.Union8.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union8.html",
    "title": "Struct Union8 | CSharpToJavaScript",
    "keywords": "Struct Union8 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll Node or string public struct Union8 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union8(Node) public static implicit operator Union8(Node value) Parameters value Node Returns Union8 implicit operator Union8(string) public static implicit operator Union8(string value) Parameters value string Returns Union8"
  },
  "api/CSharpToJavaScript.APIs.JS.Union9.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Union9.html",
    "title": "Struct Union9 | CSharpToJavaScript",
    "keywords": "Struct Union9 Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll List{List{string}} or Dictionary{string, string} public struct Union9 Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Properties Value public dynamic Value { readonly get; set; } Property Value dynamic Operators implicit operator Union9(Dictionary<string, string>) public static implicit operator Union9(Dictionary<string, string> value) Parameters value Dictionary<string, string> Returns Union9 implicit operator Union9(List<List<string>>) public static implicit operator Union9(List<List<string>> value) Parameters value List<List<string>> Returns Union9"
  },
  "api/CSharpToJavaScript.APIs.JS.ValidityState.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ValidityState.html",
    "title": "Class ValidityState | CSharpToJavaScript",
    "keywords": "Class ValidityState Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The ValidityState interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element&apos;s value fails to validate, if it&apos;s not valid. [To(\"FirstCharToLowerCase\")] public class ValidityState Inheritance object ValidityState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Guide: Constraint validation -Tutorial: Form data validation See also on MDN Properties BadInput The read-only badInput property of a ValidityState object indicates if the user has provided input that the browser is unable to convert. For example, if you have a number input element whose content is a string. public bool BadInput { get; } Property Value bool A boolean. Remarks -Guide: Constraint validation -Tutorial: Form data validation See also on MDN CustomError public bool CustomError { get; } Property Value bool PatternMismatch The read-only patternMismatch property of a ValidityState object indicates if the value of an input, after having been edited by the user, does not conform to the constraints set by the element's pattern attribute. public bool PatternMismatch { get; } Property Value bool Remarks The patternMismatch property will be true if and only if the following conditions are all true: -Constraint validation -Forms: Data form validation -Regular Expressions See also on MDN RangeOverflow The read-only rangeOverflow property of a ValidityState object indicates if the value of an input, after having been edited by the user, does not conform to the constraints set by the element's max attribute. public bool RangeOverflow { get; } Property Value bool Remarks If the field is numeric in nature, including the input/date, input/month, input/week, input/time, input/datetime-local, input/number and input/range types and a max value is set, if the value doesn&apos;t conform to the constraints set by the max value, the rangeOverflow property will be true. Given the following: if value &gt; 40, rangeOverflow will be true. When true, the element matches the :invalid and :out-of-range CSS pseudo-classes. -RangeUnderflow -Constraint validation -Forms: Data form validation -step attribute -min attribute See also on MDN RangeUnderflow The read-only rangeUnderflow property of a ValidityState object indicates if the value of an input, after having been edited by the user, does not conform to the constraints set by the element's min attribute. public bool RangeUnderflow { get; } Property Value bool Remarks If the field is numeric in nature, including the input/date, input/month, input/week, input/time, input/datetime-local, input/number and input/range types and a min value is set, if the value doesn&apos;t conform to the constraints set by the min value, the rangeUnderflow property will be true. Given the following: if value &lt; 20, rangeUnderflow will be true. When true, the element matches the :invalid and :out-of-range CSS pseudo-classes. -RangeOverflow -Constraint validation -Forms: Data form validation -step attribute -max attribute See also on MDN StepMismatch The read-only stepMismatch property of a ValidityState object indicates if the value of an input, after having been edited by the user, does not conform to the constraints set by the element's step attribute. public bool StepMismatch { get; } Property Value bool Remarks If the field is numeric in nature, including the input/date, input/month, input/week, input/time, input/datetime-local, input/number and input/range types and the step value is not any, if the value don&apos;t doesn&apos;t conform to the constraints set by the step and min values, then stepMismatch will be true. If the remainder of the form control&apos;s value less the min value, divided by the step value (which defaults to 1 if omitted) is not zero, there is a mismatch. Given the following: if (value - min) % 2 !== 0, stepMismatch will be true. If true, the element matches the :invalid and :out-of-range CSS pseudo-classes. -Constraint validation -Forms: Data form validation -step attribute See also on MDN TooLong The read-only tooLong property of a ValidityState object indicates if the value of an input or textarea, after having been edited by the user, exceeds the maximum code-unit length established by the element's maxlength attribute. public bool TooLong { get; } Property Value bool Remarks -Constraint validation -Forms: Data form validation See also on MDN TooShort The read-only tooShort property of a ValidityState object indicates if the value of an input, button, select, output, fieldset or textarea, after having been edited by the user, is less than the minimum code-unit length established by the element's minlength attribute. public bool TooShort { get; } Property Value bool Remarks -Guide: Constraint validation -Tutorial: Form data validation See also on MDN TypeMismatch The read-only typeMismatch property of a ValidityState object indicates if the value of an input, after having been edited by the user, does not conform to the constraints set by the element's type attribute. public bool TypeMismatch { get; } Property Value bool Remarks If the type attribute expects specific strings, such as the input/email and input/url types and the value doesn't conform to the constraints set by the type, the typeMismatch property will be true. The input/email input type expects one or more valid email addresses, depending on whether the multiple attribute is present. A valid email address includes an email prefix and a domain, with or without a top level domain. If the value of the email input is not an empty string, a single valid email address, or one or more comma separated email address if the multiple attribute is present, there is a typeMismatch. The input/url input type expects one or more valid URLs, depending on whether the multiple attribute is present. A valid URL includes a protocol, optionally with an IP address, or an optional subdomain, domain, and top level domain combination. If the value of the URL input is not an empty string, a single valid URL, or one or more comma separated URLS if the multiple attribute is present, there is a typeMismatch. Input type Value Expected value input/email x_y or x_y.z email address, with or without TLD input/url x: or x://y.z protocol or full URL with protocol -Constraint validation -Forms: Data form validation -Regular Expressions See also on MDN Valid public bool Valid { get; } Property Value bool ValueMissing The read-only valueMissing property of a ValidityState object indicates if a required control, such as an input, select, or textarea, has an empty value. public bool ValueMissing { get; } Property Value bool Remarks If the required attribute is set, and no option is selected or a &lt;textarea&gt; or user-editable &lt;input&gt; is empty, the valueMissing property will be true. The property is only true if the field is required and has no value; if the field is not required, or if the field is required and has a value, the value is false. -Constraint validation -Forms: Data form validation -Regular Expressions See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.ValidityStateFlags.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.ValidityStateFlags.html",
    "title": "Class ValidityStateFlags | CSharpToJavaScript",
    "keywords": "Class ValidityStateFlags Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class ValidityStateFlags Inheritance object ValidityStateFlags Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BadInput public bool BadInput Field Value bool CustomError public bool CustomError Field Value bool PatternMismatch public bool PatternMismatch Field Value bool RangeOverflow public bool RangeOverflow Field Value bool RangeUnderflow public bool RangeUnderflow Field Value bool StepMismatch public bool StepMismatch Field Value bool TooLong public bool TooLong Field Value bool TooShort public bool TooShort Field Value bool TypeMismatch public bool TypeMismatch Field Value bool ValueMissing public bool ValueMissing Field Value bool"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoTrack.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoTrack.html",
    "title": "Class VideoTrack | CSharpToJavaScript",
    "keywords": "Class VideoTrack Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The VideoTrack interface represents a single video track from a {{HTMLElement(\"video\")}} element. [To(\"FirstCharToLowerCase\")] public class VideoTrack Inheritance object VideoTrack Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The most common use for accessing a VideoTrack object is to toggle its Selected property in order to make it the active video track for its {{HTMLElement(\"video\")}} element. See also on MDN Properties Id The id property contains a string which uniquely identifies the track represented by the VideoTrack. public string Id { get; } Property Value string A string which identifies the track, suitable for use when calling GetTrackById(string) on an VideoTrackList such as the one specified by a media element's VideoTracks property. Remarks This ID can be used with the GetTrackById(string) method to locate a specific track within the media associated with a media element. The track ID can also be used as the fragment of a URL that loads the specific track (if the media supports media fragments). See also on MDN Kind The kind property contains a string indicating the category of video contained in the VideoTrack. public string Kind { get; } Property Value string A string specifying the type of content the media represents. The string is one of those found in Video track kind strings below. Remarks The kind can be used to determine the scenarios in which specific tracks should be enabled or disabled. See Video track kind strings for a list of the kinds available for video tracks. See also on MDN Label The read-only VideoTrack property label returns a string specifying the video track&apos;s human-readable label, if one is available; otherwise, it returns an empty string. public string Label { get; } Property Value string A string specifying the track&apos;s human-readable label, if one is available in the track metadata. Otherwise, an empty string (&quot;&quot;) is returned.For example, a track whose Kind is &quot;sign&quot; might have a label such as &quot;A sign-language interpretation.&quot;. Remarks See also on MDN Language The read-only VideoTrack property language returns a string identifying the language used in the video track. public string Language { get; } Property Value string A string specifying the BCP 47 ({{RFC(5646)}}) format language tag of the primary language used in the video track, or an empty string (&quot;&quot;) if the language is not specified or known, or if the track doesn&apos;t contain speech.For example, if the primary language used in the track is United States English, this value would be &quot;en-US&quot;. For Brazilian Portuguese, the value would be &quot;pt-BR&quot;. Remarks For tracks that include multiple languages (such as a movie in English in which a few lines are spoken in other languages), this should be the video&apos;s primary language. See also on MDN Selected The VideoTrack property selected controls whether or not a particular video track is active. public bool Selected { get; set; } Property Value bool The selected property is a Boolean whose value is true if the track is active. Only a single video track can be active at any given time, so setting this property to true for one track while another track is active will make that other track inactive. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.VideoTrackList.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VideoTrackList.html",
    "title": "Class VideoTrackList | CSharpToJavaScript",
    "keywords": "Class VideoTrackList Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The VideoTrackList interface is used to represent a list of the video tracks contained within a {{HTMLElement(\"video\")}} element, with each track represented by a separate VideoTrack object in the list. [To(\"FirstCharToLowerCase\")] public class VideoTrackList : EventTarget Inheritance object EventTarget VideoTrackList Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Retrieve an instance of this object with 'HTMLMediaElement.VideoTracks'. The individual tracks can be accessed using array syntax or functions such as {{jsxref(\"Array.forEach\", \"forEach()\")}} for example. See also on MDN Properties Length The read-only VideoTrackList property length returns the number of entries in the VideoTrackList, each of which is a VideoTrack representing one video track in the media element. public ulong Length { get; } Property Value ulong A number indicating how many video tracks are included in the VideoTrackList. Each track can be accessed by treating the VideoTrackList as an array of objects of type VideoTrack. Remarks A value of 0 indicates that there are no video tracks in the media. See also on MDN Onaddtrack public EventHandlerNonNull Onaddtrack { get; set; } Property Value EventHandlerNonNull Onchange public EventHandlerNonNull Onchange { get; set; } Property Value EventHandlerNonNull Onremovetrack public EventHandlerNonNull Onremovetrack { get; set; } Property Value EventHandlerNonNull SelectedIndex The read-only VideoTrackList property selectedIndex returns the index of the currently selected track, if any, or -1 otherwise. public long SelectedIndex { get; } Property Value long A number indicating the index of the currently selected track, if any, or -1 otherwise. Remarks See also on MDN Methods GetTrackById(string) The VideoTrackList method getTrackById() returns the first VideoTrack object from the track list whose {{domxref(\"VideoTrack.id\", &quot;id&quot;)}} matches the specified string. public VideoTrack? GetTrackById(string id) Parameters id string Returns VideoTrack A VideoTrack object indicating the first track found within the VideoTrackList whose id matches the specified string. If no match is found, this method returns null.The tracks are searched in their natural order; that is, in the order defined by the media resource itself, or, if the resource doesn&apos;t define an order, the relative order in which the tracks are declared by the media resource. Remarks This lets you find a specified track if you know its ID string. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.VoidFunction.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.VoidFunction.html",
    "title": "Struct VoidFunction | CSharpToJavaScript",
    "keywords": "Struct VoidFunction Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public struct VoidFunction Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object)"
  },
  "api/CSharpToJavaScript.APIs.JS.Window.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Window.html",
    "title": "Class Window | CSharpToJavaScript",
    "keywords": "Class Window Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Window interface represents a window containing a DOM document; the document property points to the DOM document loaded in that window. [To(\"Default\")] public class Window : EventTarget Inheritance object EventTarget Window Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks A window for a given document can be obtained using the DefaultView property. A global variable, window, representing the window in which the script is running, is exposed to JavaScript code. The Window interface is home to a variety of functions, namespaces, objects, and constructors which are not necessarily directly associated with the concept of a user interface window. However, the Window interface is a suitable place to include these items that need to be globally available. Many of these are documented in the JavaScript Reference and the DOM Reference. In a tabbed browser, each tab is represented by its own Window object; the global window seen by JavaScript code running within a given tab always represents the tab in which the code is running. That said, even in a tabbed browser, some properties and methods still apply to the overall window that contains the tab, such as Window.ResizeTo and Window.InnerHeight. Generally, anything that can't reasonably pertain to a tab pertains to the window instead. See also on MDN Properties ClientInformation [To(\"FirstCharToLowerCase\")] public Navigator ClientInformation { get; } Property Value Navigator Closed The Window.closed read-only property indicates whether the referenced window is closed or not. [To(\"FirstCharToLowerCase\")] public bool Closed { get; } Property Value bool A boolean value. Possible values: Remarks See also on MDN CustomElements The customElements read-only property of the Window interface returns a reference to the CustomElementRegistry object, which can be used to register new custom elements and get information about previously registered custom elements. [To(\"FirstCharToLowerCase\")] public CustomElementRegistry CustomElements { get; } Property Value CustomElementRegistry Remarks See also on MDN Document window.document returns a reference to the document contained in the window. [To(\"FirstCharToLowerCase\")] public Document Document { get; } Property Value Document A document object. Remarks See also on MDN Event IMPORTANT Deprecated The read-only Window property event returns the Event which is currently being handled by the site's code. Outside the context of an event handler, the value is always undefined. [To(\"FirstCharToLowerCase\")] public Union0 Event { get; } Property Value Union0 Remarks You should avoid using this property in new code, and should instead use the Event passed into the event handler function. This property is not universally supported and even when supported introduces potential fragility to your code. NOTE Note: This property can be fragile, in that there may be situations in which the returned Event is not the expected value. In addition, Window.event is not accurate for events dispatched within shadow tree. -SrcElement See also on MDN External IMPORTANT Deprecated The external property of the Window API returns an instance of the External interface, which was intended to contain functions related to adding external search providers to the browser. However, this is now deprecated, and the contained methods are now dummy functions that do nothing as per spec. [To(\"FirstCharToLowerCase\")] public External External { get; } Property Value External Remarks See also on MDN FrameElement The Window.frameElement property returns the element (such as iframe or object) in which the window is embedded. [To(\"FirstCharToLowerCase\")] public Element? FrameElement { get; } Property Value Element The element which the window is embedded into. If the window isn&apos;t embedded into another document, or if the document into which it&apos;s embedded has a different origin, the value is null instead. Remarks NOTE Note: Despite this property&apos;s name, it works for documents embedded within any embedding point, including object, iframe, or embed. -Frames returns an array-like object, listing the direct sub-frames of the current window. -Parent returns the parent window, which is the window containing the frameElement of the child window. See also on MDN Frames Returns the window itself, which is an array-like object, listing the direct sub-frames of the current window. [To(\"FirstCharToLowerCase\")] public Window Frames { get; } Property Value Window A list of frame objects. It is similar to an array in that it has a length property and its items can be accessed using the [i] notation. Remarks See also on MDN History The Window.history read-only property returns a reference to the History object, which provides an interface for manipulating the browser session history (pages visited in the tab or frame that the current page is loaded in). [To(\"FirstCharToLowerCase\")] public History History { get; } Property Value History A reference to the History object. Remarks See Manipulating the browser history for examples and details. In particular, that article explains security features of the PushState(dynamic, string, string?) and ReplaceState(dynamic, string, string?) methods that you should be aware of before using them. See also on MDN Length [To(\"FirstCharToLowerCase\")] public ulong Length { get; } Property Value ulong A number. Remarks See also on MDN Location The Window.location read-only property returns a Location object with information about the current location of the document. [To(\"FirstCharToLowerCase\")] public Location Location { get; } Property Value Location A Location object. Remarks Though Window.location is a read-only Location object, you can also assign a string to it. This means that you can work with location as if it were a string in most cases: location = &apos;http://www.example.com&apos; is a synonym of location.href = &apos;http://www.example.com&apos;. See Location for all available properties. -The interface of the returned value, Location -A similar information, but attached to the document, Location -Manipulating the browser history -Window/hashchange_event See also on MDN Locationbar Returns the locationbar object. [To(\"FirstCharToLowerCase\")] public BarProp Locationbar { get; } Property Value BarProp An object containing a single property: Remarks This is one of a group of Window properties that contain a boolean visible property, that used to represent whether or not a particular part of a web browser&apos;s user interface was visible. For privacy and interoperability reasons, the value of the visible property is now false if this Window is a popup, and true otherwise. -Menubar -Personalbar -Scrollbars -Statusbar -Toolbar See also on MDN Menubar Returns the menubar object. [To(\"FirstCharToLowerCase\")] public BarProp Menubar { get; } Property Value BarProp An object containing a single property: Remarks This is one of a group of Window properties that contain a boolean visible property, that used to represent whether or not a particular part of a web browser&apos;s user interface was visible. For privacy and interoperability reasons, the value of the visible property is now false if this Window is a popup, and true otherwise. -Locationbar -Personalbar -Scrollbars -Statusbar -Toolbar See also on MDN Name The Window.name property gets/sets the name of the window&apos;s browsing context. [To(\"FirstCharToLowerCase\")] public string Name { get; set; } Property Value string A string. Remarks See also on MDN Navigator The Window.navigator read-only property returns a reference to the Navigator object, which has methods and properties about the application running the script. [To(\"FirstCharToLowerCase\")] public Navigator Navigator { get; } Property Value Navigator The Navigator object. Remarks See also on MDN Onorientationchange [To(\"FirstCharToLowerCase\")] public EventHandlerNonNull Onorientationchange { get; set; } Property Value EventHandlerNonNull Opener The Window interface's opener property returns a reference to the window that opened the window, either with Open(string, string, string), or by navigating a link with a target attribute. [To(\"FirstCharToLowerCase\")] public dynamic Opener { get; set; } Property Value dynamic A Window-like object referring to the window that opened the current window (using Open(string, string, string), or by a link with target attribute set). If this window was not opened by being linked to or created by another, returns null.If the opener is not on the same origin as the current page, functionality of the opener object is limited. For example, variables and functions on the window object are not accessible. However, navigation of the opener window is possible, which means that the opened page can open a URL in the original tab or window. In some cases, this makes phishing attacks possible, where a trusted page that is opened in the original window is replaced by a phishing page by the newly opened page.In the following cases, the browser does not populate window.opener, but leaves it null: Remarks In other words, if window A opens window B, B.opener returns A. See also on MDN Orientation IMPORTANT Deprecated Returns the orientation in degrees (in 90-degree increments) of the viewport relative to the device&apos;s natural orientation. [To(\"FirstCharToLowerCase\")] public short Orientation { get; } Property Value short Remarks Its only possible values are -90, 0, 90, and 180. Positive values are counterclockwise; negative values are clockwise. This property is deprecated. Use the Screen.Orientation property instead, available on the Window.Screen property. See also on MDN OriginAgentCluster [To(\"FirstCharToLowerCase\")] public bool OriginAgentCluster { get; } Property Value bool Parent The Window.parent property is a reference to the parent of the current window or subframe. [To(\"FirstCharToLowerCase\")] public Window? Parent { get; } Property Value Window A Window or iframe object. Remarks If a window does not have a parent, its parent property is a reference to itself. When a window is loaded in an iframe, object, or frame, its parent is the window with the element embedding the window. -FrameElement returns the specific element (such as &lt;iframe&gt;) the window is embedded into. -Top returns a reference to the top-level window. See also on MDN Personalbar Returns the personalbar object. [To(\"FirstCharToLowerCase\")] public BarProp Personalbar { get; } Property Value BarProp An object containing a single property: Remarks This is one of a group of Window properties that contain a boolean visible property, that used to represent whether or not a particular part of a web browser&apos;s user interface was visible. For privacy and interoperability reasons, the value of the visible property is now false if this Window is a popup, and true otherwise. -Locationbar -Menubar -Scrollbars -Statusbar -Toolbar See also on MDN Scrollbars Returns the scrollbars object. [To(\"FirstCharToLowerCase\")] public BarProp Scrollbars { get; } Property Value BarProp An object containing a single property: Remarks This is one of a group of Window properties that contain a boolean visible property, that used to represent whether or not a particular part of a web browser&apos;s user interface was visible. For privacy and interoperability reasons, the value of the visible property is now false if this Window is a popup, and true otherwise. -Locationbar -Menubar -Personalbar -Statusbar -Toolbar See also on MDN Self The Window.self read-only property returns the window itself, as a WindowProxy. It can be used with dot notation on a window object (that is, window.self) or standalone (self). The advantage of the standalone notation is that a similar notation exists for non-window contexts, such as in {{domxref(&quot;Worker&quot;, &quot;Web Workers&quot;, &quot;&quot;, 1)}}. By using self, you can refer to the global scope in a way that will work not only in a window context (self will resolve to window.self) but also in a worker context (self will then resolve to Self). [To(\"FirstCharToLowerCase\")] public Window Self { get; } Property Value Window A WindowProxy object. Remarks -Its Worker equivalent, Self. See also on MDN Status IMPORTANT Deprecated The status property of the Window interface was originally intended to set the text in the status bar at the bottom of the browser window. However, the HTML standard now requires setting window.status to have no effect on the text displayed in the status bar. [To(\"FirstCharToLowerCase\")] public string Status { get; set; } Property Value string A string. Remarks See also on MDN Statusbar Returns the statusbar object. [To(\"FirstCharToLowerCase\")] public BarProp Statusbar { get; } Property Value BarProp An object containing a single property: Remarks This is one of a group of Window properties that contain a boolean visible property, that used to represent whether or not a particular part of a web browser&apos;s user interface was visible. For privacy and interoperability reasons, the value of the visible property is now false if this Window is a popup, and true otherwise. -Locationbar -Menubar -Personalbar -Scrollbars -Toolbar See also on MDN Toolbar Returns the toolbar object. [To(\"FirstCharToLowerCase\")] public BarProp Toolbar { get; } Property Value BarProp An object containing a single property: Remarks This is one of a group of Window properties that contain a boolean visible property, that used to represent whether or not a particular part of a web browser&apos;s user interface was visible. For privacy and interoperability reasons, the value of the visible property is now false if this Window is a popup, and true otherwise. -Locationbar -Menubar -Personalbar -Scrollbars -Statusbar See also on MDN Top Returns a reference to the topmost window in the window hierarchy. [To(\"FirstCharToLowerCase\")] public Window? Top { get; } Property Value Window The reference to the topmost window. Remarks See also on MDN _window The window property of a Window object points to the window object itself. [To(\"FirstCharToLowerCase\")] public Window _window { get; } Property Value Window Remarks Thus, the following expressions all return the same window object: In web pages, the window object is also a global object. This means: The point of having the window property refer to the object itself, was likely to make it easy to refer to the global object. Otherwise, you&apos;d have to do a manual let window = this; assignment at the top of your script. Another reason, is that without this property you wouldn't be able to write, for example, \"Open(string, string, string)\". You'd have to use \"open('http://google.com/&apos;)&quot; instead. Yet another reason to use this property, is for libraries which wish to offer OOP-versions, and non-OOP versions (especially JavaScript modules). For example, if we refer to &quot;this.window.location.href&quot;, a JavaScript module could define a property called &quot;window&quot; inside of a class it defined (since no global &quot;window&quot; variable exists for it by default) which could be created after passing in a window object to the module class&apos; constructor. Thus, &quot;this.window&quot; inside of its functions would refer to that window object. In the non-namespaced version, &quot;this.window&quot; would refer back to &quot;window&quot;, and also be able to readily get the document location. Another advantage, is that the objects of such a class (even if the class were defined outside of a module) could change their reference to the window at will, they would not be able to do this if they had hard-coded a reference to &quot;window&quot;. The default in the class could still be set as the current window object. See also on MDN Methods Alert() window.alert() instructs the browser to display a dialog with an optional message, and to wait until the user dismisses the dialog. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Alert() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Under some conditions — for example, when the user switches tabs — the browser may not actually display a dialog, or may not wait for the user to dismiss the dialog. -dialog element -Confirm(string) -Prompt(string, string) See also on MDN Alert(string) window.alert() instructs the browser to display a dialog with an optional message, and to wait until the user dismisses the dialog. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Alert(string message) Parameters message string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Under some conditions — for example, when the user switches tabs — the browser may not actually display a dialog, or may not wait for the user to dismiss the dialog. -dialog element -Confirm(string) -Prompt(string, string) See also on MDN Blur() Shifts focus away from the window. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Blur() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN CaptureEvents() IMPORTANT Deprecated The Window.captureEvents() method does nothing. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined CaptureEvents() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: This is an method long removed from the specification. It is kept in browsers to prevent code breakage but does nothing. See also on MDN Close() The Window.close() method closes the current window, or the window on which it was called. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Close() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This method can only be called on windows that were opened by a script using the Open(string, string, string) method, or on top-level windows that have a single history entry. If the window doesn't match these requirements, an error similar to this one appears in the console: Scripts may not close windows that were not opened by script. Note also that close() has no effect when called on Window objects returned by HTMLIFrameElement.contentWindow. See also on MDN Confirm(string) window.confirm() instructs the browser to display a dialog with an optional message, and to wait until the user either confirms or cancels the dialog. [To(\"FirstCharToLowerCase\")] public bool Confirm(string message) Parameters message string Returns bool A boolean indicating whether OK (true) or Cancel (false) was selected. If a browser is ignoring in-page dialogs, then the returned value is always false. Remarks Under some conditions — for example, when the user switches tabs — the browser may not actually display a dialog, or may not wait for the user to confirm or cancel the dialog. -dialog element -Alert() -Prompt(string, string) See also on MDN Focus() Makes a request to bring the window to the front. It may fail due to user settings and the window isn&apos;t guaranteed to be frontmost before this method returns. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Focus() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Open(string, string, string) The open() method of the Window interface loads a specified resource into a new or existing browsing context (that is, a tab, a window, or an iframe) under a specified name. [To(\"FirstCharToLowerCase\")] public Window? Open(string url, string target, string features) Parameters url string target string features string Returns Window A WindowProxy object. The returned reference can be used to access properties and methods of the new window as long as it complies with the same-origin policy security requirements. Remarks -target attribute documentation:-&lt;a&gt; -&lt;form&gt; -window.close() -window.closed -window.focus() -window.opener -rel=&quot;opener&quot; and rel=&quot;noopener&quot; -Same-origin policy See also on MDN PostMessage(dynamic, WindowPostMessageOptions) The window.postMessage() method safely enables cross-origin communication between Window objects; e.g., between a page and a pop-up that it spawned, or between a page and an iframe embedded within it. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined PostMessage(dynamic message, WindowPostMessageOptions options) Parameters message dynamic options WindowPostMessageOptions Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Normally, scripts on different pages are allowed to access each other if and only if the pages they originate from share the same protocol, port number, and host (also known as the &quot;same-origin policy&quot;). window.postMessage() provides a controlled mechanism to securely circumvent this restriction (if used properly). Broadly, one window may obtain a reference to another (e.g., via targetWindow = window.opener), and then dispatch a MessageEvent on it with targetWindow.postMessage(). The receiving window is then free to handle this event as needed. The arguments passed to window.postMessage() (i.e., the &quot;message&quot;) are exposed to the receiving window through the event object. -Domain -CustomEvent -BroadcastChannel - For same-origin communication. See also on MDN PostMessage(dynamic, string, List<object>) The window.postMessage() method safely enables cross-origin communication between Window objects; e.g., between a page and a pop-up that it spawned, or between a page and an iframe embedded within it. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined PostMessage(dynamic message, string targetOrigin, List<object> transfer) Parameters message dynamic targetOrigin string transfer List<object> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Normally, scripts on different pages are allowed to access each other if and only if the pages they originate from share the same protocol, port number, and host (also known as the &quot;same-origin policy&quot;). window.postMessage() provides a controlled mechanism to securely circumvent this restriction (if used properly). Broadly, one window may obtain a reference to another (e.g., via targetWindow = window.opener), and then dispatch a MessageEvent on it with targetWindow.postMessage(). The receiving window is then free to handle this event as needed. The arguments passed to window.postMessage() (i.e., the &quot;message&quot;) are exposed to the receiving window through the event object. -Domain -CustomEvent -BroadcastChannel - For same-origin communication. See also on MDN Print() Opens the print dialog to print the current document. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Print() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If the document is still loading when this function is called, then the document will finish loading before opening the print dialog. This method will block while the print dialog is open. -Printing -Window.Beforeprint_event event -Window.Afterprint_event event See also on MDN Prompt(string, string) window.prompt() instructs the browser to display a dialog with an optional message prompting the user to input some text, and to wait until the user either submits the text or cancels the dialog. [To(\"FirstCharToLowerCase\")] public string? Prompt(string message, string default_) Parameters message string default_ string Returns string A string containing the text entered by the user, or null. Remarks Under some conditions — for example, when the user switches tabs — the browser may not actually display a dialog, or may not wait for the user to submit text or to cancel the dialog. -dialog element -Alert() -Confirm(string) See also on MDN ReleaseEvents() IMPORTANT Deprecated Releases the window from trapping events of a specific type. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined ReleaseEvents() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Stop() The window.stop() stops further resource loading in the current browsing context, equivalent to the stop button in the browser. [To(\"FirstCharToLowerCase\")] public GlobalObject.Undefined Stop() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Because of how scripts are executed, this method cannot interrupt its parent document&apos;s loading, but it will stop its images, new windows, and other still-loading objects. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WindowEventHandlers.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WindowEventHandlers.html",
    "title": "Interface WindowEventHandlers | CSharpToJavaScript",
    "keywords": "Interface WindowEventHandlers Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface WindowEventHandlers Properties Onafterprint EventHandlerNonNull Onafterprint { get; set; } Property Value EventHandlerNonNull Onbeforeprint EventHandlerNonNull Onbeforeprint { get; set; } Property Value EventHandlerNonNull Onbeforeunload OnBeforeUnloadEventHandlerNonNull Onbeforeunload { get; set; } Property Value OnBeforeUnloadEventHandlerNonNull Onhashchange EventHandlerNonNull Onhashchange { get; set; } Property Value EventHandlerNonNull Onlanguagechange EventHandlerNonNull Onlanguagechange { get; set; } Property Value EventHandlerNonNull Onmessage EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onmessageerror EventHandlerNonNull Onmessageerror { get; set; } Property Value EventHandlerNonNull Onoffline EventHandlerNonNull Onoffline { get; set; } Property Value EventHandlerNonNull Ononline EventHandlerNonNull Ononline { get; set; } Property Value EventHandlerNonNull Onpagehide EventHandlerNonNull Onpagehide { get; set; } Property Value EventHandlerNonNull Onpageshow EventHandlerNonNull Onpageshow { get; set; } Property Value EventHandlerNonNull Onpopstate EventHandlerNonNull Onpopstate { get; set; } Property Value EventHandlerNonNull Onrejectionhandled EventHandlerNonNull Onrejectionhandled { get; set; } Property Value EventHandlerNonNull Onstorage EventHandlerNonNull Onstorage { get; set; } Property Value EventHandlerNonNull Onunhandledrejection EventHandlerNonNull Onunhandledrejection { get; set; } Property Value EventHandlerNonNull Onunload EventHandlerNonNull Onunload { get; set; } Property Value EventHandlerNonNull"
  },
  "api/CSharpToJavaScript.APIs.JS.WindowLocalStorage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WindowLocalStorage.html",
    "title": "Interface WindowLocalStorage | CSharpToJavaScript",
    "keywords": "Interface WindowLocalStorage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The localStorage read-only property of the Window interface allows you to access a Storage object for the Document's {{glossary(\"origin\")}}; the stored data is saved across browser sessions. [To(\"FirstCharToLowerCase\")] public interface WindowLocalStorage Remarks localStorage is similar to Window.SessionStorage, except that while localStorage data has no expiration time, sessionStorage data gets cleared when the page session ends — that is, when the page is closed. (localStorage data for a document loaded in a &quot;private browsing&quot; or &quot;incognito&quot; session is cleared when the last &quot;private&quot; tab is closed.) -Using the Web Storage API -Window.SessionStorage See also on MDN Properties LocalStorage Storage LocalStorage { get; } Property Value Storage"
  },
  "api/CSharpToJavaScript.APIs.JS.WindowOrWorkerGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WindowOrWorkerGlobalScope.html",
    "title": "Interface WindowOrWorkerGlobalScope | CSharpToJavaScript",
    "keywords": "Interface WindowOrWorkerGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface WindowOrWorkerGlobalScope Properties CrossOriginIsolated bool CrossOriginIsolated { get; } Property Value bool IsSecureContext bool IsSecureContext { get; } Property Value bool Origin string Origin { get; } Property Value string Methods Atob(string) string Atob(string data) Parameters data string Returns string Btoa(string) string Btoa(string data) Parameters data string Returns string ClearInterval(long) GlobalObject.Undefined ClearInterval(long id) Parameters id long Returns GlobalObject.Undefined ClearTimeout(long) GlobalObject.Undefined ClearTimeout(long id) Parameters id long Returns GlobalObject.Undefined CreateImageBitmap(Union44, ImageBitmapOptions) Task<ImageBitmap> CreateImageBitmap(Union44 image, ImageBitmapOptions options) Parameters image Union44 options ImageBitmapOptions Returns Task<ImageBitmap> CreateImageBitmap(Union44, long, long, long, long, ImageBitmapOptions) Task<ImageBitmap> CreateImageBitmap(Union44 image, long sx, long sy, long sw, long sh, ImageBitmapOptions options) Parameters image Union44 sx long sy long sw long sh long options ImageBitmapOptions Returns Task<ImageBitmap> Fetch(Union12, RequestInit) Task<Response> Fetch(Union12 input, RequestInit init) Parameters input Union12 init RequestInit Returns Task<Response> Fetch(string) Task<Response> Fetch(string input) Parameters input string Returns Task<Response> QueueMicrotask(VoidFunction) GlobalObject.Undefined QueueMicrotask(VoidFunction callback) Parameters callback VoidFunction Returns GlobalObject.Undefined ReportError(dynamic) GlobalObject.Undefined ReportError(dynamic e) Parameters e dynamic Returns GlobalObject.Undefined SetInterval(Union43, long, params dynamic[]) long SetInterval(Union43 handler, long timeout, params dynamic[] arguments) Parameters handler Union43 timeout long arguments dynamic[] Returns long SetInterval(Action, long, params dynamic[]) long SetInterval(Action handler, long timeout, params dynamic[] arguments) Parameters handler Action timeout long arguments dynamic[] Returns long SetTimeout(Union43, long, params dynamic[]) long SetTimeout(Union43 handler, long timeout, params dynamic[] arguments) Parameters handler Union43 timeout long arguments dynamic[] Returns long SetTimeout(Action, long, params dynamic[]) long SetTimeout(Action handler, long timeout, params dynamic[] arguments) Parameters handler Action timeout long arguments dynamic[] Returns long StructuredClone(dynamic, StructuredSerializeOptions) dynamic StructuredClone(dynamic value, StructuredSerializeOptions options) Parameters value dynamic options StructuredSerializeOptions Returns dynamic"
  },
  "api/CSharpToJavaScript.APIs.JS.WindowPostMessageOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WindowPostMessageOptions.html",
    "title": "Class WindowPostMessageOptions | CSharpToJavaScript",
    "keywords": "Class WindowPostMessageOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WindowPostMessageOptions : StructuredSerializeOptions Inheritance object StructuredSerializeOptions WindowPostMessageOptions Inherited Members StructuredSerializeOptions.Transfer object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TargetOrigin public string TargetOrigin Field Value string"
  },
  "api/CSharpToJavaScript.APIs.JS.WindowSessionStorage.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WindowSessionStorage.html",
    "title": "Interface WindowSessionStorage | CSharpToJavaScript",
    "keywords": "Interface WindowSessionStorage Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The read-only sessionStorage property accesses a session Storage object for the current origin. sessionStorage is similar to Window.LocalStorage; the difference is that while data in localStorage doesn&apos;t expire, data in sessionStorage is cleared when the page session ends. [To(\"FirstCharToLowerCase\")] public interface WindowSessionStorage Remarks Data stored in sessionStorage is specific to the protocol of the page. In particular, data stored by a script on a site accessed with HTTP (e.g., http://example.com) is put in a different sessionStorage object from the same site accessed with HTTPS (e.g., https://example.com). The keys and the values are always in the UTF-16 string format, which uses two bytes per character. As with objects, integer keys are automatically converted to strings. -Using the Web Storage API -Window.LocalStorage See also on MDN Properties SessionStorage Storage SessionStorage { get; } Property Value Storage"
  },
  "api/CSharpToJavaScript.APIs.JS.Worker.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Worker.html",
    "title": "Class Worker | CSharpToJavaScript",
    "keywords": "Class Worker Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Worker interface of the Web Workers API represents a background task that can be created via script, which can send messages back to its creator. [To(\"FirstCharToLowerCase\")] public class Worker : EventTarget, AbstractWorker Inheritance object EventTarget Worker Implements AbstractWorker Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Creating a worker is done by calling the Worker(&quot;path/to/worker/script&quot;) constructor. Workers may themselves spawn new workers, as long as those workers are hosted at the same origin as the parent page. Not all interfaces and functions are available to scripts inside a Worker. Workers may use XMLHttpRequest for network communication, but its responseXML and channel attributes are always null. (fetch is also available, with no such restrictions.) -Using Web Workers -Functions and classes available to Web Workers -Other kind of workers: SharedWorker and Service Worker. -OffscreenCanvas interface See also on MDN Constructors Worker(string, WorkerOptions) The Worker() constructor creates a Worker object that executes the script at the specified URL. This script must obey the same-origin policy. public Worker(string scriptURL, WorkerOptions options) Parameters scriptURL string options WorkerOptions Remarks NOTE Note: that there is a disagreement among browser manufacturers about whether a data URL is of the same origin or not. Though Firefox 10 and later accept data URLs, that&apos;s not the case in all other browsers. The Worker interface it belongs to. See also on MDN Properties Onmessage public EventHandlerNonNull Onmessage { get; set; } Property Value EventHandlerNonNull Onmessageerror public EventHandlerNonNull Onmessageerror { get; set; } Property Value EventHandlerNonNull Methods PostMessage(dynamic, StructuredSerializeOptions) The postMessage() method of the Worker interface sends a message to the worker. The first parameter is the data to send to the worker. The data may be any JavaScript object that can be handled by the structured clone algorithm. public GlobalObject.Undefined PostMessage(dynamic message, StructuredSerializeOptions options) Parameters message dynamic options StructuredSerializeOptions Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The Worker postMessage() method delegates to the MessagePort PostMessage(dynamic, List<object>) method, which adds a task on the event loop corresponding to the receiving MessagePort. The Worker can send back information to the thread that spawned it using the PostMessage(dynamic, List<object>) method. -The Worker interface it belongs to. See also on MDN PostMessage(dynamic, List<object>) The postMessage() method of the Worker interface sends a message to the worker. The first parameter is the data to send to the worker. The data may be any JavaScript object that can be handled by the structured clone algorithm. public GlobalObject.Undefined PostMessage(dynamic message, List<object> transfer) Parameters message dynamic transfer List<object> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks The Worker postMessage() method delegates to the MessagePort PostMessage(dynamic, List<object>) method, which adds a task on the event loop corresponding to the receiving MessagePort. The Worker can send back information to the thread that spawned it using the PostMessage(dynamic, List<object>) method. -The Worker interface it belongs to. See also on MDN Terminate() The terminate() method of the Worker interface immediately terminates the Worker. This does not offer the worker an opportunity to finish its operations; it is stopped at once. public GlobalObject.Undefined Terminate() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Worker interface -Close() -Close() See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkerGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkerGlobalScope.html",
    "title": "Class WorkerGlobalScope | CSharpToJavaScript",
    "keywords": "Class WorkerGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WorkerGlobalScope interface of the Web Workers API is an interface representing the scope of any worker. Workers have no browsing context; this scope contains the information usually conveyed by Window objects — in this case event handlers, the console or the associated WorkerNavigator object. Each WorkerGlobalScope has its own event loop. [To(\"FirstCharToLowerCase\")] public class WorkerGlobalScope : EventTarget, WindowOrWorkerGlobalScope Inheritance object EventTarget WorkerGlobalScope Implements WindowOrWorkerGlobalScope Derived DedicatedWorkerGlobalScope SharedWorkerGlobalScope Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface is usually specialized by each worker type: DedicatedWorkerGlobalScope for dedicated workers, SharedWorkerGlobalScope for shared workers, and ServiceWorkerGlobalScope for ServiceWorker. The self property returns the specialized scope for each context. -Other global object interface: Window, DedicatedWorkerGlobalScope, SharedWorkerGlobalScope, ServiceWorkerGlobalScope -Other Worker-related interfaces: Worker, WorkerLocation, WorkerGlobalScope, and ServiceWorkerGlobalScope -Using web workers See also on MDN Properties Location The location read-only property of the WorkerGlobalScope interface returns the WorkerLocation associated with the worker. It is a specific location object, mostly a subset of the Location for browsing scopes, but adapted to workers. public WorkerLocation Location { get; } Property Value WorkerLocation A WorkerLocation object. Remarks WorkerGlobalScope See also on MDN Navigator The navigator read-only property of the WorkerGlobalScope interface returns the WorkerNavigator associated with the worker. It is a specific navigator object, mostly a subset of the Navigator for browsing scopes, but adapted to workers. public WorkerNavigator Navigator { get; } Property Value WorkerNavigator A WorkerNavigator object. Remarks WorkerNavigator See also on MDN Onerror public OnErrorEventHandlerNonNull Onerror { get; set; } Property Value OnErrorEventHandlerNonNull Onlanguagechange public EventHandlerNonNull Onlanguagechange { get; set; } Property Value EventHandlerNonNull Onoffline public EventHandlerNonNull Onoffline { get; set; } Property Value EventHandlerNonNull Ononline public EventHandlerNonNull Ononline { get; set; } Property Value EventHandlerNonNull Onrejectionhandled public EventHandlerNonNull Onrejectionhandled { get; set; } Property Value EventHandlerNonNull Onunhandledrejection public EventHandlerNonNull Onunhandledrejection { get; set; } Property Value EventHandlerNonNull Self The self read-only property of the WorkerGlobalScope interface returns a reference to the WorkerGlobalScope itself. Most of the time it is a specific scope like DedicatedWorkerGlobalScope, SharedWorkerGlobalScope, or ServiceWorkerGlobalScope. public WorkerGlobalScope Self { get; } Property Value WorkerGlobalScope A global scope object (differs depending on the type of worker you are dealing with, as indicated above). Remarks WorkerGlobalScope See also on MDN Methods ImportScripts(params string[]) The importScripts() method of the WorkerGlobalScope interface synchronously imports one or more scripts into the worker's scope. public GlobalObject.Undefined ImportScripts(params string[] urls) Parameters urls string[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -WorkerGlobalScope See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkerLocation.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkerLocation.html",
    "title": "Class WorkerLocation | CSharpToJavaScript",
    "keywords": "Class WorkerLocation Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WorkerLocation interface defines the absolute location of the script executed by the Worker. Such an object is initialized for each worker and is available via the Location property obtained by calling self.location. [To(\"FirstCharToLowerCase\")] public class WorkerLocation Inheritance object WorkerLocation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This interface is only visible from inside a JavaScript script executed in the context of a Web worker. -Other Worker-related interfaces: Worker, WorkerNavigator, and WorkerGlobalScope -Using web workers See also on MDN Properties Hash The hash property of a WorkerLocation object returns the Hash part of the worker's location. public string Hash { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Host The host property of a WorkerLocation object returns the Host part of the worker's location. public string Host { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Hostname The hostname property of a WorkerLocation object returns the Hostname part of the worker's location. public string Hostname { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Href The href property of a WorkerLocation object returns a string containing the serialized URL for the worker's location. public string Href { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Origin The origin property of a WorkerLocation object returns the worker's Origin. public string Origin { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Pathname The pathname property of a WorkerLocation object returns the Pathname part of the worker's location. public string Pathname { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Port The port property of a WorkerLocation object returns the Port part of the worker's location. public string Port { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Protocol The protocol property of a WorkerLocation object returns the Protocol part of the worker's location. public string Protocol { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN Search The search property of a WorkerLocation object returns the Search part of the worker's location. public string Search { get; } Property Value string A string. Remarks -The WorkerLocation interface it belongs to. See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkerNavigator.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkerNavigator.html",
    "title": "Class WorkerNavigator | CSharpToJavaScript",
    "keywords": "Class WorkerNavigator Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WorkerNavigator interface represents a subset of the Navigator interface allowed to be accessed from a Worker. Such an object is initialized for each worker and is available via the Navigator property. [To(\"FirstCharToLowerCase\")] public class WorkerNavigator Inheritance object WorkerNavigator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Other Worker-related interfaces: Worker, WorkerLocation, and WorkerGlobalScope -Using web workers See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkerOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkerOptions.html",
    "title": "Class WorkerOptions | CSharpToJavaScript",
    "keywords": "Class WorkerOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WorkerOptions Inheritance object WorkerOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Credentials public RequestCredentials Credentials Field Value RequestCredentials Name public string Name Field Value string Type public WorkerType Type Field Value WorkerType"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkerType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkerType.html",
    "title": "Enum WorkerType | CSharpToJavaScript",
    "keywords": "Enum WorkerType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll public enum WorkerType Fields Classic = 0 Module = 1"
  },
  "api/CSharpToJavaScript.APIs.JS.Worklet.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.Worklet.html",
    "title": "Class Worklet | CSharpToJavaScript",
    "keywords": "Class Worklet Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The Worklet interface is a lightweight version of Worker and gives developers access to low-level parts of the rendering pipeline. [To(\"FirstCharToLowerCase\")] public class Worklet Inheritance object Worklet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks With Worklets, you can run JavaScript and WebAssembly code to do graphics rendering or audio processing where high performance is required. Worklets allow static import of ECMAScript modules, if supported, using import. Dynamic import is disallowed by the specification — calling import() will throw. -Houdini: Demystifying CSS on Google Developers (2016) -AudioWorklet :: What, Why, and How on YouTube (2017) -Enter AudioWorklet on Google Developers (2017) -Animation Worklet - HTTP203 Advent on YouTube (2017) See also on MDN Methods AddModule(string, WorkletOptions) The addModule() method of the Worklet interface loads the module in the given JavaScript file and adds it to the current Worklet. public Task<GlobalObject.Undefined> AddModule(string moduleURL, WorkletOptions options) Parameters moduleURL string options WorkletOptions Returns Task<GlobalObject.Undefined> A Promise that resolves once the module from the given URL has been added. The promise doesn&apos;t return any value. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkletGlobalScope.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkletGlobalScope.html",
    "title": "Class WorkletGlobalScope | CSharpToJavaScript",
    "keywords": "Class WorkletGlobalScope Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The WorkletGlobalScope interface is an abstract class that specific worklet scope classes inherit from. Each WorkletGlobalScope defines a new global environment. [To(\"FirstCharToLowerCase\")] public class WorkletGlobalScope Inheritance object WorkletGlobalScope Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks NOTE Note: You don't normally need to interact with this interface. It is a base interface intended to be subclassed. You will encounter the subclasses AudioWorkletGlobalScope inside AudioWorklet objects, or PaintWorkletGlobalScope inside PaintWorklet objects. -AudioWorkletGlobalScope -PaintWorkletGlobalScope See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.WorkletOptions.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.WorkletOptions.html",
    "title": "Class WorkletOptions | CSharpToJavaScript",
    "keywords": "Class WorkletOptions Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public class WorkletOptions Inheritance object WorkletOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Credentials public RequestCredentials Credentials Field Value RequestCredentials"
  },
  "api/CSharpToJavaScript.APIs.JS.XMLHttpRequest.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XMLHttpRequest.html",
    "title": "Class XMLHttpRequest | CSharpToJavaScript",
    "keywords": "Class XMLHttpRequest Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll XMLHttpRequest (XHR) objects are used to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing. [To(\"FirstCharToLowerCase\")] public class XMLHttpRequest : XMLHttpRequestEventTarget Inheritance object EventTarget XMLHttpRequestEventTarget XMLHttpRequest Inherited Members XMLHttpRequestEventTarget.Onloadstart XMLHttpRequestEventTarget.Onprogress XMLHttpRequestEventTarget.Onabort XMLHttpRequestEventTarget.Onerror XMLHttpRequestEventTarget.Onload XMLHttpRequestEventTarget.Ontimeout XMLHttpRequestEventTarget.Onloadend EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks XMLHttpRequest is used heavily in AJAX programming. Despite its name, XMLHttpRequest can be used to retrieve any type of data, not just XML. If your communication needs to involve receiving event data or message data from a server, consider using server-sent events through the EventSource interface. For full-duplex communication, WebSockets may be a better choice. AvailableInWorkers(\"notservice\") -XMLSerializer: Serializing a DOM tree into XML -MDN tutorials covering XMLHttpRequest:-Ajax -Using XMLHttpRequest -HTML in XMLHttpRequest -Fetch API -New Tricks in XMLHttpRequest2 (2011) See also on MDN Constructors XMLHttpRequest() The XMLHttpRequest() constructor creates a new XMLHttpRequest. public XMLHttpRequest() Remarks For details about how to use XMLHttpRequest, see Using XMLHttpRequest. -Using XMLHttpRequest -HTML in XMLHttpRequest See also on MDN Fields DONE public const ushort DONE = 4 Field Value ushort HEADERS_RECEIVED public const ushort HEADERS_RECEIVED = 2 Field Value ushort LOADING public const ushort LOADING = 3 Field Value ushort OPENED public const ushort OPENED = 1 Field Value ushort UNSENT public const ushort UNSENT = 0 Field Value ushort Properties Onreadystatechange public EventHandlerNonNull Onreadystatechange { get; set; } Property Value EventHandlerNonNull ReadyState The XMLHttpRequest.readyState property returns the state an XMLHttpRequest client is in. An XHR client exists in one of the following states: public ushort ReadyState { get; } Property Value ushort Remarks Value State Description 0 UNSENT Client has been created. open() not called yet. 1 OPENED open() has been called. 2 HEADERS_RECEIVED send() has been called, and headers and status are available. 3 LOADING Downloading; responseText holds partial data. 4 DONE The operation is complete. See also on MDN Response The XMLHttpRequest response property returns the response&apos;s body content as an {{jsxref(\"ArrayBuffer\")}}, a Blob, a Document, a JavaScript Object, or a string, depending on the value of the request's ResponseType property. public dynamic Response { get; } Property Value dynamic An appropriate object based on the value of {{domxref(&quot;XMLHttpRequest.responseType&quot;, &quot;responseType&quot;)}}. You may attempt to request the data be provided in a specific format by setting the value of responseType after calling Open(string, string) to initialize the request but before calling Send(Union50?) to send the request to the server.The value is null if the request is not yet complete or was unsuccessful, with the exception that when reading text data using a responseType of &quot;text&quot; or the empty string (&quot;&quot;), the response can contain the response so far while the request is still in the LOADING ReadyState (3). Remarks -Using XMLHttpRequest -Getting text and HTML/XML data: ResponseText and ResponseXML See also on MDN ResponseText The read-only XMLHttpRequest property responseText returns the text received from a server following a request being sent. public string ResponseText { get; } Property Value string A string which contains either the textual data received using the XMLHttpRequest or null if the request failed or &quot;&quot; if the request has not yet been sent by calling Send(Union50?).While handling an asynchronous request, the value of responseText always has the current content received from the server, even if it&apos;s incomplete because the data has not been completely received yet.You know the entire content has been received when the value of ReadyState becomes XMLHttpRequest.DONE (4), and Status becomes 200 (&quot;OK&quot;). Remarks See also on MDN ResponseType The XMLHttpRequest property responseType is an enumerated string value specifying the type of data contained in the response. public XMLHttpRequestResponseType ResponseType { get; set; } Property Value XMLHttpRequestResponseType A string which specifies what type of data the response contains. It can take the following values: NOTE Note: When setting responseType to a particular value, the author should make sure that the server is actually sending a response compatible with that format. If the server returns data that is not compatible with the responseType that was set, the value of Response will be null. Remarks It also lets the author change the response type. If an empty string is set as the value of responseType, the default value of text is used. -Using XMLHttpRequest -HTML in XMLHttpRequest -The response data: Response, ResponseText, and ResponseXML See also on MDN ResponseURL The read-only XMLHttpRequest.responseURL property returns the serialized URL of the response or the empty string if the URL is null. If the URL is returned, any URL fragment present in the URL will be stripped away. The value of responseURL will be the final URL obtained after any redirects. public string ResponseURL { get; } Property Value string Remarks See also on MDN ResponseXML The XMLHttpRequest.responseXML read-only property returns a Document containing the HTML or XML retrieved by the request; or null if the request was unsuccessful, has not yet been sent, or if the data can&apos;t be parsed as XML or HTML. public Document? ResponseXML { get; } Property Value Document A Document from parsing the XML or HTML received using XMLHttpRequest, or null if no data was received or if the data is not XML/HTML. Remarks NOTE Note: The name responseXML is an artifact of this property&apos;s history; it works for both HTML and XML. Usually, the response is parsed as &quot;text/xml&quot;. If the ResponseType is set to &quot;document&quot; and the request was made asynchronously, instead the response is parsed as &quot;text/html&quot;. responseXML is null for any other types of data, as well as for data: URLs. If the server doesn't specify the Content-Type as &quot;text/xml&quot; or &quot;application/xml&quot;, you can use OverrideMimeType(string) to parse it as XML anyway. This property isn&apos;t available to workers. -XMLHttpRequest -Response -ResponseType -Parsing and serializing XML -Parsing XML into a DOM tree: DOMParser -Serializing a DOM tree into XML: XMLSerializer (specifically, the XMLSerializer.SerializeToString method) See also on MDN Status The read-only XMLHttpRequest.status property returns the numerical HTTP status code of the XMLHttpRequest&apos;s response. public ushort Status { get; } Property Value ushort A number. Remarks Before the request completes, the value of status is 0. Browsers also report a status of 0 in case of XMLHttpRequest errors. -List of HTTP status -HTTP See also on MDN StatusText The read-only XMLHttpRequest.statusText property returns a string containing the response&apos;s status message as returned by the HTTP server. Unlike XMLHTTPRequest.status which indicates a numerical status code, this property contains the text of the response status, such as &quot;OK&quot; or &quot;Not Found&quot;. If the request&apos;s readyState is in UNSENT or OPENED state, the value of statusText will be an empty string. public string StatusText { get; } Property Value string A string. Remarks If the server response doesn&apos;t explicitly specify a status text, statusText will assume the default value &quot;OK&quot;. NOTE Note: Responses over an HTTP/2 connection will always have an empty string as status message as HTTP/2 does not support them. -List of HTTP status -HTTP -WHATWG Fetch Living Standard See also on MDN Timeout The XMLHttpRequest.timeout property is an unsigned long representing the number of milliseconds a request can take before automatically being terminated. The default value is 0, which means there is no timeout. Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a 'document environment' or it will throw an InvalidAccessError exception. When a timeout happens, a timeout event is fired. public ulong Timeout { get; set; } Property Value ulong Remarks NOTE Note: You may not use a timeout for synchronous requests with an owning window. Using a timeout with an asynchronous request See also on MDN Upload The XMLHttpRequestUpload interface represents the upload process for a specific XMLHttpRequest. It is an opaque object that represents the underlying, browser-dependant, upload process. It is XMLHttpRequestEventTarget and is can be obtained by calling Upload. public XMLHttpRequestUpload Upload { get; } Property Value XMLHttpRequestUpload Remarks AvailableInWorkers(\"notservice\") -XMLHttpRequest See also on MDN WithCredentials The XMLHttpRequest.withCredentials property is a boolean value that indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates. Setting withCredentials has no effect on same-origin requests. public bool WithCredentials { get; set; } Property Value bool A boolean. Remarks In addition, this flag is also used to indicate when cookies are to be ignored in the response. The default is false. XMLHttpRequest responses from a different domain cannot set cookie values for their own domain unless withCredentials is set to true before making the request. The third-party cookies obtained by setting withCredentials to true will still honor same-origin policy and hence can not be accessed by the requesting script through document.cookie or from response headers. NOTE Note: This never affects same-origin requests. NOTE Note: XMLHttpRequest responses from a different domain cannot set cookie values for their own domain unless withCredentials is set to true before making the request, regardless of Access-Control- header values. See also on MDN Methods Abort() The XMLHttpRequest.abort() method aborts the request if it has already been sent. When a request is aborted, its ReadyState is changed to XMLHttpRequest.UNSENT (0) and the request&apos;s Status code is set to 0. public GlobalObject.Undefined Abort() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -Using XMLHttpRequest See also on MDN GetAllResponseHeaders() The XMLHttpRequest method getAllResponseHeaders() returns all the response headers, separated by 'CRLF', as a string, or returns null if no response has been received. public string GetAllResponseHeaders() Returns string A string representing all of the response&apos;s headers (except those whose field name is Set-Cookie) separated by 'CRLF', or null if no response has been received. If a network error happened, an empty string is returned.An example of what a raw header string looks like:Each line is terminated by both carriage return and line feed characters (\\r\\n). These are essentially delimiters separating each of the headers. NOTE Note: In modern browsers, the header names are returned in all lower case, as per the latest spec. Remarks If a network error happened, an empty string is returned. NOTE Note: For multipart requests, this returns the headers from the current part of the request, not from the original channel. -Using XMLHttpRequest -Setting request headers: {{domxref(&quot;XMLHttpRequest.setRequestHeader&quot;, &quot;setRequestHeader()&quot;)}} See also on MDN GetResponseHeader(string) The XMLHttpRequest method getResponseHeader() returns the string containing the text of a particular header&apos;s value. public string? GetResponseHeader(string name) Parameters name string Returns string A string representing the header&apos;s text value, or null if either the response has not yet been received or the header doesn&apos;t exist in the response. Remarks If there are multiple response headers with the same name, then their values are returned as a single concatenated string, where each value is separated from the previous one by a pair of comma and space. The getResponseHeader() method returns the value as a UTF byte sequence. NOTE Note: The search for the header name is case-insensitive. If you need to get the raw string of all of the headers, use the GetAllResponseHeaders() method, which returns the entire raw header string. -Using XMLHttpRequest -HTTP headers -GetAllResponseHeaders() -Response -Setting request headers: {{DOMxRef(&quot;XMLHttpRequest.setRequestHeader&quot;, &quot;setRequestHeader()&quot;)}} See also on MDN Open(string, string) The XMLHttpRequest method open() initializes a newly-created request, or re-initializes an existing one. public GlobalObject.Undefined Open(string method, string url) Parameters method string url string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: Calling this method for an already active request (one for which open() has already been called) is the equivalent of calling Abort(). -Using XMLHttpRequest -Related XMLHttpRequest methods: {{domxref(&quot;XMLHttpRequest.setRequestHeader&quot;, \"setRequestHeader()\")}}, Send(Union50?), and Abort() See also on MDN Open(string, string, bool, string?, string?) The XMLHttpRequest method open() initializes a newly-created request, or re-initializes an existing one. public GlobalObject.Undefined Open(string method, string url, bool async, string? username, string? password) Parameters method string url string async bool username string password string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks NOTE Note: Calling this method for an already active request (one for which open() has already been called) is the equivalent of calling Abort(). -Using XMLHttpRequest -Related XMLHttpRequest methods: {{domxref(&quot;XMLHttpRequest.setRequestHeader&quot;, \"setRequestHeader()\")}}, Send(Union50?), and Abort() See also on MDN OverrideMimeType(string) The XMLHttpRequest method overrideMimeType() specifies a MIME type other than the one provided by the server to be used instead when interpreting the data being transferred in a request. public GlobalObject.Undefined OverrideMimeType(string mime) Parameters mime string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This may be used, for example, to force a stream to be treated and parsed as &quot;text/xml&quot;, even if the server does not report it as such. This method must be called before calling {{domxref(&quot;XMLHttpRequest.send&quot;, &quot;send()&quot;)}}. -Using XMLHttpRequest -ResponseType See also on MDN Send(Union50?) The XMLHttpRequest method send() sends the request to the server. public GlobalObject.Undefined Send(Union50? body) Parameters body Union50? Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks If the request is asynchronous (which is the default), this method returns as soon as the request is sent and the result is delivered using events. If the request is synchronous, this method doesn&apos;t return until the response has arrived. send() accepts an optional parameter which lets you specify the request&apos;s body; this is primarily used for requests such as {{HTTPMethod(\"PUT\")}}. If the request method is {{HTTPMethod(\"GET\")}} or {{HTTPMethod(\"HEAD\")}}, the body parameter is ignored and the request body is set to null. If no Accept header has been set using the SetRequestHeader(string, string), an Accept header with the type &quot;*/*&quot; (any type) is sent. -Using XMLHttpRequest -HTML in XMLHttpRequest See also on MDN SetRequestHeader(string, string) The XMLHttpRequest method setRequestHeader() sets the value of an HTTP request header. When using setRequestHeader(), you must call it after calling Open(string, string), but before calling Send(Union50?). If this method is called several times with the same header, the values are merged into one single request header. public GlobalObject.Undefined SetRequestHeader(string name, string value) Parameters name string value string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Each time you call setRequestHeader() after the first time you call it, the specified text is appended to the end of the existing header&apos;s content. If no Accept header has been set using this, an Accept header with the type &quot;*/*&quot; is sent with the request when Send(Union50?) is called. For security reasons, there are several Forbidden_header_name whose values are controlled by the user agent. Any attempt to set a value for one of those headers from frontend JavaScript code will be ignored without warning or error. In addition, the Authorization HTTP header may be added to a request, but will be removed if the request is redirected cross-origin. NOTE Note: For your custom fields, you may encounter a &quot;not allowed by Access-Control-Allow-Headers in preflight response&quot; exception when you send requests across domains. In this situation, you need to set up the Access-Control-Allow-Headers in your response header at server side. -Using XMLHttpRequest -HTML in XMLHttpRequest See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XMLHttpRequestEventTarget.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XMLHttpRequestEventTarget.html",
    "title": "Class XMLHttpRequestEventTarget | CSharpToJavaScript",
    "keywords": "Class XMLHttpRequestEventTarget Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll XMLHttpRequestEventTarget is the interface that describes the event handlers shared on XMLHttpRequest and XMLHttpRequestUpload. [To(\"FirstCharToLowerCase\")] public class XMLHttpRequestEventTarget : EventTarget Inheritance object EventTarget XMLHttpRequestEventTarget Derived XMLHttpRequest XMLHttpRequestUpload Inherited Members EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks You don&apos;t use XMLHttpRequestEventTarget directly; instead you interact with the sub classes. -XMLHttpRequest -XMLHttpRequestUpload See also on MDN Properties Onabort public EventHandlerNonNull Onabort { get; set; } Property Value EventHandlerNonNull Onerror public EventHandlerNonNull Onerror { get; set; } Property Value EventHandlerNonNull Onload public EventHandlerNonNull Onload { get; set; } Property Value EventHandlerNonNull Onloadend public EventHandlerNonNull Onloadend { get; set; } Property Value EventHandlerNonNull Onloadstart public EventHandlerNonNull Onloadstart { get; set; } Property Value EventHandlerNonNull Onprogress public EventHandlerNonNull Onprogress { get; set; } Property Value EventHandlerNonNull Ontimeout public EventHandlerNonNull Ontimeout { get; set; } Property Value EventHandlerNonNull"
  },
  "api/CSharpToJavaScript.APIs.JS.XMLHttpRequestResponseType.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XMLHttpRequestResponseType.html",
    "title": "Enum XMLHttpRequestResponseType | CSharpToJavaScript",
    "keywords": "Enum XMLHttpRequestResponseType Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XMLHttpRequest property responseType is an enumerated string value specifying the type of data contained in the response. public enum XMLHttpRequestResponseType Fields Arraybuffer = 1 Blob = 2 Document = 3 Empty = 0 Json = 4 Text = 5 Remarks It also lets the author change the response type. If an empty string is set as the value of responseType, the default value of text is used. -Using XMLHttpRequest -HTML in XMLHttpRequest -The response data: Response, ResponseText, and ResponseXML See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XMLHttpRequestUpload.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XMLHttpRequestUpload.html",
    "title": "Class XMLHttpRequestUpload | CSharpToJavaScript",
    "keywords": "Class XMLHttpRequestUpload Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XMLHttpRequestUpload interface represents the upload process for a specific XMLHttpRequest. It is an opaque object that represents the underlying, browser-dependant, upload process. It is XMLHttpRequestEventTarget and is can be obtained by calling Upload. [To(\"FirstCharToLowerCase\")] public class XMLHttpRequestUpload : XMLHttpRequestEventTarget Inheritance object EventTarget XMLHttpRequestEventTarget XMLHttpRequestUpload Inherited Members XMLHttpRequestEventTarget.Onloadstart XMLHttpRequestEventTarget.Onprogress XMLHttpRequestEventTarget.Onabort XMLHttpRequestEventTarget.Onerror XMLHttpRequestEventTarget.Onload XMLHttpRequestEventTarget.Ontimeout XMLHttpRequestEventTarget.Onloadend EventTarget.AddEventListener(string, Action, Union1) EventTarget.AddEventListener(string, Action<MouseEvent>, Union1) EventTarget.AddEventListener(string, Action<Event>, Union1) EventTarget.RemoveEventListener(string, Action, Union2) EventTarget.AddEventListener(string, EventListener, Union1) EventTarget.RemoveEventListener(string, EventListener, Union2) EventTarget.DispatchEvent(Event) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks AvailableInWorkers(\"notservice\") -XMLHttpRequest See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XPathEvaluator.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XPathEvaluator.html",
    "title": "Class XPathEvaluator | CSharpToJavaScript",
    "keywords": "Class XPathEvaluator Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XPathEvaluator interface allows to compile and evaluate XPath expressions. [To(\"FirstCharToLowerCase\")] public class XPathEvaluator Inheritance object XPathEvaluator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Document.CreateExpression -XPathExpression See also on MDN Constructors XPathEvaluator() The XPathEvaluator() constructor creates a new XPathEvaluator. public XPathEvaluator() Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XPathEvaluatorBase.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XPathEvaluatorBase.html",
    "title": "Interface XPathEvaluatorBase | CSharpToJavaScript",
    "keywords": "Interface XPathEvaluatorBase Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll [To(\"FirstCharToLowerCase\")] public interface XPathEvaluatorBase Methods CreateExpression(string, XPathNSResolver?) XPathExpression CreateExpression(string expression, XPathNSResolver? resolver) Parameters expression string resolver XPathNSResolver Returns XPathExpression CreateNSResolver(Node) XPathNSResolver CreateNSResolver(Node nodeResolver) Parameters nodeResolver Node Returns XPathNSResolver Evaluate(string, Node, XPathNSResolver?, ushort, XPathResult?) XPathResult Evaluate(string expression, Node contextNode, XPathNSResolver? resolver, ushort type, XPathResult? result) Parameters expression string contextNode Node resolver XPathNSResolver type ushort result XPathResult Returns XPathResult"
  },
  "api/CSharpToJavaScript.APIs.JS.XPathExpression.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XPathExpression.html",
    "title": "Class XPathExpression | CSharpToJavaScript",
    "keywords": "Class XPathExpression Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll This is useful when an expression will be reused in an application, because it is just compiled once and all namespace prefixes which occur within the expression are preresolved. [To(\"FirstCharToLowerCase\")] public class XPathExpression Inheritance object XPathExpression Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Objects of this type are created by calling XPathEvaluator.CreateExpression. -Document.CreateExpression -XPathResult See also on MDN Methods Evaluate(Node, ushort, XPathResult?) The evaluate() method of the XPathExpression interface executes an XPath expression on the given node or document and returns an XPathResult. public XPathResult Evaluate(Node contextNode, ushort type, XPathResult? result) Parameters contextNode Node type ushort result XPathResult Returns XPathResult An XPathResult object representing the result of evaluating the XPath expression. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XPathNSResolver.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XPathNSResolver.html",
    "title": "Interface XPathNSResolver | CSharpToJavaScript",
    "keywords": "Interface XPathNSResolver Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XPathNSResolver interface permits prefix strings in an XPath expression to be properly bound to namespace URI strings. [To(\"FirstCharToLowerCase\")] public interface XPathNSResolver Remarks The XPathEvaluator interface can construct an implementation of XPathNSResolver from a node, or the interface may be implemented by any application. -XPathEvaluator See also on MDN Methods LookupNamespaceURI(string?) The lookupNamespaceURI method looks up the namespace URI associated to the given namespace prefix within an XPath expression evaluated by the XPathEvaluator interface. string? LookupNamespaceURI(string? prefix) Parameters prefix string Returns string A string representing the associated namespace URI or null if none is found. Remarks -XPathEvaluator -LookupNamespaceURI(string?) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XPathResult.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XPathResult.html",
    "title": "Class XPathResult | CSharpToJavaScript",
    "keywords": "Class XPathResult Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The XPathResult interface represents the results generated by evaluating an XPath expression within the context of a given node. [To(\"FirstCharToLowerCase\")] public class XPathResult Inheritance object XPathResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Since XPath expressions can result in a variety of result types, this interface makes it possible to determine and handle the type and value of the result. -Document.Evaluate -XPathExpression -Dottoro Web Reference - XPathResult object See also on MDN Fields ANY_TYPE public const ushort ANY_TYPE = 0 Field Value ushort ANY_UNORDERED_NODE_TYPE public const ushort ANY_UNORDERED_NODE_TYPE = 8 Field Value ushort BOOLEAN_TYPE public const ushort BOOLEAN_TYPE = 3 Field Value ushort FIRST_ORDERED_NODE_TYPE public const ushort FIRST_ORDERED_NODE_TYPE = 9 Field Value ushort NUMBER_TYPE public const ushort NUMBER_TYPE = 1 Field Value ushort ORDERED_NODE_ITERATOR_TYPE public const ushort ORDERED_NODE_ITERATOR_TYPE = 5 Field Value ushort ORDERED_NODE_SNAPSHOT_TYPE public const ushort ORDERED_NODE_SNAPSHOT_TYPE = 7 Field Value ushort STRING_TYPE public const ushort STRING_TYPE = 2 Field Value ushort UNORDERED_NODE_ITERATOR_TYPE public const ushort UNORDERED_NODE_ITERATOR_TYPE = 4 Field Value ushort UNORDERED_NODE_SNAPSHOT_TYPE public const ushort UNORDERED_NODE_SNAPSHOT_TYPE = 6 Field Value ushort Properties BooleanValue The read-only booleanValue property of the XPathResult interface returns the boolean value of a result with ResultType being BOOLEAN_TYPE. public bool BooleanValue { get; } Property Value bool The return value is the boolean value of the XPathResult returned by Document.Evaluate. Remarks AvailableInWorkers See also on MDN InvalidIteratorState The read-only invalidIteratorState property of the XPathResult interface signifies that the iterator has become invalid. It is true if ResultType is UNORDERED_NODE_ITERATOR_TYPE or ORDERED_NODE_ITERATOR_TYPE and the document has been modified since this result was returned. public bool InvalidIteratorState { get; } Property Value bool A boolean value indicating whether the iterator has become invalid. Remarks AvailableInWorkers See also on MDN NumberValue The read-only numberValue property of the XPathResult interface returns the numeric value of a result with ResultType being NUMBER_TYPE. public double NumberValue { get; } Property Value double The return value is the numeric value of the XPathResult returned by Document.Evaluate. Remarks AvailableInWorkers See also on MDN ResultType The read-only resultType property of the XPathResult interface represents the type of the result, as defined by the type constants. public ushort ResultType { get; } Property Value ushort An integer value representing the type of the result, as defined by the type constants. Remarks AvailableInWorkers See also on MDN SingleNodeValue The read-only singleNodeValue property of the XPathResult interface returns a Node value or null in case no node was matched of a result with ResultType being ANY_UNORDERED_NODE_TYPE or FIRST_ORDERED_NODE_TYPE. public Node? SingleNodeValue { get; } Property Value Node The return value is the Node value of the XPathResult returned by Document.Evaluate. Remarks See also on MDN SnapshotLength The read-only snapshotLength property of the XPathResult interface represents the number of nodes in the result snapshot. public ulong SnapshotLength { get; } Property Value ulong An integer value representing the number of nodes in the result snapshot. Remarks AvailableInWorkers See also on MDN StringValue The read-only stringValue property of the XPathResult interface returns the string value of a result with ResultType being STRING_TYPE. public string StringValue { get; } Property Value string The return value is the string value of the XPathResult returned by Document.Evaluate. Remarks AvailableInWorkers See also on MDN Methods IterateNext() The iterateNext() method of the XPathResult interface iterates over a node set result and returns the next node from it or null if there are no more nodes. public Node? IterateNext() Returns Node The next Node within the node set of the XPathResult. Remarks See also on MDN SnapshotItem(ulong) The snapshotItem() method of the XPathResult interface returns an item of the snapshot collection or null in case the index is not within the range of nodes. Unlike the iterator result, the snapshot does not become invalid, but may not correspond to the current document if it is mutated. public Node? SnapshotItem(ulong index) Parameters index ulong Returns Node The Node at the given index within the node set of the XPathResult. Remarks See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.XSLTProcessor.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.XSLTProcessor.html",
    "title": "Class XSLTProcessor | CSharpToJavaScript",
    "keywords": "Class XSLTProcessor Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll An XSLTProcessor applies an XSLT stylesheet transformation to an XML document to produce a new XML document as output. It has methods to load the XSLT stylesheet, to manipulate &lt;xsl:param&gt; parameter values, and to apply the transformation to documents. [To(\"FirstCharToLowerCase\")] public class XSLTProcessor Inheritance object XSLTProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks -Using the Mozilla JavaScript interface to XSL Transformations See also on MDN Constructors XSLTProcessor() The XSLTProcessor() constructor creates a new XSLTProcessor object instance. public XSLTProcessor() Remarks See also on MDN Methods ClearParameters() The clearParameters() method of the XSLTProcessor interface removes all parameters (&lt;xsl:param&gt;) and their values from the stylesheet imported in the processor. The XSLTProcessor will then use the default values specified in the XSLT stylesheet. public GlobalObject.Undefined ClearParameters() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -GetParameter(string, string) -SetParameter(string, string, dynamic) -RemoveParameter(string, string) -Reset() See also on MDN GetParameter(string, string) The getParameter() method of the XSLTProcessor interface returns the value of a parameter (&lt;xsl:param&gt;) from the stylesheet imported in the processor. public dynamic GetParameter(string namespaceURI, string localName) Parameters namespaceURI string localName string Returns dynamic An object that is the value associated with the parameter. It can be of any type. NOTE Note: Firefox supports any kind of parameter. Chrome, Edge and Safari only support string parameters. Remarks -SetParameter(string, string, dynamic) -RemoveParameter(string, string) -ClearParameters() -Reset() See also on MDN ImportStylesheet(Node) The importStylesheet() method of the XSLTProcessor interface imports an XSLT stylesheet for the processor. public GlobalObject.Undefined ImportStylesheet(Node style) Parameters style Node Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN RemoveParameter(string, string) The removeParameter() method of the XSLTProcessor interface removes the parameter (&lt;xsl:param&gt;) and its value from the stylesheet imported in the processor. public GlobalObject.Undefined RemoveParameter(string namespaceURI, string localName) Parameters namespaceURI string localName string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -GetParameter(string, string) -SetParameter(string, string, dynamic) -ClearParameters() -Reset() See also on MDN Reset() The reset() method of the XSLTProcessor interface removes all parameters (&lt;xsl:param&gt;) and the XSLT stylesheet from the processor. The XSLTProcessor will then be in its original state when it was created. public GlobalObject.Undefined Reset() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -GetParameter(string, string) -SetParameter(string, string, dynamic) -RemoveParameter(string, string) -ClearParameters() See also on MDN SetParameter(string, string, dynamic) The setParameter() method of the XSLTProcessor interface sets the value of a parameter (&lt;xsl:param&gt;) in the stylesheet imported in the processor. public GlobalObject.Undefined SetParameter(string namespaceURI, string localName, dynamic value) Parameters namespaceURI string localName string value dynamic Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks -GetParameter(string, string) -RemoveParameter(string, string) -ClearParameters() -Reset() See also on MDN TransformToDocument(Node) The transformToDocument() method of the XSLTProcessor interface transforms the provided Node source to a Document using the XSLT stylesheet associated with XSLTProcessor. public Document TransformToDocument(Node source) Parameters source Node Returns Document A Document. The actual interface depends on the output method of the stylesheet: Output method Result interface html HTMLDocument xml XMLDocument text XMLDocument with a single root element &lt;transformiix:result&gt; with the text as a child Remarks -TransformToDocument(Node) See also on MDN TransformToFragment(Node, Document) The transformToFragment() method of the XSLTProcessor interface transforms a provided Node source to a DocumentFragment using the XSLT stylesheet associated with the XSLTProcessor. public DocumentFragment TransformToFragment(Node source, Document output) Parameters source Node output Document Returns DocumentFragment A DocumentFragment. Remarks -TransformToDocument(Node) See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.console.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.console.html",
    "title": "Class console | CSharpToJavaScript",
    "keywords": "Class console Namespace CSharpToJavaScript.APIs.JS Assembly CSharpToJavaScript.dll The console object provides access to the browser&apos;s debugging console (e.g. the Web console in Firefox). The specifics of how it works varies from browser to browser, but there is a de facto set of features that are typically provided. [To(\"FirstCharToLowerCase\")] public class console Inheritance object console Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The console object can be accessed from any global object. Window on browsing scopes and WorkerGlobalScope as specific variants in workers via the property console. It's exposed as Window.Console, and can be referenced as console. For example: This page documents the Methods available on the console object and gives a few Usage examples. AvailableInWorkers NOTE Note: Certain online IDEs and editors may implement the console API differently than the browsers. As a result, certain functionality of the console API, such as the timer methods, may not be outputted in the console of online IDEs or editors. Always open your browser&apos;s DevTools console to see the logs as shown in this documentation. -Firefox Developer Tools -Web console — how the Web console in Firefox handles console API calls -about:debugging — how to see console output when the debugging target is a mobile device See also on MDN Methods Assert(bool, params dynamic[]) The console.assert() method writes an error message to the console if the assertion is false. If the assertion is true, nothing happens. public GlobalObject.Undefined Assert(bool condition, params dynamic[] data) Parameters condition bool data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers See also on MDN Clear() The console.clear() method clears the console if the console allows it. A graphical console, like those running on browsers, will allow it; a console displaying on the terminal, like the one running on Node, will not support it, and will have no effect (and no error). public GlobalObject.Undefined Clear() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Count(string) The console.count() method logs the number of times that this particular call to count() has been called. public GlobalObject.Undefined Count(string label) Parameters label string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers See also on MDN CountReset(string) The console.countReset() method resets counter used with Console.Count. public GlobalObject.Undefined CountReset(string label) Parameters label string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers See also on MDN Debug(params dynamic[]) The console.debug() method outputs a message to the web console at the &quot;debug&quot; log level. The message is only displayed to the user if the console is configured to display debug output. In most cases, the log level is configured within the console UI. This log level might correspond to the Debug or Verbose log level. public GlobalObject.Undefined Debug(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers See also on MDN Dir(dynamic, object?) The method console.dir() displays an interactive list of the properties of the specified JavaScript object. The output is presented as a hierarchical listing with disclosure triangles that let you see the contents of child objects. public GlobalObject.Undefined Dir(dynamic item, object? options) Parameters item dynamic options object Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks In other words, console.dir() is the way to see all the properties of a specified JavaScript object in console by which the developer can easily get the properties of the object. AvailableInWorkers console-dir.png -MSDN: Using the F12 Tools Console to View Errors and Status -Chrome Console API reference See also on MDN Dirxml(params dynamic[]) The console.dirxml() method displays an interactive tree of the descendant elements of the specified XML/HTML element. If it is not possible to display as an element the JavaScript Object view is shown instead. The output is presented as a hierarchical listing of expandable nodes that let you see the contents of child nodes. public GlobalObject.Undefined Dirxml(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Error(params dynamic[]) The console.error() method outputs an error message to the Web console. public GlobalObject.Undefined Error(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -MSDN: Using the F12 Tools Console to View Errors and Status -Chrome Developer Tools: Using the Console See also on MDN Group(params dynamic[]) The console.group() method creates a new inline group in the Web console log, causing any subsequent console messages to be indented by an additional level, until Console.GroupEnd is called. public GlobalObject.Undefined Group(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -Console.GroupEnd See also on MDN GroupCollapsed(params dynamic[]) The console.groupCollapsed() method creates a new inline group in the Web Console. Unlike Console.Group, however, the new group is created collapsed. The user will need to use the disclosure button next to it to expand it, revealing the entries created in the group. public GlobalObject.Undefined GroupCollapsed(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks Call Console.GroupEnd to back out to the parent group. See Using groups in the console in the Console documentation for details and examples. AvailableInWorkers See also on MDN GroupEnd() The console.groupEnd() method exits the current inline group in the Web console. See Using groups in the console in the Console documentation for details and examples. public GlobalObject.Undefined GroupEnd() Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -Console.Group See also on MDN Info(params dynamic[]) The console.info() method outputs an informational message to the Web console. In Firefox, a small &quot;i&quot; icon is displayed next to these items in the Web console&apos;s log. public GlobalObject.Undefined Info(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -MSDN: Using the F12 Tools Console to View Errors and Status See also on MDN Log(params dynamic[]) The console.log() method outputs a message to the web console. The message may be a single string (with optional substitution values), or it may be any one or more JavaScript objects. public GlobalObject.Undefined Log(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers -MSDN: Using the F12 Tools Console to View Errors and Status -NodeJS: Console API See also on MDN Table(dynamic, List<string>) The console.table() method displays tabular data as a table. public GlobalObject.Undefined Table(dynamic tabularData, List<string> properties) Parameters tabularData dynamic properties List<string> Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks This function takes one mandatory argument data, which must be an array or an object, and one additional optional parameter columns. It logs data as a table. Each element in the array (or enumerable property if data is an object) will be a row in the table. The first column in the table will be labeled (index). If data is an array, then its values will be the array indices. If data is an object, then its values will be the property names. Note that (in Firefox) console.table is limited to displaying 1000 rows (first row is the labeled index). AvailableInWorkers See also on MDN Time(string) The console.time() method starts a timer you can use to track how long an operation takes. You give each timer a unique name, and may have up to 10,000 timers running on a given page. When you call Console.TimeEnd with the same name, the browser will output the time, in milliseconds, that elapsed since the timer was started. public GlobalObject.Undefined Time(string label) Parameters label string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See Timers in the Console documentation for details and examples. AvailableInWorkers -Console.TimeEnd -Console.TimeLog See also on MDN TimeEnd(string) The console.timeEnd() stops a timer that was previously started by calling Console.Time. public GlobalObject.Undefined TimeEnd(string label) Parameters label string Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See Timers in the documentation for details and examples. AvailableInWorkers See also on MDN TimeLog(string, params dynamic[]) The console.timeLog() method logs the current value of a timer that was previously started by calling Console.Time. public GlobalObject.Undefined TimeLog(string label, params dynamic[] data) Parameters label string data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks See also on MDN Trace(params dynamic[]) The console.trace() method outputs a stack trace to the Web console. public GlobalObject.Undefined Trace(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers NOTE Note: In some browsers, console.trace() may also output the sequence of calls and asynchronous events leading to the current console.trace() which are not on the call stack — to help identify the origin of the current event evaluation loop. See Stack traces in the Console documentation for details and examples. See also on MDN Warn(params dynamic[]) The console.warn() method outputs a warning message to the Web console. public GlobalObject.Undefined Warn(params dynamic[] data) Parameters data dynamic[] Returns GlobalObject.Undefined None (GlobalObject.Undefined). Remarks AvailableInWorkers NOTE Note: In Chrome and Firefox, warnings have a small exclamation point icon next to them in the Web console log. -MSDN: Using the F12 Tools Console to View Errors and Status See also on MDN"
  },
  "api/CSharpToJavaScript.APIs.JS.html": {
    "href": "api/CSharpToJavaScript.APIs.JS.html",
    "title": "Namespace CSharpToJavaScript.APIs.JS | CSharpToJavaScript",
    "keywords": "Namespace CSharpToJavaScript.APIs.JS Classes AbortController The AbortController interface represents a controller object that allows you to abort one or more Web requests as and when desired. AbortSignal The AbortSignal interface represents a signal object that allows you to communicate with a DOM request (such as a fetch request) and abort it if required via an AbortController object. AbstractRange The AbstractRange abstract interface is the base class upon which all DOM range types are defined. A range is an object that indicates the start and end points of a section of content within the document. AddEventListenerOptions AssignedNodesOptions Attr The Attr interface represents one of an element's attributes as an object. In most situations, you will directly retrieve the attribute value as a string (e.g., GetAttribute(string)), but certain functions (e.g., GetAttributeNode(string)) or means of iterating return Attr instances. AudioTrack The AudioTrack interface represents a single audio track from one of the HTML media elements, audio or video. AudioTrackList The AudioTrackList interface is used to represent a list of the audio tracks contained within a given HTML media element, with each track represented by a separate AudioTrack object in the list. BarProp The BarProp interface of the 'Document Object Model' represents the web browser user interface elements that are exposed to scripts in web pages. Each of the following interface elements are represented by a BarProp object. BeforeUnloadEvent BeforeUnloadEvent is an interface for the Window/beforeunload_event event. BroadcastChannel The BroadcastChannel interface represents a named channel that any {{glossary(\"browsing context\")}} of a given {{glossary(\"origin\")}} can subscribe to. It allows communication between different documents (in different windows, tabs, frames or iframes) of the same origin. Messages are broadcasted via a BroadcastChannel/message_event event fired at all BroadcastChannel objects listening to the channel, except the object that sent the message. CDATASection The CDATASection interface represents a CDATA section that can be used within XML to include extended portions of unescaped text. When inside a CDATA section, the symbols &lt; and & don&apos;t need escaping as they normally do. CanvasFilter CanvasGradient The CanvasGradient interface represents an opaque object describing a gradient. It is returned by the methods CanvasRenderingContext2D.CreateLinearGradient, CanvasRenderingContext2D.CreateConicGradient or CanvasRenderingContext2D.CreateRadialGradient. CanvasPattern The CanvasPattern interface represents an opaque object describing a pattern, based on an image, a canvas, or a video, created by the CanvasRenderingContext2D.CreatePattern method. CanvasRenderingContext2D The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D rendering context for the drawing surface of a canvas element. It is used for drawing shapes, text, images, and other objects. CanvasRenderingContext2DSettings CharacterData The CharacterData abstract interface represents a Node object that contains characters. This is an abstract interface, meaning there aren't any objects of type CharacterData: it is implemented by other interfaces like Text, Comment, CDATASection, or ProcessingInstruction, which aren't abstract. Comment The Comment interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view. CustomElementRegistry The CustomElementRegistry interface provides methods for registering custom elements and querying registered elements. To get an instance of it, use the CustomElements property. CustomEvent The CustomEvent interface represents events initialized by an application for any purpose. CustomEventInit DOMException The DOMException interface represents an abnormal event (called an exception) that occurs as a result of calling a method or accessing a property of a web API. This is how error conditions are described in web APIs. DOMImplementation The DOMImplementation interface represents an object providing methods which are not dependent on any particular document. Such an object is returned by the Document.Implementation property. DOMParser The DOMParser interface provides the ability to parse XML or HTML source code from a string into a DOM Document. DOMStringList The DOMString interface is a legacy type returned by some APIs and represents a non-modifiable list of strings (DOMString). Modern APIs use Array objects (in WebIDL: sequence&lt;DOMString&gt;) instead. DOMStringMap The DOMStringMap interface is used for the HTMLElement.Dataset/SVGElement.Dataset attribute, to represent data for custom attributes added to elements. DOMTokenList The DOMTokenList interface represents a set of space-separated tokens. Such a set is returned by ClassList or RelList, and many others. DataTransfer The DataTransfer object is used to hold the data that is being dragged during a drag and drop operation. It may hold one or more data items, each of one or more data types. For more information about drag and drop, see HTML Drag and Drop API. DataTransferItem The DataTransferItem object represents one drag data item. During a drag operation, each DragEvent has a DataTransfer property which contains a DataTransferItemList of drag data items. Each item in the list is a DataTransferItem object. DataTransferItemList The DataTransferItemList object is a list of DataTransferItem objects representing items being dragged. During a drag operation, each DragEvent has a DataTransfer property and that property is a DataTransferItemList. Date DatePrototype DedicatedWorkerGlobalScope The DedicatedWorkerGlobalScope object (the Worker global scope) is accessible through the Self keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See also: Functions available to workers. Document The Document interface represents any web page loaded in the browser and serves as an entry point into the web page&apos;s content, which is the DOM tree. DocumentFragment The DocumentFragment interface represents a minimal document object that has no parent. DocumentType The DocumentType interface represents a Node containing a doctype. DragEvent The DragEvent interface is a Event that represents a drag and drop interaction. The user initiates a drag by placing a pointer device (such as a mouse) on the touch surface and then dragging the pointer to a new location (such as another DOM element). Applications are free to interpret a drag and drop interaction in an application-specific way. DragEventInit Element Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element. ElementDefinitionOptions ElementInternals The ElementInternals interface of the Document Object Model gives web developers a way to allow custom elements to fully participate in HTML forms. It provides utilities for working with these elements in the same way you would work with any standard HTML form element, and also exposes the Accessibility Object Model to the element. ErrorEvent The ErrorEvent interface represents events providing information related to errors in scripts or in files. ErrorEventInit Event The Event interface represents an event which takes place in the DOM. EventInit EventListenerOptions EventSource The EventSource interface is web content&apos;s interface to server-sent events. EventSourceInit EventTarget The EventTarget interface is implemented by objects that can receive events and may have listeners for them. In other words, any target of events implements the three methods associated with this interface. External FocusOptions FormData The FormData interface provides a way to construct a set of key/value pairs representing form fields and their values, which can be sent using the Fetch, Send(Union50?) or Navigator.SendBeacon methods. It uses the same format a form would use if the encoding type were set to &quot;multipart/form-data&quot;. FormDataEvent The FormDataEvent interface represents a formdata event — such an event is fired on an HTMLFormElement object after the entry list representing the form's data is constructed. This happens when the form is submitted, but can also be triggered by the invocation of a FormData(HTMLFormElement) constructor. FormDataEventInit FullscreenOptions GM GM.Info GM.Info.Script GetNotificationOptions GetRootNodeOptions GlobalObject GlobalObject.GlobalThis GlobalObject.Infinity GlobalObject.NaN GlobalObject.Undefined HTMLAllCollection HTMLAnchorElement The HTMLAnchorElement interface represents hyperlink elements and provides special properties and methods (beyond those of the regular HTMLElement object interface that they inherit from) for manipulating the layout and presentation of such elements. This interface corresponds to &lt;a&gt; element; not to be confused with &lt;link&gt;, which is represented by HTMLLinkElement) HTMLAreaElement The HTMLAreaElement interface provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{HtmlElement(\"area\")}} elements. HTMLAudioElement The HTMLAudioElement interface provides access to the properties of audio elements, as well as methods to manipulate them. HTMLBRElement The HTMLBRElement interface represents an HTML line break element ({{htmlelement(\"br\")}}). It inherits from HTMLElement. HTMLBaseElement The HTMLBaseElement interface contains the base URI for a document. This object inherits all of the properties and methods as described in the HTMLElement interface. HTMLBodyElement The HTMLBodyElement interface provides special properties (beyond those inherited from the regular HTMLElement interface) for manipulating {{HtmlElement(\"body\")}} elements. HTMLButtonElement The HTMLButtonElement interface provides properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"button\")}} elements. HTMLCanvasElement The HTMLCanvasElement interface provides properties and methods for manipulating the layout and presentation of canvas elements. The HTMLCanvasElement interface also inherits the properties and methods of the HTMLElement interface. HTMLCollection The HTMLCollection interface represents a generic collection (array-like object similar to Functions/arguments) of elements (in document order) and offers methods and properties for selecting from the list. HTMLDListElement The HTMLDListElement interface provides special properties (beyond those of the regular HTMLElement interface it also has available to it by inheritance) for manipulating definition list ({{HtmlElement(\"dl\")}}) elements. HTMLDataElement The HTMLDataElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"data\")}} elements. HTMLDataListElement The HTMLDataListElement interface provides special properties (beyond the HTMLElement object interface it also has available to it by inheritance) to manipulate {{ HTMLElement(\"datalist\") }} elements and their content. HTMLDetailsElement The HTMLDetailsElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"details\")}} elements. HTMLDialogElement The HTMLDialogElement interface provides methods to manipulate {{HTMLElement(\"dialog\")}} elements. It inherits properties and methods from the HTMLElement interface. HTMLDirectoryElement HTMLDivElement The HTMLDivElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HtmlElement(\"div\")}} elements. HTMLElement The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it. HTMLEmbedElement The HTMLEmbedElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"embed\")}} elements. HTMLFieldSetElement The HTMLFieldSetElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{ HTMLElement(\"fieldset\") }} elements. HTMLFontElement IMPORTANT Deprecated Implements the document object model (DOM) representation of the font element. The HTML Font Element font defines the font size, font face and color of text. HTMLFormControlsCollection The HTMLFormControlsCollection interface represents a collection of HTML form control elements, returned by the HTMLFormElement interface's Elements property. HTMLFormElement The HTMLFormElement interface represents a form element in the DOM. It allows access to—and, in some cases, modification of—aspects of the form, as well as access to its component elements. HTMLFrameElement HTMLFrameSetElement IMPORTANT Deprecated The HTMLFrameSetElement interface provides special properties (beyond those of the regular HTMLElement interface they also inherit) for manipulating {{HTMLELEment(\"frameset\")}} elements. HTMLHRElement The HTMLHRElement interface provides special properties (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"hr\")}} elements. HTMLHeadElement The HTMLHeadElement interface contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the HTMLElement interface. HTMLHeadingElement The HTMLHeadingElement interface represents the different heading elements, &lt;h1&gt; through &lt;h6&gt;. It inherits methods and properties from the HTMLElement interface. HTMLHtmlElement The HTMLHtmlElement interface serves as the root node for a given HTML document. This object inherits the properties and methods described in the HTMLElement interface. HTMLIFrameElement The HTMLIFrameElement interface provides special properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of inline frame elements. HTMLImageElement The HTMLImageElement interface represents an HTML img element, providing the properties and methods used to manipulate image elements. HTMLInputElement The HTMLInputElement interface provides special properties and methods for manipulating the options, layout, and presentation of input elements. HTMLLIElement The HTMLLIElement interface exposes specific properties and methods (beyond those defined by regular HTMLElement interface it also has available to it by inheritance) for manipulating list elements. HTMLLabelElement The HTMLLabelElement interface gives access to properties specific to {{HTMLElement(\"label\")}} elements. It inherits methods and properties from the base HTMLElement interface. HTMLLegendElement The HTMLLegendElement is an interface allowing to access properties of the {{HTMLElement(\"legend\")}} elements. It inherits properties and methods from the HTMLElement interface. HTMLLinkElement The HTMLLinkElement interface represents reference information for external resources and the relationship of those resources to a document and vice versa (corresponds to &lt;link&gt; element; not to be confused with &lt;a&gt;, which is represented by HTMLAnchorElement). This object inherits all of the properties and methods of the HTMLElement interface. HTMLMapElement The HTMLMapElement interface provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of map elements. HTMLMarqueeElement IMPORTANT Deprecated The HTMLMarqueeElement interface provides methods to manipulate marquee elements. HTMLMediaElement The HTMLMediaElement interface adds to HTMLElement the properties and methods needed to support basic media-related capabilities that are common to audio and video. HTMLMenuElement The HTMLMenuElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"menu\")}} elements. HTMLMetaElement The HTMLMetaElement interface contains descriptive metadata about a document provided in HTML as &lt;meta&gt; elements. This interface inherits all of the properties and methods described in the HTMLElement interface. HTMLMeterElement HTMLModElement The HTMLModElement interface provides special properties (beyond the regular methods and properties available through the HTMLElement interface they also have available to them by inheritance) for manipulating modification elements, that is {{HTMLElement(\"del\")}} and {{HTMLElement(\"ins\")}}. HTMLOListElement The HTMLOListElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating ordered list elements. HTMLObjectElement The HTMLObjectElement interface provides special properties and methods (beyond those on the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{HTMLElement(\"object\")}} element, representing external resources. HTMLOptGroupElement The HTMLOptGroupElement interface provides special properties and methods (beyond the regular HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of {{HTMLElement(\"optgroup\")}} elements. HTMLOptionElement The HTMLOptionElement interface represents {{HTMLElement(\"option\")}} elements and inherits all properties and methods of the HTMLElement interface. HTMLOptionsCollection The HTMLOptionsCollection interface represents a collection of &lt;option&gt; HTML elements (in document order) and offers methods and properties for selecting from the list as well as optionally altering its items. This object is returned only by the options property of select. HTMLOutputElement The HTMLOutputElement interface provides properties and methods (beyond those inherited from HTMLElement) for manipulating the layout and presentation of {{HTMLElement(\"output\")}} elements. HTMLParagraphElement The HTMLParagraphElement interface provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating {{HTMLElement(\"p\")}} elements. HTMLParamElement IMPORTANT Deprecated The HTMLParamElement interface provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating {{HTMLElement(\"param\")}} elements, representing a pair of a key and a value that acts as a parameter for an {{HTMLElement(\"object\")}} element. HTMLPictureElement The HTMLPictureElement interface represents a picture HTML element. It doesn't implement specific properties or methods. HTMLPreElement The HTMLPreElement interface exposes specific properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating a block of preformatted text ({{HtmlElement(\"pre\")}}). HTMLProgressElement The HTMLProgressElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of {{HTMLElement(\"progress\")}} elements. HTMLQuoteElement The HTMLQuoteElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating quoting elements, like {{HTMLElement(\"blockquote\")}} and {{HTMLElement(\"q\")}}, but not the {{HTMLElement(\"cite\")}} element. HTMLScriptElement JavaScript files should be served with the application/javascript MIME type, but browsers are lenient and block them only if the script is served with an image type (image/), video type (video/), audio type (audio/*), or text/csv. If the script is blocked, its element receives an Element/error_event event; otherwise, it receives a Window/load_event event. HTMLSelectElement The HTMLSelectElement interface represents a {{HTMLElement(\"select\")}} HTML Element. These elements also share all of the properties and methods of other HTML elements via the HTMLElement interface. HTMLSlotElement The HTMLSlotElement interface of the Shadow DOM API enables access to the name and assigned nodes of an HTML slot element. HTMLSourceElement The HTMLSourceElement interface provides special properties (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating {{htmlelement(\"source\")}} elements. HTMLSpanElement The HTMLSpanElement interface represents a {{HTMLElement(\"span\")}} element and derives from the HTMLElement interface, but without implementing any additional properties or methods. HTMLStyleElement The HTMLStyleElement interface represents a {{HTMLElement(\"style\")}} element. It inherits properties and methods from its parent, HTMLElement. HTMLTableCaptionElement The HTMLTableCaptionElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating table {{HTMLElement(\"caption\")}} elements. HTMLTableCellElement The HTMLTableCellElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of table cells, either header cells ({{HTMLElement(\"th\")}})) or data cells ({{HTMLElement(\"td\")}}), in an HTML document. HTMLTableColElement The HTMLTableColElement interface provides properties for manipulating single or grouped table column elements. HTMLTableElement The HTMLTableElement interface provides special properties and methods (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating the layout and presentation of tables in an HTML document. HTMLTableRowElement The HTMLTableRowElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table. HTMLTableSectionElement The HTMLTableSectionElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies ({{HTMLElement(\"thead\")}}, {{HTMLElement(\"tfoot\")}}, and {{HTMLElement(\"tbody\")}}, respectively) in an HTML table. HTMLTemplateElement The HTMLTemplateElement interface enables access to the contents of an HTML template element. HTMLTextAreaElement The HTMLTextAreaElement interface provides special properties and methods for manipulating the layout and presentation of textarea elements. HTMLTimeElement The HTMLTimeElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating {{HTMLElement(\"time\")}} elements. HTMLTitleElement The HTMLTitleElement interface is implemented by a document's {{ HTMLElement( \"title\" )}}. This element inherits all of the properties and methods of the HTMLElement interface. HTMLTrackElement The HTMLTrackElement interface represents an HTML {{HTMLElement(\"track\")}} element within the DOM. This element can be used as a child of either {{HTMLElement(\"audio\")}} or {{HTMLElement(\"video\")}} to specify a text track containing information such as closed captions or subtitles. HTMLUListElement The HTMLUListElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating unordered list ({{HTMLElement(\"ul\")}}) elements. HTMLUnknownElement The HTMLUnknownElement interface represents an invalid HTML element and derives from the HTMLElement interface, but without implementing any additional properties or methods. HTMLVideoElement The list of supported media formats varies from one browser to the other. You should either provide your video in a single format that all the relevant browsers supports, or provide multiple video sources in enough different formats that all the browsers you need to support are covered. HashChangeEvent The HashChangeEvent interface represents events that fire when the fragment identifier of the URL has changed. HashChangeEventInit Headers The Headers interface of the Fetch API allows you to perform various actions on HTTP request and response headers. These actions include retrieving, setting, adding to, and removing headers from the list of the request&apos;s headers. History The History interface allows manipulation of the browser session history, that is the pages visited in the tab or frame that the current page is loaded in. ImageBitmap The ImageBitmap interface represents a bitmap image which can be drawn to a {{HTMLElement(\"canvas\")}} without undue latency. It can be created from a variety of source objects using the CreateImageBitmap factory method. ImageBitmap provides an asynchronous and resource efficient pathway to prepare textures for rendering in WebGL. ImageBitmapOptions ImageBitmapRenderingContext The ImageBitmapRenderingContext interface is a canvas rendering context that provides the functionality to replace the canvas's contents with the given ImageBitmap. Its context id (the first argument to GetContext(string, dynamic) or GetContext(OffscreenRenderingContextId, dynamic)) is &quot;bitmaprenderer&quot;. ImageBitmapRenderingContextSettings ImageData The ImageData interface represents the underlying pixel data of an area of a canvas element. ImageDataSettings ImageEncodeOptions Location The Location interface represents the location (URL) of the object it is linked to. Changes done on it are reflected on the object it relates to. Both the Document and Window interface have such a linked Location, accessible via Location and Location respectively. Math MediaError The MediaError interface represents an error which occurred while handling media in an HTML media element based on HTMLMediaElement, such as {{HTMLElement(\"audio\")}} or {{HTMLElement(\"video\")}}. MessageChannel The MessageChannel interface of the Channel Messaging API allows us to create a new message channel and send data through it via its two MessagePort properties. MessageEvent The MessageEvent interface represents a message received by a target object. MessageEventInit MessagePort The MessagePort interface of the Channel Messaging API represents one of the two ports of a MessageChannel, allowing messages to be sent from one port and listening out for them arriving at the other. MimeType IMPORTANT Deprecated The MimeType interface provides contains information about a MIME type associated with a particular plugin. Navigator.MimeTypes returns an array of this object. MimeTypeArray IMPORTANT Deprecated The MimeTypeArray interface returns an array of 'MimeType' instances, each of which contains information about a supported browser plugins. This object is returned by Navigator.MimeTypes. MouseEvent MutationObserver The MutationObserver interface provides the ability to watch for changes being made to the DOM tree. It is designed as a replacement for the older Mutation Events feature, which was part of the DOM3 Events specification. MutationObserverInit MutationRecord The MutationRecord is a read-only interface that represents an individual DOM mutation observed by a MutationObserver. It is the object inside the array passed to the callback of a MutationObserver. NamedNodeMap The NamedNodeMap interface represents a collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array. Navigator The Navigator interface represents the state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities. Node In addition, every kind of DOM node is represented by an interface based on Node. These include Attr, CharacterData (which Text, Comment, CDATASection and ProcessingInstruction are all based on), and DocumentType. NodeIterator The NodeIterator interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order. NodeList NodeList objects are collections of nodes, usually returned by properties such as ChildNodes and methods such as Document.QuerySelectorAll. Notification The Notification interface of the Notifications API is used to configure and display desktop notifications to the user. NotificationAction NotificationEvent The parameter passed into the ServiceWorkerGlobalScope.Notificationclick_event handler, the NotificationEvent interface represents a notification click event that is dispatched on the ServiceWorkerGlobalScope of a ServiceWorker. NotificationEventInit NotificationOptions Object ObjectPrototype OffscreenCanvas The OffscreenCanvas interface provides a canvas that can be rendered off screen, decoupling the DOM and the Canvas API so that the canvas element is no longer entirely dependent on the DOM. Rendering operations can also be run inside a worker context, allowing you to run some tasks in a separate thread and avoid heavy work on the main thread. OffscreenCanvasRenderingContext2D The OffscreenCanvasRenderingContext2D interface is a CanvasRenderingContext2D rendering context for drawing to the bitmap of an OffscreenCanvas object. It is similar to the CanvasRenderingContext2D object, with the following differences: PageTransitionEvent The PageTransitionEvent event object is available inside handler functions for the pageshow and pagehide events, fired when a document is being loaded or unloaded. PageTransitionEventInit Path2D The Path2D interface of the Canvas 2D API is used to declare a path that can then be used on a CanvasRenderingContext2D object. The path methods of the CanvasRenderingContext2D interface are also present on this interface, which gives you the convenience of being able to retain and replay your path whenever desired. Plugin IMPORTANT Deprecated The Plugin interface provides information about a browser plugin. PluginArray IMPORTANT Deprecated The PluginArray interface is used to store a list of Plugin objects describing the available plugins; it's returned by the Navigator.Plugins property. The PluginArray is not a JavaScript array, but has the length property and supports accessing individual items using bracket notation (plugins[2]), as well as via item(index) and namedItem(&quot;name&quot;) methods. PopStateEvent PopStateEvent is an interface for the popstate event. PopStateEventInit ProcessingInstruction The ProcessingInstruction interface represents a processing instruction; that is, a Node which embeds an instruction targeting a specific application but that can be ignored by any other applications which don't recognize the instruction. ProgressEvent The ProgressEvent interface represents events measuring progress of an underlying process, like an HTTP request (for an XMLHttpRequest, or the loading of the underlying resource of an img, audio, video, style or link). ProgressEventInit PromiseRejectionEvent The PromiseRejectionEvent interface represents events which are sent to the global script context when JavaScript Promises are rejected. These events are particularly useful for telemetry and debugging purposes. PromiseRejectionEventInit RadioNodeList The RadioNodeList interface represents a collection of radio elements in a form or a fieldset element. Range The Range interface represents a fragment of a document that can contain nodes and parts of text nodes. RegExp RegExpPrototype Request The Request interface of the Fetch API represents a resource request. RequestInit Response The Response interface of the Fetch API represents the response to a request. ResponseInit ServiceWorkerGlobalScope The ServiceWorkerGlobalScope interface of the Service Worker API represents the global execution context of a service worker. ServiceWorkerRegistration The ServiceWorkerRegistration interface of the Service Worker API represents the service worker registration. You register a service worker to control one or more pages that share the same origin. ShadowRoot The ShadowRoot interface of the Shadow DOM API is the root node of a DOM subtree that is rendered separately from a document&apos;s main DOM tree. ShadowRootInit SharedWorker The SharedWorker interface represents a specific kind of worker that can be accessed from several browsing contexts, such as several windows, iframes or even workers. They implement an interface different than dedicated workers and have a different global scope, SharedWorkerGlobalScope. SharedWorkerGlobalScope The SharedWorkerGlobalScope object (the SharedWorker global scope) is accessible through the Self keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See the complete list of functions available to workers. StaticRange The DOM StaticRange interface extends AbstractRange to provide a method to specify a range of content in the DOM whose contents don't update to reflect changes which occur within the DOM tree. StaticRangeInit Storage The Storage interface of the Web Storage API provides access to a particular domain&apos;s session or local storage. It allows, for example, the addition, modification, or deletion of stored data items. StorageEstimate StorageEvent The StorageEvent interface is implemented by the Window/storage_event event, which is sent to a window when a storage area the window has access to is changed within the context of another document. StorageEventInit StorageManager The StorageManager interface of the Storage API provides an interface for managing persistence permissions and estimating available storage. You can get a reference to this interface using either Navigator.Storage or WorkerNavigator.Storage. StructuredSerializeOptions SubmitEvent The SubmitEvent interface defines the object used to represent an {{Glossary(\"HTML\")}} form's HTMLFormElement.Submit_event event. This event is fired at the {{HTMLElement(\"form\")}} when the form's submit action is invoked. SubmitEventInit Text The Text interface represents a text Node in a DOM tree. TextDecodeOptions TextDecoder The TextDecoder interface represents a decoder for a specific text encoding, such as UTF-8, ISO-8859-2, KOI8-R, GBK, etc. A decoder takes a stream of bytes as input and emits a stream of code points. TextDecoderOptions TextDecoderStream The TextDecoderStream interface of the 'Encoding API' converts a stream of text in a binary encoding, such as UTF-8 etc., to a stream of strings. It is the streaming equivalent of TextDecoder. TextEncoder The TextEncoder interface takes a stream of code points as input and emits a stream of UTF-8 bytes. TextEncoderEncodeIntoResult TextEncoderStream The TextEncoderStream interface of the 'Encoding API' converts a stream of strings into bytes in the UTF-8 encoding. It is the streaming equivalent of TextEncoder. TextMetrics The TextMetrics interface represents the dimensions of a piece of text in the canvas; a TextMetrics instance can be retrieved using the CanvasRenderingContext2D.MeasureText method. TextTrack The TextTrack interface—part of the API for handling WebVTT (text tracks on media presentations)—describes and controls the text track associated with a particular track element. TextTrackCue TextTrackCue is an abstract class which is used as the basis for the various derived cue types, such as VTTCue; you will instead work with those derived types. These cues represent strings of text presented for some duration of time during the performance of a TextTrack. The cue includes the start time (the time at which the text will be displayed) and the end time (the time at which it will be removed from the display), as well as other information. TextTrackCueList The TextTrackCueList array-like object represents a dynamically updating list of TextTrackCue objects. TextTrackList The TextTrackList interface is used to represent a list of the text tracks defined by the {{HTMLElement(\"track\")}} element, with each track represented by a separate TextTrack object in the list. TimeRanges A TimeRanges object includes one or more ranges of time, each specified by a starting time offset and an ending time offset. You reference each time range by using the start() and end() methods, passing the index number of the time range you want to retrieve. TrackEvent The TrackEvent interface, which is part of the HTML DOM specification, is used for events which represent changes to a set of available tracks on an HTML media element; these events are addtrack and removetrack. TrackEventInit TreeWalker The TreeWalker object represents the nodes of a document subtree and a position within them. URL The URL interface is used to parse, construct, normalize, and encode URL. It works by providing properties which allow you to easily read and modify the components of a URL. URLSearchParams The URLSearchParams interface defines utility methods to work with the query string of a URL. ValidityState The ValidityState interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element&apos;s value fails to validate, if it&apos;s not valid. ValidityStateFlags VideoTrack The VideoTrack interface represents a single video track from a {{HTMLElement(\"video\")}} element. VideoTrackList The VideoTrackList interface is used to represent a list of the video tracks contained within a {{HTMLElement(\"video\")}} element, with each track represented by a separate VideoTrack object in the list. Window The Window interface represents a window containing a DOM document; the document property points to the DOM document loaded in that window. WindowPostMessageOptions Worker The Worker interface of the Web Workers API represents a background task that can be created via script, which can send messages back to its creator. WorkerGlobalScope The WorkerGlobalScope interface of the Web Workers API is an interface representing the scope of any worker. Workers have no browsing context; this scope contains the information usually conveyed by Window objects — in this case event handlers, the console or the associated WorkerNavigator object. Each WorkerGlobalScope has its own event loop. WorkerLocation The WorkerLocation interface defines the absolute location of the script executed by the Worker. Such an object is initialized for each worker and is available via the Location property obtained by calling self.location. WorkerNavigator The WorkerNavigator interface represents a subset of the Navigator interface allowed to be accessed from a Worker. Such an object is initialized for each worker and is available via the Navigator property. WorkerOptions Worklet The Worklet interface is a lightweight version of Worker and gives developers access to low-level parts of the rendering pipeline. WorkletGlobalScope The WorkletGlobalScope interface is an abstract class that specific worklet scope classes inherit from. Each WorkletGlobalScope defines a new global environment. WorkletOptions XMLHttpRequest XMLHttpRequest (XHR) objects are used to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing. XMLHttpRequestEventTarget XMLHttpRequestEventTarget is the interface that describes the event handlers shared on XMLHttpRequest and XMLHttpRequestUpload. XMLHttpRequestUpload The XMLHttpRequestUpload interface represents the upload process for a specific XMLHttpRequest. It is an opaque object that represents the underlying, browser-dependant, upload process. It is XMLHttpRequestEventTarget and is can be obtained by calling Upload. XPathEvaluator The XPathEvaluator interface allows to compile and evaluate XPath expressions. XPathExpression This is useful when an expression will be reused in an application, because it is just compiled once and all namespace prefixes which occur within the expression are preresolved. XPathResult The XPathResult interface represents the results generated by evaluating an XPath expression within the context of a given node. XSLTProcessor An XSLTProcessor applies an XSLT stylesheet transformation to an XML document to produce a new XML document as output. It has methods to load the XSLT stylesheet, to manipulate &lt;xsl:param&gt; parameter values, and to apply the transformation to documents. console The console object provides access to the browser&apos;s debugging console (e.g. the Web console in Firefox). The specifics of how it works varies from browser to browser, but there is a de facto set of features that are typically provided. Structs BlobCallback CustomElementConstructor EventHandlerNonNull FrameRequestCallback Function FunctionObjectCallback FunctionStringCallback MutationCallback NotificationPermissionCallback OnBeforeUnloadEventHandlerNonNull OnErrorEventHandlerNonNull Union0 Event or GlobalObject.Undefined Union1 AddEventListenerOptions or bool Union10 Unsupported /Blob/ or Union49 or FormData or URLSearchParams or string Union11 Unsupported /ReadableStream/ or Union10 Union12 Request or string Union13 HTMLCollection or Element Union14 HTMLCollection or Element Union15 RadioNodeList or Element Union16 HTMLOptionElement or HTMLOptGroupElement Union17 HTMLElement or long Union18 HTMLScriptElement or Unsupported /SVGScriptElement/ Union19 bool or double or string Union2 EventListenerOptions or bool Union20 Unsupported /MediaStream/ or Unsupported /MediaSource/ or Unsupported /Blob/ Union21 VideoTrack or AudioTrack or TextTrack Union22 VideoTrack or AudioTrack or TextTrack Union23 RadioNodeList or Element Union24 HTMLOptionElement or HTMLOptGroupElement Union25 HTMLElement or long Union26 Element or Text Union27 CanvasRenderingContext2D or ImageBitmapRenderingContext or Unsupported /WebGLRenderingContext/ or Unsupported /WebGL2RenderingContext/ or Unsupported /GPUCanvasContext/ Union28 HTMLImageElement or Unsupported /SVGImageElement/ Union29 Union28 or HTMLVideoElement or HTMLCanvasElement or ImageBitmap or OffscreenCanvas or Unsupported /VideoFrame/ Union3 Node or string Union30 string or CanvasGradient or CanvasPattern Union31 string or CanvasGradient or CanvasPattern Union32 string or CanvasFilter Union33 Dictionary<TKey, TValue> or List{CanvasFilterInput} Union34 double or Unsupported /DOMPointInit/ or List{Union35} Union35 double or Unsupported /DOMPointInit/ Union36 Path2D or string Union37 HTMLCanvasElement or OffscreenCanvas Union38 OffscreenCanvasRenderingContext2D or ImageBitmapRenderingContext or Unsupported /WebGLRenderingContext/ or Unsupported /WebGL2RenderingContext/ or Unsupported /GPUCanvasContext/ Union39 CustomElementConstructor or GlobalObject.Undefined Union4 Node or string Union40 Unsupported /File/ or string or FormData Union41 Unsupported /File/ or string or FormData Union42 Event or string Union43 string or Function Union44 Union29 or Unsupported /Blob/ or ImageData Union45 Window or MessagePort or Unsupported /ServiceWorker/ Union46 string or WorkerOptions Union47 List{List{string}} or Dictionary{string, string} or string Union48 sbyte or short or int or byte or ushort or uint or Unsupported /Uint8ClampedArray/ or long or ulong or float or double or Unsupported /DataView/ Union49 Union48 or byte[] Union5 Node or string Union50 Document or Union10 Union51 Unsupported /File/ or string Union6 Node or string Union7 Node or string Union8 Node or string Union9 List{List{string}} or Dictionary{string, string} VoidFunction Interfaces AbstractWorker AnimationFrameProvider Body CSSStyleDeclaration CanvasCompositing CanvasDrawImage CanvasDrawPath CanvasFillStrokeStyles CanvasFilters CanvasImageData CanvasImageSmoothing CanvasPath CanvasPathDrawingStyles CanvasRect CanvasShadowStyles CanvasState CanvasText CanvasTextDrawingStyles CanvasTransform CanvasUserInterface ChildNode DocumentAndElementEventHandlers DocumentOrShadowRoot ElementContentEditable EventListener GlobalEventHandlers HTMLHyperlinkElementUtils HTMLOrSVGElement NavigatorConcurrentHardware NavigatorContentUtils NavigatorCookies NavigatorID NavigatorLanguage The Navigator.language read-only property returns a string representing the preferred language of the user, usually the language of the browser UI. NavigatorOnLine Returns the online status of the browser. The property returns a boolean value, with true meaning online and false meaning offline. The property sends updates whenever the browser&apos;s ability to connect to the network changes. The update occurs when the user follows links or when a script requests a remote page. For example, the property should return false when users click links soon after they lose internet connection. NavigatorPlugins IMPORTANT Deprecated Returns a PluginArray object, listing the Plugin objects describing the plugins installed in the application. Named properties of returned object are not enumerable (except in very old browser versions). NavigatorStorage The Navigator.storage read-only property returns the singleton StorageManager object used to access the overall storage capabilities of the browser for the current site or app. The returned object lets you examine and configure persistence of data stores and learn approximately how much more space your browser has available for local storage use. NodeFilter NonDocumentTypeChildNode NonElementParentNode ParentNode Slottable TextDecoderCommon TextEncoderCommon WindowEventHandlers WindowLocalStorage The localStorage read-only property of the Window interface allows you to access a Storage object for the Document's {{glossary(\"origin\")}}; the stored data is saved across browser sessions. WindowOrWorkerGlobalScope WindowSessionStorage The read-only sessionStorage property accesses a session Storage object for the current origin. sessionStorage is similar to Window.LocalStorage; the difference is that while data in localStorage doesn&apos;t expire, data in sessionStorage is cleared when the page session ends. XPathEvaluatorBase XPathNSResolver The XPathNSResolver interface permits prefix strings in an XPath expression to be properly bound to namespace URI strings. Enums CanPlayTypeResult CanvasDirection CanvasFillRule CanvasFontKerning CanvasFontStretch CanvasFontVariantCaps CanvasLineCap CanvasLineJoin CanvasTextAlign CanvasTextBaseline CanvasTextRendering ColorSpaceConversion DOMParserSupportedType DocumentReadyState The Document.readyState property describes the loading state of the Document. When the value of this property changes, a Document/readystatechange_event event fires on the Document object. DocumentVisibilityState The Document.visibilityState read-only property returns the visibility of the 'document', that is in which context this element is now visible. It is useful to know if the document is in the background or an invisible tab, or only loaded for pre-rendering. FullscreenNavigationUI ImageOrientation ImageSmoothingQuality NotificationDirection NotificationPermission OffscreenRenderingContextId PredefinedColorSpace PremultiplyAlpha RequestCache The cache read-only property of the Request interface contains the cache mode of the request. It controls how the request will interact with the browser's HTTP cache. RequestCredentials The credentials read-only property of the Request interface indicates whether the user agent should send or receive cookies from the other domain in the case of cross-origin requests. RequestDestination The destination read-only property of the Request interface returns a string describing the type of content being requested. RequestMode The mode read-only property of the Request interface contains the mode of the request (e.g., cors, no-cors, same-origin, navigate or websocket.) This is used to determine if cross-origin requests lead to valid responses, and which properties of the response are readable. RequestRedirect The redirect read-only property of the Request interface contains the mode for how redirects are handled. ResizeQuality ResponseType The type read-only property of the Response interface contains the type of the response. It can be one of the following: ScrollRestoration SelectionMode ShadowRootMode The mode read-only property of the ShadowRoot specifies its mode — either open or closed. This defines whether or not the shadow root&apos;s internal features are accessible from JavaScript. SlotAssignmentMode TextTrackKind The kind read-only property of the TextTrack interface returns the kind of text track this object represents. This decides how the track will be handled by a user agent. TextTrackMode The TextTrack interface's mode property is a string specifying and controlling the text track&apos;s mode: disabled, hidden, or showing. You can read this value to determine the current mode, and you can change this value to switch modes. WorkerType XMLHttpRequestResponseType The XMLHttpRequest property responseType is an enumerated string value specifying the type of data contained in the response."
  },
  "api/CSharpToJavaScript.CSTOJS.html": {
    "href": "api/CSharpToJavaScript.CSTOJS.html",
    "title": "Class CSTOJS | CSharpToJavaScript",
    "keywords": "Class CSTOJS Namespace CSharpToJavaScript Assembly CSharpToJavaScript.dll Main type for CSharpToJavaScript. public class CSTOJS Inheritance object CSTOJS Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CSTOJS() New instance of CSTOJS with default options, see CSTOJSOptions. public CSTOJS() CSTOJS(CSTOJSOptions) New instance of CSTOJS public CSTOJS(CSTOJSOptions options) Parameters options CSTOJSOptions Options of CSTOJS, see CSTOJSOptions. Properties Options public CSTOJSOptions Options { get; set; } Property Value CSTOJSOptions Methods GenerateOneAsync(string, string?) Method for generating js file/files. public Task GenerateOneAsync(string path, string? filename = null) Parameters path string Full path to cs file or to the folder with cs files. filename string Optional! Filename of a js file if you generating one file! Returns Task GenerateOneFromString(string, List<MetadataReference>?) Method for generating from string. public StringBuilder GenerateOneFromString(string csstring, List<MetadataReference>? references = null) Parameters csstring string CSharp string. references List<MetadataReference> Needed if you don't have access to files. Because Assembly.location is null in Blazor WebAssembly. Returns StringBuilder JS StringBuilder Exceptions ArgumentNullException Log(string, string?, string?, int) public void Log(string message, string? file = null, string? member = null, int line = 0) Parameters message string file string member string line int"
  },
  "api/CSharpToJavaScript.CSTOJSOptions.html": {
    "href": "api/CSharpToJavaScript.CSTOJSOptions.html",
    "title": "Class CSTOJSOptions | CSharpToJavaScript",
    "keywords": "Class CSTOJSOptions Namespace CSharpToJavaScript Assembly CSharpToJavaScript.dll Options for CSTOJS. public class CSTOJSOptions Inheritance object CSTOJSOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CSTOJSOptions() Creates new default options. See CSTOJSOptions. public CSTOJSOptions() Properties AddSBInEnd Add a StringBuilder to the end of a javascript file. public StringBuilder AddSBInEnd { get; set; } Property Value StringBuilder Default: new() Remarks When using \"GenerateManyAsync\" applies to every file! AddSBInFront Add a StringBuilder to the front of a javascript file. public StringBuilder AddSBInFront { get; set; } Property Value StringBuilder Default: new() Remarks When using \"GenerateManyAsync\" applies to every file! CustomCSNamesToJS List of custom names to convert. Example: new(\"Console\",\"console\"). Will convert \"Console\" to \"console\". public List<Tuple<string, string>> CustomCSNamesToJS { get; set; } Property Value List<Tuple<string, string>> Default: new() CustomCSTypesToJS List of types to convert. Example: Similar to CustomCSNamesToJS, but convers the type. You need to use ToAttribute public List<Type> CustomCSTypesToJS { get; set; } Property Value List<Type> Default: new() Debug Debug. When set to true prints additional info to console, cs lines to js file. public bool Debug { get; set; } Property Value bool Default: false DisableConsoleColors Self-explanatory, Disable Console Colors. public bool DisableConsoleColors { get; set; } Property Value bool Default: false DisableConsoleOutput Self-explanatory, Disable Console Output. public bool DisableConsoleOutput { get; set; } Property Value bool Default: false OutPutPath Output path for javascript file. public string OutPutPath { get; set; } Property Value string Default: Directory.GetCurrentDirectory() UseVarOverLet Self-explanatory, Use var over let. public bool UseVarOverLet { get; set; } Property Value bool Default: false"
  },
  "api/CSharpToJavaScript.DebugInfoUtils.html": {
    "href": "api/CSharpToJavaScript.DebugInfoUtils.html",
    "title": "Class DebugInfoUtils | CSharpToJavaScript",
    "keywords": "Class DebugInfoUtils Namespace CSharpToJavaScript Assembly CSharpToJavaScript.dll public static class DebugInfoUtils Inheritance object DebugInfoUtils Inherited Members object.GetType() object.MemberwiseClone() object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Methods FromFile(PEFile, string) public static IDebugInfoProvider? FromFile(PEFile module, string pdbFileName) Parameters module PEFile pdbFileName string Returns IDebugInfoProvider LoadSymbols(PEFile) public static IDebugInfoProvider? LoadSymbols(PEFile module) Parameters module PEFile Returns IDebugInfoProvider"
  },
  "api/CSharpToJavaScript.Utils.ToAttribute.html": {
    "href": "api/CSharpToJavaScript.Utils.ToAttribute.html",
    "title": "Class ToAttribute | CSharpToJavaScript",
    "keywords": "Class ToAttribute Namespace CSharpToJavaScript.Utils Assembly CSharpToJavaScript.dll [AttributeUsage(AttributeTargets.All)] public class ToAttribute : Attribute Inheritance object Attribute ToAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ToAttribute(string) public ToAttribute(string to) Parameters to string Fields Default public const string Default = \"Default\" Field Value string FirstCharToLowerCase public const string FirstCharToLowerCase = \"FirstCharToLowerCase\" Field Value string ToLower public const string ToLower = \"ToLower\" Field Value string Properties To public string To { get; set; } Property Value string Methods Convert(string) public string Convert(string str) Parameters str string Returns string"
  },
  "api/CSharpToJavaScript.Utils.Unsupported.html": {
    "href": "api/CSharpToJavaScript.Utils.Unsupported.html",
    "title": "Class Unsupported | CSharpToJavaScript",
    "keywords": "Class Unsupported Namespace CSharpToJavaScript.Utils Assembly CSharpToJavaScript.dll public class Unsupported Inheritance object Unsupported Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/CSharpToJavaScript.Utils.html": {
    "href": "api/CSharpToJavaScript.Utils.html",
    "title": "Namespace CSharpToJavaScript.Utils | CSharpToJavaScript",
    "keywords": "Namespace CSharpToJavaScript.Utils Classes ToAttribute Unsupported"
  },
  "api/CSharpToJavaScript.html": {
    "href": "api/CSharpToJavaScript.html",
    "title": "Namespace CSharpToJavaScript | CSharpToJavaScript",
    "keywords": "Namespace CSharpToJavaScript Classes CSTOJS Main type for CSharpToJavaScript. CSTOJSOptions Options for CSTOJS."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | CSharpToJavaScript",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation!"
  },
  "articles/exampleHelloWorld.html": {
    "href": "articles/exampleHelloWorld.html",
    "title": "Example \"Hello World!\" | CSharpToJavaScript",
    "keywords": "Example \"Hello World!\" Create new c# project. Note Make sure to use full path in \"GenerateOneAsync\" method! Program.cs using CSharpToJavaScript; namespace TestNuget; public class Program { public static async Task Main() { CSTOJS cstojs = new(); await cstojs.GenerateOneAsync(\"C:\\\\GitReps\\\\TestNuget\\\\TestNuget\\\\CSharp\\\\Test.cs\"); Console.ReadKey(); } } Add new folder \"CSharp\" and new file name \"Test\". CSharp/Test.cs using static CSharpToJavaScript.APIs.JS.GlobalObject; namespace TestNuget.CSharp; public class Test { public Test() { GlobalThis.Console.Log(\"Hello World!\"); } } Run. Above code will generate Test.js file that contains: class Test { constructor() { globalThis.console.log(\"Hello World!\"); } }"
  },
  "articles/exampleOptAddSBIn.html": {
    "href": "articles/exampleOptAddSBIn.html",
    "title": "Example of options \"AddSBInFront\" and \"AddSBInEnd\" | CSharpToJavaScript",
    "keywords": "Example of options \"AddSBInFront\" and \"AddSBInEnd\" Create new c# project. Note Make sure to use full path in \"GenerateOneAsync\" method! This options will add a string at the top/bottom of file. Useful when you want to initiate a class. Program.cs using CSharpToJavaScript; namespace TestNuget; public class Program { public static async Task Main() { CSTOJSOptions opt = new() { AddSBInFront = new(\"//Comment at the top!\"), AddSBInEnd = new(\"//Comment at the bottom!\") }; CSTOJS cstojs = new(opt); await cstojs.GenerateOneAsync(\"C:\\\\GitReps\\\\TestNuget\\\\TestNuget\\\\CSharp\\\\Test.cs\"); Console.ReadKey(); } } Add new folder \"CSharp\" and new file name \"Test\". CSharp/Test.cs using static CSharpToJavaScript.APIs.JS.GlobalObject; namespace TestNuget.CSharp; public class Test { public Test() { GlobalThis.Console.Log(\"Hello World!\"); } } Run. Above code will generate Test.js file that contains: //Comment at the top! class Test { constructor() { globalThis.console.log(\"Hello World!\"); } } //Comment at the bottom!"
  },
  "articles/exampleOptCustomCSNamesToJS.html": {
    "href": "articles/exampleOptCustomCSNamesToJS.html",
    "title": "Example of option \"CustomCSNamesToJS\" | CSharpToJavaScript",
    "keywords": "Example of option \"CustomCSNamesToJS\" Create new c# project. Note Make sure to use full path in \"GenerateOneAsync\" method! Note Note this is just example! The \"Console.WriteLine\" will be translated by default! Program.cs using CSharpToJavaScript; namespace TestNuget; public class Program { public static async Task Main() { CSTOJSOptions opt = new() { CustomCSNamesToJS = new List<Tuple<string, string>>() { new Tuple<string, string>(\"Console\",\"console\"), new Tuple<string, string>(\"WriteLine\", \"log\") } }; CSTOJS cstojs = new(opt); await cstojs.GenerateOneAsync(\"C:\\\\GitReps\\\\TestNuget\\\\TestNuget\\\\CSharp\\\\Test.cs\"); Console.ReadKey(); } } Add new folder \"CSharp\" and new file name \"Test\". CSharp/Test.cs namespace TestNuget.CSharp; public class Test { public Test() { Console.WriteLine(\"Hello World!\"); } } Run. Above code will generate Test.js file that contains: class Test { constructor() { console.log(\"Hello World!\"); } }"
  },
  "articles/exampleOptCustomCSTypesToJS.html": {
    "href": "articles/exampleOptCustomCSTypesToJS.html",
    "title": "Example of option \"CustomCSTypesToJS\" | CSharpToJavaScript",
    "keywords": "Example of option \"CustomCSTypesToJS\" Create new c# project. Note Make sure to use full path in \"GenerateOneAsync\" method! For example you want use \"insertAdjacentHTML\" but there is no such method in Element, you need to create an extension method with ToAttribute. Program.cs using CSharpToJavaScript; using CSharpToJavaScript.APIs.JS; using CSharpToJavaScript.Utils; using System; using System.Threading.Tasks; namespace TestNuget; public class Program { public static async Task Main() { CSTOJSOptions opt = new() { CustomCSTypesToJS = new() { typeof(Extensions) } }; CSTOJS cstojs = new(opt); await cstojs.GenerateOneAsync(\"C:\\\\GitReps\\\\TestNuget\\\\TestNuget\\\\CSharp\\\\Test.cs\"); Console.ReadKey(); } } public static class Extensions { [To(ToAttribute.FirstCharToLowerCase)] public static string InsertAdjacentHTML(this Element obj, string where, string data) { throw new System.NotImplementedException(); } } Add new folder \"CSharp\" and new file name \"Test\". CSharp/Test.cs using CSharpToJavaScript.APIs.JS; using static CSharpToJavaScript.APIs.JS.GlobalObject; using System; namespace TestNuget.CSharp; public class Test { public Test() { GlobalThis.Window.Document.Head.InsertAdjacentHTML(\"beforeend\", \"html string\"); } } Run. Above code will generate Test.js file that contains: class Test { constructor() { globalThis.window.document.head.insertAdjacentHTML(\"beforeend\", \"html string\"); } }"
  },
  "articles/faq.html": {
    "href": "articles/faq.html",
    "title": "FAQ | CSharpToJavaScript",
    "keywords": "FAQ Q. Why did you write this library? A. The whole purpose is to learn and understand better c# and js at the same time. Q. How to use methods that in Interfaces? Like Append etc. A. Currently only supported is through as operator. Example: (GlobalThis.Window.Document.Head as ParentNode).Append(...); Q. Is this library used in any \"real\" projects? A. You can check one of my script(AnkiWeb Quiz), if its count as project."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Articles | CSharpToJavaScript",
    "keywords": "Articles Currently only Examples and small FAQ! See left menu. WIP!"
  },
  "index.html": {
    "href": "index.html",
    "title": "CSharpToJavaScript documentation. | CSharpToJavaScript",
    "keywords": "CSharpToJavaScript documentation. Github Nuget CLI Visual Studio Extension Visual Studio Code Extension Visit articles for more examples. Try it online!"
  }
}